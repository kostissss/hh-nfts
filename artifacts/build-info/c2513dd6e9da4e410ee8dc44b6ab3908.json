{"id":"c2513dd6e9da4e410ee8dc44b6ab3908","_format":"hh-sol-build-info-1","solcVersion":"0.8.8","solcLongVersion":"0.8.8+commit.dddeac2f","input":{"language":"Solidity","sources":{"contracts/RandomIpfsNft.sol":{"content":"//SPDX-License-Identifier:MIT\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\npragma solidity ^0.8.8;\n\nerror RandomIpfsNft__OutOfBounds();\nerror RandomIpfsNft__NeedMoreETHSent();\nerror RandomIpfsNft__TransferFailed();\n\ncontract RandomIpfsNft is VRFConsumerBaseV2, ERC721URIStorage, Ownable {\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\n    uint64 private immutable i_subscriptionId;\n    bytes32 private immutable i_gasLane;\n    uint32 private immutable i_callbackGasLimit;\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\n    uint32 private constant NUM_WORDS = 1;\n\n    enum Breed {\n        PUG,\n        SHIBA_INU,\n        ST_BERNARD\n    }\n\n    mapping(uint256 => address) public s_requestIdToSender;\n\n    uint256 public s_tokenCounter;\n    uint256 internal constant MAX_CHANCE_VALUE = 100;\n    string[] internal i_dogTokenUris;\n    uint256 internal immutable i_mintFee;\n\n    event NftRequested(uint256 indexed requestId, address requester);\n    event NftMinted(Breed dogBreed, address minter);\n\n    constructor(\n        address vrfCoordinatorV2,\n        uint64 subscriptionId,\n        bytes32 gasLane,\n        uint32 callbackGasLimit,\n        string[3] memory dogTokenUris,\n        uint256 mintFee\n    ) VRFConsumerBaseV2(vrfCoordinatorV2) ERC721(\"RandomIpfsNft\", \"RIN\") {\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\n        i_subscriptionId = subscriptionId;\n        i_gasLane = gasLane;\n        i_callbackGasLimit = callbackGasLimit;\n        i_dogTokenUris = dogTokenUris;\n        i_mintFee = mintFee;\n    }\n\n    function requestNft() public payable returns (uint256 requestId) {\n        if (msg.value < i_mintFee) {\n            revert RandomIpfsNft__NeedMoreETHSent();\n        }\n        requestId = i_vrfCoordinator.requestRandomWords(\n            i_gasLane,\n            i_subscriptionId,\n            REQUEST_CONFIRMATIONS,\n            i_callbackGasLimit,\n            NUM_WORDS\n        );\n        s_requestIdToSender[requestId] = msg.sender;\n        emit NftRequested((requestId), msg.sender);\n    }\n\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords)\n        internal\n        override\n    {\n        address dogOwner = s_requestIdToSender[requestId];\n        uint256 newTokenId = s_tokenCounter;\n\n        uint256 moddedRng = randomWords[0] % MAX_CHANCE_VALUE;\n        Breed dogBreed = getBreedFromModdedRng(moddedRng);\n        s_tokenCounter += s_tokenCounter;\n        _safeMint(dogOwner, newTokenId);\n        _setTokenURI((newTokenId), i_dogTokenUris[uint256(dogBreed)]);\n        emit NftMinted((dogBreed), dogOwner);\n    }\n\n    function withdraw() public onlyOwner {\n        uint256 amount = address(this).balance;\n        (bool success, ) = payable(msg.sender).call{value: amount}(\"\");\n        if (!success) {\n            revert RandomIpfsNft__TransferFailed();\n        }\n    }\n\n    function getBreedFromModdedRng(uint256 moddedRng)\n        public\n        pure\n        returns (Breed)\n    {\n        uint256 cumulativeSum = 0;\n        uint256[3] memory chanceArray = getChanceArray();\n        for (uint256 i = 0; i < chanceArray.length; i++) {\n            if (\n                moddedRng >= cumulativeSum &&\n                moddedRng < cumulativeSum + chanceArray[i]\n            ) {\n                return Breed(i);\n            }\n            cumulativeSum += chanceArray[i];\n        }\n        revert RandomIpfsNft__OutOfBounds();\n    }\n\n    function getChanceArray() public pure returns (uint256[3] memory) {\n        return [10, 30, MAX_CHANCE_VALUE];\n    }\n\n    function getMintFee() public view returns (uint256) {\n        return i_mintFee;\n    }\n\n    function getDogTokenUris(uint256 index)\n        public\n        view\n        returns (string memory)\n    {\n        return i_dogTokenUris[index];\n    }\n\n    function getTokenCounter() public view returns (uint256) {\n        return s_tokenCounter;\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig()\n    external\n    view\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    );\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(uint64 subId)\n    external\n    view\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    );\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"content":"// SPDX-License-Identifier: MIT\n// A mock for testing code that relies on VRFCoordinatorV2.\npragma solidity ^0.8.4;\n\nimport \"../interfaces/LinkTokenInterface.sol\";\nimport \"../interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"../VRFConsumerBaseV2.sol\";\n\ncontract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface {\n  uint96 public immutable BASE_FEE;\n  uint96 public immutable GAS_PRICE_LINK;\n\n  error InvalidSubscription();\n  error InsufficientBalance();\n  error MustBeSubOwner(address owner);\n\n  event RandomWordsRequested(\n    bytes32 indexed keyHash,\n    uint256 requestId,\n    uint256 preSeed,\n    uint64 indexed subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords,\n    address indexed sender\n  );\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\n  event SubscriptionCreated(uint64 indexed subId, address owner);\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\n\n  uint64 s_currentSubId;\n  uint256 s_nextRequestId = 1;\n  uint256 s_nextPreSeed = 100;\n  struct Subscription {\n    address owner;\n    uint96 balance;\n  }\n  mapping(uint64 => Subscription) s_subscriptions; /* subId */ /* subscription */\n\n  struct Request {\n    uint64 subId;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n  }\n  mapping(uint256 => Request) s_requests; /* requestId */ /* request */\n\n  constructor(uint96 _baseFee, uint96 _gasPriceLink) {\n    BASE_FEE = _baseFee;\n    GAS_PRICE_LINK = _gasPriceLink;\n  }\n\n  /**\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n   * @notice consumer.\n   *\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n   * @dev against the real coordinator a small amount of additional LINK is required.\n   *\n   * @param _requestId the request to fulfill\n   * @param _consumer the VRF randomness consumer to send the result to\n   */\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external {\n    uint256 startGas = gasleft();\n    if (s_requests[_requestId].subId == 0) {\n      revert(\"nonexistent request\");\n    }\n    Request memory req = s_requests[_requestId];\n\n    uint256[] memory words = new uint256[](req.numWords);\n    for (uint256 i = 0; i < req.numWords; i++) {\n      words[i] = uint256(keccak256(abi.encode(_requestId, i)));\n    }\n\n    VRFConsumerBaseV2 v;\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, words);\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\n\n    uint96 payment = uint96(BASE_FEE + ((startGas - gasleft()) * GAS_PRICE_LINK));\n    if (s_subscriptions[req.subId].balance < payment) {\n      revert InsufficientBalance();\n    }\n    s_subscriptions[req.subId].balance -= payment;\n    delete (s_requests[_requestId]);\n    emit RandomWordsFulfilled(_requestId, _requestId, payment, success);\n  }\n\n  /**\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n   *\n   * @param _subId the subscription to fund\n   * @param _amount the amount to fund\n   */\n  function fundSubscription(uint64 _subId, uint96 _amount) public {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    uint96 oldBalance = s_subscriptions[_subId].balance;\n    s_subscriptions[_subId].balance += _amount;\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\n  }\n\n  function requestRandomWords(\n    bytes32 _keyHash,\n    uint64 _subId,\n    uint16 _minimumRequestConfirmations,\n    uint32 _callbackGasLimit,\n    uint32 _numWords\n  ) external override returns (uint256) {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n\n    uint256 requestId = s_nextRequestId++;\n    uint256 preSeed = s_nextPreSeed++;\n\n    s_requests[requestId] = Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords});\n\n    emit RandomWordsRequested(\n      _keyHash,\n      requestId,\n      preSeed,\n      _subId,\n      _minimumRequestConfirmations,\n      _callbackGasLimit,\n      _numWords,\n      msg.sender\n    );\n    return requestId;\n  }\n\n  function createSubscription() external override returns (uint64 _subId) {\n    s_currentSubId++;\n    s_subscriptions[s_currentSubId] = Subscription({owner: msg.sender, balance: 0});\n    emit SubscriptionCreated(s_currentSubId, msg.sender);\n    return s_currentSubId;\n  }\n\n  function getSubscription(uint64 _subId)\n    external\n    view\n    override\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    )\n  {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    return (s_subscriptions[_subId].balance, 0, s_subscriptions[_subId].owner, new address[](0));\n  }\n\n  function cancelSubscription(uint64 _subId, address _to) external override onlySubOwner(_subId) {\n    emit SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance);\n    delete (s_subscriptions[_subId]);\n  }\n\n  modifier onlySubOwner(uint64 _subId) {\n    address owner = s_subscriptions[_subId].owner;\n    if (owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    if (msg.sender != owner) {\n      revert MustBeSubOwner(owner);\n    }\n    _;\n  }\n\n  function getRequestConfig()\n    external\n    pure\n    override\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    )\n  {\n    return (3, 2000000, new bytes32[](0));\n  }\n\n  function addConsumer(uint64 _subId, address _consumer) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function removeConsumer(uint64 _subId, address _consumer) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\n    revert(\"not implemented\");\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(\n    address to,\n    uint256 value,\n    bytes calldata data\n  ) external returns (bool success);\n\n  function transferFrom(\n    address from,\n    address to,\n    uint256 value\n  ) external returns (bool success);\n}\n"},"contracts/test/VRFCoordinatorV2Mock.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\";\n"},"contracts/DynamicSvgNft.sol":{"content":"//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"base64-sol/base64.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\ncontract DynamicSvgNft is ERC721 {\n    uint256 private s_tokenCounter;\n    string private i_lowImageURI;\n    string private i_highImageURI;\n    string private constant base64EncodedSvgPrefix =\n        \"data:image/svg+xml;base64,\";\n\n    AggregatorV3Interface internal immutable i_priceFeed;\n    mapping(uint256 => int256) public s_tokenIdToHighValue;\n\n    event CreatedNFT(uint256 indexed tokenId, int256 highValue);\n\n    constructor(\n        address priceFeedAddress,\n        string memory lowSvg,\n        string memory highSvg\n    ) ERC721(\"DynamicSvgNft\", \"DSN\") {\n        s_tokenCounter = 0;\n        i_lowImageURI = svgToImageURI(lowSvg);\n        i_highImageURI = svgToImageURI(highSvg);\n        i_priceFeed = AggregatorV3Interface(priceFeedAddress);\n    }\n\n    function svgToImageURI(string memory svg)\n        public\n        pure\n        returns (string memory)\n    {\n        string memory svgBase64Encoded = Base64.encode(\n            bytes(string(abi.encodePacked(svg)))\n        );\n        return\n            string(abi.encodePacked(base64EncodedSvgPrefix, svgBase64Encoded));\n    }\n\n    function mintNft(int256 highValue) public {\n        s_tokenIdToHighValue[s_tokenCounter] = highValue;\n        s_tokenCounter += s_tokenCounter;\n        _safeMint(msg.sender, s_tokenCounter);\n\n        emit CreatedNFT(s_tokenCounter, highValue);\n    }\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override\n        returns (string memory)\n    {\n        require(_exists(tokenId), \"URI Query for non existent token\");\n\n        (, int256 price, , , ) = i_priceFeed.latestRoundData();\n        string memory imageURI = i_lowImageURI;\n        if (price >= s_tokenIdToHighValue[tokenId]) {\n            imageURI = i_highImageURI;\n        }\n        return\n            string(\n                abi.encodePacked(\n                    _baseURI(),\n                    Base64.encode(\n                        bytes(\n                            abi.encodePacked(\n                                ('{\"name:\"'),\n                                name(),\n                                '\"',\n                                '\"description\":\"An NFT that changes based on chainlink price Feed!!\"',\n                                '\"attributes\":[{\"trait_type\": \"coolness\",:value:100}],\"image\":\"',\n                                imageURI,\n                                '\"}'\n                            )\n                        )\n                    )\n                )\n            );\n    }\n\n    function _baseURI() internal pure override returns (string memory) {\n        return \"data:application/json;base64,\";\n    }\n}\n"},"base64-sol/base64.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0;\n\n/// @title Base64\n/// @author Brecht Devos - <brecht@loopring.org>\n/// @notice Provides functions for encoding/decoding base64\nlibrary Base64 {\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    bytes  internal constant TABLE_DECODE = hex\"0000000000000000000000000000000000000000000000000000000000000000\"\n                                            hex\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\"\n                                            hex\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\"\n                                            hex\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\";\n\n    function encode(bytes memory data) internal pure returns (string memory) {\n        if (data.length == 0) return '';\n\n        // load the table into memory\n        string memory table = TABLE_ENCODE;\n\n        // multiply by 4/3 rounded up\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\n\n        // add some extra buffer at the end required for the writing\n        string memory result = new string(encodedLen + 32);\n\n        assembly {\n            // set the actual output length\n            mstore(result, encodedLen)\n\n            // prepare the lookup table\n            let tablePtr := add(table, 1)\n\n            // input ptr\n            let dataPtr := data\n            let endPtr := add(dataPtr, mload(data))\n\n            // result ptr, jump over length\n            let resultPtr := add(result, 32)\n\n            // run over the input, 3 bytes at a time\n            for {} lt(dataPtr, endPtr) {}\n            {\n                // read 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // write 4 characters\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1)\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1)\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1)\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\n                resultPtr := add(resultPtr, 1)\n            }\n\n            // padding with '='\n            switch mod(mload(data), 3)\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\n        }\n\n        return result;\n    }\n\n    function decode(string memory _data) internal pure returns (bytes memory) {\n        bytes memory data = bytes(_data);\n\n        if (data.length == 0) return new bytes(0);\n        require(data.length % 4 == 0, \"invalid base64 decoder input\");\n\n        // load the table into memory\n        bytes memory table = TABLE_DECODE;\n\n        // every 4 characters represent 3 bytes\n        uint256 decodedLen = (data.length / 4) * 3;\n\n        // add some extra buffer at the end required for the writing\n        bytes memory result = new bytes(decodedLen + 32);\n\n        assembly {\n            // padding with '='\n            let lastBytes := mload(add(data, mload(data)))\n            if eq(and(lastBytes, 0xFF), 0x3d) {\n                decodedLen := sub(decodedLen, 1)\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\n                    decodedLen := sub(decodedLen, 1)\n                }\n            }\n\n            // set the actual output length\n            mstore(result, decodedLen)\n\n            // prepare the lookup table\n            let tablePtr := add(table, 1)\n\n            // input ptr\n            let dataPtr := data\n            let endPtr := add(dataPtr, mload(data))\n\n            // result ptr, jump over length\n            let resultPtr := add(result, 32)\n\n            // run over the input, 4 characters at a time\n            for {} lt(dataPtr, endPtr) {}\n            {\n               // read 4 characters\n               dataPtr := add(dataPtr, 4)\n               let input := mload(dataPtr)\n\n               // write 3 bytes\n               let output := add(\n                   add(\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\n                   add(\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\n                    )\n                )\n                mstore(resultPtr, shl(232, output))\n                resultPtr := add(resultPtr, 3)\n            }\n        }\n\n        return result;\n    }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:186:24:\n    |\n186 |   function addConsumer(uint64 _subId, address _consumer) external pure override {\n    |                        ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5777,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":5764},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:186:39:\n    |\n186 |   function addConsumer(uint64 _subId, address _consumer) external pure override {\n    |                                       ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5796,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":5779},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:190:27:\n    |\n190 |   function removeConsumer(uint64 _subId, address _consumer) external pure override {\n    |                           ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5898,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":5885},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:190:42:\n    |\n190 |   function removeConsumer(uint64 _subId, address _consumer) external pure override {\n    |                                          ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5917,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":5900},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:194:45:\n    |\n194 |   function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    |                                             ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":6037,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":6024},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:194:60:\n    |\n194 |   function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    |                                                            ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":6056,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":6039},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:198:44:\n    |\n198 |   function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\n    |                                            ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":6175,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":6162},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[57]},"id":58,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"57:5275:0","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":57,"linearizedBaseContracts":[57],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:0","nodeType":"ContractDefinition","nodes":[{"id":8,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:0","nodeType":"ErrorDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"have","nameLocation":"5413:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5405:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"want","nameLocation":"5427:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5419:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:0"},"src":"5373:60:0"},{"constant":false,"id":10,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:0","nodeType":"VariableDeclaration","scope":57,"src":"5436:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":20,"nodeType":"Block","src":"5593:43:0","statements":[{"expression":{"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":16,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"5599:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":17,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"5616:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19,"nodeType":"ExpressionStatement","src":"5599:32:0"}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"5481:72:0","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":21,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:0","nodeType":"VariableDeclaration","scope":21,"src":"5568:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"5593:0:0"},"scope":57,"src":"5556:80:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"5640:686:0","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":30,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:0","nodeType":"VariableDeclaration","scope":30,"src":"6357:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:0","nodeType":"VariableDeclaration","scope":30,"src":"6376:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":26,"nodeType":"ArrayTypeName","src":"6376:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"6422:0:0"},"scope":57,"src":"6329:94:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":55,"nodeType":"Block","src":"6707:167:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":38,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6717:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":40,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6731:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":49,"nodeType":"IfStatement","src":"6713:109:0","trueBody":{"id":48,"nodeType":"Block","src":"6747:75:0","statements":[{"errorCall":{"arguments":[{"expression":{"id":43,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6788:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6800:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":42,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"6762:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6762:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47,"nodeType":"RevertStatement","src":"6755:60:0"}]}},{"expression":{"arguments":[{"id":51,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"6846:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":52,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"6857:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":50,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"6827:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6827:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"6827:42:0"}]},"functionSelector":"1fe543e3","id":56,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:0","nodeType":"VariableDeclaration","scope":56,"src":"6649:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:0","nodeType":"VariableDeclaration","scope":56,"src":"6668:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":34,"nodeType":"ArrayTypeName","src":"6668:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[],"src":"6707:0:0"},"scope":57,"src":"6618:256:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":58,"src":"5333:1543:0","usedErrors":[8]}],"src":"32:6845:0"},"id":0},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[103]},"id":104,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":59,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":103,"linearizedBaseContracts":[103],"name":"AggregatorV3Interface","nameLocation":"67:21:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":64,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:1","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"110:2:1"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"136:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":61,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:1"},"scope":103,"src":"93:50:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":69,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:1","nodeType":"FunctionDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"167:2:1"},"returnParameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":69,"src":"193:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":66,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:1"},"scope":103,"src":"147:61:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":74,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:1","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"228:2:1"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"254:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:1"},"scope":103,"src":"212:51:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":89,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"487:12:1","nodeType":"FunctionDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"_roundId","nameLocation":"507:8:1","nodeType":"VariableDeclaration","scope":89,"src":"500:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":75,"name":"uint80","nodeType":"ElementaryTypeName","src":"500:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"499:17:1"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"roundId","nameLocation":"566:7:1","nodeType":"VariableDeclaration","scope":89,"src":"559:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":78,"name":"uint80","nodeType":"ElementaryTypeName","src":"559:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"answer","nameLocation":"588:6:1","nodeType":"VariableDeclaration","scope":89,"src":"581:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":80,"name":"int256","nodeType":"ElementaryTypeName","src":"581:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":83,"mutability":"mutable","name":"startedAt","nameLocation":"610:9:1","nodeType":"VariableDeclaration","scope":89,"src":"602:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"updatedAt","nameLocation":"635:9:1","nodeType":"VariableDeclaration","scope":89,"src":"627:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"answeredInRound","nameLocation":"659:15:1","nodeType":"VariableDeclaration","scope":89,"src":"652:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":86,"name":"uint80","nodeType":"ElementaryTypeName","src":"652:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"551:129:1"},"scope":103,"src":"478:203:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":102,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"694:15:1","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[],"src":"709:2:1"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"roundId","nameLocation":"761:7:1","nodeType":"VariableDeclaration","scope":102,"src":"754:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":91,"name":"uint80","nodeType":"ElementaryTypeName","src":"754:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":94,"mutability":"mutable","name":"answer","nameLocation":"783:6:1","nodeType":"VariableDeclaration","scope":102,"src":"776:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":93,"name":"int256","nodeType":"ElementaryTypeName","src":"776:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"startedAt","nameLocation":"805:9:1","nodeType":"VariableDeclaration","scope":102,"src":"797:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"updatedAt","nameLocation":"830:9:1","nodeType":"VariableDeclaration","scope":102,"src":"822:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":97,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"answeredInRound","nameLocation":"854:15:1","nodeType":"VariableDeclaration","scope":102,"src":"847:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":99,"name":"uint80","nodeType":"ElementaryTypeName","src":"847:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"746:129:1"},"scope":103,"src":"685:191:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":104,"src":"57:821:1","usedErrors":[]}],"src":"32:847:1"},"id":1},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol","exportedSymbols":{"LinkTokenInterface":[198]},"id":199,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":105,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":198,"linearizedBaseContracts":[198],"name":"LinkTokenInterface","nameLocation":"67:18:2","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":114,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"99:9:2","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"owner","nameLocation":"117:5:2","nodeType":"VariableDeclaration","scope":114,"src":"109:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"109:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"spender","nameLocation":"132:7:2","nodeType":"VariableDeclaration","scope":114,"src":"124:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"124:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108:32:2"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"remaining","nameLocation":"172:9:2","nodeType":"VariableDeclaration","scope":114,"src":"164:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":111,"name":"uint256","nodeType":"ElementaryTypeName","src":"164:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"163:19:2"},"scope":198,"src":"90:93:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":123,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"196:7:2","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":116,"mutability":"mutable","name":"spender","nameLocation":"212:7:2","nodeType":"VariableDeclaration","scope":123,"src":"204:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":118,"mutability":"mutable","name":"value","nameLocation":"229:5:2","nodeType":"VariableDeclaration","scope":123,"src":"221:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"221:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"203:32:2"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"success","nameLocation":"259:7:2","nodeType":"VariableDeclaration","scope":123,"src":"254:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":120,"name":"bool","nodeType":"ElementaryTypeName","src":"254:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"253:14:2"},"scope":198,"src":"187:81:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":130,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"281:9:2","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"mutability":"mutable","name":"owner","nameLocation":"299:5:2","nodeType":"VariableDeclaration","scope":130,"src":"291:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:15:2"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"balance","nameLocation":"337:7:2","nodeType":"VariableDeclaration","scope":130,"src":"329:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"328:17:2"},"scope":198,"src":"272:74:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":135,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"359:8:2","nodeType":"FunctionDefinition","parameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"367:2:2"},"returnParameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"mutability":"mutable","name":"decimalPlaces","nameLocation":"399:13:2","nodeType":"VariableDeclaration","scope":135,"src":"393:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":132,"name":"uint8","nodeType":"ElementaryTypeName","src":"393:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"392:21:2"},"scope":198,"src":"350:64:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":144,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"427:16:2","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"spender","nameLocation":"452:7:2","nodeType":"VariableDeclaration","scope":144,"src":"444:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":139,"mutability":"mutable","name":"addedValue","nameLocation":"469:10:2","nodeType":"VariableDeclaration","scope":144,"src":"461:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"443:37:2"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"success","nameLocation":"504:7:2","nodeType":"VariableDeclaration","scope":144,"src":"499:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":141,"name":"bool","nodeType":"ElementaryTypeName","src":"499:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"498:14:2"},"scope":198,"src":"418:95:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":151,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"526:16:2","nodeType":"FunctionDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"spender","nameLocation":"551:7:2","nodeType":"VariableDeclaration","scope":151,"src":"543:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"subtractedValue","nameLocation":"568:15:2","nodeType":"VariableDeclaration","scope":151,"src":"560:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"542:42:2"},"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[],"src":"593:0:2"},"scope":198,"src":"517:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":156,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"607:4:2","nodeType":"FunctionDefinition","parameters":{"id":152,"nodeType":"ParameterList","parameters":[],"src":"611:2:2"},"returnParameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"tokenName","nameLocation":"651:9:2","nodeType":"VariableDeclaration","scope":156,"src":"637:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":153,"name":"string","nodeType":"ElementaryTypeName","src":"637:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"636:25:2"},"scope":198,"src":"598:64:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":161,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"675:6:2","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"681:2:2"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"tokenSymbol","nameLocation":"721:11:2","nodeType":"VariableDeclaration","scope":161,"src":"707:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":158,"name":"string","nodeType":"ElementaryTypeName","src":"707:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"706:27:2"},"scope":198,"src":"666:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":166,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"747:11:2","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[],"src":"758:2:2"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"792:17:2","nodeType":"VariableDeclaration","scope":166,"src":"784:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:27:2"},"scope":198,"src":"738:73:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":175,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"824:8:2","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"to","nameLocation":"841:2:2","nodeType":"VariableDeclaration","scope":175,"src":"833:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":167,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"value","nameLocation":"853:5:2","nodeType":"VariableDeclaration","scope":175,"src":"845:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:27:2"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"success","nameLocation":"883:7:2","nodeType":"VariableDeclaration","scope":175,"src":"878:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":172,"name":"bool","nodeType":"ElementaryTypeName","src":"878:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"877:14:2"},"scope":198,"src":"815:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4000aea0","id":186,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"905:15:2","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"to","nameLocation":"934:2:2","nodeType":"VariableDeclaration","scope":186,"src":"926:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"926:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"value","nameLocation":"950:5:2","nodeType":"VariableDeclaration","scope":186,"src":"942:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":181,"mutability":"mutable","name":"data","nameLocation":"976:4:2","nodeType":"VariableDeclaration","scope":186,"src":"961:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":180,"name":"bytes","nodeType":"ElementaryTypeName","src":"961:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"920:64:2"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"success","nameLocation":"1008:7:2","nodeType":"VariableDeclaration","scope":186,"src":"1003:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":183,"name":"bool","nodeType":"ElementaryTypeName","src":"1003:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1002:14:2"},"scope":198,"src":"896:121:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":197,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1030:12:2","nodeType":"FunctionDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"mutability":"mutable","name":"from","nameLocation":"1056:4:2","nodeType":"VariableDeclaration","scope":197,"src":"1048:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"to","nameLocation":"1074:2:2","nodeType":"VariableDeclaration","scope":197,"src":"1066:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"1066:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"value","nameLocation":"1090:5:2","nodeType":"VariableDeclaration","scope":197,"src":"1082:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1082:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:57:2"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"success","nameLocation":"1123:7:2","nodeType":"VariableDeclaration","scope":197,"src":"1118:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":194,"name":"bool","nodeType":"ElementaryTypeName","src":"1118:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1117:14:2"},"scope":198,"src":"1021:111:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":199,"src":"57:1077:2","usedErrors":[]}],"src":"32:1103:2"},"id":2},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[287]},"id":288,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":200,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":287,"linearizedBaseContracts":[287],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"97:267:3","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":211,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:3","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"392:2:3"},"returnParameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"437:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":203,"name":"uint16","nodeType":"ElementaryTypeName","src":"437:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"451:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":205,"name":"uint32","nodeType":"ElementaryTypeName","src":"451:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"465:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"465:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":208,"nodeType":"ArrayTypeName","src":"465:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"429:58:3"},"scope":287,"src":"367:121:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"492:1511:3","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":227,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2015:18:3","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"keyHash","nameLocation":"2047:7:3","nodeType":"VariableDeclaration","scope":227,"src":"2039:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2039:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"subId","nameLocation":"2067:5:3","nodeType":"VariableDeclaration","scope":227,"src":"2060:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":215,"name":"uint64","nodeType":"ElementaryTypeName","src":"2060:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2085:27:3","nodeType":"VariableDeclaration","scope":227,"src":"2078:34:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":217,"name":"uint16","nodeType":"ElementaryTypeName","src":"2078:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2125:16:3","nodeType":"VariableDeclaration","scope":227,"src":"2118:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":219,"name":"uint32","nodeType":"ElementaryTypeName","src":"2118:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"numWords","nameLocation":"2154:8:3","nodeType":"VariableDeclaration","scope":227,"src":"2147:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":221,"name":"uint32","nodeType":"ElementaryTypeName","src":"2147:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2033:133:3"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"requestId","nameLocation":"2193:9:3","nodeType":"VariableDeclaration","scope":227,"src":"2185:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:19:3"},"scope":287,"src":"2006:198:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"2208:384:3","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":233,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2604:18:3","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[],"src":"2622:2:3"},"returnParameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"subId","nameLocation":"2650:5:3","nodeType":"VariableDeclaration","scope":233,"src":"2643:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":230,"name":"uint64","nodeType":"ElementaryTypeName","src":"2643:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2642:14:3"},"scope":287,"src":"2595:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"2661:381:3","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":248,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3054:15:3","nodeType":"FunctionDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"subId","nameLocation":"3077:5:3","nodeType":"VariableDeclaration","scope":248,"src":"3070:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":235,"name":"uint64","nodeType":"ElementaryTypeName","src":"3070:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3069:14:3"},"returnParameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"balance","nameLocation":"3133:7:3","nodeType":"VariableDeclaration","scope":248,"src":"3126:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":238,"name":"uint96","nodeType":"ElementaryTypeName","src":"3126:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:3","nodeType":"VariableDeclaration","scope":248,"src":"3148:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":240,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"owner","nameLocation":"3179:5:3","nodeType":"VariableDeclaration","scope":248,"src":"3171:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"3171:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"consumers","nameLocation":"3209:9:3","nodeType":"VariableDeclaration","scope":248,"src":"3192:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"3192:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":245,"nodeType":"ArrayTypeName","src":"3192:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3118:106:3"},"scope":287,"src":"3045:180:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"3229:164:3","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":256,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3405:32:3","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"subId","nameLocation":"3445:5:3","nodeType":"VariableDeclaration","scope":256,"src":"3438:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":250,"name":"uint64","nodeType":"ElementaryTypeName","src":"3438:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":253,"mutability":"mutable","name":"newOwner","nameLocation":"3460:8:3","nodeType":"VariableDeclaration","scope":256,"src":"3452:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:32:3"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"3478:0:3"},"scope":287,"src":"3396:83:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"3483:212:3","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":262,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3707:31:3","nodeType":"FunctionDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"subId","nameLocation":"3746:5:3","nodeType":"VariableDeclaration","scope":262,"src":"3739:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":258,"name":"uint64","nodeType":"ElementaryTypeName","src":"3739:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3738:14:3"},"returnParameters":{"id":261,"nodeType":"ParameterList","parameters":[],"src":"3761:0:3"},"scope":287,"src":"3698:64:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"3766:170:3","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":270,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3948:11:3","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"subId","nameLocation":"3967:5:3","nodeType":"VariableDeclaration","scope":270,"src":"3960:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":264,"name":"uint64","nodeType":"ElementaryTypeName","src":"3960:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"consumer","nameLocation":"3982:8:3","nodeType":"VariableDeclaration","scope":270,"src":"3974:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3959:32:3"},"returnParameters":{"id":269,"nodeType":"ParameterList","parameters":[],"src":"4000:0:3"},"scope":287,"src":"3939:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"4005:172:3","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":278,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4189:14:3","nodeType":"FunctionDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"subId","nameLocation":"4211:5:3","nodeType":"VariableDeclaration","scope":278,"src":"4204:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":272,"name":"uint64","nodeType":"ElementaryTypeName","src":"4204:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"consumer","nameLocation":"4226:8:3","nodeType":"VariableDeclaration","scope":278,"src":"4218:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:32:3"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[],"src":"4244:0:3"},"scope":287,"src":"4180:65:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"4249:140:3","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":286,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4401:18:3","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"subId","nameLocation":"4427:5:3","nodeType":"VariableDeclaration","scope":286,"src":"4420:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":280,"name":"uint64","nodeType":"ElementaryTypeName","src":"4420:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"to","nameLocation":"4442:2:3","nodeType":"VariableDeclaration","scope":286,"src":"4434:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:26:3"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[],"src":"4454:0:3"},"scope":287,"src":"4392:63:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":288,"src":"57:4400:3","usedErrors":[]}],"src":"32:4426:3"},"id":3},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","exportedSymbols":{"LinkTokenInterface":[198],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[287],"VRFCoordinatorV2Mock":[866]},"id":867,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":289,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"92:23:4"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol","file":"../interfaces/LinkTokenInterface.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":867,"sourceUnit":199,"src":"117:46:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"../interfaces/VRFCoordinatorV2Interface.sol","id":291,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":867,"sourceUnit":288,"src":"164:53:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"../VRFConsumerBaseV2.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":867,"sourceUnit":58,"src":"218:34:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":293,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":287,"src":"287:25:4"},"id":294,"nodeType":"InheritanceSpecifier","src":"287:25:4"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":866,"linearizedBaseContracts":[866,287],"name":"VRFCoordinatorV2Mock","nameLocation":"263:20:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"3d18651e","id":296,"mutability":"immutable","name":"BASE_FEE","nameLocation":"341:8:4","nodeType":"VariableDeclaration","scope":866,"src":"317:32:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":295,"name":"uint96","nodeType":"ElementaryTypeName","src":"317:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"a410347f","id":298,"mutability":"immutable","name":"GAS_PRICE_LINK","nameLocation":"377:14:4","nodeType":"VariableDeclaration","scope":866,"src":"353:38:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":297,"name":"uint96","nodeType":"ElementaryTypeName","src":"353:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"id":300,"name":"InvalidSubscription","nameLocation":"402:19:4","nodeType":"ErrorDefinition","parameters":{"id":299,"nodeType":"ParameterList","parameters":[],"src":"421:2:4"},"src":"396:28:4"},{"id":302,"name":"InsufficientBalance","nameLocation":"433:19:4","nodeType":"ErrorDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"452:2:4"},"src":"427:28:4"},{"id":306,"name":"MustBeSubOwner","nameLocation":"464:14:4","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"owner","nameLocation":"487:5:4","nodeType":"VariableDeclaration","scope":306,"src":"479:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"479:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"478:15:4"},"src":"458:36:4"},{"anonymous":false,"id":324,"name":"RandomWordsRequested","nameLocation":"504:20:4","nodeType":"EventDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"indexed":true,"mutability":"mutable","name":"keyHash","nameLocation":"546:7:4","nodeType":"VariableDeclaration","scope":324,"src":"530:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"530:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":310,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"567:9:4","nodeType":"VariableDeclaration","scope":324,"src":"559:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"559:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":312,"indexed":false,"mutability":"mutable","name":"preSeed","nameLocation":"590:7:4","nodeType":"VariableDeclaration","scope":324,"src":"582:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"582:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"618:5:4","nodeType":"VariableDeclaration","scope":324,"src":"603:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":313,"name":"uint64","nodeType":"ElementaryTypeName","src":"603:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":false,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"636:27:4","nodeType":"VariableDeclaration","scope":324,"src":"629:34:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":315,"name":"uint16","nodeType":"ElementaryTypeName","src":"629:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":318,"indexed":false,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"676:16:4","nodeType":"VariableDeclaration","scope":324,"src":"669:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":317,"name":"uint32","nodeType":"ElementaryTypeName","src":"669:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":320,"indexed":false,"mutability":"mutable","name":"numWords","nameLocation":"705:8:4","nodeType":"VariableDeclaration","scope":324,"src":"698:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":319,"name":"uint32","nodeType":"ElementaryTypeName","src":"698:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"735:6:4","nodeType":"VariableDeclaration","scope":324,"src":"719:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"719:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"524:221:4"},"src":"498:248:4"},{"anonymous":false,"id":334,"name":"RandomWordsFulfilled","nameLocation":"755:20:4","nodeType":"EventDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"792:9:4","nodeType":"VariableDeclaration","scope":334,"src":"776:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"776:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":328,"indexed":false,"mutability":"mutable","name":"outputSeed","nameLocation":"811:10:4","nodeType":"VariableDeclaration","scope":334,"src":"803:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"803:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":330,"indexed":false,"mutability":"mutable","name":"payment","nameLocation":"830:7:4","nodeType":"VariableDeclaration","scope":334,"src":"823:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":329,"name":"uint96","nodeType":"ElementaryTypeName","src":"823:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"844:7:4","nodeType":"VariableDeclaration","scope":334,"src":"839:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":331,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"775:77:4"},"src":"749:104:4"},{"anonymous":false,"id":340,"name":"SubscriptionCreated","nameLocation":"862:19:4","nodeType":"EventDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"897:5:4","nodeType":"VariableDeclaration","scope":340,"src":"882:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":335,"name":"uint64","nodeType":"ElementaryTypeName","src":"882:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":338,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"912:5:4","nodeType":"VariableDeclaration","scope":340,"src":"904:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"904:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"881:37:4"},"src":"856:63:4"},{"anonymous":false,"id":348,"name":"SubscriptionFunded","nameLocation":"928:18:4","nodeType":"EventDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"962:5:4","nodeType":"VariableDeclaration","scope":348,"src":"947:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":341,"name":"uint64","nodeType":"ElementaryTypeName","src":"947:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":344,"indexed":false,"mutability":"mutable","name":"oldBalance","nameLocation":"977:10:4","nodeType":"VariableDeclaration","scope":348,"src":"969:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":343,"name":"uint256","nodeType":"ElementaryTypeName","src":"969:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":346,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"997:10:4","nodeType":"VariableDeclaration","scope":348,"src":"989:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"946:62:4"},"src":"922:87:4"},{"anonymous":false,"id":356,"name":"SubscriptionCanceled","nameLocation":"1018:20:4","nodeType":"EventDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1054:5:4","nodeType":"VariableDeclaration","scope":356,"src":"1039:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":349,"name":"uint64","nodeType":"ElementaryTypeName","src":"1039:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":352,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1069:2:4","nodeType":"VariableDeclaration","scope":356,"src":"1061:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"1061:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":354,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1081:6:4","nodeType":"VariableDeclaration","scope":356,"src":"1073:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":353,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:50:4"},"src":"1012:77:4"},{"constant":false,"id":358,"mutability":"mutable","name":"s_currentSubId","nameLocation":"1100:14:4","nodeType":"VariableDeclaration","scope":866,"src":"1093:21:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":357,"name":"uint64","nodeType":"ElementaryTypeName","src":"1093:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"s_nextRequestId","nameLocation":"1126:15:4","nodeType":"VariableDeclaration","scope":866,"src":"1118:27:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1118:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1144:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"s_nextPreSeed","nameLocation":"1157:13:4","nodeType":"VariableDeclaration","scope":866,"src":"1149:27:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1149:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1173:3:4","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2Mock.Subscription","id":369,"members":[{"constant":false,"id":366,"mutability":"mutable","name":"owner","nameLocation":"1214:5:4","nodeType":"VariableDeclaration","scope":369,"src":"1206:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"balance","nameLocation":"1232:7:4","nodeType":"VariableDeclaration","scope":369,"src":"1225:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":367,"name":"uint96","nodeType":"ElementaryTypeName","src":"1225:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"Subscription","nameLocation":"1187:12:4","nodeType":"StructDefinition","scope":866,"src":"1180:64:4","visibility":"public"},{"constant":false,"id":374,"mutability":"mutable","name":"s_subscriptions","nameLocation":"1279:15:4","nodeType":"VariableDeclaration","scope":866,"src":"1247:47:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$369_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)"},"typeName":{"id":373,"keyType":{"id":370,"name":"uint64","nodeType":"ElementaryTypeName","src":"1255:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"1247:31:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$369_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)"},"valueType":{"id":372,"nodeType":"UserDefinedTypeName","pathNode":{"id":371,"name":"Subscription","nodeType":"IdentifierPath","referencedDeclaration":369,"src":"1265:12:4"},"referencedDeclaration":369,"src":"1265:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Subscription"}}},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2Mock.Request","id":381,"members":[{"constant":false,"id":376,"mutability":"mutable","name":"subId","nameLocation":"1358:5:4","nodeType":"VariableDeclaration","scope":381,"src":"1351:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":375,"name":"uint64","nodeType":"ElementaryTypeName","src":"1351:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1376:16:4","nodeType":"VariableDeclaration","scope":381,"src":"1369:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":377,"name":"uint32","nodeType":"ElementaryTypeName","src":"1369:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":380,"mutability":"mutable","name":"numWords","nameLocation":"1405:8:4","nodeType":"VariableDeclaration","scope":381,"src":"1398:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":379,"name":"uint32","nodeType":"ElementaryTypeName","src":"1398:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"Request","nameLocation":"1337:7:4","nodeType":"StructDefinition","scope":866,"src":"1330:88:4","visibility":"public"},{"constant":false,"id":386,"mutability":"mutable","name":"s_requests","nameLocation":"1449:10:4","nodeType":"VariableDeclaration","scope":866,"src":"1421:38:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$381_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)"},"typeName":{"id":385,"keyType":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1429:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1421:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$381_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)"},"valueType":{"id":384,"nodeType":"UserDefinedTypeName","pathNode":{"id":383,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"1440:7:4"},"referencedDeclaration":381,"src":"1440:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$381_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"}}},"visibility":"internal"},{"body":{"id":401,"nodeType":"Block","src":"1545:66:4","statements":[{"expression":{"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":393,"name":"BASE_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"1551:8:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":394,"name":"_baseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"1562:8:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1551:19:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":396,"nodeType":"ExpressionStatement","src":"1551:19:4"},{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":397,"name":"GAS_PRICE_LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"1576:14:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":398,"name":"_gasPriceLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"1593:13:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1576:30:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":400,"nodeType":"ExpressionStatement","src":"1576:30:4"}]},"id":402,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"_baseFee","nameLocation":"1513:8:4","nodeType":"VariableDeclaration","scope":402,"src":"1506:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":387,"name":"uint96","nodeType":"ElementaryTypeName","src":"1506:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"_gasPriceLink","nameLocation":"1530:13:4","nodeType":"VariableDeclaration","scope":402,"src":"1523:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":389,"name":"uint96","nodeType":"ElementaryTypeName","src":"1523:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"1505:39:4"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[],"src":"1545:0:4"},"scope":866,"src":"1494:117:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":548,"nodeType":"Block","src":"2241:902:4","statements":[{"assignments":[411],"declarations":[{"constant":false,"id":411,"mutability":"mutable","name":"startGas","nameLocation":"2255:8:4","nodeType":"VariableDeclaration","scope":548,"src":"2247:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":410,"name":"uint256","nodeType":"ElementaryTypeName","src":"2247:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":414,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":412,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"2266:7:4","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2266:9:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2247:28:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":415,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2285:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$381_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":417,"indexExpression":{"id":416,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2296:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2285:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$381_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"id":418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":376,"src":"2285:28:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2285:33:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":426,"nodeType":"IfStatement","src":"2281:83:4","trueBody":{"id":425,"nodeType":"Block","src":"2320:44:4","statements":[{"expression":{"arguments":[{"hexValue":"6e6f6e6578697374656e742072657175657374","id":422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2335:21:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","typeString":"literal_string \"nonexistent request\""},"value":"nonexistent request"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","typeString":"literal_string \"nonexistent request\""}],"id":421,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2328:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2328:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":424,"nodeType":"ExpressionStatement","src":"2328:29:4"}]}},{"assignments":[429],"declarations":[{"constant":false,"id":429,"mutability":"mutable","name":"req","nameLocation":"2384:3:4","nodeType":"VariableDeclaration","scope":548,"src":"2369:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$381_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"},"typeName":{"id":428,"nodeType":"UserDefinedTypeName","pathNode":{"id":427,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"2369:7:4"},"referencedDeclaration":381,"src":"2369:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$381_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"}},"visibility":"internal"}],"id":433,"initialValue":{"baseExpression":{"id":430,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2390:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$381_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":432,"indexExpression":{"id":431,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2401:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2390:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$381_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2369:43:4"},{"assignments":[438],"declarations":[{"constant":false,"id":438,"mutability":"mutable","name":"words","nameLocation":"2436:5:4","nodeType":"VariableDeclaration","scope":548,"src":"2419:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2419:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ArrayTypeName","src":"2419:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":445,"initialValue":{"arguments":[{"expression":{"id":442,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"2458:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$381_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":380,"src":"2458:12:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2444:13:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"2448:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":440,"nodeType":"ArrayTypeName","src":"2448:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2444:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2419:52:4"},{"body":{"id":472,"nodeType":"Block","src":"2520:71:4","statements":[{"expression":{"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":457,"name":"words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"2528:5:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":459,"indexExpression":{"id":458,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2534:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2528:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":465,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2568:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":466,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2580:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":463,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2557:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2557:10:4","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2557:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":462,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2547:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2547:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2539:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:4","typeDescriptions":{}}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2539:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2528:56:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":471,"nodeType":"ExpressionStatement","src":"2528:56:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2497:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":451,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"2501:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$381_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":380,"src":"2501:12:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2497:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":473,"initializationExpression":{"assignments":[447],"declarations":[{"constant":false,"id":447,"mutability":"mutable","name":"i","nameLocation":"2490:1:4","nodeType":"VariableDeclaration","scope":473,"src":"2482:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2482:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":449,"initialValue":{"hexValue":"30","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2494:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2482:13:4"},"loopExpression":{"expression":{"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2515:3:4","subExpression":{"id":454,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2515:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":456,"nodeType":"ExpressionStatement","src":"2515:3:4"},"nodeType":"ForStatement","src":"2477:114:4"},{"assignments":[476],"declarations":[{"constant":false,"id":476,"mutability":"mutable","name":"v","nameLocation":"2615:1:4","nodeType":"VariableDeclaration","scope":548,"src":"2597:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$57","typeString":"contract VRFConsumerBaseV2"},"typeName":{"id":475,"nodeType":"UserDefinedTypeName","pathNode":{"id":474,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"2597:17:4"},"referencedDeclaration":57,"src":"2597:17:4","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$57","typeString":"contract VRFConsumerBaseV2"}},"visibility":"internal"}],"id":477,"nodeType":"VariableDeclarationStatement","src":"2597:19:4"},{"assignments":[479],"declarations":[{"constant":false,"id":479,"mutability":"mutable","name":"callReq","nameLocation":"2635:7:4","nodeType":"VariableDeclaration","scope":548,"src":"2622:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":478,"name":"bytes","nodeType":"ElementaryTypeName","src":"2622:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":488,"initialValue":{"arguments":[{"expression":{"expression":{"id":482,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2668:1:4","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$57","typeString":"contract VRFConsumerBaseV2"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rawFulfillRandomWords","nodeType":"MemberAccess","referencedDeclaration":56,"src":"2668:23:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory) external"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2668:32:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":485,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2702:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":486,"name":"words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"2714:5:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":480,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2645:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2645:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2645:75:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2622:98:4"},{"assignments":[490,null],"declarations":[{"constant":false,"id":490,"mutability":"mutable","name":"success","nameLocation":"2732:7:4","nodeType":"VariableDeclaration","scope":548,"src":"2727:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":489,"name":"bool","nodeType":"ElementaryTypeName","src":"2727:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":498,"initialValue":{"arguments":[{"id":496,"name":"callReq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"2787:7:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":491,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"2745:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2745:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":493,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"2765:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$381_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":378,"src":"2765:20:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"src":"2745:41:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2745:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2726:69:4"},{"assignments":[500],"declarations":[{"constant":false,"id":500,"mutability":"mutable","name":"payment","nameLocation":"2809:7:4","nodeType":"VariableDeclaration","scope":548,"src":"2802:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":499,"name":"uint96","nodeType":"ElementaryTypeName","src":"2802:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":514,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":503,"name":"BASE_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"2826:8:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":504,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2839:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":505,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"2850:7:4","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2850:9:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2838:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":509,"name":"GAS_PRICE_LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2863:14:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2838:39:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2837:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2826:52:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2819:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":501,"name":"uint96","nodeType":"ElementaryTypeName","src":"2819:6:4","typeDescriptions":{}}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2819:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"2802:77:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":515,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"2889:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$369_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":518,"indexExpression":{"expression":{"id":516,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"2905:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$381_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":376,"src":"2905:9:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2889:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":368,"src":"2889:34:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":520,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"2926:7:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2889:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":526,"nodeType":"IfStatement","src":"2885:93:4","trueBody":{"id":525,"nodeType":"Block","src":"2935:43:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":522,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"2950:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2950:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"RevertStatement","src":"2943:28:4"}]}},{"expression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":527,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"2983:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$369_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":530,"indexExpression":{"expression":{"id":528,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"2999:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$381_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":376,"src":"2999:9:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2983:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":368,"src":"2983:34:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":532,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"3021:7:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2983:45:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":534,"nodeType":"ExpressionStatement","src":"2983:45:4"},{"expression":{"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3034:31:4","subExpression":{"components":[{"baseExpression":{"id":535,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"3042:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$381_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":537,"indexExpression":{"id":536,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"3053:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3042:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$381_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}}],"id":538,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3041:24:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$381_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"3034:31:4"},{"eventCall":{"arguments":[{"id":542,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"3097:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":543,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"3109:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":544,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"3121:7:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":545,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"3130:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":541,"name":"RandomWordsFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"3076:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint96_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,uint96,bool)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3076:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":547,"nodeType":"EmitStatement","src":"3071:67:4"}]},"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"1615:547:4","text":" @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n @notice consumer.\n @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n @dev against the real coordinator a small amount of additional LINK is required.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to"},"functionSelector":"808974ff","id":549,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"2174:18:4","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":405,"mutability":"mutable","name":"_requestId","nameLocation":"2201:10:4","nodeType":"VariableDeclaration","scope":549,"src":"2193:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"_consumer","nameLocation":"2221:9:4","nodeType":"VariableDeclaration","scope":549,"src":"2213:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"2213:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2192:39:4"},"returnParameters":{"id":409,"nodeType":"ParameterList","parameters":[],"src":"2241:0:4"},"scope":866,"src":"2165:978:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":593,"nodeType":"Block","src":"3409:278:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":557,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3419:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$369_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":559,"indexExpression":{"id":558,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"3435:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3419:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":560,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":366,"src":"3419:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3452:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:4","typeDescriptions":{}}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3452:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3419:43:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":570,"nodeType":"IfStatement","src":"3415:92:4","trueBody":{"id":569,"nodeType":"Block","src":"3464:43:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":566,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"3479:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3479:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":568,"nodeType":"RevertStatement","src":"3472:28:4"}]}},{"assignments":[572],"declarations":[{"constant":false,"id":572,"mutability":"mutable","name":"oldBalance","nameLocation":"3519:10:4","nodeType":"VariableDeclaration","scope":593,"src":"3512:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":571,"name":"uint96","nodeType":"ElementaryTypeName","src":"3512:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":577,"initialValue":{"expression":{"baseExpression":{"id":573,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3532:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$369_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":575,"indexExpression":{"id":574,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"3548:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3532:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":368,"src":"3532:31:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"3512:51:4"},{"expression":{"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":578,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3569:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$369_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":580,"indexExpression":{"id":579,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"3585:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3569:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":368,"src":"3569:31:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":582,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3604:7:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3569:42:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":584,"nodeType":"ExpressionStatement","src":"3569:42:4"},{"eventCall":{"arguments":[{"id":586,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"3641:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":587,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"3649:10:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":588,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"3661:10:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":589,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3674:7:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3661:20:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":585,"name":"SubscriptionFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"3622:18:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint64,uint256,uint256)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3622:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":592,"nodeType":"EmitStatement","src":"3617:65:4"}]},"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"3147:195:4","text":" @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n @param _subId the subscription to fund\n @param _amount the amount to fund"},"functionSelector":"afc69b53","id":594,"implemented":true,"kind":"function","modifiers":[],"name":"fundSubscription","nameLocation":"3354:16:4","nodeType":"FunctionDefinition","parameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"_subId","nameLocation":"3378:6:4","nodeType":"VariableDeclaration","scope":594,"src":"3371:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":551,"name":"uint64","nodeType":"ElementaryTypeName","src":"3371:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"_amount","nameLocation":"3393:7:4","nodeType":"VariableDeclaration","scope":594,"src":"3386:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":553,"name":"uint96","nodeType":"ElementaryTypeName","src":"3386:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3370:31:4"},"returnParameters":{"id":556,"nodeType":"ParameterList","parameters":[],"src":"3409:0:4"},"scope":866,"src":"3345:342:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[227],"body":{"id":658,"nodeType":"Block","src":"3893:516:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":610,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3903:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$369_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":612,"indexExpression":{"id":611,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"3919:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3903:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":366,"src":"3903:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3936:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"3936:7:4","typeDescriptions":{}}},"id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3936:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3903:43:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":623,"nodeType":"IfStatement","src":"3899:92:4","trueBody":{"id":622,"nodeType":"Block","src":"3948:43:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":619,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"3963:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3963:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":621,"nodeType":"RevertStatement","src":"3956:28:4"}]}},{"assignments":[625],"declarations":[{"constant":false,"id":625,"mutability":"mutable","name":"requestId","nameLocation":"4005:9:4","nodeType":"VariableDeclaration","scope":658,"src":"3997:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":628,"initialValue":{"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4017:17:4","subExpression":{"id":626,"name":"s_nextRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4017:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3997:37:4"},{"assignments":[630],"declarations":[{"constant":false,"id":630,"mutability":"mutable","name":"preSeed","nameLocation":"4048:7:4","nodeType":"VariableDeclaration","scope":658,"src":"4040:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint256","nodeType":"ElementaryTypeName","src":"4040:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":633,"initialValue":{"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4058:15:4","subExpression":{"id":631,"name":"s_nextPreSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"4058:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4040:33:4"},{"expression":{"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":634,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"4080:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$381_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":636,"indexExpression":{"id":635,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"4091:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4080:21:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$381_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":638,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"4120:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":639,"name":"_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"4146:17:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":640,"name":"_numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4175:9:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":637,"name":"Request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4104:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Request_$381_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2Mock.Request storage pointer)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["subId","callbackGasLimit","numWords"],"nodeType":"FunctionCall","src":"4104:82:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$381_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"src":"4080:106:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$381_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"id":643,"nodeType":"ExpressionStatement","src":"4080:106:4"},{"eventCall":{"arguments":[{"id":645,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"4226:8:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":646,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"4242:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":647,"name":"preSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"4259:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":648,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"4274:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":649,"name":"_minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"4288:28:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":650,"name":"_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"4324:17:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":651,"name":"_numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4349:9:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":652,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4366:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4366:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":644,"name":"RandomWordsRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"4198:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint64,uint16,uint32,uint32,address)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4198:184:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":655,"nodeType":"EmitStatement","src":"4193:189:4"},{"expression":{"id":656,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"4395:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":609,"id":657,"nodeType":"Return","src":"4388:16:4"}]},"functionSelector":"5d3b1d30","id":659,"implemented":true,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"3700:18:4","nodeType":"FunctionDefinition","overrides":{"id":606,"nodeType":"OverrideSpecifier","overrides":[],"src":"3866:8:4"},"parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"_keyHash","nameLocation":"3732:8:4","nodeType":"VariableDeclaration","scope":659,"src":"3724:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3724:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":598,"mutability":"mutable","name":"_subId","nameLocation":"3753:6:4","nodeType":"VariableDeclaration","scope":659,"src":"3746:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":597,"name":"uint64","nodeType":"ElementaryTypeName","src":"3746:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"_minimumRequestConfirmations","nameLocation":"3772:28:4","nodeType":"VariableDeclaration","scope":659,"src":"3765:35:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":599,"name":"uint16","nodeType":"ElementaryTypeName","src":"3765:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"_callbackGasLimit","nameLocation":"3813:17:4","nodeType":"VariableDeclaration","scope":659,"src":"3806:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":601,"name":"uint32","nodeType":"ElementaryTypeName","src":"3806:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"_numWords","nameLocation":"3843:9:4","nodeType":"VariableDeclaration","scope":659,"src":"3836:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":603,"name":"uint32","nodeType":"ElementaryTypeName","src":"3836:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3718:138:4"},"returnParameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":659,"src":"3884:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"3884:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3883:9:4"},"scope":866,"src":"3691:718:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[233],"body":{"id":686,"nodeType":"Block","src":"4485:197:4","statements":[{"expression":{"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4491:16:4","subExpression":{"id":665,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"4491:14:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":667,"nodeType":"ExpressionStatement","src":"4491:16:4"},{"expression":{"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":668,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"4513:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$369_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":670,"indexExpression":{"id":669,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"4529:14:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4513:31:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":672,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4568:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4568:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4589:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":671,"name":"Subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"4547:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Subscription_$369_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2Mock.Subscription storage pointer)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["owner","balance"],"nodeType":"FunctionCall","src":"4547:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Subscription memory"}},"src":"4513:79:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":677,"nodeType":"ExpressionStatement","src":"4513:79:4"},{"eventCall":{"arguments":[{"id":679,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"4623:14:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":680,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4639:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4639:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":678,"name":"SubscriptionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"4603:19:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4603:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":683,"nodeType":"EmitStatement","src":"4598:52:4"},{"expression":{"id":684,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"4663:14:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":664,"id":685,"nodeType":"Return","src":"4656:21:4"}]},"functionSelector":"a21a23e4","id":687,"implemented":true,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"4422:18:4","nodeType":"FunctionDefinition","overrides":{"id":661,"nodeType":"OverrideSpecifier","overrides":[],"src":"4452:8:4"},"parameters":{"id":660,"nodeType":"ParameterList","parameters":[],"src":"4440:2:4"},"returnParameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"_subId","nameLocation":"4477:6:4","nodeType":"VariableDeclaration","scope":687,"src":"4470:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":662,"name":"uint64","nodeType":"ElementaryTypeName","src":"4470:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4469:15:4"},"scope":866,"src":"4413:269:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[248],"body":{"id":732,"nodeType":"Block","src":"4882:200:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":702,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"4892:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$369_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":704,"indexExpression":{"id":703,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"4908:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4892:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":366,"src":"4892:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4925:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"4925:7:4","typeDescriptions":{}}},"id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4925:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4892:43:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":715,"nodeType":"IfStatement","src":"4888:92:4","trueBody":{"id":714,"nodeType":"Block","src":"4937:43:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":711,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4952:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4952:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"RevertStatement","src":"4945:28:4"}]}},{"expression":{"components":[{"expression":{"baseExpression":{"id":716,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"4993:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$369_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":718,"indexExpression":{"id":717,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"5009:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4993:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":368,"src":"4993:31:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5026:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"baseExpression":{"id":721,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"5029:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$369_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":723,"indexExpression":{"id":722,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"5045:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5029:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":366,"src":"5029:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5074:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5060:13:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"5064:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":726,"nodeType":"ArrayTypeName","src":"5064:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5060:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"id":730,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4992:85:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_rational_0_by_1_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"tuple(uint96,int_const 0,address,address[] memory)"}},"functionReturnParameters":701,"id":731,"nodeType":"Return","src":"4985:92:4"}]},"functionSelector":"a47c7696","id":733,"implemented":true,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"4695:15:4","nodeType":"FunctionDefinition","overrides":{"id":691,"nodeType":"OverrideSpecifier","overrides":[],"src":"4752:8:4"},"parameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"_subId","nameLocation":"4718:6:4","nodeType":"VariableDeclaration","scope":733,"src":"4711:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":688,"name":"uint64","nodeType":"ElementaryTypeName","src":"4711:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4710:15:4"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"balance","nameLocation":"4788:7:4","nodeType":"VariableDeclaration","scope":733,"src":"4781:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":692,"name":"uint96","nodeType":"ElementaryTypeName","src":"4781:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"reqCount","nameLocation":"4810:8:4","nodeType":"VariableDeclaration","scope":733,"src":"4803:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":694,"name":"uint64","nodeType":"ElementaryTypeName","src":"4803:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"owner","nameLocation":"4834:5:4","nodeType":"VariableDeclaration","scope":733,"src":"4826:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":700,"mutability":"mutable","name":"consumers","nameLocation":"4864:9:4","nodeType":"VariableDeclaration","scope":733,"src":"4847:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"4847:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":699,"nodeType":"ArrayTypeName","src":"4847:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4773:106:4"},"scope":866,"src":"4686:396:4","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[286],"body":{"id":759,"nodeType":"Block","src":"5181:120:4","statements":[{"eventCall":{"arguments":[{"id":745,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"5213:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":746,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"5221:3:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":747,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"5226:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$369_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":749,"indexExpression":{"id":748,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"5242:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5226:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":750,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":368,"src":"5226:31:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":744,"name":"SubscriptionCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"5192:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint64,address,uint256)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5192:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":752,"nodeType":"EmitStatement","src":"5187:71:4"},{"expression":{"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5264:32:4","subExpression":{"components":[{"baseExpression":{"id":753,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"5272:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$369_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":755,"indexExpression":{"id":754,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"5288:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5272:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}}],"id":756,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"5271:25:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"5264:32:4"}]},"functionSelector":"d7ae1d30","id":760,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":741,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"5173:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":742,"kind":"modifierInvocation","modifierName":{"id":740,"name":"onlySubOwner","nodeType":"IdentifierPath","referencedDeclaration":794,"src":"5160:12:4"},"nodeType":"ModifierInvocation","src":"5160:20:4"}],"name":"cancelSubscription","nameLocation":"5095:18:4","nodeType":"FunctionDefinition","overrides":{"id":739,"nodeType":"OverrideSpecifier","overrides":[],"src":"5151:8:4"},"parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"_subId","nameLocation":"5121:6:4","nodeType":"VariableDeclaration","scope":760,"src":"5114:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":734,"name":"uint64","nodeType":"ElementaryTypeName","src":"5114:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"_to","nameLocation":"5137:3:4","nodeType":"VariableDeclaration","scope":760,"src":"5129:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"5129:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5113:28:4"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[],"src":"5181:0:4"},"scope":866,"src":"5086:215:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":793,"nodeType":"Block","src":"5342:209:4","statements":[{"assignments":[765],"declarations":[{"constant":false,"id":765,"mutability":"mutable","name":"owner","nameLocation":"5356:5:4","nodeType":"VariableDeclaration","scope":793,"src":"5348:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"5348:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":770,"initialValue":{"expression":{"baseExpression":{"id":766,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"5364:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$369_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":768,"indexExpression":{"id":767,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"5380:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5364:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$369_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":366,"src":"5364:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5348:45:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":771,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"5403:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5420:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5412:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:4","typeDescriptions":{}}},"id":775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5412:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5403:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":781,"nodeType":"IfStatement","src":"5399:68:4","trueBody":{"id":780,"nodeType":"Block","src":"5424:43:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":777,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"5439:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5439:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":779,"nodeType":"RevertStatement","src":"5432:28:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":782,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5476:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5476:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":784,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"5490:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":791,"nodeType":"IfStatement","src":"5472:68:4","trueBody":{"id":790,"nodeType":"Block","src":"5497:43:4","statements":[{"errorCall":{"arguments":[{"id":787,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"5527:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":786,"name":"MustBeSubOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"5512:14:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5512:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":789,"nodeType":"RevertStatement","src":"5505:28:4"}]}},{"id":792,"nodeType":"PlaceholderStatement","src":"5545:1:4"}]},"id":794,"name":"onlySubOwner","nameLocation":"5314:12:4","nodeType":"ModifierDefinition","parameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"_subId","nameLocation":"5334:6:4","nodeType":"VariableDeclaration","scope":794,"src":"5327:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":761,"name":"uint64","nodeType":"ElementaryTypeName","src":"5327:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5326:15:4"},"src":"5305:246:4","virtual":false,"visibility":"internal"},{"baseFunctions":[211],"body":{"id":814,"nodeType":"Block","src":"5691:48:4","statements":[{"expression":{"components":[{"hexValue":"33","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5705:1:4","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},{"hexValue":"32303030303030","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5708:7:4","typeDescriptions":{"typeIdentifier":"t_rational_2000000_by_1","typeString":"int_const 2000000"},"value":"2000000"},{"arguments":[{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5731:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5717:13:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":808,"nodeType":"ArrayTypeName","src":"5721:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5717:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"id":812,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5704:30:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_3_by_1_$_t_rational_2000000_by_1_$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"tuple(int_const 3,int_const 2000000,bytes32[] memory)"}},"functionReturnParameters":804,"id":813,"nodeType":"Return","src":"5697:37:4"}]},"functionSelector":"00012291","id":815,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"5564:16:4","nodeType":"FunctionDefinition","overrides":{"id":796,"nodeType":"OverrideSpecifier","overrides":[],"src":"5609:8:4"},"parameters":{"id":795,"nodeType":"ParameterList","parameters":[],"src":"5580:2:4"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":815,"src":"5638:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":797,"name":"uint16","nodeType":"ElementaryTypeName","src":"5638:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":815,"src":"5652:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":799,"name":"uint32","nodeType":"ElementaryTypeName","src":"5652:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":815,"src":"5666:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5666:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":802,"nodeType":"ArrayTypeName","src":"5666:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5630:58:4"},"scope":866,"src":"5555:184:4","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[270],"body":{"id":827,"nodeType":"Block","src":"5821:36:4","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5834:17:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":823,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"5827:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5827:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":826,"nodeType":"ExpressionStatement","src":"5827:25:4"}]},"functionSelector":"7341c10c","id":828,"implemented":true,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"5752:11:4","nodeType":"FunctionDefinition","overrides":{"id":821,"nodeType":"OverrideSpecifier","overrides":[],"src":"5812:8:4"},"parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"_subId","nameLocation":"5771:6:4","nodeType":"VariableDeclaration","scope":828,"src":"5764:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":816,"name":"uint64","nodeType":"ElementaryTypeName","src":"5764:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":819,"mutability":"mutable","name":"_consumer","nameLocation":"5787:9:4","nodeType":"VariableDeclaration","scope":828,"src":"5779:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"5779:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5763:34:4"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"5821:0:4"},"scope":866,"src":"5743:114:4","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[278],"body":{"id":840,"nodeType":"Block","src":"5942:36:4","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5955:17:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":836,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"5948:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5948:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":839,"nodeType":"ExpressionStatement","src":"5948:25:4"}]},"functionSelector":"9f87fad7","id":841,"implemented":true,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"5870:14:4","nodeType":"FunctionDefinition","overrides":{"id":834,"nodeType":"OverrideSpecifier","overrides":[],"src":"5933:8:4"},"parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"_subId","nameLocation":"5892:6:4","nodeType":"VariableDeclaration","scope":841,"src":"5885:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":829,"name":"uint64","nodeType":"ElementaryTypeName","src":"5885:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"_consumer","nameLocation":"5908:9:4","nodeType":"VariableDeclaration","scope":841,"src":"5900:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5884:34:4"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[],"src":"5942:0:4"},"scope":866,"src":"5861:117:4","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[256],"body":{"id":853,"nodeType":"Block","src":"6081:36:4","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6094:17:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":849,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"6087:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6087:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"ExpressionStatement","src":"6087:25:4"}]},"functionSelector":"04c357cb","id":854,"implemented":true,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"5991:32:4","nodeType":"FunctionDefinition","overrides":{"id":847,"nodeType":"OverrideSpecifier","overrides":[],"src":"6072:8:4"},"parameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"_subId","nameLocation":"6031:6:4","nodeType":"VariableDeclaration","scope":854,"src":"6024:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":842,"name":"uint64","nodeType":"ElementaryTypeName","src":"6024:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"_newOwner","nameLocation":"6047:9:4","nodeType":"VariableDeclaration","scope":854,"src":"6039:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6023:34:4"},"returnParameters":{"id":848,"nodeType":"ParameterList","parameters":[],"src":"6081:0:4"},"scope":866,"src":"5982:135:4","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[262],"body":{"id":864,"nodeType":"Block","src":"6200:36:4","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6213:17:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":860,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"6206:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6206:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":863,"nodeType":"ExpressionStatement","src":"6206:25:4"}]},"functionSelector":"82359740","id":865,"implemented":true,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"6130:31:4","nodeType":"FunctionDefinition","overrides":{"id":858,"nodeType":"OverrideSpecifier","overrides":[],"src":"6191:8:4"},"parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"_subId","nameLocation":"6169:6:4","nodeType":"VariableDeclaration","scope":865,"src":"6162:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":855,"name":"uint64","nodeType":"ElementaryTypeName","src":"6162:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6161:15:4"},"returnParameters":{"id":859,"nodeType":"ParameterList","parameters":[],"src":"6200:0:4"},"scope":866,"src":"6121:115:4","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":867,"src":"254:5984:4","usedErrors":[300,302,306]}],"src":"92:6147:4"},"id":4},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2449],"Ownable":[979]},"id":980,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":868,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":869,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":980,"sourceUnit":2450,"src":"127:30:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":871,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2449,"src":"683:7:5"},"id":872,"nodeType":"InheritanceSpecifier","src":"683:7:5"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"159:494:5","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":979,"linearizedBaseContracts":[979,2449],"name":"Ownable","nameLocation":"672:7:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":874,"mutability":"mutable","name":"_owner","nameLocation":"713:6:5","nodeType":"VariableDeclaration","scope":979,"src":"697:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":880,"name":"OwnershipTransferred","nameLocation":"732:20:5","nodeType":"EventDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:5","nodeType":"VariableDeclaration","scope":880,"src":"753:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":878,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:5","nodeType":"VariableDeclaration","scope":880,"src":"784:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:5"},"src":"726:84:5"},{"body":{"id":889,"nodeType":"Block","src":"926:49:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":885,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"955:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":884,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"936:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":888,"nodeType":"ExpressionStatement","src":"936:32:5"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"816:91:5","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":890,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[],"src":"923:2:5"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[],"src":"926:0:5"},"scope":979,"src":"912:63:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":897,"nodeType":"Block","src":"1084:41:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":893,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"1094:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":895,"nodeType":"ExpressionStatement","src":"1094:13:5"},{"id":896,"nodeType":"PlaceholderStatement","src":"1117:1:5"}]},"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"981:77:5","text":" @dev Throws if called by any account other than the owner."},"id":898,"name":"onlyOwner","nameLocation":"1072:9:5","nodeType":"ModifierDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"1081:2:5"},"src":"1063:62:5","virtual":false,"visibility":"internal"},{"body":{"id":906,"nodeType":"Block","src":"1256:30:5","statements":[{"expression":{"id":904,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"1273:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":903,"id":905,"nodeType":"Return","src":"1266:13:5"}]},"documentation":{"id":899,"nodeType":"StructuredDocumentation","src":"1131:65:5","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":907,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:5","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[],"src":"1215:2:5"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":907,"src":"1247:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:5"},"scope":979,"src":"1201:85:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":920,"nodeType":"Block","src":"1404:85:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":912,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"1422:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":914,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"1433:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":911,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":919,"nodeType":"ExpressionStatement","src":"1414:68:5"}]},"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"1292:62:5","text":" @dev Throws if the sender is not the owner."},"id":921,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:5","nodeType":"FunctionDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[],"src":"1379:2:5"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[],"src":"1404:0:5"},"scope":979,"src":"1359:130:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":934,"nodeType":"Block","src":"1885:47:5","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:5","typeDescriptions":{}}},"id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":927,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"1895:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"ExpressionStatement","src":"1895:30:5"}]},"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"1495:331:5","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":935,"implemented":true,"kind":"function","modifiers":[{"id":925,"kind":"modifierInvocation","modifierName":{"id":924,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":898,"src":"1875:9:5"},"nodeType":"ModifierInvocation","src":"1875:9:5"}],"name":"renounceOwnership","nameLocation":"1840:17:5","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[],"src":"1857:2:5"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[],"src":"1885:0:5"},"scope":979,"src":"1831:101:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":957,"nodeType":"Block","src":"2151:128:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":944,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"2169:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:5","typeDescriptions":{}}},"id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":943,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"ExpressionStatement","src":"2161:73:5"},{"expression":{"arguments":[{"id":954,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"2263:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":953,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"2244:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":956,"nodeType":"ExpressionStatement","src":"2244:28:5"}]},"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"1938:138:5","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":958,"implemented":true,"kind":"function","modifiers":[{"id":941,"kind":"modifierInvocation","modifierName":{"id":940,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":898,"src":"2141:9:5"},"nodeType":"ModifierInvocation","src":"2141:9:5"}],"name":"transferOwnership","nameLocation":"2090:17:5","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:5","nodeType":"VariableDeclaration","scope":958,"src":"2108:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:5"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[],"src":"2151:0:5"},"scope":979,"src":"2081:198:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":977,"nodeType":"Block","src":"2496:124:5","statements":[{"assignments":[965],"declarations":[{"constant":false,"id":965,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:5","nodeType":"VariableDeclaration","scope":977,"src":"2506:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":967,"initialValue":{"id":966,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2525:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:5"},{"expression":{"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":968,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2541:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":969,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"2550:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":971,"nodeType":"ExpressionStatement","src":"2541:17:5"},{"eventCall":{"arguments":[{"id":973,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"2594:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":974,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"2604:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":972,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"2573:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":976,"nodeType":"EmitStatement","src":"2568:45:5"}]},"documentation":{"id":959,"nodeType":"StructuredDocumentation","src":"2285:143:5","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":978,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:5","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:5","nodeType":"VariableDeclaration","scope":978,"src":"2461:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:5"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"2496:0:5"},"scope":979,"src":"2433:187:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":980,"src":"654:1968:5","usedErrors":[]}],"src":"102:2521:5"},"id":5},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[2427],"Context":[2449],"ERC165":[2699],"ERC721":[1846],"IERC165":[2711],"IERC721":[1962],"IERC721Metadata":[2132],"IERC721Receiver":[1980],"Strings":[2675]},"id":1847,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":981,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":982,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1847,"sourceUnit":1963,"src":"132:23:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":983,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1847,"sourceUnit":1981,"src":"156:31:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":984,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1847,"sourceUnit":2133,"src":"188:42:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":985,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1847,"sourceUnit":2428,"src":"231:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":986,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1847,"sourceUnit":2450,"src":"265:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":987,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1847,"sourceUnit":2676,"src":"299:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":988,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1847,"sourceUnit":2700,"src":"333:46:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":990,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2449,"src":"647:7:6"},"id":991,"nodeType":"InheritanceSpecifier","src":"647:7:6"},{"baseName":{"id":992,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2699,"src":"656:6:6"},"id":993,"nodeType":"InheritanceSpecifier","src":"656:6:6"},{"baseName":{"id":994,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1962,"src":"664:7:6"},"id":995,"nodeType":"InheritanceSpecifier","src":"664:7:6"},{"baseName":{"id":996,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":2132,"src":"673:15:6"},"id":997,"nodeType":"InheritanceSpecifier","src":"673:15:6"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"381:246:6","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1846,"linearizedBaseContracts":[1846,2132,1962,2699,2711,2449],"name":"ERC721","nameLocation":"637:6:6","nodeType":"ContractDefinition","nodes":[{"id":1000,"libraryName":{"id":998,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":2427,"src":"701:7:6"},"nodeType":"UsingForDirective","src":"695:26:6","typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":1003,"libraryName":{"id":1001,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2675,"src":"732:7:6"},"nodeType":"UsingForDirective","src":"726:26:6","typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1005,"mutability":"mutable","name":"_name","nameLocation":"791:5:6","nodeType":"VariableDeclaration","scope":1846,"src":"776:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1004,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1007,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:6","nodeType":"VariableDeclaration","scope":1846,"src":"823:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1006,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1011,"mutability":"mutable","name":"_owners","nameLocation":"934:7:6","nodeType":"VariableDeclaration","scope":1846,"src":"898:43:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1010,"keyType":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1015,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:6","nodeType":"VariableDeclaration","scope":1846,"src":"992:45:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1014,"keyType":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1019,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:6","nodeType":"VariableDeclaration","scope":1846,"src":"1093:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1018,"keyType":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1025,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:6","nodeType":"VariableDeclaration","scope":1846,"src":"1199:71:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1024,"keyType":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":1023,"keyType":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1022,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1041,"nodeType":"Block","src":"1446:57:6","statements":[{"expression":{"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1033,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"1456:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1034,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"1464:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1036,"nodeType":"ExpressionStatement","src":"1456:13:6"},{"expression":{"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1037,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"1479:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1038,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"1489:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1040,"nodeType":"ExpressionStatement","src":"1479:17:6"}]},"documentation":{"id":1026,"nodeType":"StructuredDocumentation","src":"1277:108:6","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1042,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"name_","nameLocation":"1416:5:6","nodeType":"VariableDeclaration","scope":1042,"src":"1402:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1027,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:6","nodeType":"VariableDeclaration","scope":1042,"src":"1423:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1029,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:6"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"1446:0:6"},"scope":1846,"src":"1390:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2698,2710],"body":{"id":1072,"nodeType":"Block","src":"1678:192:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1053,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"1707:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1055,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1727:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1962_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1962_$","typeString":"type(contract IERC721)"}],"id":1054,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1962","typeString":"type(contract IERC721)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1059,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"1763:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1061,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"1783:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2132_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2132_$","typeString":"type(contract IERC721Metadata)"}],"id":1060,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2132","typeString":"type(contract IERC721Metadata)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1068,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"1851:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1066,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1846_$","typeString":"type(contract super ERC721)"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2698,"src":"1827:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1052,"id":1071,"nodeType":"Return","src":"1688:175:6"}]},"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"1509:56:6","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:6","nodeType":"FunctionDefinition","overrides":{"id":1049,"nodeType":"OverrideSpecifier","overrides":[{"id":1047,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2699,"src":"1646:6:6"},{"id":1048,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2711,"src":"1654:7:6"}],"src":"1637:25:6"},"parameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:6","nodeType":"VariableDeclaration","scope":1073,"src":"1597:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1044,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:6"},"returnParameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1073,"src":"1672:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1050,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:6"},"scope":1846,"src":"1570:300:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1887],"body":{"id":1096,"nodeType":"Block","src":"2010:123:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1083,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"2028:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:6","typeDescriptions":{}}},"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":1082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1091,"nodeType":"ExpressionStatement","src":"2020:73:6"},{"expression":{"baseExpression":{"id":1092,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2110:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1094,"indexExpression":{"id":1093,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"2120:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1081,"id":1095,"nodeType":"Return","src":"2103:23:6"}]},"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"1876:48:6","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1097,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:6","nodeType":"FunctionDefinition","overrides":{"id":1078,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:6"},"parameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"owner","nameLocation":"1956:5:6","nodeType":"VariableDeclaration","scope":1097,"src":"1948:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:6"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1097,"src":"2001:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:6"},"scope":1846,"src":"1929:204:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1895],"body":{"id":1124,"nodeType":"Block","src":"2271:137:6","statements":[{"assignments":[1107],"declarations":[{"constant":false,"id":1107,"mutability":"mutable","name":"owner","nameLocation":"2289:5:6","nodeType":"VariableDeclaration","scope":1124,"src":"2281:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1111,"initialValue":{"baseExpression":{"id":1108,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"2297:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1110,"indexExpression":{"id":1109,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"2305:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2297:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:32:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1113,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"2331:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2348:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2340:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"2340:7:6","typeDescriptions":{}}},"id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2340:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2331:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2352:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1112,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2323:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2323:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"ExpressionStatement","src":"2323:56:6"},{"expression":{"id":1122,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"2396:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1105,"id":1123,"nodeType":"Return","src":"2389:12:6"}]},"documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"2139:46:6","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:6","nodeType":"FunctionDefinition","overrides":{"id":1102,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:6"},"parameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:6","nodeType":"VariableDeclaration","scope":1125,"src":"2207:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1099,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:6"},"returnParameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1125,"src":"2262:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:6"},"scope":1846,"src":"2190:218:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2117],"body":{"id":1134,"nodeType":"Block","src":"2539:29:6","statements":[{"expression":{"id":1132,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"2556:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1131,"id":1133,"nodeType":"Return","src":"2549:12:6"}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"2414:51:6","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1135,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2479:4:6","nodeType":"FunctionDefinition","overrides":{"id":1128,"nodeType":"OverrideSpecifier","overrides":[],"src":"2506:8:6"},"parameters":{"id":1127,"nodeType":"ParameterList","parameters":[],"src":"2483:2:6"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1135,"src":"2524:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1129,"name":"string","nodeType":"ElementaryTypeName","src":"2524:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2523:15:6"},"scope":1846,"src":"2470:98:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2123],"body":{"id":1144,"nodeType":"Block","src":"2703:31:6","statements":[{"expression":{"id":1142,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"2720:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1141,"id":1143,"nodeType":"Return","src":"2713:14:6"}]},"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"2574:53:6","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1145,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2641:6:6","nodeType":"FunctionDefinition","overrides":{"id":1138,"nodeType":"OverrideSpecifier","overrides":[],"src":"2670:8:6"},"parameters":{"id":1137,"nodeType":"ParameterList","parameters":[],"src":"2647:2:6"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1145,"src":"2688:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1139,"name":"string","nodeType":"ElementaryTypeName","src":"2688:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2687:15:6"},"scope":1846,"src":"2632:102:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2131],"body":{"id":1183,"nodeType":"Block","src":"2888:188:6","statements":[{"expression":{"arguments":[{"id":1155,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"2913:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1154,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"2898:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2898:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1157,"nodeType":"ExpressionStatement","src":"2898:23:6"},{"assignments":[1159],"declarations":[{"constant":false,"id":1159,"mutability":"mutable","name":"baseURI","nameLocation":"2946:7:6","nodeType":"VariableDeclaration","scope":1183,"src":"2932:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1158,"name":"string","nodeType":"ElementaryTypeName","src":"2932:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1162,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1160,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"2956:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2956:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2932:34:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1165,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"2989:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2983:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1163,"name":"bytes","nodeType":"ElementaryTypeName","src":"2983:5:6","typeDescriptions":{}}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2983:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2983:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3007:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2983:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3067:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2983:86:6","trueExpression":{"arguments":[{"arguments":[{"id":1174,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"3035:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1175,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"3044:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2537,"src":"3044:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3044:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1172,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3018:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3018:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3018:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3011:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1170,"name":"string","nodeType":"ElementaryTypeName","src":"3011:6:6","typeDescriptions":{}}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3011:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1153,"id":1182,"nodeType":"Return","src":"2976:93:6"}]},"documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"2740:55:6","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1184,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2809:8:6","nodeType":"FunctionDefinition","overrides":{"id":1150,"nodeType":"OverrideSpecifier","overrides":[],"src":"2855:8:6"},"parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"tokenId","nameLocation":"2826:7:6","nodeType":"VariableDeclaration","scope":1184,"src":"2818:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2818:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2817:17:6"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1184,"src":"2873:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1151,"name":"string","nodeType":"ElementaryTypeName","src":"2873:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2872:15:6"},"scope":1846,"src":"2800:276:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1192,"nodeType":"Block","src":"3384:26:6","statements":[{"expression":{"hexValue":"","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3401:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1189,"id":1191,"nodeType":"Return","src":"3394:9:6"}]},"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"3082:231:6","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1193,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3327:8:6","nodeType":"FunctionDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[],"src":"3335:2:6"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1193,"src":"3369:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1187,"name":"string","nodeType":"ElementaryTypeName","src":"3369:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3368:15:6"},"scope":1846,"src":"3318:92:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1935],"body":{"id":1235,"nodeType":"Block","src":"3537:337:6","statements":[{"assignments":[1203],"declarations":[{"constant":false,"id":1203,"mutability":"mutable","name":"owner","nameLocation":"3555:5:6","nodeType":"VariableDeclaration","scope":1235,"src":"3547:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"3547:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1208,"initialValue":{"arguments":[{"id":1206,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"3578:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1204,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"3563:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1846_$","typeString":"type(contract ERC721)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1125,"src":"3563:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3563:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3547:39:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1210,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"3604:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1211,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"3610:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3604:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3617:35:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":1209,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3596:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3596:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1215,"nodeType":"ExpressionStatement","src":"3596:57:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1217,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"3685:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3685:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1219,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"3701:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3685:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1222,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"3727:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1223,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"3734:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3734:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1221,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"3710:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3710:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3685:62:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3761:64:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""},"value":"ERC721: approve caller is not token owner nor approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""}],"id":1216,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3664:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3664:171:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1229,"nodeType":"ExpressionStatement","src":"3664:171:6"},{"expression":{"arguments":[{"id":1231,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"3855:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1232,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"3859:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1230,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"3846:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1234,"nodeType":"ExpressionStatement","src":"3846:21:6"}]},"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"3416:46:6","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1236,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3476:7:6","nodeType":"FunctionDefinition","overrides":{"id":1200,"nodeType":"OverrideSpecifier","overrides":[],"src":"3528:8:6"},"parameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"to","nameLocation":"3492:2:6","nodeType":"VariableDeclaration","scope":1236,"src":"3484:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"3484:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"tokenId","nameLocation":"3504:7:6","nodeType":"VariableDeclaration","scope":1236,"src":"3496:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"3496:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3483:29:6"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[],"src":"3537:0:6"},"scope":1846,"src":"3467:407:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1951],"body":{"id":1253,"nodeType":"Block","src":"4020:82:6","statements":[{"expression":{"arguments":[{"id":1246,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"4045:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1245,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"4030:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1248,"nodeType":"ExpressionStatement","src":"4030:23:6"},{"expression":{"baseExpression":{"id":1249,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"4071:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1251,"indexExpression":{"id":1250,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"4087:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1244,"id":1252,"nodeType":"Return","src":"4064:31:6"}]},"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"3880:50:6","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1254,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:6","nodeType":"FunctionDefinition","overrides":{"id":1241,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:6"},"parameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:6","nodeType":"VariableDeclaration","scope":1254,"src":"3956:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:6"},"returnParameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1254,"src":"4011:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:6"},"scope":1846,"src":"3935:167:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1943],"body":{"id":1270,"nodeType":"Block","src":"4253:69:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1264,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"4282:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1266,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"4296:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1267,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"4306:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1263,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"4263:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1269,"nodeType":"ExpressionStatement","src":"4263:52:6"}]},"documentation":{"id":1255,"nodeType":"StructuredDocumentation","src":"4108:56:6","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1271,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:6","nodeType":"FunctionDefinition","overrides":{"id":1261,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:6"},"parameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"operator","nameLocation":"4204:8:6","nodeType":"VariableDeclaration","scope":1271,"src":"4196:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"approved","nameLocation":"4219:8:6","nodeType":"VariableDeclaration","scope":1271,"src":"4214:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1258,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:6"},"returnParameters":{"id":1262,"nodeType":"ParameterList","parameters":[],"src":"4253:0:6"},"scope":1846,"src":"4169:153:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1961],"body":{"id":1288,"nodeType":"Block","src":"4491:59:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1282,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"4508:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1284,"indexExpression":{"id":1283,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"4527:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1286,"indexExpression":{"id":1285,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"4534:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1281,"id":1287,"nodeType":"Return","src":"4501:42:6"}]},"documentation":{"id":1272,"nodeType":"StructuredDocumentation","src":"4328:55:6","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1289,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:6","nodeType":"FunctionDefinition","overrides":{"id":1278,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:6"},"parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"owner","nameLocation":"4422:5:6","nodeType":"VariableDeclaration","scope":1289,"src":"4414:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"operator","nameLocation":"4437:8:6","nodeType":"VariableDeclaration","scope":1289,"src":"4429:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:6"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1289,"src":"4485:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1279,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:6"},"scope":1846,"src":"4388:162:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1927],"body":{"id":1315,"nodeType":"Block","src":"4731:208:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1302,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"4820:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4820:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1304,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"4834:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1301,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"4801:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4801:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":1300,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4793:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4793:100:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1308,"nodeType":"ExpressionStatement","src":"4793:100:6"},{"expression":{"arguments":[{"id":1310,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"4914:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1311,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"4920:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1312,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"4924:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1309,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"4904:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4904:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1314,"nodeType":"ExpressionStatement","src":"4904:28:6"}]},"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"4556:51:6","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1316,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:6","nodeType":"FunctionDefinition","overrides":{"id":1298,"nodeType":"OverrideSpecifier","overrides":[],"src":"4722:8:6"},"parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"from","nameLocation":"4651:4:6","nodeType":"VariableDeclaration","scope":1316,"src":"4643:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"4643:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"to","nameLocation":"4673:2:6","nodeType":"VariableDeclaration","scope":1316,"src":"4665:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"4665:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"tokenId","nameLocation":"4693:7:6","nodeType":"VariableDeclaration","scope":1316,"src":"4685:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:73:6"},"returnParameters":{"id":1299,"nodeType":"ParameterList","parameters":[],"src":"4731:0:6"},"scope":1846,"src":"4612:327:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1917],"body":{"id":1334,"nodeType":"Block","src":"5128:56:6","statements":[{"expression":{"arguments":[{"id":1328,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"5155:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1329,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"5161:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1330,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"5165:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5174:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1327,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1335,1365],"referencedDeclaration":1365,"src":"5138:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5138:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1333,"nodeType":"ExpressionStatement","src":"5138:39:6"}]},"documentation":{"id":1317,"nodeType":"StructuredDocumentation","src":"4945:55:6","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1335,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5014:16:6","nodeType":"FunctionDefinition","overrides":{"id":1325,"nodeType":"OverrideSpecifier","overrides":[],"src":"5119:8:6"},"parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"from","nameLocation":"5048:4:6","nodeType":"VariableDeclaration","scope":1335,"src":"5040:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"5040:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"to","nameLocation":"5070:2:6","nodeType":"VariableDeclaration","scope":1335,"src":"5062:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"5062:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"tokenId","nameLocation":"5090:7:6","nodeType":"VariableDeclaration","scope":1335,"src":"5082:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"5082:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5030:73:6"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[],"src":"5128:0:6"},"scope":1846,"src":"5005:179:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1907],"body":{"id":1364,"nodeType":"Block","src":"5400:165:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1350,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"5437:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5437:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1352,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"5451:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1349,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"5418:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5418:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5461:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":1348,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5410:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5410:100:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"ExpressionStatement","src":"5410:100:6"},{"expression":{"arguments":[{"id":1358,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"5534:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"5540:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1360,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"5544:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1361,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"5553:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1357,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"5520:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5520:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1363,"nodeType":"ExpressionStatement","src":"5520:38:6"}]},"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"5190:55:6","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1365,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5259:16:6","nodeType":"FunctionDefinition","overrides":{"id":1346,"nodeType":"OverrideSpecifier","overrides":[],"src":"5391:8:6"},"parameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"from","nameLocation":"5293:4:6","nodeType":"VariableDeclaration","scope":1365,"src":"5285:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"5285:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"to","nameLocation":"5315:2:6","nodeType":"VariableDeclaration","scope":1365,"src":"5307:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"5307:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"tokenId","nameLocation":"5335:7:6","nodeType":"VariableDeclaration","scope":1365,"src":"5327:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"5327:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1344,"mutability":"mutable","name":"data","nameLocation":"5365:4:6","nodeType":"VariableDeclaration","scope":1365,"src":"5352:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1343,"name":"bytes","nodeType":"ElementaryTypeName","src":"5352:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5275:100:6"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[],"src":"5400:0:6"},"scope":1846,"src":"5250:315:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1393,"nodeType":"Block","src":"6566:165:6","statements":[{"expression":{"arguments":[{"id":1378,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"6586:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1379,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"6592:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1380,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"6596:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1377,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"6576:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6576:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1382,"nodeType":"ExpressionStatement","src":"6576:28:6"},{"expression":{"arguments":[{"arguments":[{"id":1385,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"6645:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1386,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"6651:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1387,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"6655:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1388,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"6664:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1384,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"6622:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6622:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6671:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1383,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6614:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6614:110:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1392,"nodeType":"ExpressionStatement","src":"6614:110:6"}]},"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"5571:850:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1394,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6435:13:6","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"from","nameLocation":"6466:4:6","nodeType":"VariableDeclaration","scope":1394,"src":"6458:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"6458:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"to","nameLocation":"6488:2:6","nodeType":"VariableDeclaration","scope":1394,"src":"6480:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"6480:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"tokenId","nameLocation":"6508:7:6","nodeType":"VariableDeclaration","scope":1394,"src":"6500:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"6500:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"data","nameLocation":"6538:4:6","nodeType":"VariableDeclaration","scope":1394,"src":"6525:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1373,"name":"bytes","nodeType":"ElementaryTypeName","src":"6525:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6448:100:6"},"returnParameters":{"id":1376,"nodeType":"ParameterList","parameters":[],"src":"6566:0:6"},"scope":1846,"src":"6426:305:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1411,"nodeType":"Block","src":"7105:54:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1402,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"7122:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1404,"indexExpression":{"id":1403,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"7130:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7122:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7150:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7142:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"7142:7:6","typeDescriptions":{}}},"id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7142:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7122:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1401,"id":1410,"nodeType":"Return","src":"7115:37:6"}]},"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"6737:292:6","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":1412,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7043:7:6","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"tokenId","nameLocation":"7059:7:6","nodeType":"VariableDeclaration","scope":1412,"src":"7051:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"7051:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7050:17:6"},"returnParameters":{"id":1401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1412,"src":"7099:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1399,"name":"bool","nodeType":"ElementaryTypeName","src":"7099:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7098:6:6"},"scope":1846,"src":"7034:125:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1445,"nodeType":"Block","src":"7416:162:6","statements":[{"assignments":[1423],"declarations":[{"constant":false,"id":1423,"mutability":"mutable","name":"owner","nameLocation":"7434:5:6","nodeType":"VariableDeclaration","scope":1445,"src":"7426:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1422,"name":"address","nodeType":"ElementaryTypeName","src":"7426:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1428,"initialValue":{"arguments":[{"id":1426,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"7457:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1424,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"7442:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1846_$","typeString":"type(contract ERC721)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1125,"src":"7442:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7442:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7426:39:6"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1429,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"7483:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1430,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"7494:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7483:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1433,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"7520:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1434,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"7527:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1432,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"7503:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7503:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7483:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1438,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"7551:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1437,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"7539:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7539:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1440,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"7563:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7539:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7483:87:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1443,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7482:89:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1421,"id":1444,"nodeType":"Return","src":"7475:96:6"}]},"documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"7165:147:6","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1446,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7326:18:6","nodeType":"FunctionDefinition","parameters":{"id":1418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"spender","nameLocation":"7353:7:6","nodeType":"VariableDeclaration","scope":1446,"src":"7345:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"7345:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1417,"mutability":"mutable","name":"tokenId","nameLocation":"7370:7:6","nodeType":"VariableDeclaration","scope":1446,"src":"7362:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1416,"name":"uint256","nodeType":"ElementaryTypeName","src":"7362:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7344:34:6"},"returnParameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1446,"src":"7410:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1419,"name":"bool","nodeType":"ElementaryTypeName","src":"7410:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7409:6:6"},"scope":1846,"src":"7317:261:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1460,"nodeType":"Block","src":"7973:43:6","statements":[{"expression":{"arguments":[{"id":1455,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"7993:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1456,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"7997:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8006:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1454,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1461,1490],"referencedDeclaration":1490,"src":"7983:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7983:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1459,"nodeType":"ExpressionStatement","src":"7983:26:6"}]},"documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"7584:319:6","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"7917:9:6","nodeType":"FunctionDefinition","parameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"to","nameLocation":"7935:2:6","nodeType":"VariableDeclaration","scope":1461,"src":"7927:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"7927:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"tokenId","nameLocation":"7947:7:6","nodeType":"VariableDeclaration","scope":1461,"src":"7939:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7926:29:6"},"returnParameters":{"id":1453,"nodeType":"ParameterList","parameters":[],"src":"7973:0:6"},"scope":1846,"src":"7908:108:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1489,"nodeType":"Block","src":"8351:195:6","statements":[{"expression":{"arguments":[{"id":1472,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"8367:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1473,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"8371:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1471,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"8361:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8361:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1475,"nodeType":"ExpressionStatement","src":"8361:18:6"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8441:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8433:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1478,"name":"address","nodeType":"ElementaryTypeName","src":"8433:7:6","typeDescriptions":{}}},"id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8433:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1482,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"8445:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1483,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"8449:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1484,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"8458:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1477,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"8410:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8410:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8477:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1476,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8389:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8389:150:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1488,"nodeType":"ExpressionStatement","src":"8389:150:6"}]},"documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"8022:210:6","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8246:9:6","nodeType":"FunctionDefinition","parameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"to","nameLocation":"8273:2:6","nodeType":"VariableDeclaration","scope":1490,"src":"8265:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1463,"name":"address","nodeType":"ElementaryTypeName","src":"8265:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"tokenId","nameLocation":"8293:7:6","nodeType":"VariableDeclaration","scope":1490,"src":"8285:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"8285:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1468,"mutability":"mutable","name":"data","nameLocation":"8323:4:6","nodeType":"VariableDeclaration","scope":1490,"src":"8310:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1467,"name":"bytes","nodeType":"ElementaryTypeName","src":"8310:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8255:78:6"},"returnParameters":{"id":1470,"nodeType":"ParameterList","parameters":[],"src":"8351:0:6"},"scope":1846,"src":"8237:309:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1555,"nodeType":"Block","src":"8929:366:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"8947:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8961:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8953:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"8953:7:6","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8953:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8947:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8965:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":1498,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8939:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8939:61:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1507,"nodeType":"ExpressionStatement","src":"8939:61:6"},{"expression":{"arguments":[{"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9018:17:6","subExpression":{"arguments":[{"id":1510,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9027:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1509,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"9019:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9019:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9037:30:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1508,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9010:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9010:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1515,"nodeType":"ExpressionStatement","src":"9010:58:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9108:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9100:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1517,"name":"address","nodeType":"ElementaryTypeName","src":"9100:7:6","typeDescriptions":{}}},"id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9100:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1521,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"9112:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1522,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9116:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1516,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"9079:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9079:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1524,"nodeType":"ExpressionStatement","src":"9079:45:6"},{"expression":{"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1525,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"9135:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1527,"indexExpression":{"id":1526,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"9145:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9135:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9152:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9135:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1530,"nodeType":"ExpressionStatement","src":"9135:18:6"},{"expression":{"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1531,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"9163:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1533,"indexExpression":{"id":1532,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9171:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9163:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1534,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"9182:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9163:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1536,"nodeType":"ExpressionStatement","src":"9163:21:6"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9217:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9209:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1538,"name":"address","nodeType":"ElementaryTypeName","src":"9209:7:6","typeDescriptions":{}}},"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9209:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1542,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"9221:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1543,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9225:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1537,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"9200:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9200:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1545,"nodeType":"EmitStatement","src":"9195:38:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9264:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"9264:7:6","typeDescriptions":{}}},"id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9264:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1551,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"9276:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1552,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9280:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1546,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"9244:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9244:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1554,"nodeType":"ExpressionStatement","src":"9244:44:6"}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"8552:311:6","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1556,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8877:5:6","nodeType":"FunctionDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"to","nameLocation":"8891:2:6","nodeType":"VariableDeclaration","scope":1556,"src":"8883:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"8883:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"tokenId","nameLocation":"8903:7:6","nodeType":"VariableDeclaration","scope":1556,"src":"8895:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"8895:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8882:29:6"},"returnParameters":{"id":1497,"nodeType":"ParameterList","parameters":[],"src":"8929:0:6"},"scope":1846,"src":"8868:427:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1615,"nodeType":"Block","src":"9561:357:6","statements":[{"assignments":[1563],"declarations":[{"constant":false,"id":1563,"mutability":"mutable","name":"owner","nameLocation":"9579:5:6","nodeType":"VariableDeclaration","scope":1615,"src":"9571:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1562,"name":"address","nodeType":"ElementaryTypeName","src":"9571:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1568,"initialValue":{"arguments":[{"id":1566,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"9602:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1564,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"9587:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1846_$","typeString":"type(contract ERC721)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1125,"src":"9587:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9587:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9571:39:6"},{"expression":{"arguments":[{"id":1570,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"9642:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9657:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9649:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1571,"name":"address","nodeType":"ElementaryTypeName","src":"9649:7:6","typeDescriptions":{}}},"id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9649:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1575,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"9661:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1569,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"9621:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9621:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1577,"nodeType":"ExpressionStatement","src":"9621:48:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9724:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9716:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"9716:7:6","typeDescriptions":{}}},"id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9716:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1583,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"9728:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1578,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"9707:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9707:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1585,"nodeType":"ExpressionStatement","src":"9707:29:6"},{"expression":{"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1586,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"9747:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1588,"indexExpression":{"id":1587,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"9757:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9747:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9767:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9747:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1591,"nodeType":"ExpressionStatement","src":"9747:21:6"},{"expression":{"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9778:23:6","subExpression":{"baseExpression":{"id":1592,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"9785:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1594,"indexExpression":{"id":1593,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"9793:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9785:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1596,"nodeType":"ExpressionStatement","src":"9778:23:6"},{"eventCall":{"arguments":[{"id":1598,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"9826:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9841:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9833:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"9833:7:6","typeDescriptions":{}}},"id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9833:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1603,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"9845:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1597,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"9817:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9817:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1605,"nodeType":"EmitStatement","src":"9812:41:6"},{"expression":{"arguments":[{"id":1607,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"9884:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9899:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9891:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"9891:7:6","typeDescriptions":{}}},"id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9891:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1612,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"9903:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1606,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"9864:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9864:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1614,"nodeType":"ExpressionStatement","src":"9864:47:6"}]},"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"9301:206:6","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1616,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9521:5:6","nodeType":"FunctionDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"tokenId","nameLocation":"9535:7:6","nodeType":"VariableDeclaration","scope":1616,"src":"9527:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"9527:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9526:17:6"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[],"src":"9561:0:6"},"scope":1846,"src":"9512:406:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1690,"nodeType":"Block","src":"10351:496:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1629,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"10384:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1627,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"10369:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1846_$","typeString":"type(contract ERC721)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1125,"src":"10369:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10369:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1631,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"10396:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10369:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10402:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1626,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10361:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10361:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1635,"nodeType":"ExpressionStatement","src":"10361:81:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1637,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"10460:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10474:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10466:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"10466:7:6","typeDescriptions":{}}},"id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10466:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10460:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10478:38:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":1636,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10452:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10452:65:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1645,"nodeType":"ExpressionStatement","src":"10452:65:6"},{"expression":{"arguments":[{"id":1647,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"10549:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1648,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"10555:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1649,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"10559:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1646,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"10528:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10528:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1651,"nodeType":"ExpressionStatement","src":"10528:39:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10646:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10638:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1653,"name":"address","nodeType":"ElementaryTypeName","src":"10638:7:6","typeDescriptions":{}}},"id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10638:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1657,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"10650:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1652,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"10629:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10629:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1659,"nodeType":"ExpressionStatement","src":"10629:29:6"},{"expression":{"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1660,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"10669:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1662,"indexExpression":{"id":1661,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"10679:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10669:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10688:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10669:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1665,"nodeType":"ExpressionStatement","src":"10669:20:6"},{"expression":{"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1666,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"10699:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1668,"indexExpression":{"id":1667,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"10709:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10699:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10716:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10699:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1671,"nodeType":"ExpressionStatement","src":"10699:18:6"},{"expression":{"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1672,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"10727:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1674,"indexExpression":{"id":1673,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"10735:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10727:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1675,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"10746:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10727:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1677,"nodeType":"ExpressionStatement","src":"10727:21:6"},{"eventCall":{"arguments":[{"id":1679,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"10773:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1680,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"10779:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1681,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"10783:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1678,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"10764:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10764:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1683,"nodeType":"EmitStatement","src":"10759:32:6"},{"expression":{"arguments":[{"id":1685,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"10822:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1686,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"10828:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1687,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"10832:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1684,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"10802:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10802:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1689,"nodeType":"ExpressionStatement","src":"10802:38:6"}]},"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"9924:313:6","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1691,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"10251:9:6","nodeType":"FunctionDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"from","nameLocation":"10278:4:6","nodeType":"VariableDeclaration","scope":1691,"src":"10270:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1618,"name":"address","nodeType":"ElementaryTypeName","src":"10270:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1621,"mutability":"mutable","name":"to","nameLocation":"10300:2:6","nodeType":"VariableDeclaration","scope":1691,"src":"10292:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1620,"name":"address","nodeType":"ElementaryTypeName","src":"10292:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1623,"mutability":"mutable","name":"tokenId","nameLocation":"10320:7:6","nodeType":"VariableDeclaration","scope":1691,"src":"10312:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"10312:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10260:73:6"},"returnParameters":{"id":1625,"nodeType":"ParameterList","parameters":[],"src":"10351:0:6"},"scope":1846,"src":"10242:605:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1714,"nodeType":"Block","src":"11023:107:6","statements":[{"expression":{"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1699,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"11033:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1701,"indexExpression":{"id":1700,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"11049:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11033:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1702,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"11060:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11033:29:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1704,"nodeType":"ExpressionStatement","src":"11033:29:6"},{"eventCall":{"arguments":[{"arguments":[{"id":1708,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"11101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1706,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"11086:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1846_$","typeString":"type(contract ERC721)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1125,"src":"11086:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11086:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1710,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"11111:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1711,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"11115:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1705,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"11077:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11077:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1713,"nodeType":"EmitStatement","src":"11072:51:6"}]},"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"10853:101:6","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":1715,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10968:8:6","nodeType":"FunctionDefinition","parameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"to","nameLocation":"10985:2:6","nodeType":"VariableDeclaration","scope":1715,"src":"10977:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1693,"name":"address","nodeType":"ElementaryTypeName","src":"10977:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"tokenId","nameLocation":"10997:7:6","nodeType":"VariableDeclaration","scope":1715,"src":"10989:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"10989:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10976:29:6"},"returnParameters":{"id":1698,"nodeType":"ParameterList","parameters":[],"src":"11023:0:6"},"scope":1846,"src":"10959:171:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1746,"nodeType":"Block","src":"11389:184:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1726,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"11407:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1727,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"11416:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11407:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11426:27:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":1725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11399:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11399:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1731,"nodeType":"ExpressionStatement","src":"11399:55:6"},{"expression":{"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1732,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"11464:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1735,"indexExpression":{"id":1733,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"11483:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11464:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1736,"indexExpression":{"id":1734,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"11490:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11464:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1737,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"11502:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11464:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1739,"nodeType":"ExpressionStatement","src":"11464:46:6"},{"eventCall":{"arguments":[{"id":1741,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"11540:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1742,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"11547:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1743,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"11557:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1740,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"11525:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11525:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1745,"nodeType":"EmitStatement","src":"11520:46:6"}]},"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"11136:125:6","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1747,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"11275:18:6","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"owner","nameLocation":"11311:5:6","nodeType":"VariableDeclaration","scope":1747,"src":"11303:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1717,"name":"address","nodeType":"ElementaryTypeName","src":"11303:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"operator","nameLocation":"11334:8:6","nodeType":"VariableDeclaration","scope":1747,"src":"11326:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"11326:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"approved","nameLocation":"11357:8:6","nodeType":"VariableDeclaration","scope":1747,"src":"11352:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1721,"name":"bool","nodeType":"ElementaryTypeName","src":"11352:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11293:78:6"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[],"src":"11389:0:6"},"scope":1846,"src":"11266:307:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1760,"nodeType":"Block","src":"11720:70:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1755,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"11746:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1754,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"11738:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11738:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11756:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1753,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11730:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11730:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1759,"nodeType":"ExpressionStatement","src":"11730:53:6"}]},"documentation":{"id":1748,"nodeType":"StructuredDocumentation","src":"11579:73:6","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":1761,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"11666:14:6","nodeType":"FunctionDefinition","parameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"tokenId","nameLocation":"11689:7:6","nodeType":"VariableDeclaration","scope":1761,"src":"11681:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"11681:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11680:17:6"},"returnParameters":{"id":1752,"nodeType":"ParameterList","parameters":[],"src":"11720:0:6"},"scope":1846,"src":"11657:133:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1822,"nodeType":"Block","src":"12497:676:6","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1775,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"12511:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2150,"src":"12511:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12511:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1820,"nodeType":"Block","src":"13131:36:6","statements":[{"expression":{"hexValue":"74727565","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13152:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1774,"id":1819,"nodeType":"Return","src":"13145:11:6"}]},"id":1821,"nodeType":"IfStatement","src":"12507:660:6","trueBody":{"id":1817,"nodeType":"Block","src":"12528:597:6","statements":[{"clauses":[{"block":{"id":1797,"nodeType":"Block","src":"12642:91:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1791,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"12667:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1792,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"12677:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1980_$","typeString":"type(contract IERC721Receiver)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1979,"src":"12677:32:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"12677:41:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"12667:51:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1774,"id":1796,"nodeType":"Return","src":"12660:58:6"}]},"errorName":"","id":1798,"nodeType":"TryCatchClause","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"retval","nameLocation":"12634:6:6","nodeType":"VariableDeclaration","scope":1798,"src":"12627:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1788,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12627:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"12626:15:6"},"src":"12618:115:6"},{"block":{"id":1814,"nodeType":"Block","src":"12762:353:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1802,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"12784:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12784:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12801:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12784:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1812,"nodeType":"Block","src":"12911:190:6","statements":[{"AST":{"nodeType":"YulBlock","src":"12997:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13034:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"13038:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13030:3:6"},"nodeType":"YulFunctionCall","src":"13030:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"13053:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13047:5:6"},"nodeType":"YulFunctionCall","src":"13047:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13023:6:6"},"nodeType":"YulFunctionCall","src":"13023:38:6"},"nodeType":"YulExpressionStatement","src":"13023:38:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1800,"isOffset":false,"isSlot":false,"src":"13038:6:6","valueSize":1},{"declaration":1800,"isOffset":false,"isSlot":false,"src":"13053:6:6","valueSize":1}],"id":1811,"nodeType":"InlineAssembly","src":"12988:95:6"}]},"id":1813,"nodeType":"IfStatement","src":"12780:321:6","trueBody":{"id":1810,"nodeType":"Block","src":"12804:101:6","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12833:52:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1806,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"12826:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12826:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1809,"nodeType":"ExpressionStatement","src":"12826:60:6"}]}}]},"errorName":"","id":1815,"nodeType":"TryCatchClause","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"reason","nameLocation":"12754:6:6","nodeType":"VariableDeclaration","scope":1815,"src":"12741:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1799,"name":"bytes","nodeType":"ElementaryTypeName","src":"12741:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12740:21:6"},"src":"12734:381:6"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1782,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"12583:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12583:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1784,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"12597:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1785,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"12603:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1786,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"12612:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1779,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"12562:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1778,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"12546:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1980_$","typeString":"type(contract IERC721Receiver)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12546:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1980","typeString":"contract IERC721Receiver"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1979,"src":"12546:36:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12546:71:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1816,"nodeType":"TryStatement","src":"12542:573:6"}]}}]},"documentation":{"id":1762,"nodeType":"StructuredDocumentation","src":"11796:541:6","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":1823,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"12351:22:6","nodeType":"FunctionDefinition","parameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"from","nameLocation":"12391:4:6","nodeType":"VariableDeclaration","scope":1823,"src":"12383:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"12383:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"to","nameLocation":"12413:2:6","nodeType":"VariableDeclaration","scope":1823,"src":"12405:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"12405:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1768,"mutability":"mutable","name":"tokenId","nameLocation":"12433:7:6","nodeType":"VariableDeclaration","scope":1823,"src":"12425:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"12425:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1770,"mutability":"mutable","name":"data","nameLocation":"12463:4:6","nodeType":"VariableDeclaration","scope":1823,"src":"12450:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1769,"name":"bytes","nodeType":"ElementaryTypeName","src":"12450:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12373:100:6"},"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1823,"src":"12491:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1772,"name":"bool","nodeType":"ElementaryTypeName","src":"12491:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12490:6:6"},"scope":1846,"src":"12342:831:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1833,"nodeType":"Block","src":"13849:2:6","statements":[]},"documentation":{"id":1824,"nodeType":"StructuredDocumentation","src":"13179:545:6","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1834,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"13738:20:6","nodeType":"FunctionDefinition","parameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"from","nameLocation":"13776:4:6","nodeType":"VariableDeclaration","scope":1834,"src":"13768:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"13768:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1828,"mutability":"mutable","name":"to","nameLocation":"13798:2:6","nodeType":"VariableDeclaration","scope":1834,"src":"13790:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"13790:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"tokenId","nameLocation":"13818:7:6","nodeType":"VariableDeclaration","scope":1834,"src":"13810:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"13810:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:73:6"},"returnParameters":{"id":1832,"nodeType":"ParameterList","parameters":[],"src":"13849:0:6"},"scope":1846,"src":"13729:122:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1844,"nodeType":"Block","src":"14342:2:6","statements":[]},"documentation":{"id":1835,"nodeType":"StructuredDocumentation","src":"13857:361:6","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1845,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"14232:19:6","nodeType":"FunctionDefinition","parameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"from","nameLocation":"14269:4:6","nodeType":"VariableDeclaration","scope":1845,"src":"14261:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1836,"name":"address","nodeType":"ElementaryTypeName","src":"14261:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1839,"mutability":"mutable","name":"to","nameLocation":"14291:2:6","nodeType":"VariableDeclaration","scope":1845,"src":"14283:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1838,"name":"address","nodeType":"ElementaryTypeName","src":"14283:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1841,"mutability":"mutable","name":"tokenId","nameLocation":"14311:7:6","nodeType":"VariableDeclaration","scope":1845,"src":"14303:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"14303:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14251:73:6"},"returnParameters":{"id":1843,"nodeType":"ParameterList","parameters":[],"src":"14342:0:6"},"scope":1846,"src":"14223:121:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1847,"src":"628:13718:6","usedErrors":[]}],"src":"107:14240:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2711],"IERC721":[1962]},"id":1963,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1848,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1849,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1963,"sourceUnit":2712,"src":"133:47:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1851,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2711,"src":"271:7:7"},"id":1852,"nodeType":"InheritanceSpecifier","src":"271:7:7"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"182:67:7","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1962,"linearizedBaseContracts":[1962,2711],"name":"IERC721","nameLocation":"260:7:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"285:88:7","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":1861,"name":"Transfer","nameLocation":"384:8:7","nodeType":"EventDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:7","nodeType":"VariableDeclaration","scope":1861,"src":"393:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1857,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:7","nodeType":"VariableDeclaration","scope":1861,"src":"415:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1859,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:7","nodeType":"VariableDeclaration","scope":1861,"src":"435:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:7"},"src":"378:82:7"},{"anonymous":false,"documentation":{"id":1862,"nodeType":"StructuredDocumentation","src":"466:94:7","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":1870,"name":"Approval","nameLocation":"571:8:7","nodeType":"EventDefinition","parameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1864,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:7","nodeType":"VariableDeclaration","scope":1870,"src":"580:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1863,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1866,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:7","nodeType":"VariableDeclaration","scope":1870,"src":"603:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1865,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1868,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:7","nodeType":"VariableDeclaration","scope":1870,"src":"629:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:7"},"src":"565:89:7"},{"anonymous":false,"documentation":{"id":1871,"nodeType":"StructuredDocumentation","src":"660:117:7","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":1879,"name":"ApprovalForAll","nameLocation":"788:14:7","nodeType":"EventDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:7","nodeType":"VariableDeclaration","scope":1879,"src":"803:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1875,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:7","nodeType":"VariableDeclaration","scope":1879,"src":"826:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1877,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:7","nodeType":"VariableDeclaration","scope":1879,"src":"852:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1876,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:7"},"src":"782:85:7"},{"documentation":{"id":1880,"nodeType":"StructuredDocumentation","src":"873:76:7","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1887,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:7","nodeType":"FunctionDefinition","parameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"owner","nameLocation":"981:5:7","nodeType":"VariableDeclaration","scope":1887,"src":"973:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1881,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:7"},"returnParameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"balance","nameLocation":"1019:7:7","nodeType":"VariableDeclaration","scope":1887,"src":"1011:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1884,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:7"},"scope":1962,"src":"954:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1888,"nodeType":"StructuredDocumentation","src":"1034:131:7","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1895,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:7","nodeType":"FunctionDefinition","parameters":{"id":1891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:7","nodeType":"VariableDeclaration","scope":1895,"src":"1187:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:7"},"returnParameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"owner","nameLocation":"1235:5:7","nodeType":"VariableDeclaration","scope":1895,"src":"1227:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1892,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:7"},"scope":1962,"src":"1170:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1896,"nodeType":"StructuredDocumentation","src":"1248:556:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1907,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:7","nodeType":"FunctionDefinition","parameters":{"id":1905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"from","nameLocation":"1852:4:7","nodeType":"VariableDeclaration","scope":1907,"src":"1844:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1897,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"to","nameLocation":"1874:2:7","nodeType":"VariableDeclaration","scope":1907,"src":"1866:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1899,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:7","nodeType":"VariableDeclaration","scope":1907,"src":"1886:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1901,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1904,"mutability":"mutable","name":"data","nameLocation":"1926:4:7","nodeType":"VariableDeclaration","scope":1907,"src":"1911:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1903,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:7"},"returnParameters":{"id":1906,"nodeType":"ParameterList","parameters":[],"src":"1945:0:7"},"scope":1962,"src":"1809:137:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1908,"nodeType":"StructuredDocumentation","src":"1952:687:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1917,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:7","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"from","nameLocation":"2687:4:7","nodeType":"VariableDeclaration","scope":1917,"src":"2679:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1909,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1912,"mutability":"mutable","name":"to","nameLocation":"2709:2:7","nodeType":"VariableDeclaration","scope":1917,"src":"2701:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1911,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:7","nodeType":"VariableDeclaration","scope":1917,"src":"2721:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:7"},"returnParameters":{"id":1916,"nodeType":"ParameterList","parameters":[],"src":"2751:0:7"},"scope":1962,"src":"2644:108:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1918,"nodeType":"StructuredDocumentation","src":"2758:504:7","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1927,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3276:12:7","nodeType":"FunctionDefinition","parameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"from","nameLocation":"3306:4:7","nodeType":"VariableDeclaration","scope":1927,"src":"3298:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1919,"name":"address","nodeType":"ElementaryTypeName","src":"3298:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1922,"mutability":"mutable","name":"to","nameLocation":"3328:2:7","nodeType":"VariableDeclaration","scope":1927,"src":"3320:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1921,"name":"address","nodeType":"ElementaryTypeName","src":"3320:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1924,"mutability":"mutable","name":"tokenId","nameLocation":"3348:7:7","nodeType":"VariableDeclaration","scope":1927,"src":"3340:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3288:73:7"},"returnParameters":{"id":1926,"nodeType":"ParameterList","parameters":[],"src":"3370:0:7"},"scope":1962,"src":"3267:104:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"3377:452:7","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1935,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3843:7:7","nodeType":"FunctionDefinition","parameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"to","nameLocation":"3859:2:7","nodeType":"VariableDeclaration","scope":1935,"src":"3851:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"3851:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"tokenId","nameLocation":"3871:7:7","nodeType":"VariableDeclaration","scope":1935,"src":"3863:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1931,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3850:29:7"},"returnParameters":{"id":1934,"nodeType":"ParameterList","parameters":[],"src":"3888:0:7"},"scope":1962,"src":"3834:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1936,"nodeType":"StructuredDocumentation","src":"3895:309:7","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1943,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4218:17:7","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"operator","nameLocation":"4244:8:7","nodeType":"VariableDeclaration","scope":1943,"src":"4236:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1937,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1940,"mutability":"mutable","name":"_approved","nameLocation":"4259:9:7","nodeType":"VariableDeclaration","scope":1943,"src":"4254:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1939,"name":"bool","nodeType":"ElementaryTypeName","src":"4254:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:34:7"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[],"src":"4278:0:7"},"scope":1962,"src":"4209:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1944,"nodeType":"StructuredDocumentation","src":"4285:139:7","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1951,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4438:11:7","nodeType":"FunctionDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"tokenId","nameLocation":"4458:7:7","nodeType":"VariableDeclaration","scope":1951,"src":"4450:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"4450:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:17:7"},"returnParameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"operator","nameLocation":"4498:8:7","nodeType":"VariableDeclaration","scope":1951,"src":"4490:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4489:18:7"},"scope":1962,"src":"4429:79:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1952,"nodeType":"StructuredDocumentation","src":"4514:138:7","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1961,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4666:16:7","nodeType":"FunctionDefinition","parameters":{"id":1957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"mutability":"mutable","name":"owner","nameLocation":"4691:5:7","nodeType":"VariableDeclaration","scope":1961,"src":"4683:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1953,"name":"address","nodeType":"ElementaryTypeName","src":"4683:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1956,"mutability":"mutable","name":"operator","nameLocation":"4706:8:7","nodeType":"VariableDeclaration","scope":1961,"src":"4698:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1955,"name":"address","nodeType":"ElementaryTypeName","src":"4698:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4682:33:7"},"returnParameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1961,"src":"4739:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1958,"name":"bool","nodeType":"ElementaryTypeName","src":"4739:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4738:6:7"},"scope":1962,"src":"4657:88:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1963,"src":"250:4497:7","usedErrors":[]}],"src":"108:4640:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1980]},"id":1981,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1964,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1965,"nodeType":"StructuredDocumentation","src":"141:152:8","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1980,"linearizedBaseContracts":[1980],"name":"IERC721Receiver","nameLocation":"304:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"326:493:8","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1979,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:8","nodeType":"FunctionDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1968,"mutability":"mutable","name":"operator","nameLocation":"867:8:8","nodeType":"VariableDeclaration","scope":1979,"src":"859:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1967,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"from","nameLocation":"893:4:8","nodeType":"VariableDeclaration","scope":1979,"src":"885:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1969,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:8","nodeType":"VariableDeclaration","scope":1979,"src":"907:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1974,"mutability":"mutable","name":"data","nameLocation":"947:4:8","nodeType":"VariableDeclaration","scope":1979,"src":"932:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1973,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:8"},"returnParameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1979,"src":"976:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1976,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:8"},"scope":1980,"src":"824:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1981,"src":"294:692:8","usedErrors":[]}],"src":"116:871:8"},"id":8},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[2427],"Context":[2449],"ERC165":[2699],"ERC721":[1846],"ERC721URIStorage":[2105],"IERC165":[2711],"IERC721":[1962],"IERC721Metadata":[2132],"IERC721Receiver":[1980],"Strings":[2675]},"id":2106,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1982,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1983,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2106,"sourceUnit":1847,"src":"153:23:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1985,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1846,"src":"286:6:9"},"id":1986,"nodeType":"InheritanceSpecifier","src":"286:6:9"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1984,"nodeType":"StructuredDocumentation","src":"178:69:9","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":false,"id":2105,"linearizedBaseContracts":[2105,1846,2132,1962,2699,2711,2449],"name":"ERC721URIStorage","nameLocation":"266:16:9","nodeType":"ContractDefinition","nodes":[{"id":1989,"libraryName":{"id":1987,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2675,"src":"305:7:9"},"nodeType":"UsingForDirective","src":"299:26:9","typeName":{"id":1988,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1993,"mutability":"mutable","name":"_tokenURIs","nameLocation":"405:10:9","nodeType":"VariableDeclaration","scope":2105,"src":"370:45:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1992,"keyType":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"370:26:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":1991,"name":"string","nodeType":"ElementaryTypeName","src":"389:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[1184],"body":{"id":2051,"nodeType":"Block","src":"570:520:9","statements":[{"expression":{"arguments":[{"id":2003,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"595:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2002,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"580:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"580:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2005,"nodeType":"ExpressionStatement","src":"580:23:9"},{"assignments":[2007],"declarations":[{"constant":false,"id":2007,"mutability":"mutable","name":"_tokenURI","nameLocation":"628:9:9","nodeType":"VariableDeclaration","scope":2051,"src":"614:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2006,"name":"string","nodeType":"ElementaryTypeName","src":"614:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2011,"initialValue":{"baseExpression":{"id":2008,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"640:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2010,"indexExpression":{"id":2009,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"651:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"640:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"614:45:9"},{"assignments":[2013],"declarations":[{"constant":false,"id":2013,"mutability":"mutable","name":"base","nameLocation":"683:4:9","nodeType":"VariableDeclaration","scope":2051,"src":"669:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2012,"name":"string","nodeType":"ElementaryTypeName","src":"669:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2016,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2014,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"690:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"690:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"669:31:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2019,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"779:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"773:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2017,"name":"bytes","nodeType":"ElementaryTypeName","src":"773:5:9","typeDescriptions":{}}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"773:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"773:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"795:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"773:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2027,"nodeType":"IfStatement","src":"769:70:9","trueBody":{"id":2026,"nodeType":"Block","src":"798:41:9","statements":[{"expression":{"id":2024,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"819:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2001,"id":2025,"nodeType":"Return","src":"812:16:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2030,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"947:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"941:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2028,"name":"bytes","nodeType":"ElementaryTypeName","src":"941:5:9","typeDescriptions":{}}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"941:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"941:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"967:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"941:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2045,"nodeType":"IfStatement","src":"937:106:9","trueBody":{"id":2044,"nodeType":"Block","src":"970:73:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2039,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"1015:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2040,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"1021:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2037,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"998:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"998:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"998:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"991:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2035,"name":"string","nodeType":"ElementaryTypeName","src":"991:6:9","typeDescriptions":{}}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"991:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2001,"id":2043,"nodeType":"Return","src":"984:48:9"}]}},{"expression":{"arguments":[{"id":2048,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"1075:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2046,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1060:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2105_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"1060:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1060:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2001,"id":2050,"nodeType":"Return","src":"1053:30:9"}]},"documentation":{"id":1994,"nodeType":"StructuredDocumentation","src":"422:55:9","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2052,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"491:8:9","nodeType":"FunctionDefinition","overrides":{"id":1998,"nodeType":"OverrideSpecifier","overrides":[],"src":"537:8:9"},"parameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"tokenId","nameLocation":"508:7:9","nodeType":"VariableDeclaration","scope":2052,"src":"500:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"500:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"499:17:9"},"returnParameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2052,"src":"555:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1999,"name":"string","nodeType":"ElementaryTypeName","src":"555:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"554:15:9"},"scope":2105,"src":"482:608:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2073,"nodeType":"Block","src":"1318:133:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2062,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"1344:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2061,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"1336:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1336:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1354:48:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":2060,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1328:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1328:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2066,"nodeType":"ExpressionStatement","src":"1328:75:9"},{"expression":{"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2067,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"1413:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2069,"indexExpression":{"id":2068,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"1424:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1413:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2070,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"1435:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1413:31:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2072,"nodeType":"ExpressionStatement","src":"1413:31:9"}]},"documentation":{"id":2053,"nodeType":"StructuredDocumentation","src":"1096:136:9","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":2074,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1246:12:9","nodeType":"FunctionDefinition","parameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"tokenId","nameLocation":"1267:7:9","nodeType":"VariableDeclaration","scope":2074,"src":"1259:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2054,"name":"uint256","nodeType":"ElementaryTypeName","src":"1259:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2057,"mutability":"mutable","name":"_tokenURI","nameLocation":"1290:9:9","nodeType":"VariableDeclaration","scope":2074,"src":"1276:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2056,"name":"string","nodeType":"ElementaryTypeName","src":"1276:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:42:9"},"returnParameters":{"id":2059,"nodeType":"ParameterList","parameters":[],"src":"1318:0:9"},"scope":2105,"src":"1237:214:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1616],"body":{"id":2103,"nodeType":"Block","src":"1727:142:9","statements":[{"expression":{"arguments":[{"id":2084,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"1749:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2081,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1737:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2105_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"1737:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1737:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2086,"nodeType":"ExpressionStatement","src":"1737:20:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":2089,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"1778:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2091,"indexExpression":{"id":2090,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"1789:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1778:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1772:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2087,"name":"bytes","nodeType":"ElementaryTypeName","src":"1772:5:9","typeDescriptions":{}}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1772:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1772:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1809:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1772:38:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2102,"nodeType":"IfStatement","src":"1768:95:9","trueBody":{"id":2101,"nodeType":"Block","src":"1812:51:9","statements":[{"expression":{"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1826:26:9","subExpression":{"baseExpression":{"id":2096,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"1833:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2098,"indexExpression":{"id":2097,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"1844:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1833:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2100,"nodeType":"ExpressionStatement","src":"1826:26:9"}]}}]},"documentation":{"id":2075,"nodeType":"StructuredDocumentation","src":"1457:207:9","text":" @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."},"id":2104,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1678:5:9","nodeType":"FunctionDefinition","overrides":{"id":2079,"nodeType":"OverrideSpecifier","overrides":[],"src":"1718:8:9"},"parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"tokenId","nameLocation":"1692:7:9","nodeType":"VariableDeclaration","scope":2104,"src":"1684:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1683:17:9"},"returnParameters":{"id":2080,"nodeType":"ParameterList","parameters":[],"src":"1727:0:9"},"scope":2105,"src":"1669:200:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2106,"src":"248:1623:9","usedErrors":[]}],"src":"128:1744:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2711],"IERC721":[1962],"IERC721Metadata":[2132]},"id":2133,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2107,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2108,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2133,"sourceUnit":1963,"src":"137:24:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2110,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1962,"src":"326:7:10"},"id":2111,"nodeType":"InheritanceSpecifier","src":"326:7:10"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2109,"nodeType":"StructuredDocumentation","src":"163:133:10","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2132,"linearizedBaseContracts":[2132,1962,2711],"name":"IERC721Metadata","nameLocation":"307:15:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2112,"nodeType":"StructuredDocumentation","src":"340:58:10","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2117,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:10","nodeType":"FunctionDefinition","parameters":{"id":2113,"nodeType":"ParameterList","parameters":[],"src":"416:2:10"},"returnParameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2117,"src":"442:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2114,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:10"},"scope":2132,"src":"403:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"463:60:10","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2123,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:10","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[],"src":"543:2:10"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2123,"src":"569:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2120,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:10"},"scope":2132,"src":"528:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"590:90:10","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2131,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:10","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:10","nodeType":"VariableDeclaration","scope":2131,"src":"703:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2125,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:10"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2131,"src":"743:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2128,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:10"},"scope":2132,"src":"685:73:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2133,"src":"297:463:10","usedErrors":[]}],"src":"112:649:10"},"id":10},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2427]},"id":2428,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2134,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2135,"nodeType":"StructuredDocumentation","src":"126:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2427,"linearizedBaseContracts":[2427],"name":"Address","nameLocation":"202:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2149,"nodeType":"Block","src":"1241:254:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"1465:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2142,"id":2148,"nodeType":"Return","src":"1458:30:11"}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"216:954:11","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2150,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:11","nodeType":"FunctionDefinition","parameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"account","nameLocation":"1203:7:11","nodeType":"VariableDeclaration","scope":2150,"src":"1195:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2137,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:11"},"returnParameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2150,"src":"1235:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2140,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:11"},"scope":2427,"src":"1175:320:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2183,"nodeType":"Block","src":"2483:241:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2161,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2427","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2427","typeString":"library Address"}],"id":2160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2159,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:11","typeDescriptions":{}}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2164,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"2526:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2158,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2168,"nodeType":"ExpressionStatement","src":"2493:73:11"},{"assignments":[2170,null],"declarations":[{"constant":false,"id":2170,"mutability":"mutable","name":"success","nameLocation":"2583:7:11","nodeType":"VariableDeclaration","scope":2183,"src":"2578:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2169,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2177,"initialValue":{"arguments":[{"hexValue":"","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2171,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"2596:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2173,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"2618:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:11"},{"expression":{"arguments":[{"id":2179,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"2647:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2182,"nodeType":"ExpressionStatement","src":"2639:78:11"}]},"documentation":{"id":2151,"nodeType":"StructuredDocumentation","src":"1501:906:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2184,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:11","nodeType":"FunctionDefinition","parameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:11","nodeType":"VariableDeclaration","scope":2184,"src":"2431:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2152,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2155,"mutability":"mutable","name":"amount","nameLocation":"2466:6:11","nodeType":"VariableDeclaration","scope":2184,"src":"2458:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:11"},"returnParameters":{"id":2157,"nodeType":"ParameterList","parameters":[],"src":"2483:0:11"},"scope":2427,"src":"2412:312:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2200,"nodeType":"Block","src":"3555:84:11","statements":[{"expression":{"arguments":[{"id":2195,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"3585:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2196,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"3593:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2194,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[2201,2221],"referencedDeclaration":2221,"src":"3572:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2193,"id":2199,"nodeType":"Return","src":"3565:67:11"}]},"documentation":{"id":2185,"nodeType":"StructuredDocumentation","src":"2730:731:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2201,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:11","nodeType":"FunctionDefinition","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2187,"mutability":"mutable","name":"target","nameLocation":"3496:6:11","nodeType":"VariableDeclaration","scope":2201,"src":"3488:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2186,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2189,"mutability":"mutable","name":"data","nameLocation":"3517:4:11","nodeType":"VariableDeclaration","scope":2201,"src":"3504:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2188,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:11"},"returnParameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2201,"src":"3541:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2191,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:11"},"scope":2427,"src":"3466:173:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2220,"nodeType":"Block","src":"4008:76:11","statements":[{"expression":{"arguments":[{"id":2214,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"4047:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2215,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"4055:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2217,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"4064:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2213,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2241,2291],"referencedDeclaration":2291,"src":"4025:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4025:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2212,"id":2219,"nodeType":"Return","src":"4018:59:11"}]},"documentation":{"id":2202,"nodeType":"StructuredDocumentation","src":"3645:211:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2221,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:11","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"target","nameLocation":"3900:6:11","nodeType":"VariableDeclaration","scope":2221,"src":"3892:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2203,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2206,"mutability":"mutable","name":"data","nameLocation":"3929:4:11","nodeType":"VariableDeclaration","scope":2221,"src":"3916:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2205,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2208,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:11","nodeType":"VariableDeclaration","scope":2221,"src":"3943:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2207,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:11"},"returnParameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2221,"src":"3994:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2210,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:11"},"scope":2427,"src":"3861:223:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2240,"nodeType":"Block","src":"4589:111:11","statements":[{"expression":{"arguments":[{"id":2234,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"4628:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2235,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"4636:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"4642:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2233,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2241,2291],"referencedDeclaration":2291,"src":"4606:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2232,"id":2239,"nodeType":"Return","src":"4599:94:11"}]},"documentation":{"id":2222,"nodeType":"StructuredDocumentation","src":"4090:351:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2241,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:11","nodeType":"FunctionDefinition","parameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"target","nameLocation":"4494:6:11","nodeType":"VariableDeclaration","scope":2241,"src":"4486:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2223,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2226,"mutability":"mutable","name":"data","nameLocation":"4523:4:11","nodeType":"VariableDeclaration","scope":2241,"src":"4510:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2225,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2228,"mutability":"mutable","name":"value","nameLocation":"4545:5:11","nodeType":"VariableDeclaration","scope":2241,"src":"4537:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:11"},"returnParameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2241,"src":"4575:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2230,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:11"},"scope":2427,"src":"4446:254:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2290,"nodeType":"Block","src":"5127:320:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2258,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2427","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2427","typeString":"library Address"}],"id":2257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:11","typeDescriptions":{}}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5145:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"5170:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2255,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2265,"nodeType":"ExpressionStatement","src":"5137:81:11"},{"expression":{"arguments":[{"arguments":[{"id":2268,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"5247:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2267,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"5236:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2266,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5228:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2272,"nodeType":"ExpressionStatement","src":"5228:60:11"},{"assignments":[2274,2276],"declarations":[{"constant":false,"id":2274,"mutability":"mutable","name":"success","nameLocation":"5305:7:11","nodeType":"VariableDeclaration","scope":2290,"src":"5300:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2273,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2276,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:11","nodeType":"VariableDeclaration","scope":2290,"src":"5314:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2275,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2283,"initialValue":{"arguments":[{"id":2281,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"5367:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2277,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"5341:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5341:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"5360:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:11"},{"expression":{"arguments":[{"id":2285,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"5406:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2286,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"5415:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2287,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"5427:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2284,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"5389:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2254,"id":2289,"nodeType":"Return","src":"5382:58:11"}]},"documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"4706:237:11","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2291,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:11","nodeType":"FunctionDefinition","parameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"target","nameLocation":"4996:6:11","nodeType":"VariableDeclaration","scope":2291,"src":"4988:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2243,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2246,"mutability":"mutable","name":"data","nameLocation":"5025:4:11","nodeType":"VariableDeclaration","scope":2291,"src":"5012:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2245,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2248,"mutability":"mutable","name":"value","nameLocation":"5047:5:11","nodeType":"VariableDeclaration","scope":2291,"src":"5039:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:11","nodeType":"VariableDeclaration","scope":2291,"src":"5062:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2249,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:11"},"returnParameters":{"id":2254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2291,"src":"5113:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2252,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:11"},"scope":2427,"src":"4948:499:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2307,"nodeType":"Block","src":"5724:97:11","statements":[{"expression":{"arguments":[{"id":2302,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"5760:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2303,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"5768:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2301,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2308,2343],"referencedDeclaration":2343,"src":"5741:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5741:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2300,"id":2306,"nodeType":"Return","src":"5734:80:11"}]},"documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"5453:166:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2308,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:11","nodeType":"FunctionDefinition","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"target","nameLocation":"5660:6:11","nodeType":"VariableDeclaration","scope":2308,"src":"5652:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"data","nameLocation":"5681:4:11","nodeType":"VariableDeclaration","scope":2308,"src":"5668:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2295,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:11"},"returnParameters":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2308,"src":"5710:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2298,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:11"},"scope":2427,"src":"5624:197:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2342,"nodeType":"Block","src":"6163:228:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2322,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"6192:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2321,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"6181:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":2320,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2326,"nodeType":"ExpressionStatement","src":"6173:67:11"},{"assignments":[2328,2330],"declarations":[{"constant":false,"id":2328,"mutability":"mutable","name":"success","nameLocation":"6257:7:11","nodeType":"VariableDeclaration","scope":2342,"src":"6252:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2327,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2330,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:11","nodeType":"VariableDeclaration","scope":2342,"src":"6266:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2329,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2335,"initialValue":{"arguments":[{"id":2333,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"6311:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2331,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"6293:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6293:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:11"},{"expression":{"arguments":[{"id":2337,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"6350:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2338,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"6359:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2339,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"6371:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2336,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"6333:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2319,"id":2341,"nodeType":"Return","src":"6326:58:11"}]},"documentation":{"id":2309,"nodeType":"StructuredDocumentation","src":"5827:173:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2343,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:11","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"target","nameLocation":"6050:6:11","nodeType":"VariableDeclaration","scope":2343,"src":"6042:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2313,"mutability":"mutable","name":"data","nameLocation":"6079:4:11","nodeType":"VariableDeclaration","scope":2343,"src":"6066:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2312,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2315,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:11","nodeType":"VariableDeclaration","scope":2343,"src":"6093:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2314,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:11"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2343,"src":"6149:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2317,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:11"},"scope":2427,"src":"6005:386:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2359,"nodeType":"Block","src":"6667:101:11","statements":[{"expression":{"arguments":[{"id":2354,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"6705:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2355,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"6713:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2353,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2360,2395],"referencedDeclaration":2395,"src":"6684:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6684:77:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2352,"id":2358,"nodeType":"Return","src":"6677:84:11"}]},"documentation":{"id":2344,"nodeType":"StructuredDocumentation","src":"6397:168:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2360,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:11","nodeType":"FunctionDefinition","parameters":{"id":2349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"target","nameLocation":"6608:6:11","nodeType":"VariableDeclaration","scope":2360,"src":"6600:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2345,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2348,"mutability":"mutable","name":"data","nameLocation":"6629:4:11","nodeType":"VariableDeclaration","scope":2360,"src":"6616:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2347,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:11"},"returnParameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2360,"src":"6653:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2350,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:11"},"scope":2427,"src":"6570:198:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2394,"nodeType":"Block","src":"7109:232:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2374,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"7138:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2373,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"7127:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7127:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":2372,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2378,"nodeType":"ExpressionStatement","src":"7119:69:11"},{"assignments":[2380,2382],"declarations":[{"constant":false,"id":2380,"mutability":"mutable","name":"success","nameLocation":"7205:7:11","nodeType":"VariableDeclaration","scope":2394,"src":"7200:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2379,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2382,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:11","nodeType":"VariableDeclaration","scope":2394,"src":"7214:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2381,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2387,"initialValue":{"arguments":[{"id":2385,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"7261:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2383,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"7241:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:11"},{"expression":{"arguments":[{"id":2389,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"7300:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2390,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"7309:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2391,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"7321:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2388,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"7283:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2371,"id":2393,"nodeType":"Return","src":"7276:58:11"}]},"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"6774:175:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2395,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:11","nodeType":"FunctionDefinition","parameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"target","nameLocation":"7001:6:11","nodeType":"VariableDeclaration","scope":2395,"src":"6993:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2362,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2365,"mutability":"mutable","name":"data","nameLocation":"7030:4:11","nodeType":"VariableDeclaration","scope":2395,"src":"7017:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2364,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2367,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:11","nodeType":"VariableDeclaration","scope":2395,"src":"7044:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2366,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:11"},"returnParameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2395,"src":"7095:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2369,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:11"},"scope":2427,"src":"6954:387:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2425,"nodeType":"Block","src":"7721:582:11","statements":[{"condition":{"id":2407,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"7735:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2423,"nodeType":"Block","src":"7792:505:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2411,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"7876:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7876:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2421,"nodeType":"Block","src":"8234:53:11","statements":[{"expression":{"arguments":[{"id":2418,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"8259:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2417,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:11","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8252:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2420,"nodeType":"ExpressionStatement","src":"8252:20:11"}]},"id":2422,"nodeType":"IfStatement","src":"7872:415:11","trueBody":{"id":2416,"nodeType":"Block","src":"7899:329:11","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:11","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:11"},"nodeType":"YulFunctionCall","src":"8114:17:11"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:11","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:11"},"nodeType":"YulFunctionCall","src":"8159:19:11"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:11"},"nodeType":"YulFunctionCall","src":"8152:44:11"},"nodeType":"YulExpressionStatement","src":"8152:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2400,"isOffset":false,"isSlot":false,"src":"8120:10:11","valueSize":1},{"declaration":2400,"isOffset":false,"isSlot":false,"src":"8167:10:11","valueSize":1}],"id":2415,"nodeType":"InlineAssembly","src":"8060:154:11"}]}}]},"id":2424,"nodeType":"IfStatement","src":"7731:566:11","trueBody":{"id":2410,"nodeType":"Block","src":"7744:42:11","statements":[{"expression":{"id":2408,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"7765:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2406,"id":2409,"nodeType":"Return","src":"7758:17:11"}]}}]},"documentation":{"id":2396,"nodeType":"StructuredDocumentation","src":"7347:209:11","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":2426,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:11","nodeType":"FunctionDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"success","nameLocation":"7601:7:11","nodeType":"VariableDeclaration","scope":2426,"src":"7596:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2397,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:11","nodeType":"VariableDeclaration","scope":2426,"src":"7618:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2399,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:11","nodeType":"VariableDeclaration","scope":2426,"src":"7651:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2401,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:11"},"returnParameters":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2426,"src":"7707:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2404,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:11"},"scope":2427,"src":"7561:742:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2428,"src":"194:8111:11","usedErrors":[]}],"src":"101:8205:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2449]},"id":2450,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2429,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:12"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"111:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2449,"linearizedBaseContracts":[2449],"name":"Context","nameLocation":"626:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2438,"nodeType":"Block","src":"702:34:12","statements":[{"expression":{"expression":{"id":2435,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2434,"id":2437,"nodeType":"Return","src":"712:17:12"}]},"id":2439,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:12","nodeType":"FunctionDefinition","parameters":{"id":2431,"nodeType":"ParameterList","parameters":[],"src":"659:2:12"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2439,"src":"693:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2432,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:12"},"scope":2449,"src":"640:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2447,"nodeType":"Block","src":"809:32:12","statements":[{"expression":{"expression":{"id":2444,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2443,"id":2446,"nodeType":"Return","src":"819:15:12"}]},"id":2448,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:12","nodeType":"FunctionDefinition","parameters":{"id":2440,"nodeType":"ParameterList","parameters":[],"src":"759:2:12"},"returnParameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2448,"src":"793:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2441,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:12"},"scope":2449,"src":"742:99:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2450,"src":"608:235:12","usedErrors":[]}],"src":"86:758:12"},"id":12},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[2675]},"id":2676,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2451,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2452,"nodeType":"StructuredDocumentation","src":"126:34:13","text":" @dev String operations."},"fullyImplemented":true,"id":2675,"linearizedBaseContracts":[2675],"name":"Strings","nameLocation":"169:7:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2455,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"208:12:13","nodeType":"VariableDeclaration","scope":2675,"src":"183:58:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2453,"name":"bytes16","nodeType":"ElementaryTypeName","src":"183:7:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"223:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2458,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"270:15:13","nodeType":"VariableDeclaration","scope":2675,"src":"247:43:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2456,"name":"uint8","nodeType":"ElementaryTypeName","src":"247:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2536,"nodeType":"Block","src":"463:632:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"665:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"665:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2472,"nodeType":"IfStatement","src":"661:51:13","trueBody":{"id":2471,"nodeType":"Block","src":"677:35:13","statements":[{"expression":{"hexValue":"30","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"698:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":2465,"id":2470,"nodeType":"Return","src":"691:10:13"}]}},{"assignments":[2474],"declarations":[{"constant":false,"id":2474,"mutability":"mutable","name":"temp","nameLocation":"729:4:13","nodeType":"VariableDeclaration","scope":2536,"src":"721:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2476,"initialValue":{"id":2475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"736:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"721:20:13"},{"assignments":[2478],"declarations":[{"constant":false,"id":2478,"mutability":"mutable","name":"digits","nameLocation":"759:6:13","nodeType":"VariableDeclaration","scope":2536,"src":"751:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2479,"nodeType":"VariableDeclarationStatement","src":"751:14:13"},{"body":{"id":2490,"nodeType":"Block","src":"793:57:13","statements":[{"expression":{"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"807:8:13","subExpression":{"id":2483,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"807:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2485,"nodeType":"ExpressionStatement","src":"807:8:13"},{"expression":{"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2486,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"829:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"829:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2489,"nodeType":"ExpressionStatement","src":"829:10:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2480,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"782:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"782:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2491,"nodeType":"WhileStatement","src":"775:75:13"},{"assignments":[2493],"declarations":[{"constant":false,"id":2493,"mutability":"mutable","name":"buffer","nameLocation":"872:6:13","nodeType":"VariableDeclaration","scope":2536,"src":"859:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2492,"name":"bytes","nodeType":"ElementaryTypeName","src":"859:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2498,"initialValue":{"arguments":[{"id":2496,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"891:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"881:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2494,"name":"bytes","nodeType":"ElementaryTypeName","src":"885:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"859:39:13"},{"body":{"id":2529,"nodeType":"Block","src":"927:131:13","statements":[{"expression":{"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2502,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"941:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"941:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2505,"nodeType":"ExpressionStatement","src":"941:11:13"},{"expression":{"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2506,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"966:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2508,"indexExpression":{"id":2507,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"973:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"966:14:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"1009:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1009:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1001:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2514,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:13","typeDescriptions":{}}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1001:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"996:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"990:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2511,"name":"uint8","nodeType":"ElementaryTypeName","src":"990:5:13","typeDescriptions":{}}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"990:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"983:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2509,"name":"bytes1","nodeType":"ElementaryTypeName","src":"983:6:13","typeDescriptions":{}}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"983:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"966:56:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2524,"nodeType":"ExpressionStatement","src":"966:56:13"},{"expression":{"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"1036:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2528,"nodeType":"ExpressionStatement","src":"1036:11:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"915:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"915:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2530,"nodeType":"WhileStatement","src":"908:150:13"},{"expression":{"arguments":[{"id":2533,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"1081:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1074:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2531,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:13","typeDescriptions":{}}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2465,"id":2535,"nodeType":"Return","src":"1067:21:13"}]},"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"297:90:13","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2537,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"401:8:13","nodeType":"FunctionDefinition","parameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"value","nameLocation":"418:5:13","nodeType":"VariableDeclaration","scope":2537,"src":"410:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2460,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:15:13"},"returnParameters":{"id":2465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"448:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2463,"name":"string","nodeType":"ElementaryTypeName","src":"448:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"447:15:13"},"scope":2675,"src":"392:703:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2577,"nodeType":"Block","src":"1274:255:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"1288:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1288:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2551,"nodeType":"IfStatement","src":"1284:54:13","trueBody":{"id":2550,"nodeType":"Block","src":"1300:38:13","statements":[{"expression":{"hexValue":"30783030","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1321:6:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":2544,"id":2549,"nodeType":"Return","src":"1314:13:13"}]}},{"assignments":[2553],"declarations":[{"constant":false,"id":2553,"mutability":"mutable","name":"temp","nameLocation":"1355:4:13","nodeType":"VariableDeclaration","scope":2577,"src":"1347:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2555,"initialValue":{"id":2554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"1362:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1347:20:13"},{"assignments":[2557],"declarations":[{"constant":false,"id":2557,"mutability":"mutable","name":"length","nameLocation":"1385:6:13","nodeType":"VariableDeclaration","scope":2577,"src":"1377:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2559,"initialValue":{"hexValue":"30","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1377:18:13"},{"body":{"id":2570,"nodeType":"Block","src":"1423:57:13","statements":[{"expression":{"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1437:8:13","subExpression":{"id":2563,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"1437:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2565,"nodeType":"ExpressionStatement","src":"1437:8:13"},{"expression":{"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2566,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"1459:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1459:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2569,"nodeType":"ExpressionStatement","src":"1459:10:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2560,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"1412:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1412:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2571,"nodeType":"WhileStatement","src":"1405:75:13"},{"expression":{"arguments":[{"id":2573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"1508:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2574,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"1515:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2572,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2578,2654,2674],"referencedDeclaration":2654,"src":"1496:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1496:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2544,"id":2576,"nodeType":"Return","src":"1489:33:13"}]},"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"1101:94:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2578,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1209:11:13","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"value","nameLocation":"1229:5:13","nodeType":"VariableDeclaration","scope":2578,"src":"1221:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:15:13"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2578,"src":"1259:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2542,"name":"string","nodeType":"ElementaryTypeName","src":"1259:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:15:13"},"scope":2675,"src":"1200:329:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2653,"nodeType":"Block","src":"1742:351:13","statements":[{"assignments":[2589],"declarations":[{"constant":false,"id":2589,"mutability":"mutable","name":"buffer","nameLocation":"1765:6:13","nodeType":"VariableDeclaration","scope":2653,"src":"1752:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2588,"name":"bytes","nodeType":"ElementaryTypeName","src":"1752:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2598,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1784:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2593,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"1788:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1784:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1784:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1774:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2590,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1774:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1752:47:13"},{"expression":{"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2599,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"1809:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2601,"indexExpression":{"hexValue":"30","id":2600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1816:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1809:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1809:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2604,"nodeType":"ExpressionStatement","src":"1809:15:13"},{"expression":{"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2605,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"1834:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2607,"indexExpression":{"hexValue":"31","id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1834:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1846:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1834:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2610,"nodeType":"ExpressionStatement","src":"1834:15:13"},{"body":{"id":2639,"nodeType":"Block","src":"1904:87:13","statements":[{"expression":{"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2625,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"1918:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2627,"indexExpression":{"id":2626,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"1925:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1918:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2628,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"1930:12:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2632,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"1943:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1943:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1930:25:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1918:37:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2634,"nodeType":"ExpressionStatement","src":"1918:37:13"},{"expression":{"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"1969:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1979:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1969:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2638,"nodeType":"ExpressionStatement","src":"1969:11:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2619,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"1892:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1892:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2640,"initializationExpression":{"assignments":[2612],"declarations":[{"constant":false,"id":2612,"mutability":"mutable","name":"i","nameLocation":"1872:1:13","nodeType":"VariableDeclaration","scope":2640,"src":"1864:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2618,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2614,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"1880:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1876:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1864:26:13"},"loopExpression":{"expression":{"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1899:3:13","subExpression":{"id":2622,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"1901:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2624,"nodeType":"ExpressionStatement","src":"1899:3:13"},"nodeType":"ForStatement","src":"1859:132:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"2008:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2017:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2008:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:34:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2641,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2000:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2000:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2647,"nodeType":"ExpressionStatement","src":"2000:55:13"},{"expression":{"arguments":[{"id":2650,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"2079:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2648,"name":"string","nodeType":"ElementaryTypeName","src":"2072:6:13","typeDescriptions":{}}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2072:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2587,"id":2652,"nodeType":"Return","src":"2065:21:13"}]},"documentation":{"id":2579,"nodeType":"StructuredDocumentation","src":"1535:112:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2654,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1661:11:13","nodeType":"FunctionDefinition","parameters":{"id":2584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2581,"mutability":"mutable","name":"value","nameLocation":"1681:5:13","nodeType":"VariableDeclaration","scope":2654,"src":"1673:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2583,"mutability":"mutable","name":"length","nameLocation":"1696:6:13","nodeType":"VariableDeclaration","scope":2654,"src":"1688:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2582,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1672:31:13"},"returnParameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2654,"src":"1727:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2585,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:15:13"},"scope":2675,"src":"1652:441:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2673,"nodeType":"Block","src":"2318:76:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2667,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2363:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2355:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2665,"name":"uint160","nodeType":"ElementaryTypeName","src":"2355:7:13","typeDescriptions":{}}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2355:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"2347:7:13","typeDescriptions":{}}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2347:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2670,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"2371:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2662,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2578,2654,2674],"referencedDeclaration":2654,"src":"2335:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2661,"id":2672,"nodeType":"Return","src":"2328:59:13"}]},"documentation":{"id":2655,"nodeType":"StructuredDocumentation","src":"2099:141:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2674,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2254:11:13","nodeType":"FunctionDefinition","parameters":{"id":2658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2657,"mutability":"mutable","name":"addr","nameLocation":"2274:4:13","nodeType":"VariableDeclaration","scope":2674,"src":"2266:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2656,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:14:13"},"returnParameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2674,"src":"2303:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2659,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:15:13"},"scope":2675,"src":"2245:149:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2676,"src":"161:2235:13","usedErrors":[]}],"src":"101:2296:13"},"id":13},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2699],"IERC165":[2711]},"id":2700,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2677,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2678,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2700,"sourceUnit":2712,"src":"124:23:14","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2680,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2711,"src":"754:7:14"},"id":2681,"nodeType":"InheritanceSpecifier","src":"754:7:14"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2679,"nodeType":"StructuredDocumentation","src":"149:576:14","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2699,"linearizedBaseContracts":[2699,2711],"name":"ERC165","nameLocation":"744:6:14","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2710],"body":{"id":2697,"nodeType":"Block","src":"920:64:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2690,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"937:11:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2692,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"957:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2711_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2711_$","typeString":"type(contract IERC165)"}],"id":2691,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2711","typeString":"type(contract IERC165)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2689,"id":2696,"nodeType":"Return","src":"930:47:14"}]},"documentation":{"id":2682,"nodeType":"StructuredDocumentation","src":"768:56:14","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2698,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:14","nodeType":"FunctionDefinition","overrides":{"id":2686,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:14"},"parameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:14","nodeType":"VariableDeclaration","scope":2698,"src":"856:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2683,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:14"},"returnParameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2698,"src":"914:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2687,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:14"},"scope":2699,"src":"829:155:14","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2700,"src":"726:260:14","usedErrors":[]}],"src":"99:888:14"},"id":14},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2711]},"id":2712,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2701,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2702,"nodeType":"StructuredDocumentation","src":"125:279:15","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2711,"linearizedBaseContracts":[2711],"name":"IERC165","nameLocation":"415:7:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2703,"nodeType":"StructuredDocumentation","src":"429:340:15","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2710,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:15","nodeType":"FunctionDefinition","parameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:15","nodeType":"VariableDeclaration","scope":2710,"src":"801:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2704,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:15"},"returnParameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2710,"src":"844:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2707,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:15"},"scope":2711,"src":"774:76:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2712,"src":"405:447:15","usedErrors":[]}],"src":"100:753:15"},"id":15},"base64-sol/base64.sol":{"ast":{"absolutePath":"base64-sol/base64.sol","exportedSymbols":{"Base64":[2826]},"id":2827,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2713,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"33:24:16"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2714,"nodeType":"StructuredDocumentation","src":"59:127:16","text":"@title Base64\n @author Brecht Devos - <brecht@loopring.org>\n @notice Provides functions for encoding/decoding base64"},"fullyImplemented":true,"id":2826,"linearizedBaseContracts":[2826],"name":"Base64","nameLocation":"194:6:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2717,"mutability":"constant","name":"TABLE_ENCODE","nameLocation":"232:12:16","nodeType":"VariableDeclaration","scope":2826,"src":"207:106:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2715,"name":"string","nodeType":"ElementaryTypeName","src":"207:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"247:66:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},"visibility":"internal"},{"constant":true,"id":2720,"mutability":"constant","name":"TABLE_DECODE","nameLocation":"344:12:16","nodeType":"VariableDeclaration","scope":2826,"src":"319:451:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2718,"name":"bytes","nodeType":"ElementaryTypeName","src":"319:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"hexValue":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e0000003f3435363738393a3b3c3d00000000000000000102030405060708090a0b0c0d0e0f101112131415161718190000000000001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"359:411:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbed483d4f9f83dd52b06773fd58dd8723113252a85374752ef109e22dfa50f9","typeString":"literal_string hex\"000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e0000003f3435363738393a3b3c3d00000000000000000102030405060708090a0b0c0d0e0f101112131415161718190000000000001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\""},"value":"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0000\u0000\u0000?456789:;<=\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123\u0000\u0000\u0000\u0000\u0000"},"visibility":"internal"},{"body":{"id":2763,"nodeType":"Block","src":"850:1788:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2727,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"864:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"864:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"879:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"864:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2733,"nodeType":"IfStatement","src":"860:31:16","trueBody":{"expression":{"hexValue":"","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"889:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2726,"id":2732,"nodeType":"Return","src":"882:9:16"}},{"assignments":[2735],"declarations":[{"constant":false,"id":2735,"mutability":"mutable","name":"table","nameLocation":"954:5:16","nodeType":"VariableDeclaration","scope":2763,"src":"940:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2734,"name":"string","nodeType":"ElementaryTypeName","src":"940:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2737,"initialValue":{"id":2736,"name":"TABLE_ENCODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"962:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"940:34:16"},{"assignments":[2739],"declarations":[{"constant":false,"id":2739,"mutability":"mutable","name":"encodedLen","nameLocation":"1031:10:16","nodeType":"VariableDeclaration","scope":2763,"src":"1023:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2750,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2741,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"1050:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1050:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1064:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1050:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1049:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1069:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1049:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2748,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1048:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1044:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1023:48:16"},{"assignments":[2752],"declarations":[{"constant":false,"id":2752,"mutability":"mutable","name":"result","nameLocation":"1165:6:16","nodeType":"VariableDeclaration","scope":2763,"src":"1151:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2751,"name":"string","nodeType":"ElementaryTypeName","src":"1151:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2759,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2755,"name":"encodedLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1185:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1198:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1185:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1174:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2753,"name":"string","nodeType":"ElementaryTypeName","src":"1178:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1174:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1151:50:16"},{"AST":{"nodeType":"YulBlock","src":"1221:1387:16","statements":[{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1286:6:16"},{"name":"encodedLen","nodeType":"YulIdentifier","src":"1294:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1279:6:16"},"nodeType":"YulFunctionCall","src":"1279:26:16"},"nodeType":"YulExpressionStatement","src":"1279:26:16"},{"nodeType":"YulVariableDeclaration","src":"1359:29:16","value":{"arguments":[{"name":"table","nodeType":"YulIdentifier","src":"1379:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1386:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1375:3:16"},"nodeType":"YulFunctionCall","src":"1375:13:16"},"variables":[{"name":"tablePtr","nodeType":"YulTypedName","src":"1363:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1427:19:16","value":{"name":"data","nodeType":"YulIdentifier","src":"1442:4:16"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"1431:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1459:39:16","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1477:7:16"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1492:4:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1486:5:16"},"nodeType":"YulFunctionCall","src":"1486:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:16"},"nodeType":"YulFunctionCall","src":"1473:25:16"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"1463:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1556:32:16","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1577:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1585:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1573:3:16"},"nodeType":"YulFunctionCall","src":"1573:15:16"},"variables":[{"name":"resultPtr","nodeType":"YulTypedName","src":"1560:9:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1697:697:16","statements":[{"nodeType":"YulAssignment","src":"1747:26:16","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1762:7:16"},{"kind":"number","nodeType":"YulLiteral","src":"1771:1:16","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1758:3:16"},"nodeType":"YulFunctionCall","src":"1758:15:16"},"variableNames":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1747:7:16"}]},{"nodeType":"YulVariableDeclaration","src":"1790:27:16","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1809:7:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1803:5:16"},"nodeType":"YulFunctionCall","src":"1803:14:16"},"variables":[{"name":"input","nodeType":"YulTypedName","src":"1794:5:16","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1881:9:16"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"1902:8:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1920:2:16","type":"","value":"18"},{"name":"input","nodeType":"YulIdentifier","src":"1924:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1916:3:16"},"nodeType":"YulFunctionCall","src":"1916:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"1932:4:16","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1912:3:16"},"nodeType":"YulFunctionCall","src":"1912:25:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1898:3:16"},"nodeType":"YulFunctionCall","src":"1898:40:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1892:5:16"},"nodeType":"YulFunctionCall","src":"1892:47:16"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1873:7:16"},"nodeType":"YulFunctionCall","src":"1873:67:16"},"nodeType":"YulExpressionStatement","src":"1873:67:16"},{"nodeType":"YulAssignment","src":"1957:30:16","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1974:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1985:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1970:3:16"},"nodeType":"YulFunctionCall","src":"1970:17:16"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1957:9:16"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2012:9:16"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2033:8:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2051:2:16","type":"","value":"12"},{"name":"input","nodeType":"YulIdentifier","src":"2055:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2047:3:16"},"nodeType":"YulFunctionCall","src":"2047:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"2063:4:16","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2043:3:16"},"nodeType":"YulFunctionCall","src":"2043:25:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2029:3:16"},"nodeType":"YulFunctionCall","src":"2029:40:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2023:5:16"},"nodeType":"YulFunctionCall","src":"2023:47:16"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2004:7:16"},"nodeType":"YulFunctionCall","src":"2004:67:16"},"nodeType":"YulExpressionStatement","src":"2004:67:16"},{"nodeType":"YulAssignment","src":"2088:30:16","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2105:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2116:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2101:3:16"},"nodeType":"YulFunctionCall","src":"2101:17:16"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2088:9:16"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2143:9:16"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2164:8:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2183:1:16","type":"","value":"6"},{"name":"input","nodeType":"YulIdentifier","src":"2186:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2178:3:16"},"nodeType":"YulFunctionCall","src":"2178:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"2194:4:16","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2174:3:16"},"nodeType":"YulFunctionCall","src":"2174:25:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2160:3:16"},"nodeType":"YulFunctionCall","src":"2160:40:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2154:5:16"},"nodeType":"YulFunctionCall","src":"2154:47:16"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2135:7:16"},"nodeType":"YulFunctionCall","src":"2135:67:16"},"nodeType":"YulExpressionStatement","src":"2135:67:16"},{"nodeType":"YulAssignment","src":"2219:30:16","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2236:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2247:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2232:3:16"},"nodeType":"YulFunctionCall","src":"2232:17:16"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2219:9:16"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2274:9:16"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2295:8:16"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"2317:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2325:4:16","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2305:3:16"},"nodeType":"YulFunctionCall","src":"2305:25:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2291:3:16"},"nodeType":"YulFunctionCall","src":"2291:40:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2285:5:16"},"nodeType":"YulFunctionCall","src":"2285:47:16"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2266:7:16"},"nodeType":"YulFunctionCall","src":"2266:67:16"},"nodeType":"YulExpressionStatement","src":"2266:67:16"},{"nodeType":"YulAssignment","src":"2350:30:16","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2367:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2363:3:16"},"nodeType":"YulFunctionCall","src":"2363:17:16"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2350:9:16"}]}]},"condition":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1665:7:16"},{"name":"endPtr","nodeType":"YulIdentifier","src":"1674:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1662:2:16"},"nodeType":"YulFunctionCall","src":"1662:19:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1682:2:16","statements":[]},"pre":{"nodeType":"YulBlock","src":"1659:2:16","statements":[]},"src":"1655:739:16"},{"cases":[{"body":{"nodeType":"YulBlock","src":"2486:47:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2499:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2510:1:16","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2495:3:16"},"nodeType":"YulFunctionCall","src":"2495:17:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2518:3:16","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"2523:6:16","type":"","value":"0x3d3d"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2514:3:16"},"nodeType":"YulFunctionCall","src":"2514:16:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2488:6:16"},"nodeType":"YulFunctionCall","src":"2488:43:16"},"nodeType":"YulExpressionStatement","src":"2488:43:16"}]},"nodeType":"YulCase","src":"2479:54:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2484:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2553:45:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2566:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2577:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2562:3:16"},"nodeType":"YulFunctionCall","src":"2562:17:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2585:3:16","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"2590:4:16","type":"","value":"0x3d"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2581:3:16"},"nodeType":"YulFunctionCall","src":"2581:14:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2555:6:16"},"nodeType":"YulFunctionCall","src":"2555:41:16"},"nodeType":"YulExpressionStatement","src":"2555:41:16"}]},"nodeType":"YulCase","src":"2546:52:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2551:1:16","type":"","value":"2"}}],"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2457:4:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2451:5:16"},"nodeType":"YulFunctionCall","src":"2451:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"2464:1:16","type":"","value":"3"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"2447:3:16"},"nodeType":"YulFunctionCall","src":"2447:19:16"},"nodeType":"YulSwitch","src":"2440:158:16"}]},"evmVersion":"london","externalReferences":[{"declaration":2722,"isOffset":false,"isSlot":false,"src":"1442:4:16","valueSize":1},{"declaration":2722,"isOffset":false,"isSlot":false,"src":"1492:4:16","valueSize":1},{"declaration":2722,"isOffset":false,"isSlot":false,"src":"2457:4:16","valueSize":1},{"declaration":2739,"isOffset":false,"isSlot":false,"src":"1294:10:16","valueSize":1},{"declaration":2752,"isOffset":false,"isSlot":false,"src":"1286:6:16","valueSize":1},{"declaration":2752,"isOffset":false,"isSlot":false,"src":"1577:6:16","valueSize":1},{"declaration":2735,"isOffset":false,"isSlot":false,"src":"1379:5:16","valueSize":1}],"id":2760,"nodeType":"InlineAssembly","src":"1212:1396:16"},{"expression":{"id":2761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"2625:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2726,"id":2762,"nodeType":"Return","src":"2618:13:16"}]},"id":2764,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"786:6:16","nodeType":"FunctionDefinition","parameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"data","nameLocation":"806:4:16","nodeType":"VariableDeclaration","scope":2764,"src":"793:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2721,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:19:16"},"returnParameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2764,"src":"835:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2724,"name":"string","nodeType":"ElementaryTypeName","src":"835:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"834:15:16"},"scope":2826,"src":"777:1861:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2824,"nodeType":"Block","src":"2718:2104:16","statements":[{"assignments":[2772],"declarations":[{"constant":false,"id":2772,"mutability":"mutable","name":"data","nameLocation":"2741:4:16","nodeType":"VariableDeclaration","scope":2824,"src":"2728:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2771,"name":"bytes","nodeType":"ElementaryTypeName","src":"2728:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2777,"initialValue":{"arguments":[{"id":2775,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"2754:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2748:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2773,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:16","typeDescriptions":{}}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2748:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2728:32:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2778,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"2775:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2775:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2790:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2775:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2787,"nodeType":"IfStatement","src":"2771:41:16","trueBody":{"expression":{"arguments":[{"hexValue":"30","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2800:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2782,"name":"bytes","nodeType":"ElementaryTypeName","src":"2804:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2800:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2770,"id":2786,"nodeType":"Return","src":"2793:19:16"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2789,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"2830:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2830:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"34","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2844:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2830:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2849:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2830:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420626173653634206465636f64657220696e707574","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2852:30:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b899645e29043a8d30000fb8ed0252b5c4f6f5f09672aefa374ee368d324bb89","typeString":"literal_string \"invalid base64 decoder input\""},"value":"invalid base64 decoder input"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b899645e29043a8d30000fb8ed0252b5c4f6f5f09672aefa374ee368d324bb89","typeString":"literal_string \"invalid base64 decoder input\""}],"id":2788,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2822:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2822:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2797,"nodeType":"ExpressionStatement","src":"2822:61:16"},{"assignments":[2799],"declarations":[{"constant":false,"id":2799,"mutability":"mutable","name":"table","nameLocation":"2945:5:16","nodeType":"VariableDeclaration","scope":2824,"src":"2932:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2798,"name":"bytes","nodeType":"ElementaryTypeName","src":"2932:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2801,"initialValue":{"id":2800,"name":"TABLE_DECODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"2953:12:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2932:33:16"},{"assignments":[2803],"declarations":[{"constant":false,"id":2803,"mutability":"mutable","name":"decodedLen","nameLocation":"3032:10:16","nodeType":"VariableDeclaration","scope":2824,"src":"3024:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2802,"name":"uint256","nodeType":"ElementaryTypeName","src":"3024:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2811,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2804,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"3046:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3046:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"34","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3060:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3046:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3045:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3065:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"3045:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3024:42:16"},{"assignments":[2813],"declarations":[{"constant":false,"id":2813,"mutability":"mutable","name":"result","nameLocation":"3159:6:16","nodeType":"VariableDeclaration","scope":2824,"src":"3146:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2812,"name":"bytes","nodeType":"ElementaryTypeName","src":"3146:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2820,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2816,"name":"decodedLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"3178:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3191:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3178:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3168:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2814,"name":"bytes","nodeType":"ElementaryTypeName","src":"3172:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3168:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3146:48:16"},{"AST":{"nodeType":"YulBlock","src":"3214:1578:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3260:46:16","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3287:4:16"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3299:4:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3293:5:16"},"nodeType":"YulFunctionCall","src":"3293:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3283:3:16"},"nodeType":"YulFunctionCall","src":"3283:22:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3277:5:16"},"nodeType":"YulFunctionCall","src":"3277:29:16"},"variables":[{"name":"lastBytes","nodeType":"YulTypedName","src":"3264:9:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3353:191:16","statements":[{"nodeType":"YulAssignment","src":"3371:32:16","value":{"arguments":[{"name":"decodedLen","nodeType":"YulIdentifier","src":"3389:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"3401:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3385:3:16"},"nodeType":"YulFunctionCall","src":"3385:18:16"},"variableNames":[{"name":"decodedLen","nodeType":"YulIdentifier","src":"3371:10:16"}]},{"body":{"nodeType":"YulBlock","src":"3458:72:16","statements":[{"nodeType":"YulAssignment","src":"3480:32:16","value":{"arguments":[{"name":"decodedLen","nodeType":"YulIdentifier","src":"3498:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"3510:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3494:3:16"},"nodeType":"YulFunctionCall","src":"3494:18:16"},"variableNames":[{"name":"decodedLen","nodeType":"YulIdentifier","src":"3480:10:16"}]}]},"condition":{"arguments":[{"arguments":[{"name":"lastBytes","nodeType":"YulIdentifier","src":"3430:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3441:6:16","type":"","value":"0xFFFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3426:3:16"},"nodeType":"YulFunctionCall","src":"3426:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"3450:6:16","type":"","value":"0x3d3d"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3423:2:16"},"nodeType":"YulFunctionCall","src":"3423:34:16"},"nodeType":"YulIf","src":"3420:110:16"}]},"condition":{"arguments":[{"arguments":[{"name":"lastBytes","nodeType":"YulIdentifier","src":"3329:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3340:4:16","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3325:3:16"},"nodeType":"YulFunctionCall","src":"3325:20:16"},{"kind":"number","nodeType":"YulLiteral","src":"3347:4:16","type":"","value":"0x3d"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3322:2:16"},"nodeType":"YulFunctionCall","src":"3322:30:16"},"nodeType":"YulIf","src":"3319:225:16"},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"3609:6:16"},{"name":"decodedLen","nodeType":"YulIdentifier","src":"3617:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3602:6:16"},"nodeType":"YulFunctionCall","src":"3602:26:16"},"nodeType":"YulExpressionStatement","src":"3602:26:16"},{"nodeType":"YulVariableDeclaration","src":"3682:29:16","value":{"arguments":[{"name":"table","nodeType":"YulIdentifier","src":"3702:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3709:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3698:3:16"},"nodeType":"YulFunctionCall","src":"3698:13:16"},"variables":[{"name":"tablePtr","nodeType":"YulTypedName","src":"3686:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3750:19:16","value":{"name":"data","nodeType":"YulIdentifier","src":"3765:4:16"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"3754:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3782:39:16","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"3800:7:16"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3815:4:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3809:5:16"},"nodeType":"YulFunctionCall","src":"3809:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3796:3:16"},"nodeType":"YulFunctionCall","src":"3796:25:16"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"3786:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3879:32:16","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"3900:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3908:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3896:3:16"},"nodeType":"YulFunctionCall","src":"3896:15:16"},"variables":[{"name":"resultPtr","nodeType":"YulTypedName","src":"3883:9:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4025:757:16","statements":[{"nodeType":"YulAssignment","src":"4078:26:16","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"4093:7:16"},{"kind":"number","nodeType":"YulLiteral","src":"4102:1:16","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4089:3:16"},"nodeType":"YulFunctionCall","src":"4089:15:16"},"variableNames":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"4078:7:16"}]},{"nodeType":"YulVariableDeclaration","src":"4120:27:16","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"4139:7:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4133:5:16"},"nodeType":"YulFunctionCall","src":"4133:14:16"},"variables":[{"name":"input","nodeType":"YulTypedName","src":"4124:5:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4196:473:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4266:2:16","type":"","value":"18"},{"arguments":[{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4284:8:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4302:2:16","type":"","value":"24"},{"name":"input","nodeType":"YulIdentifier","src":"4306:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4298:3:16"},"nodeType":"YulFunctionCall","src":"4298:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"4314:4:16","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4294:3:16"},"nodeType":"YulFunctionCall","src":"4294:25:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4280:3:16"},"nodeType":"YulFunctionCall","src":"4280:40:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4274:5:16"},"nodeType":"YulFunctionCall","src":"4274:47:16"},{"kind":"number","nodeType":"YulLiteral","src":"4323:4:16","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4270:3:16"},"nodeType":"YulFunctionCall","src":"4270:58:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4262:3:16"},"nodeType":"YulFunctionCall","src":"4262:67:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4358:2:16","type":"","value":"12"},{"arguments":[{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4376:8:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4394:2:16","type":"","value":"16"},{"name":"input","nodeType":"YulIdentifier","src":"4398:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4390:3:16"},"nodeType":"YulFunctionCall","src":"4390:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"4406:4:16","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4386:3:16"},"nodeType":"YulFunctionCall","src":"4386:25:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4372:3:16"},"nodeType":"YulFunctionCall","src":"4372:40:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4366:5:16"},"nodeType":"YulFunctionCall","src":"4366:47:16"},{"kind":"number","nodeType":"YulLiteral","src":"4415:4:16","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4362:3:16"},"nodeType":"YulFunctionCall","src":"4362:58:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4354:3:16"},"nodeType":"YulFunctionCall","src":"4354:67:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4234:3:16"},"nodeType":"YulFunctionCall","src":"4234:188:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4476:1:16","type":"","value":"6"},{"arguments":[{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4493:8:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4512:1:16","type":"","value":"8"},{"name":"input","nodeType":"YulIdentifier","src":"4515:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4507:3:16"},"nodeType":"YulFunctionCall","src":"4507:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"4523:4:16","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4503:3:16"},"nodeType":"YulFunctionCall","src":"4503:25:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4489:3:16"},"nodeType":"YulFunctionCall","src":"4489:40:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4483:5:16"},"nodeType":"YulFunctionCall","src":"4483:47:16"},{"kind":"number","nodeType":"YulLiteral","src":"4532:4:16","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4479:3:16"},"nodeType":"YulFunctionCall","src":"4479:58:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4471:3:16"},"nodeType":"YulFunctionCall","src":"4471:67:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4585:8:16"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"4607:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4615:4:16","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4595:3:16"},"nodeType":"YulFunctionCall","src":"4595:25:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4581:3:16"},"nodeType":"YulFunctionCall","src":"4581:40:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4575:5:16"},"nodeType":"YulFunctionCall","src":"4575:47:16"},{"kind":"number","nodeType":"YulLiteral","src":"4624:4:16","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4571:3:16"},"nodeType":"YulFunctionCall","src":"4571:58:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4443:3:16"},"nodeType":"YulFunctionCall","src":"4443:208:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4210:3:16"},"nodeType":"YulFunctionCall","src":"4210:459:16"},"variables":[{"name":"output","nodeType":"YulTypedName","src":"4200:6:16","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4693:9:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4708:3:16","type":"","value":"232"},{"name":"output","nodeType":"YulIdentifier","src":"4713:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4704:3:16"},"nodeType":"YulFunctionCall","src":"4704:16:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4686:6:16"},"nodeType":"YulFunctionCall","src":"4686:35:16"},"nodeType":"YulExpressionStatement","src":"4686:35:16"},{"nodeType":"YulAssignment","src":"4738:30:16","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4755:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4766:1:16","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4751:3:16"},"nodeType":"YulFunctionCall","src":"4751:17:16"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4738:9:16"}]}]},"condition":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"3993:7:16"},{"name":"endPtr","nodeType":"YulIdentifier","src":"4002:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3990:2:16"},"nodeType":"YulFunctionCall","src":"3990:19:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4010:2:16","statements":[]},"pre":{"nodeType":"YulBlock","src":"3987:2:16","statements":[]},"src":"3983:799:16"}]},"evmVersion":"london","externalReferences":[{"declaration":2772,"isOffset":false,"isSlot":false,"src":"3287:4:16","valueSize":1},{"declaration":2772,"isOffset":false,"isSlot":false,"src":"3299:4:16","valueSize":1},{"declaration":2772,"isOffset":false,"isSlot":false,"src":"3765:4:16","valueSize":1},{"declaration":2772,"isOffset":false,"isSlot":false,"src":"3815:4:16","valueSize":1},{"declaration":2803,"isOffset":false,"isSlot":false,"src":"3371:10:16","valueSize":1},{"declaration":2803,"isOffset":false,"isSlot":false,"src":"3389:10:16","valueSize":1},{"declaration":2803,"isOffset":false,"isSlot":false,"src":"3480:10:16","valueSize":1},{"declaration":2803,"isOffset":false,"isSlot":false,"src":"3498:10:16","valueSize":1},{"declaration":2803,"isOffset":false,"isSlot":false,"src":"3617:10:16","valueSize":1},{"declaration":2813,"isOffset":false,"isSlot":false,"src":"3609:6:16","valueSize":1},{"declaration":2813,"isOffset":false,"isSlot":false,"src":"3900:6:16","valueSize":1},{"declaration":2799,"isOffset":false,"isSlot":false,"src":"3702:5:16","valueSize":1}],"id":2821,"nodeType":"InlineAssembly","src":"3205:1587:16"},{"expression":{"id":2822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"4809:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2770,"id":2823,"nodeType":"Return","src":"4802:13:16"}]},"id":2825,"implemented":true,"kind":"function","modifiers":[],"name":"decode","nameLocation":"2653:6:16","nodeType":"FunctionDefinition","parameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"_data","nameLocation":"2674:5:16","nodeType":"VariableDeclaration","scope":2825,"src":"2660:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2765,"name":"string","nodeType":"ElementaryTypeName","src":"2660:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2659:21:16"},"returnParameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2825,"src":"2704:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2768,"name":"bytes","nodeType":"ElementaryTypeName","src":"2704:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2703:14:16"},"scope":2826,"src":"2644:2178:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2827,"src":"186:4638:16","usedErrors":[]}],"src":"33:4792:16"},"id":16},"contracts/DynamicSvgNft.sol":{"ast":{"absolutePath":"contracts/DynamicSvgNft.sol","exportedSymbols":{"Address":[2427],"AggregatorV3Interface":[103],"Base64":[2826],"Context":[2449],"DynamicSvgNft":[3025],"ERC165":[2699],"ERC721":[1846],"IERC165":[2711],"IERC721":[1962],"IERC721Metadata":[2132],"IERC721Receiver":[1980],"Strings":[2675]},"id":3026,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2828,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":2829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3026,"sourceUnit":1847,"src":"56:57:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"base64-sol/base64.sol","file":"base64-sol/base64.sol","id":2830,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3026,"sourceUnit":2827,"src":"114:31:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":2831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3026,"sourceUnit":104,"src":"146:76:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2832,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1846,"src":"250:6:17"},"id":2833,"nodeType":"InheritanceSpecifier","src":"250:6:17"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3025,"linearizedBaseContracts":[3025,1846,2132,1962,2699,2711,2449],"name":"DynamicSvgNft","nameLocation":"233:13:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2835,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"279:14:17","nodeType":"VariableDeclaration","scope":3025,"src":"263:30:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2834,"name":"uint256","nodeType":"ElementaryTypeName","src":"263:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2837,"mutability":"mutable","name":"i_lowImageURI","nameLocation":"314:13:17","nodeType":"VariableDeclaration","scope":3025,"src":"299:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2836,"name":"string","nodeType":"ElementaryTypeName","src":"299:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2839,"mutability":"mutable","name":"i_highImageURI","nameLocation":"348:14:17","nodeType":"VariableDeclaration","scope":3025,"src":"333:29:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2838,"name":"string","nodeType":"ElementaryTypeName","src":"333:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":true,"id":2842,"mutability":"constant","name":"base64EncodedSvgPrefix","nameLocation":"392:22:17","nodeType":"VariableDeclaration","scope":3025,"src":"368:85:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2840,"name":"string","nodeType":"ElementaryTypeName","src":"368:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"646174613a696d6167652f7376672b786d6c3b6261736536342c","id":2841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"425:28:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f90ae014c41cb48231e1f02c314087ff9c479133697911d25c5fe231e237dd14","typeString":"literal_string \"data:image/svg+xml;base64,\""},"value":"data:image/svg+xml;base64,"},"visibility":"private"},{"constant":false,"id":2845,"mutability":"immutable","name":"i_priceFeed","nameLocation":"501:11:17","nodeType":"VariableDeclaration","scope":3025,"src":"460:52:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2844,"nodeType":"UserDefinedTypeName","pathNode":{"id":2843,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":103,"src":"460:21:17"},"referencedDeclaration":103,"src":"460:21:17","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"},{"constant":false,"functionSelector":"e425aded","id":2849,"mutability":"mutable","name":"s_tokenIdToHighValue","nameLocation":"552:20:17","nodeType":"VariableDeclaration","scope":3025,"src":"518:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"},"typeName":{"id":2848,"keyType":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"526:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"518:26:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"},"valueType":{"id":2847,"name":"int256","nodeType":"ElementaryTypeName","src":"537:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}},"visibility":"public"},{"anonymous":false,"id":2855,"name":"CreatedNFT","nameLocation":"585:10:17","nodeType":"EventDefinition","parameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2851,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"612:7:17","nodeType":"VariableDeclaration","scope":2855,"src":"596:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2850,"name":"uint256","nodeType":"ElementaryTypeName","src":"596:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2853,"indexed":false,"mutability":"mutable","name":"highValue","nameLocation":"628:9:17","nodeType":"VariableDeclaration","scope":2855,"src":"621:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2852,"name":"int256","nodeType":"ElementaryTypeName","src":"621:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"595:43:17"},"src":"579:60:17"},{"body":{"id":2890,"nodeType":"Block","src":"789:194:17","statements":[{"expression":{"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2868,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"799:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"816:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"799:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2871,"nodeType":"ExpressionStatement","src":"799:18:17"},{"expression":{"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2872,"name":"i_lowImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"827:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2874,"name":"lowSvg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"857:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2873,"name":"svgToImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"843:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"843:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"827:37:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2877,"nodeType":"ExpressionStatement","src":"827:37:17"},{"expression":{"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2878,"name":"i_highImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"874:14:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2880,"name":"highSvg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"905:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2879,"name":"svgToImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"891:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"891:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"874:39:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2883,"nodeType":"ExpressionStatement","src":"874:39:17"},{"expression":{"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2884,"name":"i_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"923:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2886,"name":"priceFeedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"959:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2885,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"937:21:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$103_$","typeString":"type(contract AggregatorV3Interface)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"937:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"src":"923:53:17","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"id":2889,"nodeType":"ExpressionStatement","src":"923:53:17"}]},"id":2891,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"44796e616d69635376674e6674","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"765:15:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d9bd455d25f1ec5132126832e824d9b8c736ba4feb463eb5cb18a9cd011f6a1","typeString":"literal_string \"DynamicSvgNft\""},"value":"DynamicSvgNft"},{"hexValue":"44534e","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"782:5:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_275f2341ff18e41e04cc32c20974ed0046a9cb9bd1a1fcf968aafc5924b80a4d","typeString":"literal_string \"DSN\""},"value":"DSN"}],"id":2866,"kind":"baseConstructorSpecifier","modifierName":{"id":2863,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1846,"src":"758:6:17"},"nodeType":"ModifierInvocation","src":"758:30:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"priceFeedAddress","nameLocation":"674:16:17","nodeType":"VariableDeclaration","scope":2891,"src":"666:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2856,"name":"address","nodeType":"ElementaryTypeName","src":"666:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2859,"mutability":"mutable","name":"lowSvg","nameLocation":"714:6:17","nodeType":"VariableDeclaration","scope":2891,"src":"700:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2858,"name":"string","nodeType":"ElementaryTypeName","src":"700:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2861,"mutability":"mutable","name":"highSvg","nameLocation":"744:7:17","nodeType":"VariableDeclaration","scope":2891,"src":"730:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2860,"name":"string","nodeType":"ElementaryTypeName","src":"730:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"656:101:17"},"returnParameters":{"id":2867,"nodeType":"ParameterList","parameters":[],"src":"789:0:17"},"scope":3025,"src":"645:338:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2923,"nodeType":"Block","src":"1095:218:17","statements":[{"assignments":[2899],"declarations":[{"constant":false,"id":2899,"mutability":"mutable","name":"svgBase64Encoded","nameLocation":"1119:16:17","nodeType":"VariableDeclaration","scope":2923,"src":"1105:30:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2898,"name":"string","nodeType":"ElementaryTypeName","src":"1105:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2913,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":2908,"name":"svg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"1195:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2906,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1178:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1178:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1178:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1171:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2904,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:17","typeDescriptions":{}}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1171:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1165:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2902,"name":"bytes","nodeType":"ElementaryTypeName","src":"1165:5:17","typeDescriptions":{}}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1165:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2900,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"1138:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$2826_$","typeString":"type(library Base64)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":2764,"src":"1138:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1138:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1105:106:17"},{"expression":{"arguments":[{"arguments":[{"id":2918,"name":"base64EncodedSvgPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"1264:22:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2919,"name":"svgBase64Encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"1288:16:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2916,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1247:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1247:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1247:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1240:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2914,"name":"string","nodeType":"ElementaryTypeName","src":"1240:6:17","typeDescriptions":{}}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1240:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2897,"id":2922,"nodeType":"Return","src":"1221:85:17"}]},"functionSelector":"30d871c6","id":2924,"implemented":true,"kind":"function","modifiers":[],"name":"svgToImageURI","nameLocation":"998:13:17","nodeType":"FunctionDefinition","parameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"svg","nameLocation":"1026:3:17","nodeType":"VariableDeclaration","scope":2924,"src":"1012:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2892,"name":"string","nodeType":"ElementaryTypeName","src":"1012:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1011:19:17"},"returnParameters":{"id":2897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2924,"src":"1076:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2895,"name":"string","nodeType":"ElementaryTypeName","src":"1076:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1075:15:17"},"scope":3025,"src":"989:324:17","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":2950,"nodeType":"Block","src":"1361:207:17","statements":[{"expression":{"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2929,"name":"s_tokenIdToHighValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"1371:20:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"}},"id":2931,"indexExpression":{"id":2930,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"1392:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1371:36:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2932,"name":"highValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"1410:9:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1371:48:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2934,"nodeType":"ExpressionStatement","src":"1371:48:17"},{"expression":{"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2935,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"1429:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2936,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"1447:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1429:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2938,"nodeType":"ExpressionStatement","src":"1429:32:17"},{"expression":{"arguments":[{"expression":{"id":2940,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1481:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1481:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2942,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"1493:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2939,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1461,1490],"referencedDeclaration":1461,"src":"1471:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1471:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2944,"nodeType":"ExpressionStatement","src":"1471:37:17"},{"eventCall":{"arguments":[{"id":2946,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"1535:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2947,"name":"highValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"1551:9:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2945,"name":"CreatedNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"1524:10:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_int256_$returns$__$","typeString":"function (uint256,int256)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1524:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2949,"nodeType":"EmitStatement","src":"1519:42:17"}]},"functionSelector":"1e930812","id":2951,"implemented":true,"kind":"function","modifiers":[],"name":"mintNft","nameLocation":"1328:7:17","nodeType":"FunctionDefinition","parameters":{"id":2927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"highValue","nameLocation":"1343:9:17","nodeType":"VariableDeclaration","scope":2951,"src":"1336:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2925,"name":"int256","nodeType":"ElementaryTypeName","src":"1336:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1335:18:17"},"returnParameters":{"id":2928,"nodeType":"ParameterList","parameters":[],"src":"1361:0:17"},"scope":3025,"src":"1319:249:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1184],"body":{"id":3014,"nodeType":"Block","src":"1690:1021:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":2961,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"1716:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2960,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"1708:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1708:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55524920517565727920666f72206e6f6e206578697374656e7420746f6b656e","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1726:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf","typeString":"literal_string \"URI Query for non existent token\""},"value":"URI Query for non existent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf","typeString":"literal_string \"URI Query for non existent token\""}],"id":2959,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1700:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1700:61:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2965,"nodeType":"ExpressionStatement","src":"1700:61:17"},{"assignments":[null,2967,null,null,null],"declarations":[null,{"constant":false,"id":2967,"mutability":"mutable","name":"price","nameLocation":"1782:5:17","nodeType":"VariableDeclaration","scope":3014,"src":"1775:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2966,"name":"int256","nodeType":"ElementaryTypeName","src":"1775:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":2971,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2968,"name":"i_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"1797:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":102,"src":"1797:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1797:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"1772:54:17"},{"assignments":[2973],"declarations":[{"constant":false,"id":2973,"mutability":"mutable","name":"imageURI","nameLocation":"1850:8:17","nodeType":"VariableDeclaration","scope":3014,"src":"1836:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2972,"name":"string","nodeType":"ElementaryTypeName","src":"1836:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2975,"initialValue":{"id":2974,"name":"i_lowImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"1861:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1836:38:17"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2976,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"1888:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"baseExpression":{"id":2977,"name":"s_tokenIdToHighValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"1897:20:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"}},"id":2979,"indexExpression":{"id":2978,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"1918:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1897:29:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1888:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2986,"nodeType":"IfStatement","src":"1884:94:17","trueBody":{"id":2985,"nodeType":"Block","src":"1928:50:17","statements":[{"expression":{"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2981,"name":"imageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"1942:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2982,"name":"i_highImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"1953:14:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"1942:25:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2984,"nodeType":"ExpressionStatement","src":"1942:25:17"}]}},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2991,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[3024],"referencedDeclaration":3024,"src":"2068:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2068:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"arguments":[{"components":[{"hexValue":"7b226e616d653a22","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2225:10:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d","typeString":"literal_string \"{\"name:\"\""},"value":"{\"name:\""}],"id":3000,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2224:12:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d","typeString":"literal_string \"{\"name:\"\""}},{"arguments":[],"expression":{"argumentTypes":[],"id":3001,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"2270:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2270:6:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"22","id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2310:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},{"hexValue":"226465736372697074696f6e223a22416e204e46542074686174206368616e676573206261736564206f6e20636861696e6c696e6b2070726963652046656564212122","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2347:69:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735","typeString":"literal_string \"\"description\":\"An NFT that changes based on chainlink price Feed!!\"\""},"value":"\"description\":\"An NFT that changes based on chainlink price Feed!!\""},{"hexValue":"2261747472696275746573223a5b7b2274726169745f74797065223a2022636f6f6c6e657373222c3a76616c75653a3130307d5d2c22696d616765223a22","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2450:64:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24","typeString":"literal_string \"\"attributes\":[{\"trait_type\": \"coolness\",:value:100}],\"image\":\"\""},"value":"\"attributes\":[{\"trait_type\": \"coolness\",:value:100}],\"image\":\""},{"id":3006,"name":"imageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"2548:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d","id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2590:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","typeString":"literal_string \"\"}\""},"value":"\"}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d","typeString":"literal_string \"{\"name:\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},{"typeIdentifier":"t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735","typeString":"literal_string \"\"description\":\"An NFT that changes based on chainlink price Feed!!\"\""},{"typeIdentifier":"t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24","typeString":"literal_string \"\"attributes\":[{\"trait_type\": \"coolness\",:value:100}],\"image\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","typeString":"literal_string \"\"}\""}],"expression":{"id":2997,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2174:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"2174:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:450:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2139:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2995,"name":"bytes","nodeType":"ElementaryTypeName","src":"2139:5:17","typeDescriptions":{}}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2139:511:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2993,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"2100:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$2826_$","typeString":"type(library Base64)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":2764,"src":"2100:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2100:572:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2989,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2030:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"2030:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2030:660:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2006:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2987,"name":"string","nodeType":"ElementaryTypeName","src":"2006:6:17","typeDescriptions":{}}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2006:698:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2958,"id":3013,"nodeType":"Return","src":"1987:717:17"}]},"functionSelector":"c87b56dd","id":3015,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1583:8:17","nodeType":"FunctionDefinition","overrides":{"id":2955,"nodeType":"OverrideSpecifier","overrides":[],"src":"1645:8:17"},"parameters":{"id":2954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2953,"mutability":"mutable","name":"tokenId","nameLocation":"1600:7:17","nodeType":"VariableDeclaration","scope":3015,"src":"1592:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2952,"name":"uint256","nodeType":"ElementaryTypeName","src":"1592:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1591:17:17"},"returnParameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3015,"src":"1671:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2956,"name":"string","nodeType":"ElementaryTypeName","src":"1671:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1670:15:17"},"scope":3025,"src":"1574:1137:17","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1193],"body":{"id":3023,"nodeType":"Block","src":"2784:55:17","statements":[{"expression":{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2801:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},"functionReturnParameters":3020,"id":3022,"nodeType":"Return","src":"2794:38:17"}]},"id":3024,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"2726:8:17","nodeType":"FunctionDefinition","overrides":{"id":3017,"nodeType":"OverrideSpecifier","overrides":[],"src":"2751:8:17"},"parameters":{"id":3016,"nodeType":"ParameterList","parameters":[],"src":"2734:2:17"},"returnParameters":{"id":3020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3024,"src":"2769:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3018,"name":"string","nodeType":"ElementaryTypeName","src":"2769:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2768:15:17"},"scope":3025,"src":"2717:122:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3026,"src":"224:2617:17","usedErrors":[]}],"src":"32:2810:17"},"id":17},"contracts/RandomIpfsNft.sol":{"ast":{"absolutePath":"contracts/RandomIpfsNft.sol","exportedSymbols":{"Address":[2427],"Context":[2449],"ERC165":[2699],"ERC721":[1846],"ERC721URIStorage":[2105],"IERC165":[2711],"IERC721":[1962],"IERC721Metadata":[2132],"IERC721Receiver":[1980],"Ownable":[979],"RandomIpfsNft":[3378],"RandomIpfsNft__NeedMoreETHSent":[3035],"RandomIpfsNft__OutOfBounds":[3033],"RandomIpfsNft__TransferFailed":[3037],"Strings":[2675],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[287]},"id":3379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":3027,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3379,"sourceUnit":2106,"src":"30:78:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":3028,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3379,"sourceUnit":288,"src":"109:80:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","id":3029,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3379,"sourceUnit":58,"src":"190:61:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3030,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3379,"sourceUnit":980,"src":"252:52:18","symbolAliases":[],"unitAlias":""},{"id":3031,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"306:23:18"},{"id":3033,"name":"RandomIpfsNft__OutOfBounds","nameLocation":"337:26:18","nodeType":"ErrorDefinition","parameters":{"id":3032,"nodeType":"ParameterList","parameters":[],"src":"363:2:18"},"src":"331:35:18"},{"id":3035,"name":"RandomIpfsNft__NeedMoreETHSent","nameLocation":"373:30:18","nodeType":"ErrorDefinition","parameters":{"id":3034,"nodeType":"ParameterList","parameters":[],"src":"403:2:18"},"src":"367:39:18"},{"id":3037,"name":"RandomIpfsNft__TransferFailed","nameLocation":"413:29:18","nodeType":"ErrorDefinition","parameters":{"id":3036,"nodeType":"ParameterList","parameters":[],"src":"442:2:18"},"src":"407:38:18"},{"abstract":false,"baseContracts":[{"baseName":{"id":3038,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"473:17:18"},"id":3039,"nodeType":"InheritanceSpecifier","src":"473:17:18"},{"baseName":{"id":3040,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":2105,"src":"492:16:18"},"id":3041,"nodeType":"InheritanceSpecifier","src":"492:16:18"},{"baseName":{"id":3042,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":979,"src":"510:7:18"},"id":3043,"nodeType":"InheritanceSpecifier","src":"510:7:18"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3378,"linearizedBaseContracts":[3378,979,2105,1846,2132,1962,2699,2711,2449,57],"name":"RandomIpfsNft","nameLocation":"456:13:18","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3046,"mutability":"immutable","name":"i_vrfCoordinator","nameLocation":"568:16:18","nodeType":"VariableDeclaration","scope":3378,"src":"524:60:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$287","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":3045,"nodeType":"UserDefinedTypeName","pathNode":{"id":3044,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":287,"src":"524:25:18"},"referencedDeclaration":287,"src":"524:25:18","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$287","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"constant":false,"id":3048,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"615:16:18","nodeType":"VariableDeclaration","scope":3378,"src":"590:41:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3047,"name":"uint64","nodeType":"ElementaryTypeName","src":"590:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":3050,"mutability":"immutable","name":"i_gasLane","nameLocation":"663:9:18","nodeType":"VariableDeclaration","scope":3378,"src":"637:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"637:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3052,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"703:18:18","nodeType":"VariableDeclaration","scope":3378,"src":"678:43:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3051,"name":"uint32","nodeType":"ElementaryTypeName","src":"678:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":3055,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"751:21:18","nodeType":"VariableDeclaration","scope":3378,"src":"727:49:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3053,"name":"uint16","nodeType":"ElementaryTypeName","src":"727:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"775:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":3058,"mutability":"constant","name":"NUM_WORDS","nameLocation":"806:9:18","nodeType":"VariableDeclaration","scope":3378,"src":"782:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3056,"name":"uint32","nodeType":"ElementaryTypeName","src":"782:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"818:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"canonicalName":"RandomIpfsNft.Breed","id":3062,"members":[{"id":3059,"name":"PUG","nameLocation":"847:3:18","nodeType":"EnumValue","src":"847:3:18"},{"id":3060,"name":"SHIBA_INU","nameLocation":"860:9:18","nodeType":"EnumValue","src":"860:9:18"},{"id":3061,"name":"ST_BERNARD","nameLocation":"879:10:18","nodeType":"EnumValue","src":"879:10:18"}],"name":"Breed","nameLocation":"831:5:18","nodeType":"EnumDefinition","src":"826:69:18"},{"constant":false,"functionSelector":"a36f573b","id":3066,"mutability":"mutable","name":"s_requestIdToSender","nameLocation":"936:19:18","nodeType":"VariableDeclaration","scope":3378,"src":"901:54:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":3065,"keyType":{"id":3063,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"901:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":3064,"name":"address","nodeType":"ElementaryTypeName","src":"920:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"0b21a83b","id":3068,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"977:14:18","nodeType":"VariableDeclaration","scope":3378,"src":"962:29:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"962:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"id":3071,"mutability":"constant","name":"MAX_CHANCE_VALUE","nameLocation":"1023:16:18","nodeType":"VariableDeclaration","scope":3378,"src":"997:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"997:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1042:3:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"constant":false,"id":3074,"mutability":"mutable","name":"i_dogTokenUris","nameLocation":"1069:14:18","nodeType":"VariableDeclaration","scope":3378,"src":"1051:32:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":3072,"name":"string","nodeType":"ElementaryTypeName","src":"1051:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3073,"nodeType":"ArrayTypeName","src":"1051:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":3076,"mutability":"immutable","name":"i_mintFee","nameLocation":"1116:9:18","nodeType":"VariableDeclaration","scope":3378,"src":"1089:36:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3075,"name":"uint256","nodeType":"ElementaryTypeName","src":"1089:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"anonymous":false,"id":3082,"name":"NftRequested","nameLocation":"1138:12:18","nodeType":"EventDefinition","parameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3078,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1167:9:18","nodeType":"VariableDeclaration","scope":3082,"src":"1151:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3077,"name":"uint256","nodeType":"ElementaryTypeName","src":"1151:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3080,"indexed":false,"mutability":"mutable","name":"requester","nameLocation":"1186:9:18","nodeType":"VariableDeclaration","scope":3082,"src":"1178:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3079,"name":"address","nodeType":"ElementaryTypeName","src":"1178:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1150:46:18"},"src":"1132:65:18"},{"anonymous":false,"id":3089,"name":"NftMinted","nameLocation":"1208:9:18","nodeType":"EventDefinition","parameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"indexed":false,"mutability":"mutable","name":"dogBreed","nameLocation":"1224:8:18","nodeType":"VariableDeclaration","scope":3089,"src":"1218:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3062","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":3084,"nodeType":"UserDefinedTypeName","pathNode":{"id":3083,"name":"Breed","nodeType":"IdentifierPath","referencedDeclaration":3062,"src":"1218:5:18"},"referencedDeclaration":3062,"src":"1218:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3062","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"},{"constant":false,"id":3087,"indexed":false,"mutability":"mutable","name":"minter","nameLocation":"1242:6:18","nodeType":"VariableDeclaration","scope":3089,"src":"1234:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3086,"name":"address","nodeType":"ElementaryTypeName","src":"1234:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1217:32:18"},"src":"1202:48:18"},{"body":{"id":3139,"nodeType":"Block","src":"1528:266:18","statements":[{"expression":{"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3113,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"1538:16:18","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$287","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3115,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"1583:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3114,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"1557:25:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$287_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1557:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$287","typeString":"contract VRFCoordinatorV2Interface"}},"src":"1538:62:18","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$287","typeString":"contract VRFCoordinatorV2Interface"}},"id":3118,"nodeType":"ExpressionStatement","src":"1538:62:18"},{"expression":{"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3119,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"1610:16:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3120,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"1629:14:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1610:33:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3122,"nodeType":"ExpressionStatement","src":"1610:33:18"},{"expression":{"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3123,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"1653:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3124,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"1665:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1653:19:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3126,"nodeType":"ExpressionStatement","src":"1653:19:18"},{"expression":{"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3127,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"1682:18:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3128,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"1703:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1682:37:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":3130,"nodeType":"ExpressionStatement","src":"1682:37:18"},{"expression":{"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3131,"name":"i_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"1729:14:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3132,"name":"dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"1746:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string memory[3] memory"}},"src":"1729:29:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":3134,"nodeType":"ExpressionStatement","src":"1729:29:18"},{"expression":{"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3135,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"1768:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3136,"name":"mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"1780:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1768:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3138,"nodeType":"ExpressionStatement","src":"1768:19:18"}]},"id":3140,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3106,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"1479:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3107,"kind":"baseConstructorSpecifier","modifierName":{"id":3105,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"1461:17:18"},"nodeType":"ModifierInvocation","src":"1461:35:18"},{"arguments":[{"hexValue":"52616e646f6d497066734e6674","id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1504:15:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_1fbb089a5b07471e39eb78029b2acb73dbf0da42c63b98c25847acbba2802684","typeString":"literal_string \"RandomIpfsNft\""},"value":"RandomIpfsNft"},{"hexValue":"52494e","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1521:5:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c2493aacafadd9e7cfb3e25fe184ffa39fa77c9794b3bfc81822f04194b6f764","typeString":"literal_string \"RIN\""},"value":"RIN"}],"id":3111,"kind":"baseConstructorSpecifier","modifierName":{"id":3108,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1846,"src":"1497:6:18"},"nodeType":"ModifierInvocation","src":"1497:30:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"vrfCoordinatorV2","nameLocation":"1285:16:18","nodeType":"VariableDeclaration","scope":3140,"src":"1277:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3090,"name":"address","nodeType":"ElementaryTypeName","src":"1277:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"subscriptionId","nameLocation":"1318:14:18","nodeType":"VariableDeclaration","scope":3140,"src":"1311:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3092,"name":"uint64","nodeType":"ElementaryTypeName","src":"1311:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3095,"mutability":"mutable","name":"gasLane","nameLocation":"1350:7:18","nodeType":"VariableDeclaration","scope":3140,"src":"1342:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1342:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3097,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1374:16:18","nodeType":"VariableDeclaration","scope":3140,"src":"1367:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3096,"name":"uint32","nodeType":"ElementaryTypeName","src":"1367:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3101,"mutability":"mutable","name":"dogTokenUris","nameLocation":"1417:12:18","nodeType":"VariableDeclaration","scope":3140,"src":"1400:29:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string[3]"},"typeName":{"baseType":{"id":3098,"name":"string","nodeType":"ElementaryTypeName","src":"1400:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3100,"length":{"hexValue":"33","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1407:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"1400:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$3_storage_ptr","typeString":"string[3]"}},"visibility":"internal"},{"constant":false,"id":3103,"mutability":"mutable","name":"mintFee","nameLocation":"1447:7:18","nodeType":"VariableDeclaration","scope":3140,"src":"1439:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"1439:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:193:18"},"returnParameters":{"id":3112,"nodeType":"ParameterList","parameters":[],"src":"1528:0:18"},"scope":3378,"src":"1256:538:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3179,"nodeType":"Block","src":"1865:422:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3145,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1879:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1879:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3147,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"1891:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3153,"nodeType":"IfStatement","src":"1875:91:18","trueBody":{"id":3152,"nodeType":"Block","src":"1902:64:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3149,"name":"RandomIpfsNft__NeedMoreETHSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"1923:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1923:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3151,"nodeType":"RevertStatement","src":"1916:39:18"}]}},{"expression":{"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3154,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"1975:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3157,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2036:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3158,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"2059:16:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3159,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"2089:21:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3160,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"2124:18:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3161,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"2156:9:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3155,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"1987:16:18","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$287","typeString":"contract VRFCoordinatorV2Interface"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":227,"src":"1987:35:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1987:188:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1975:200:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3164,"nodeType":"ExpressionStatement","src":"1975:200:18"},{"expression":{"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3165,"name":"s_requestIdToSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"2185:19:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3167,"indexExpression":{"id":3166,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"2205:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2185:30:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3168,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2218:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2218:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2185:43:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3171,"nodeType":"ExpressionStatement","src":"2185:43:18"},{"eventCall":{"arguments":[{"components":[{"id":3173,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"2257:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2256:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3175,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2269:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2269:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3172,"name":"NftRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"2243:12:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2243:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3178,"nodeType":"EmitStatement","src":"2238:42:18"}]},"functionSelector":"aa152491","id":3180,"implemented":true,"kind":"function","modifiers":[],"name":"requestNft","nameLocation":"1809:10:18","nodeType":"FunctionDefinition","parameters":{"id":3141,"nodeType":"ParameterList","parameters":[],"src":"1819:2:18"},"returnParameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3143,"mutability":"mutable","name":"requestId","nameLocation":"1854:9:18","nodeType":"VariableDeclaration","scope":3180,"src":"1846:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3142,"name":"uint256","nodeType":"ElementaryTypeName","src":"1846:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1845:19:18"},"scope":3378,"src":"1800:487:18","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[30],"body":{"id":3240,"nodeType":"Block","src":"2408:434:18","statements":[{"assignments":[3190],"declarations":[{"constant":false,"id":3190,"mutability":"mutable","name":"dogOwner","nameLocation":"2426:8:18","nodeType":"VariableDeclaration","scope":3240,"src":"2418:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3189,"name":"address","nodeType":"ElementaryTypeName","src":"2418:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3194,"initialValue":{"baseExpression":{"id":3191,"name":"s_requestIdToSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"2437:19:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3193,"indexExpression":{"id":3192,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"2457:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2437:30:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2418:49:18"},{"assignments":[3196],"declarations":[{"constant":false,"id":3196,"mutability":"mutable","name":"newTokenId","nameLocation":"2485:10:18","nodeType":"VariableDeclaration","scope":3240,"src":"2477:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3198,"initialValue":{"id":3197,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"2498:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2477:35:18"},{"assignments":[3200],"declarations":[{"constant":false,"id":3200,"mutability":"mutable","name":"moddedRng","nameLocation":"2531:9:18","nodeType":"VariableDeclaration","scope":3240,"src":"2523:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"2523:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3206,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3201,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"2543:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3203,"indexExpression":{"hexValue":"30","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2555:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2543:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3204,"name":"MAX_CHANCE_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"2560:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2543:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2523:53:18"},{"assignments":[3209],"declarations":[{"constant":false,"id":3209,"mutability":"mutable","name":"dogBreed","nameLocation":"2592:8:18","nodeType":"VariableDeclaration","scope":3240,"src":"2586:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3062","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":3208,"nodeType":"UserDefinedTypeName","pathNode":{"id":3207,"name":"Breed","nodeType":"IdentifierPath","referencedDeclaration":3062,"src":"2586:5:18"},"referencedDeclaration":3062,"src":"2586:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3062","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"}],"id":3213,"initialValue":{"arguments":[{"id":3211,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"2625:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3210,"name":"getBreedFromModdedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"2603:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_enum$_Breed_$3062_$","typeString":"function (uint256) pure returns (enum RandomIpfsNft.Breed)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2603:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3062","typeString":"enum RandomIpfsNft.Breed"}},"nodeType":"VariableDeclarationStatement","src":"2586:49:18"},{"expression":{"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3214,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"2645:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3215,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"2663:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2645:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3217,"nodeType":"ExpressionStatement","src":"2645:32:18"},{"expression":{"arguments":[{"id":3219,"name":"dogOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"2697:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3220,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"2707:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3218,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1461,1490],"referencedDeclaration":1461,"src":"2687:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2687:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3222,"nodeType":"ExpressionStatement","src":"2687:31:18"},{"expression":{"arguments":[{"components":[{"id":3224,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"2742:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2741:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3226,"name":"i_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"2755:14:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":3231,"indexExpression":{"arguments":[{"id":3229,"name":"dogBreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"2778:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3062","typeString":"enum RandomIpfsNft.Breed"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Breed_$3062","typeString":"enum RandomIpfsNft.Breed"}],"id":3228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2770:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3227,"name":"uint256","nodeType":"ElementaryTypeName","src":"2770:7:18","typeDescriptions":{}}},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2770:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2755:33:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3223,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"2728:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:61:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3233,"nodeType":"ExpressionStatement","src":"2728:61:18"},{"eventCall":{"arguments":[{"components":[{"id":3235,"name":"dogBreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"2815:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3062","typeString":"enum RandomIpfsNft.Breed"}}],"id":3236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:10:18","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3062","typeString":"enum RandomIpfsNft.Breed"}},{"id":3237,"name":"dogOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"2826:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Breed_$3062","typeString":"enum RandomIpfsNft.Breed"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3234,"name":"NftMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"2804:9:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_Breed_$3062_$_t_address_$returns$__$","typeString":"function (enum RandomIpfsNft.Breed,address)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2804:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3239,"nodeType":"EmitStatement","src":"2799:36:18"}]},"id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"2302:18:18","nodeType":"FunctionDefinition","overrides":{"id":3187,"nodeType":"OverrideSpecifier","overrides":[],"src":"2395:8:18"},"parameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3182,"mutability":"mutable","name":"requestId","nameLocation":"2329:9:18","nodeType":"VariableDeclaration","scope":3241,"src":"2321:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"2321:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3185,"mutability":"mutable","name":"randomWords","nameLocation":"2357:11:18","nodeType":"VariableDeclaration","scope":3241,"src":"2340:28:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3183,"name":"uint256","nodeType":"ElementaryTypeName","src":"2340:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3184,"nodeType":"ArrayTypeName","src":"2340:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2320:49:18"},"returnParameters":{"id":3188,"nodeType":"ParameterList","parameters":[],"src":"2408:0:18"},"scope":3378,"src":"2293:549:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3274,"nodeType":"Block","src":"2885:213:18","statements":[{"assignments":[3247],"declarations":[{"constant":false,"id":3247,"mutability":"mutable","name":"amount","nameLocation":"2903:6:18","nodeType":"VariableDeclaration","scope":3274,"src":"2895:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3246,"name":"uint256","nodeType":"ElementaryTypeName","src":"2895:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3253,"initialValue":{"expression":{"arguments":[{"id":3250,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2920:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_RandomIpfsNft_$3378","typeString":"contract RandomIpfsNft"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RandomIpfsNft_$3378","typeString":"contract RandomIpfsNft"}],"id":3249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2912:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3248,"name":"address","nodeType":"ElementaryTypeName","src":"2912:7:18","typeDescriptions":{}}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2912:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2912:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2895:38:18"},{"assignments":[3255,null],"declarations":[{"constant":false,"id":3255,"mutability":"mutable","name":"success","nameLocation":"2949:7:18","nodeType":"VariableDeclaration","scope":3274,"src":"2944:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3254,"name":"bool","nodeType":"ElementaryTypeName","src":"2944:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3266,"initialValue":{"arguments":[{"hexValue":"","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3002:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":3258,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2970:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2970:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2962:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3256,"name":"address","nodeType":"ElementaryTypeName","src":"2962:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2962:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2962:24:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3262,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"2994:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2962:39:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2962:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2943:62:18"},{"condition":{"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3019:8:18","subExpression":{"id":3267,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"3020:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3273,"nodeType":"IfStatement","src":"3015:77:18","trueBody":{"id":3272,"nodeType":"Block","src":"3029:63:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3269,"name":"RandomIpfsNft__TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"3050:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3050:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3271,"nodeType":"RevertStatement","src":"3043:38:18"}]}}]},"functionSelector":"3ccfd60b","id":3275,"implemented":true,"kind":"function","modifiers":[{"id":3244,"kind":"modifierInvocation","modifierName":{"id":3243,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":898,"src":"2875:9:18"},"nodeType":"ModifierInvocation","src":"2875:9:18"}],"name":"withdraw","nameLocation":"2857:8:18","nodeType":"FunctionDefinition","parameters":{"id":3242,"nodeType":"ParameterList","parameters":[],"src":"2865:2:18"},"returnParameters":{"id":3245,"nodeType":"ParameterList","parameters":[],"src":"2885:0:18"},"scope":3378,"src":"2848:250:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3335,"nodeType":"Block","src":"3210:444:18","statements":[{"assignments":[3284],"declarations":[{"constant":false,"id":3284,"mutability":"mutable","name":"cumulativeSum","nameLocation":"3228:13:18","nodeType":"VariableDeclaration","scope":3335,"src":"3220:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3283,"name":"uint256","nodeType":"ElementaryTypeName","src":"3220:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3286,"initialValue":{"hexValue":"30","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3244:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3220:25:18"},{"assignments":[3292],"declarations":[{"constant":false,"id":3292,"mutability":"mutable","name":"chanceArray","nameLocation":"3273:11:18","nodeType":"VariableDeclaration","scope":3335,"src":"3255:29:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":3290,"name":"uint256","nodeType":"ElementaryTypeName","src":"3255:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3291,"length":{"hexValue":"33","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3263:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"3255:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"id":3295,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3293,"name":"getChanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"3287:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_array$_t_uint256_$3_memory_ptr_$","typeString":"function () pure returns (uint256[3] memory)"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3287:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"nodeType":"VariableDeclarationStatement","src":"3255:48:18"},{"body":{"id":3330,"nodeType":"Block","src":"3362:241:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3307,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"3397:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3308,"name":"cumulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"3410:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3397:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3310,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"3443:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"cumulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"3455:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":3312,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"3471:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":3314,"indexExpression":{"id":3313,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"3483:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3471:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3455:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3443:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3397:88:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3323,"nodeType":"IfStatement","src":"3376:172:18","trueBody":{"id":3322,"nodeType":"Block","src":"3500:48:18","statements":[{"expression":{"arguments":[{"id":3319,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"3531:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3318,"name":"Breed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"3525:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Breed_$3062_$","typeString":"type(enum RandomIpfsNft.Breed)"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3525:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3062","typeString":"enum RandomIpfsNft.Breed"}},"functionReturnParameters":3282,"id":3321,"nodeType":"Return","src":"3518:15:18"}]}},{"expression":{"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3324,"name":"cumulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"3561:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3325,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"3578:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":3327,"indexExpression":{"id":3326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"3590:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3578:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3561:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3329,"nodeType":"ExpressionStatement","src":"3561:31:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3300,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"3333:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3301,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"3337:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3337:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3333:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3331,"initializationExpression":{"assignments":[3297],"declarations":[{"constant":false,"id":3297,"mutability":"mutable","name":"i","nameLocation":"3326:1:18","nodeType":"VariableDeclaration","scope":3331,"src":"3318:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"3318:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3299,"initialValue":{"hexValue":"30","id":3298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3330:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3318:13:18"},"loopExpression":{"expression":{"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3357:3:18","subExpression":{"id":3304,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"3357:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3306,"nodeType":"ExpressionStatement","src":"3357:3:18"},"nodeType":"ForStatement","src":"3313:290:18"},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3332,"name":"RandomIpfsNft__OutOfBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"3619:26:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3619:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3334,"nodeType":"RevertStatement","src":"3612:35:18"}]},"functionSelector":"a51cccf3","id":3336,"implemented":true,"kind":"function","modifiers":[],"name":"getBreedFromModdedRng","nameLocation":"3113:21:18","nodeType":"FunctionDefinition","parameters":{"id":3278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3277,"mutability":"mutable","name":"moddedRng","nameLocation":"3143:9:18","nodeType":"VariableDeclaration","scope":3336,"src":"3135:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:19:18"},"returnParameters":{"id":3282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3336,"src":"3199:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3062","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":3280,"nodeType":"UserDefinedTypeName","pathNode":{"id":3279,"name":"Breed","nodeType":"IdentifierPath","referencedDeclaration":3062,"src":"3199:5:18"},"referencedDeclaration":3062,"src":"3199:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$3062","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"}],"src":"3198:7:18"},"scope":3378,"src":"3104:550:18","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":3348,"nodeType":"Block","src":"3726:50:18","statements":[{"expression":{"components":[{"hexValue":"3130","id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3744:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},{"hexValue":"3330","id":3344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3748:2:18","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},{"id":3345,"name":"MAX_CHANCE_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"3752:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3346,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3743:26:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"functionReturnParameters":3342,"id":3347,"nodeType":"Return","src":"3736:33:18"}]},"functionSelector":"5dacf5f4","id":3349,"implemented":true,"kind":"function","modifiers":[],"name":"getChanceArray","nameLocation":"3669:14:18","nodeType":"FunctionDefinition","parameters":{"id":3337,"nodeType":"ParameterList","parameters":[],"src":"3683:2:18"},"returnParameters":{"id":3342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3349,"src":"3707:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":3338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3707:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3340,"length":{"hexValue":"33","id":3339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3715:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"3707:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"src":"3706:19:18"},"scope":3378,"src":"3660:116:18","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":3356,"nodeType":"Block","src":"3834:33:18","statements":[{"expression":{"id":3354,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"3851:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3353,"id":3355,"nodeType":"Return","src":"3844:16:18"}]},"functionSelector":"7a5caab3","id":3357,"implemented":true,"kind":"function","modifiers":[],"name":"getMintFee","nameLocation":"3791:10:18","nodeType":"FunctionDefinition","parameters":{"id":3350,"nodeType":"ParameterList","parameters":[],"src":"3801:2:18"},"returnParameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3357,"src":"3825:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"3825:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3824:9:18"},"scope":3378,"src":"3782:85:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3368,"nodeType":"Block","src":"3977:45:18","statements":[{"expression":{"baseExpression":{"id":3364,"name":"i_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"3994:14:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":3366,"indexExpression":{"id":3365,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"4009:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3994:21:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":3363,"id":3367,"nodeType":"Return","src":"3987:28:18"}]},"functionSelector":"3af25975","id":3369,"implemented":true,"kind":"function","modifiers":[],"name":"getDogTokenUris","nameLocation":"3882:15:18","nodeType":"FunctionDefinition","parameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"index","nameLocation":"3906:5:18","nodeType":"VariableDeclaration","scope":3369,"src":"3898:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3358,"name":"uint256","nodeType":"ElementaryTypeName","src":"3898:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3897:15:18"},"returnParameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3369,"src":"3958:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3361,"name":"string","nodeType":"ElementaryTypeName","src":"3958:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3957:15:18"},"scope":3378,"src":"3873:149:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3376,"nodeType":"Block","src":"4085:38:18","statements":[{"expression":{"id":3374,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"4102:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3373,"id":3375,"nodeType":"Return","src":"4095:21:18"}]},"functionSelector":"6e02007d","id":3377,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"4037:15:18","nodeType":"FunctionDefinition","parameters":{"id":3370,"nodeType":"ParameterList","parameters":[],"src":"4052:2:18"},"returnParameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3377,"src":"4076:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:18"},"scope":3378,"src":"4028:95:18","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3379,"src":"447:3678:18","usedErrors":[8,3033,3035,3037]}],"src":"30:4096:18"},"id":18},"contracts/test/VRFCoordinatorV2Mock.sol":{"ast":{"absolutePath":"contracts/test/VRFCoordinatorV2Mock.sol","exportedSymbols":{"LinkTokenInterface":[198],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[287],"VRFCoordinatorV2Mock":[866]},"id":3382,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3380,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:19"},{"absolutePath":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","id":3381,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3382,"sourceUnit":867,"src":"57:70:19","symbolAliases":[],"unitAlias":""}],"src":"32:96:19"},"id":19}},"contracts":{"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"LinkTokenInterface":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"increaseApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"VRFCoordinatorV2Mock":{"abi":[{"inputs":[{"internalType":"uint96","name":"_baseFee","type":"uint96"},{"internalType":"uint96","name":"_gasPriceLink","type":"uint96"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidSubscription","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"MustBeSubOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputSeed","type":"uint256"},{"indexed":false,"internalType":"uint96","name":"payment","type":"uint96"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"RandomWordsFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"preSeed","type":"uint256"},{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"indexed":false,"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"numWords","type":"uint32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RandomWordsRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SubscriptionCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint256","name":"oldBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"SubscriptionFunded","type":"event"},{"inputs":[],"name":"BASE_FEE","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GAS_PRICE_LINK","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"fulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"uint96","name":"_amount","type":"uint96"}],"name":"fundSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_keyHash","type":"bytes32"},{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"uint16","name":"_minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"_callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"_numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"_subId":"- A unique subscription id."}},"fulfillRandomWords(uint256,address)":{"details":"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.","params":{"_consumer":"the VRF randomness consumer to send the result to","_requestId":"the request to fulfill"}},"fundSubscription(uint64,uint96)":{"params":{"_amount":"the amount to fund","_subId":"the subscription to fund"}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_402":{"entryPoint":null,"id":402,"parameterSlots":2,"returnSlots":0},"abi_decode_t_uint96_fromMemory":{"entryPoint":205,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint96t_uint96_fromMemory":{"entryPoint":228,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":155,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":150,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":179,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1228:20","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:20","statements":[{"nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:20"},"nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:20"},"nodeType":"YulFunctionCall","src":"187:12:20"},"nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:20"},"nodeType":"YulFunctionCall","src":"310:12:20"},"nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nodeType":"YulBlock","src":"378:65:20","statements":[{"nodeType":"YulAssignment","src":"388:49:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"410:26:20","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:20"},"nodeType":"YulFunctionCall","src":"399:38:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:20"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:20","type":""}],"src":"334:109:20"},{"body":{"nodeType":"YulBlock","src":"491:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"547:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"556:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"559:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"549:6:20"},"nodeType":"YulFunctionCall","src":"549:12:20"},"nodeType":"YulExpressionStatement","src":"549:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"514:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"538:5:20"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"521:16:20"},"nodeType":"YulFunctionCall","src":"521:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"511:2:20"},"nodeType":"YulFunctionCall","src":"511:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"504:6:20"},"nodeType":"YulFunctionCall","src":"504:42:20"},"nodeType":"YulIf","src":"501:62:20"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"484:5:20","type":""}],"src":"449:120:20"},{"body":{"nodeType":"YulBlock","src":"637:79:20","statements":[{"nodeType":"YulAssignment","src":"647:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"662:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"656:5:20"},"nodeType":"YulFunctionCall","src":"656:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"647:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"704:5:20"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"678:25:20"},"nodeType":"YulFunctionCall","src":"678:32:20"},"nodeType":"YulExpressionStatement","src":"678:32:20"}]},"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"615:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"623:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"631:5:20","type":""}],"src":"575:141:20"},{"body":{"nodeType":"YulBlock","src":"814:411:20","statements":[{"body":{"nodeType":"YulBlock","src":"860:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"862:77:20"},"nodeType":"YulFunctionCall","src":"862:79:20"},"nodeType":"YulExpressionStatement","src":"862:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"835:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"844:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"831:3:20"},"nodeType":"YulFunctionCall","src":"831:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"856:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"827:3:20"},"nodeType":"YulFunctionCall","src":"827:32:20"},"nodeType":"YulIf","src":"824:119:20"},{"nodeType":"YulBlock","src":"953:127:20","statements":[{"nodeType":"YulVariableDeclaration","src":"968:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"982:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"972:6:20","type":""}]},{"nodeType":"YulAssignment","src":"997:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1042:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1053:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1038:3:20"},"nodeType":"YulFunctionCall","src":"1038:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1062:7:20"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"1007:30:20"},"nodeType":"YulFunctionCall","src":"1007:63:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"997:6:20"}]}]},{"nodeType":"YulBlock","src":"1090:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1105:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1119:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1109:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1135:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1180:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1191:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1176:3:20"},"nodeType":"YulFunctionCall","src":"1176:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1200:7:20"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"1145:30:20"},"nodeType":"YulFunctionCall","src":"1145:63:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1135:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint96t_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"776:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"787:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"799:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"807:6:20","type":""}],"src":"722:503:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_uint96t_uint96_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040526001805560646002553480156200001a57600080fd5b5060405162002049380380620020498339818101604052810190620000409190620000e4565b816bffffffffffffffffffffffff166080816bffffffffffffffffffffffff1660a01b81525050806bffffffffffffffffffffffff1660a0816bffffffffffffffffffffffff1660a01b8152505050506200012b565b600080fd5b60006bffffffffffffffffffffffff82169050919050565b620000be816200009b565b8114620000ca57600080fd5b50565b600081519050620000de81620000b3565b92915050565b60008060408385031215620000fe57620000fd62000096565b5b60006200010e85828601620000cd565b92505060206200012185828601620000cd565b9150509250929050565b60805160a01c60a05160a01c611ee4620001656000396000818161086c0152610cdc01526000818161031101526108b10152611ee46000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c8063823597401161008c578063a410347f11610066578063a410347f146101eb578063a47c769614610209578063afc69b531461023c578063d7ae1d3014610258576100ce565b806382359740146101955780639f87fad7146101b1578063a21a23e4146101cd576100ce565b8062012291146100d357806304c357cb146100f35780633d18651e1461010f5780635d3b1d301461012d5780637341c10c1461015d578063808974ff14610179575b600080fd5b6100db610274565b6040516100ea93929190611391565b60405180910390f35b61010d60048036038101906101089190611472565b6102d4565b005b61011761030f565b60405161012491906114d9565b60405180910390f35b61014760048036038101906101429190611578565b610333565b604051610154919061160c565b60405180910390f35b61017760048036038101906101729190611472565b61054f565b005b610193600480360381019061018e9190611653565b61058a565b005b6101af60048036038101906101aa9190611693565b610aaf565b005b6101cb60048036038101906101c69190611472565b610aea565b005b6101d5610b25565b6040516101e291906116cf565b60405180910390f35b6101f3610cda565b60405161020091906114d9565b60405180910390f35b610223600480360381019061021e9190611693565b610cfe565b60405161023394939291906117b7565b60405180910390f35b6102566004803603810190610251919061182f565b610e9f565b005b610272600480360381019061026d9190611472565b61106a565b005b60008060606003621e8480600067ffffffffffffffff81111561029a5761029961186f565b5b6040519080825280602002602001820160405280156102c85781602001602082028036833780820191505090505b50925092509250909192565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610306906118fb565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b60008073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103e5576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008154809291906103fa9061194a565b9190505590506000600260008154809291906104159061194a565b91905055905060405180606001604052808867ffffffffffffffff1681526020018663ffffffff1681526020018563ffffffff168152506004600084815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548163ffffffff021916908363ffffffff160217905550604082015181600001600c6101000a81548163ffffffff021916908363ffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff168767ffffffffffffffff16897f63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a977285858b8b8b604051610539959493929190611993565b60405180910390a4819250505095945050505050565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610581906118fb565b60405180910390fd5b60005a905060006004600085815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe90611a32565b60405180910390fd5b6000600460008581526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff168152505090506000816040015163ffffffff1667ffffffffffffffff8111156106cd576106cc61186f565b5b6040519080825280602002602001820160405280156106fb5781602001602082028036833780820191505090505b50905060005b826040015163ffffffff16811015610771578581604051602001610726929190611a52565b6040516020818303038152906040528051906020012060001c82828151811061075257610751611a7b565b5b60200260200101818152505080806107699061194a565b915050610701565b50600080631fe543e360e01b8784604051602401610790929190611b68565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008673ffffffffffffffffffffffffffffffffffffffff16856020015163ffffffff16836040516108219190611c12565b60006040518083038160008787f1925050503d806000811461085f576040519150601f19603f3d011682016040523d82523d6000602084013e610864565b606091505b5050905060007f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff165a886108a59190611c29565b6108af9190611c5d565b7f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff166108e89190611cb7565b9050806bffffffffffffffffffffffff1660036000886000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff161015610986576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060036000886000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff166109db9190611d0d565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550600460008a8152602001908152602001600020600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549063ffffffff021916905560008201600c6101000a81549063ffffffff02191690555050887f7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e48a8385604051610a9c93929190611d5c565b60405180910390a2505050505050505050565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae1906118fb565b60405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1c906118fb565b60405180910390fd5b600080600081819054906101000a900467ffffffffffffffff1680929190610b4c90611d93565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff16815250600360008060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555090505060008054906101000a900467ffffffffffffffff1667ffffffffffffffff167f464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf33604051610cb89190611dc4565b60405180910390a260008054906101000a900467ffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060006060600073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610db6576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166000600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600067ffffffffffffffff811115610e6157610e6061186f565b5b604051908082528060200260200182016040528015610e8f5781602001602082028036833780820191505090505b5093509350935093509193509193565b600073ffffffffffffffffffffffffffffffffffffffff16600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f50576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff16905081600360008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff16610fe89190611ddf565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508267ffffffffffffffff167fd39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f882848461104f9190611ddf565b60405161105d929190611e5c565b60405180910390a2505050565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611121576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461119157806040517fd8a3fb520000000000000000000000000000000000000000000000000000000081526004016111889190611dc4565b60405180910390fd5b8367ffffffffffffffff167fe8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd4981584600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff1660405161120f929190611e85565b60405180910390a2600360008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff0219169055505050505050565b600061ffff82169050919050565b6112a48161128d565b82525050565b600063ffffffff82169050919050565b6112c3816112aa565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b611308816112f5565b82525050565b600061131a83836112ff565b60208301905092915050565b6000602082019050919050565b600061133e826112c9565b61134881856112d4565b9350611353836112e5565b8060005b8381101561138457815161136b888261130e565b975061137683611326565b925050600181019050611357565b5085935050505092915050565b60006060820190506113a6600083018661129b565b6113b360208301856112ba565b81810360408301526113c58184611333565b9050949350505050565b600080fd5b600067ffffffffffffffff82169050919050565b6113f1816113d4565b81146113fc57600080fd5b50565b60008135905061140e816113e8565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061143f82611414565b9050919050565b61144f81611434565b811461145a57600080fd5b50565b60008135905061146c81611446565b92915050565b60008060408385031215611489576114886113cf565b5b6000611497858286016113ff565b92505060206114a88582860161145d565b9150509250929050565b60006bffffffffffffffffffffffff82169050919050565b6114d3816114b2565b82525050565b60006020820190506114ee60008301846114ca565b92915050565b6114fd816112f5565b811461150857600080fd5b50565b60008135905061151a816114f4565b92915050565b6115298161128d565b811461153457600080fd5b50565b60008135905061154681611520565b92915050565b611555816112aa565b811461156057600080fd5b50565b6000813590506115728161154c565b92915050565b600080600080600060a08688031215611594576115936113cf565b5b60006115a28882890161150b565b95505060206115b3888289016113ff565b94505060406115c488828901611537565b93505060606115d588828901611563565b92505060806115e688828901611563565b9150509295509295909350565b6000819050919050565b611606816115f3565b82525050565b600060208201905061162160008301846115fd565b92915050565b611630816115f3565b811461163b57600080fd5b50565b60008135905061164d81611627565b92915050565b6000806040838503121561166a576116696113cf565b5b60006116788582860161163e565b92505060206116898582860161145d565b9150509250929050565b6000602082840312156116a9576116a86113cf565b5b60006116b7848285016113ff565b91505092915050565b6116c9816113d4565b82525050565b60006020820190506116e460008301846116c0565b92915050565b6116f381611434565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61172e81611434565b82525050565b60006117408383611725565b60208301905092915050565b6000602082019050919050565b6000611764826116f9565b61176e8185611704565b935061177983611715565b8060005b838110156117aa5781516117918882611734565b975061179c8361174c565b92505060018101905061177d565b5085935050505092915050565b60006080820190506117cc60008301876114ca565b6117d960208301866116c0565b6117e660408301856116ea565b81810360608301526117f88184611759565b905095945050505050565b61180c816114b2565b811461181757600080fd5b50565b60008135905061182981611803565b92915050565b60008060408385031215611846576118456113cf565b5b6000611854858286016113ff565b92505060206118658582860161181a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f6e6f7420696d706c656d656e7465640000000000000000000000000000000000600082015250565b60006118e5600f8361189e565b91506118f0826118af565b602082019050919050565b60006020820190508181036000830152611914816118d8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611955826115f3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156119885761198761191b565b5b600182019050919050565b600060a0820190506119a860008301886115fd565b6119b560208301876115fd565b6119c2604083018661129b565b6119cf60608301856112ba565b6119dc60808301846112ba565b9695505050505050565b7f6e6f6e6578697374656e74207265717565737400000000000000000000000000600082015250565b6000611a1c60138361189e565b9150611a27826119e6565b602082019050919050565b60006020820190508181036000830152611a4b81611a0f565b9050919050565b6000604082019050611a6760008301856115fd565b611a7460208301846115fd565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611adf816115f3565b82525050565b6000611af18383611ad6565b60208301905092915050565b6000602082019050919050565b6000611b1582611aaa565b611b1f8185611ab5565b9350611b2a83611ac6565b8060005b83811015611b5b578151611b428882611ae5565b9750611b4d83611afd565b925050600181019050611b2e565b5085935050505092915050565b6000604082019050611b7d60008301856115fd565b8181036020830152611b8f8184611b0a565b90509392505050565b600081519050919050565b600081905092915050565b60005b83811015611bcc578082015181840152602081019050611bb1565b83811115611bdb576000848401525b50505050565b6000611bec82611b98565b611bf68185611ba3565b9350611c06818560208601611bae565b80840191505092915050565b6000611c1e8284611be1565b915081905092915050565b6000611c34826115f3565b9150611c3f836115f3565b925082821015611c5257611c5161191b565b5b828203905092915050565b6000611c68826115f3565b9150611c73836115f3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611cac57611cab61191b565b5b828202905092915050565b6000611cc2826115f3565b9150611ccd836115f3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d0257611d0161191b565b5b828201905092915050565b6000611d18826114b2565b9150611d23836114b2565b925082821015611d3657611d3561191b565b5b828203905092915050565b60008115159050919050565b611d5681611d41565b82525050565b6000606082019050611d7160008301866115fd565b611d7e60208301856114ca565b611d8b6040830184611d4d565b949350505050565b6000611d9e826113d4565b915067ffffffffffffffff821415611db957611db861191b565b5b600182019050919050565b6000602082019050611dd960008301846116ea565b92915050565b6000611dea826114b2565b9150611df5836114b2565b9250826bffffffffffffffffffffffff03821115611e1657611e1561191b565b5b828201905092915050565b6000819050919050565b6000611e46611e41611e3c846114b2565b611e21565b6115f3565b9050919050565b611e5681611e2b565b82525050565b6000604082019050611e716000830185611e4d565b611e7e6020830184611e4d565b9392505050565b6000604082019050611e9a60008301856116ea565b611ea76020830184611e4d565b939250505056fea2646970667358221220e94f07f3e4bb71dae8e3eadbfe05f98643ca236f2aef48270e1b962a33ec18bd64736f6c63430008080033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SSTORE PUSH1 0x64 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2049 CODESIZE SUB DUP1 PUSH3 0x2049 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x40 SWAP2 SWAP1 PUSH3 0xE4 JUMP JUMPDEST DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 SHL DUP2 MSTORE POP POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 SHL DUP2 MSTORE POP POP POP POP PUSH3 0x12B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xBE DUP2 PUSH3 0x9B JUMP JUMPDEST DUP2 EQ PUSH3 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xDE DUP2 PUSH3 0xB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xFE JUMPI PUSH3 0xFD PUSH3 0x96 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x10E DUP6 DUP3 DUP7 ADD PUSH3 0xCD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x121 DUP6 DUP3 DUP7 ADD PUSH3 0xCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 SHR PUSH1 0xA0 MLOAD PUSH1 0xA0 SHR PUSH2 0x1EE4 PUSH3 0x165 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x86C ADD MSTORE PUSH2 0xCDC ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x311 ADD MSTORE PUSH2 0x8B1 ADD MSTORE PUSH2 0x1EE4 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82359740 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA410347F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA410347F EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xAFC69B53 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x258 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x82359740 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x1CD JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x3D18651E EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH2 0xE9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x106A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x3 PUSH3 0x1E8480 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29A JUMPI PUSH2 0x299 PUSH2 0x186F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3FA SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x415 SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP10 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x539 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x581 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FE SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CD JUMPI PUSH2 0x6CC PUSH2 0x186F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x771 JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x726 SWAP3 SWAP2 SWAP1 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x752 JUMPI PUSH2 0x751 PUSH2 0x1A7B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x769 SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x701 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x790 SWAP3 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x864 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP9 PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH2 0x8AF SWAP2 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP11 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA9C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1C SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB4C SWAP1 PUSH2 0x1D93 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE61 JUMPI PUSH2 0xE60 PUSH2 0x186F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE8F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE8 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP5 DUP5 PUSH2 0x104F SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105D SWAP3 SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1191 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1188 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP5 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x120F SWAP3 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A4 DUP2 PUSH2 0x128D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C3 DUP2 PUSH2 0x12AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1308 DUP2 PUSH2 0x12F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x131A DUP4 DUP4 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133E DUP3 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x1348 DUP2 DUP6 PUSH2 0x12D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1353 DUP4 PUSH2 0x12E5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1384 JUMPI DUP2 MLOAD PUSH2 0x136B DUP9 DUP3 PUSH2 0x130E JUMP JUMPDEST SWAP8 POP PUSH2 0x1376 DUP4 PUSH2 0x1326 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1357 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13A6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x129B JUMP JUMPDEST PUSH2 0x13B3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12BA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x13C5 DUP2 DUP5 PUSH2 0x1333 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F1 DUP2 PUSH2 0x13D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x13FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140E DUP2 PUSH2 0x13E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143F DUP3 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144F DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP2 EQ PUSH2 0x145A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146C DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1489 JUMPI PUSH2 0x1488 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1497 DUP6 DUP3 DUP7 ADD PUSH2 0x13FF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A8 DUP6 DUP3 DUP7 ADD PUSH2 0x145D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D3 DUP2 PUSH2 0x14B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14EE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14FD DUP2 PUSH2 0x12F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x151A DUP2 PUSH2 0x14F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1529 DUP2 PUSH2 0x128D JUMP JUMPDEST DUP2 EQ PUSH2 0x1534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1546 DUP2 PUSH2 0x1520 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1555 DUP2 PUSH2 0x12AA JUMP JUMPDEST DUP2 EQ PUSH2 0x1560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1572 DUP2 PUSH2 0x154C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1594 JUMPI PUSH2 0x1593 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15A2 DUP9 DUP3 DUP10 ADD PUSH2 0x150B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x15B3 DUP9 DUP3 DUP10 ADD PUSH2 0x13FF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x15C4 DUP9 DUP3 DUP10 ADD PUSH2 0x1537 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x15D5 DUP9 DUP3 DUP10 ADD PUSH2 0x1563 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x15E6 DUP9 DUP3 DUP10 ADD PUSH2 0x1563 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1606 DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1621 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1630 DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x163B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x164D DUP2 PUSH2 0x1627 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x166A JUMPI PUSH2 0x1669 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1678 DUP6 DUP3 DUP7 ADD PUSH2 0x163E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1689 DUP6 DUP3 DUP7 ADD PUSH2 0x145D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A9 JUMPI PUSH2 0x16A8 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16B7 DUP5 DUP3 DUP6 ADD PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16C9 DUP2 PUSH2 0x13D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16F3 DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172E DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1740 DUP4 DUP4 PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1764 DUP3 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x176E DUP2 DUP6 PUSH2 0x1704 JUMP JUMPDEST SWAP4 POP PUSH2 0x1779 DUP4 PUSH2 0x1715 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17AA JUMPI DUP2 MLOAD PUSH2 0x1791 DUP9 DUP3 PUSH2 0x1734 JUMP JUMPDEST SWAP8 POP PUSH2 0x179C DUP4 PUSH2 0x174C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x177D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x17CC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x17D9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x17E6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16EA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x17F8 DUP2 DUP5 PUSH2 0x1759 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x180C DUP2 PUSH2 0x14B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1829 DUP2 PUSH2 0x1803 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1846 JUMPI PUSH2 0x1845 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1854 DUP6 DUP3 DUP7 ADD PUSH2 0x13FF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1865 DUP6 DUP3 DUP7 ADD PUSH2 0x181A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420696D706C656D656E7465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E5 PUSH1 0xF DUP4 PUSH2 0x189E JUMP JUMPDEST SWAP2 POP PUSH2 0x18F0 DUP3 PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1914 DUP2 PUSH2 0x18D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1955 DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1988 JUMPI PUSH2 0x1987 PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x19A8 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x19B5 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x19C2 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x129B JUMP JUMPDEST PUSH2 0x19CF PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x19DC PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x12BA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x6E6F6E6578697374656E74207265717565737400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1C PUSH1 0x13 DUP4 PUSH2 0x189E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A27 DUP3 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4B DUP2 PUSH2 0x1A0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A67 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x1A74 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADF DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF1 DUP4 DUP4 PUSH2 0x1AD6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B15 DUP3 PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0x1B1F DUP2 DUP6 PUSH2 0x1AB5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B2A DUP4 PUSH2 0x1AC6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B5B JUMPI DUP2 MLOAD PUSH2 0x1B42 DUP9 DUP3 PUSH2 0x1AE5 JUMP JUMPDEST SWAP8 POP PUSH2 0x1B4D DUP4 PUSH2 0x1AFD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B2E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B7D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15FD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1B8F DUP2 DUP5 PUSH2 0x1B0A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BCC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BB1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1BDB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEC DUP3 PUSH2 0x1B98 JUMP JUMPDEST PUSH2 0x1BF6 DUP2 DUP6 PUSH2 0x1BA3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C06 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BAE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1E DUP3 DUP5 PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C34 DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3F DUP4 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1C52 JUMPI PUSH2 0x1C51 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C68 DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C73 DUP4 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CAC JUMPI PUSH2 0x1CAB PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC2 DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCD DUP4 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1D02 JUMPI PUSH2 0x1D01 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D18 DUP3 PUSH2 0x14B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D23 DUP4 PUSH2 0x14B2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1D36 JUMPI PUSH2 0x1D35 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D56 DUP2 PUSH2 0x1D41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D71 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x1D7E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x1D8B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D4D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E DUP3 PUSH2 0x13D4 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1DB9 JUMPI PUSH2 0x1DB8 PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEA DUP3 PUSH2 0x14B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF5 DUP4 PUSH2 0x14B2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E16 JUMPI PUSH2 0x1E15 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E46 PUSH2 0x1E41 PUSH2 0x1E3C DUP5 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x1E21 JUMP JUMPDEST PUSH2 0x15F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E56 DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E71 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0x1E7E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E4D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E9A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16EA JUMP JUMPDEST PUSH2 0x1EA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E4D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0x4F SMOD RETURN 0xE4 0xBB PUSH18 0xDAE8E3EADBFE05F98643CA236F2AEF48270E SHL SWAP7 0x2A CALLER 0xEC XOR 0xBD PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"254:5984:4:-:0;;;1144:1;1118:27;;1173:3;1149:27;;1494:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1562:8;1551:19;;;;;;;;;;;;1593:13;1576:30;;;;;;;;;;;;1494:117;;254:5984;;88:117:20;197:1;194;187:12;334:109;370:7;410:26;403:5;399:38;388:49;;334:109;;;:::o;449:120::-;521:23;538:5;521:23;:::i;:::-;514:5;511:34;501:62;;559:1;556;549:12;501:62;449:120;:::o;575:141::-;631:5;662:6;656:13;647:22;;678:32;704:5;678:32;:::i;:::-;575:141;;;;:::o;722:503::-;799:6;807;856:2;844:9;835:7;831:23;827:32;824:119;;;862:79;;:::i;:::-;824:119;982:1;1007:63;1062:7;1053:6;1042:9;1038:22;1007:63;:::i;:::-;997:73;;953:127;1119:2;1145:63;1200:7;1191:6;1180:9;1176:22;1145:63;:::i;:::-;1135:73;;1090:128;722:503;;;;;:::o;254:5984:4:-;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BASE_FEE_296":{"entryPoint":783,"id":296,"parameterSlots":0,"returnSlots":0},"@GAS_PRICE_LINK_298":{"entryPoint":3290,"id":298,"parameterSlots":0,"returnSlots":0},"@acceptSubscriptionOwnerTransfer_865":{"entryPoint":2735,"id":865,"parameterSlots":1,"returnSlots":0},"@addConsumer_828":{"entryPoint":1359,"id":828,"parameterSlots":2,"returnSlots":0},"@cancelSubscription_760":{"entryPoint":4202,"id":760,"parameterSlots":2,"returnSlots":0},"@createSubscription_687":{"entryPoint":2853,"id":687,"parameterSlots":0,"returnSlots":1},"@fulfillRandomWords_549":{"entryPoint":1418,"id":549,"parameterSlots":2,"returnSlots":0},"@fundSubscription_594":{"entryPoint":3743,"id":594,"parameterSlots":2,"returnSlots":0},"@getRequestConfig_815":{"entryPoint":628,"id":815,"parameterSlots":0,"returnSlots":3},"@getSubscription_733":{"entryPoint":3326,"id":733,"parameterSlots":1,"returnSlots":4},"@removeConsumer_841":{"entryPoint":2794,"id":841,"parameterSlots":2,"returnSlots":0},"@requestRandomWords_659":{"entryPoint":819,"id":659,"parameterSlots":5,"returnSlots":1},"@requestSubscriptionOwnerTransfer_854":{"entryPoint":724,"id":854,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address":{"entryPoint":5213,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":5387,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":5431,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":5475,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":5119,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96":{"entryPoint":6170,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32":{"entryPoint":5496,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256t_address":{"entryPoint":5715,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint64":{"entryPoint":5779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64t_address":{"entryPoint":5234,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint64t_uint96":{"entryPoint":6191,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":5940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32":{"entryPoint":4878,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":6885,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":5925,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5866,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":5977,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":4915,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6922,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7501,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":4863,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack":{"entryPoint":6360,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack":{"entryPoint":6671,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":4763,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":6870,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5629,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":4794,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":5824,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":7757,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96_fromStack":{"entryPoint":5322,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7186,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7620,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":7813,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6395,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6706,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5009,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5644,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7016,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6738,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":6547,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed":{"entryPoint":7516,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":5839,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed":{"entryPoint":5337,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6071,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7772,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":5909,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":4837,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6854,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":5881,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":4809,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6826,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7064,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":5964,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":4902,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6909,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":5892,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":4820,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6837,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7075,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6302,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7351,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint96":{"entryPoint":7647,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7261,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7209,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":7437,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5172,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7489,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4853,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":4749,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5140,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5619,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":4778,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":5076,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":5298,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":7723,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":7086,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":7713,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":6474,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint64":{"entryPoint":7571,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6427,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6779,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6255,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5071,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9":{"entryPoint":6319,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0":{"entryPoint":6630,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5190,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":5364,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":5408,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5671,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":5452,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":5096,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":6147,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22345:20","statements":[{"body":{"nodeType":"YulBlock","src":"51:45:20","statements":[{"nodeType":"YulAssignment","src":"61:29:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"76:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"83:6:20","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"72:3:20"},"nodeType":"YulFunctionCall","src":"72:18:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"61:7:20"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43:7:20","type":""}],"src":"7:89:20"},{"body":{"nodeType":"YulBlock","src":"165:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"182:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"204:5:20"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"187:16:20"},"nodeType":"YulFunctionCall","src":"187:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"175:6:20"},"nodeType":"YulFunctionCall","src":"175:36:20"},"nodeType":"YulExpressionStatement","src":"175:36:20"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"153:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"160:3:20","type":""}],"src":"102:115:20"},{"body":{"nodeType":"YulBlock","src":"267:49:20","statements":[{"nodeType":"YulAssignment","src":"277:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"292:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"299:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"288:3:20"},"nodeType":"YulFunctionCall","src":"288:22:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"277:7:20"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"249:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"259:7:20","type":""}],"src":"223:93:20"},{"body":{"nodeType":"YulBlock","src":"385:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"402:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"424:5:20"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"407:16:20"},"nodeType":"YulFunctionCall","src":"407:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"395:6:20"},"nodeType":"YulFunctionCall","src":"395:36:20"},"nodeType":"YulExpressionStatement","src":"395:36:20"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"373:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"380:3:20","type":""}],"src":"322:115:20"},{"body":{"nodeType":"YulBlock","src":"517:40:20","statements":[{"nodeType":"YulAssignment","src":"528:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"544:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"538:5:20"},"nodeType":"YulFunctionCall","src":"538:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"528:6:20"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"500:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"510:6:20","type":""}],"src":"443:114:20"},{"body":{"nodeType":"YulBlock","src":"674:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"691:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"696:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"684:6:20"},"nodeType":"YulFunctionCall","src":"684:19:20"},"nodeType":"YulExpressionStatement","src":"684:19:20"},{"nodeType":"YulAssignment","src":"712:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"731:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"736:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"727:3:20"},"nodeType":"YulFunctionCall","src":"727:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"712:11:20"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"646:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"651:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"662:11:20","type":""}],"src":"563:184:20"},{"body":{"nodeType":"YulBlock","src":"825:60:20","statements":[{"nodeType":"YulAssignment","src":"835:11:20","value":{"name":"ptr","nodeType":"YulIdentifier","src":"843:3:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"835:4:20"}]},{"nodeType":"YulAssignment","src":"856:22:20","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"868:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"873:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"864:3:20"},"nodeType":"YulFunctionCall","src":"864:14:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"856:4:20"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"812:3:20","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"820:4:20","type":""}],"src":"753:132:20"},{"body":{"nodeType":"YulBlock","src":"936:32:20","statements":[{"nodeType":"YulAssignment","src":"946:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"957:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"946:7:20"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"918:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"928:7:20","type":""}],"src":"891:77:20"},{"body":{"nodeType":"YulBlock","src":"1029:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1046:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1069:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1051:17:20"},"nodeType":"YulFunctionCall","src":"1051:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1039:6:20"},"nodeType":"YulFunctionCall","src":"1039:37:20"},"nodeType":"YulExpressionStatement","src":"1039:37:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1017:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1024:3:20","type":""}],"src":"974:108:20"},{"body":{"nodeType":"YulBlock","src":"1168:99:20","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1212:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"1220:3:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"1178:33:20"},"nodeType":"YulFunctionCall","src":"1178:46:20"},"nodeType":"YulExpressionStatement","src":"1178:46:20"},{"nodeType":"YulAssignment","src":"1233:28:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1251:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"1256:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1247:3:20"},"nodeType":"YulFunctionCall","src":"1247:14:20"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"1233:10:20"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"1141:6:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1149:3:20","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"1157:10:20","type":""}],"src":"1088:179:20"},{"body":{"nodeType":"YulBlock","src":"1348:38:20","statements":[{"nodeType":"YulAssignment","src":"1358:22:20","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1370:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"1375:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1366:3:20"},"nodeType":"YulFunctionCall","src":"1366:14:20"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"1358:4:20"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1335:3:20","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"1343:4:20","type":""}],"src":"1273:113:20"},{"body":{"nodeType":"YulBlock","src":"1546:608:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1556:68:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1618:5:20"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1570:47:20"},"nodeType":"YulFunctionCall","src":"1570:54:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1560:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1633:93:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1714:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"1719:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1640:73:20"},"nodeType":"YulFunctionCall","src":"1640:86:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1633:3:20"}]},{"nodeType":"YulVariableDeclaration","src":"1735:71:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1800:5:20"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1750:49:20"},"nodeType":"YulFunctionCall","src":"1750:56:20"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"1739:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1815:21:20","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"1829:7:20"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1819:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1905:224:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1919:34:20","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1946:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1940:5:20"},"nodeType":"YulFunctionCall","src":"1940:13:20"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"1923:13:20","type":""}]},{"nodeType":"YulAssignment","src":"1966:70:20","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"2017:13:20"},{"name":"pos","nodeType":"YulIdentifier","src":"2032:3:20"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"1973:43:20"},"nodeType":"YulFunctionCall","src":"1973:63:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1966:3:20"}]},{"nodeType":"YulAssignment","src":"2049:70:20","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2112:6:20"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2059:52:20"},"nodeType":"YulFunctionCall","src":"2059:60:20"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2049:6:20"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1867:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"1870:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1864:2:20"},"nodeType":"YulFunctionCall","src":"1864:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1878:18:20","statements":[{"nodeType":"YulAssignment","src":"1880:14:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1889:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"1892:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1885:3:20"},"nodeType":"YulFunctionCall","src":"1885:9:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1880:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"1849:14:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1851:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1860:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1855:1:20","type":""}]}]},"src":"1845:284:20"},{"nodeType":"YulAssignment","src":"2138:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"2145:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2138:3:20"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1525:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1532:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1541:3:20","type":""}],"src":"1422:732:20"},{"body":{"nodeType":"YulBlock","src":"2360:385:20","statements":[{"nodeType":"YulAssignment","src":"2370:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2382:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2393:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2378:3:20"},"nodeType":"YulFunctionCall","src":"2378:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2370:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2448:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2461:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2472:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2457:3:20"},"nodeType":"YulFunctionCall","src":"2457:17:20"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"2406:41:20"},"nodeType":"YulFunctionCall","src":"2406:69:20"},"nodeType":"YulExpressionStatement","src":"2406:69:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2527:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2540:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2551:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2536:3:20"},"nodeType":"YulFunctionCall","src":"2536:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"2485:41:20"},"nodeType":"YulFunctionCall","src":"2485:70:20"},"nodeType":"YulExpressionStatement","src":"2485:70:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2576:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2587:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2572:3:20"},"nodeType":"YulFunctionCall","src":"2572:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2596:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2602:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2592:3:20"},"nodeType":"YulFunctionCall","src":"2592:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2565:6:20"},"nodeType":"YulFunctionCall","src":"2565:48:20"},"nodeType":"YulExpressionStatement","src":"2565:48:20"},{"nodeType":"YulAssignment","src":"2622:116:20","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2724:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"2733:4:20"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2630:93:20"},"nodeType":"YulFunctionCall","src":"2630:108:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2622:4:20"}]}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2316:9:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2328:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2336:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2344:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2355:4:20","type":""}],"src":"2160:585:20"},{"body":{"nodeType":"YulBlock","src":"2791:35:20","statements":[{"nodeType":"YulAssignment","src":"2801:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2817:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2811:5:20"},"nodeType":"YulFunctionCall","src":"2811:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2801:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2784:6:20","type":""}],"src":"2751:75:20"},{"body":{"nodeType":"YulBlock","src":"2921:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2938:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2941:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2931:6:20"},"nodeType":"YulFunctionCall","src":"2931:12:20"},"nodeType":"YulExpressionStatement","src":"2931:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2832:117:20"},{"body":{"nodeType":"YulBlock","src":"3044:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3061:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3064:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3054:6:20"},"nodeType":"YulFunctionCall","src":"3054:12:20"},"nodeType":"YulExpressionStatement","src":"3054:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2955:117:20"},{"body":{"nodeType":"YulBlock","src":"3122:57:20","statements":[{"nodeType":"YulAssignment","src":"3132:41:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3147:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"3154:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3143:3:20"},"nodeType":"YulFunctionCall","src":"3143:30:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3132:7:20"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3104:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3114:7:20","type":""}],"src":"3078:101:20"},{"body":{"nodeType":"YulBlock","src":"3227:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"3283:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3292:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3295:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3285:6:20"},"nodeType":"YulFunctionCall","src":"3285:12:20"},"nodeType":"YulExpressionStatement","src":"3285:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3250:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3274:5:20"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"3257:16:20"},"nodeType":"YulFunctionCall","src":"3257:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3247:2:20"},"nodeType":"YulFunctionCall","src":"3247:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3240:6:20"},"nodeType":"YulFunctionCall","src":"3240:42:20"},"nodeType":"YulIf","src":"3237:62:20"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3220:5:20","type":""}],"src":"3185:120:20"},{"body":{"nodeType":"YulBlock","src":"3362:86:20","statements":[{"nodeType":"YulAssignment","src":"3372:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3394:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3381:12:20"},"nodeType":"YulFunctionCall","src":"3381:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3372:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3436:5:20"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"3410:25:20"},"nodeType":"YulFunctionCall","src":"3410:32:20"},"nodeType":"YulExpressionStatement","src":"3410:32:20"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3340:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"3348:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3356:5:20","type":""}],"src":"3311:137:20"},{"body":{"nodeType":"YulBlock","src":"3499:81:20","statements":[{"nodeType":"YulAssignment","src":"3509:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3524:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"3531:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3520:3:20"},"nodeType":"YulFunctionCall","src":"3520:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3509:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3481:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3491:7:20","type":""}],"src":"3454:126:20"},{"body":{"nodeType":"YulBlock","src":"3631:51:20","statements":[{"nodeType":"YulAssignment","src":"3641:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3670:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3652:17:20"},"nodeType":"YulFunctionCall","src":"3652:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3641:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3613:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3623:7:20","type":""}],"src":"3586:96:20"},{"body":{"nodeType":"YulBlock","src":"3731:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"3788:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3797:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3800:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3790:6:20"},"nodeType":"YulFunctionCall","src":"3790:12:20"},"nodeType":"YulExpressionStatement","src":"3790:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3754:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3779:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3761:17:20"},"nodeType":"YulFunctionCall","src":"3761:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3751:2:20"},"nodeType":"YulFunctionCall","src":"3751:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3744:6:20"},"nodeType":"YulFunctionCall","src":"3744:43:20"},"nodeType":"YulIf","src":"3741:63:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3724:5:20","type":""}],"src":"3688:122:20"},{"body":{"nodeType":"YulBlock","src":"3868:87:20","statements":[{"nodeType":"YulAssignment","src":"3878:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3900:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3887:12:20"},"nodeType":"YulFunctionCall","src":"3887:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3878:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3943:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3916:26:20"},"nodeType":"YulFunctionCall","src":"3916:33:20"},"nodeType":"YulExpressionStatement","src":"3916:33:20"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3846:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"3854:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3862:5:20","type":""}],"src":"3816:139:20"},{"body":{"nodeType":"YulBlock","src":"4043:390:20","statements":[{"body":{"nodeType":"YulBlock","src":"4089:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4091:77:20"},"nodeType":"YulFunctionCall","src":"4091:79:20"},"nodeType":"YulExpressionStatement","src":"4091:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4064:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4073:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4060:3:20"},"nodeType":"YulFunctionCall","src":"4060:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4085:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4056:3:20"},"nodeType":"YulFunctionCall","src":"4056:32:20"},"nodeType":"YulIf","src":"4053:119:20"},{"nodeType":"YulBlock","src":"4182:116:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4197:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4211:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4201:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4226:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4260:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4271:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4256:3:20"},"nodeType":"YulFunctionCall","src":"4256:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4280:7:20"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"4236:19:20"},"nodeType":"YulFunctionCall","src":"4236:52:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4226:6:20"}]}]},{"nodeType":"YulBlock","src":"4308:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4323:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4337:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4327:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4353:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4388:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4399:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4384:3:20"},"nodeType":"YulFunctionCall","src":"4384:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4408:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4363:20:20"},"nodeType":"YulFunctionCall","src":"4363:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4353:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint64t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4005:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4016:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4028:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4036:6:20","type":""}],"src":"3961:472:20"},{"body":{"nodeType":"YulBlock","src":"4483:65:20","statements":[{"nodeType":"YulAssignment","src":"4493:49:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4508:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"4515:26:20","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4504:3:20"},"nodeType":"YulFunctionCall","src":"4504:38:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4493:7:20"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4465:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4475:7:20","type":""}],"src":"4439:109:20"},{"body":{"nodeType":"YulBlock","src":"4617:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4634:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4656:5:20"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"4639:16:20"},"nodeType":"YulFunctionCall","src":"4639:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4627:6:20"},"nodeType":"YulFunctionCall","src":"4627:36:20"},"nodeType":"YulExpressionStatement","src":"4627:36:20"}]},"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4605:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4612:3:20","type":""}],"src":"4554:115:20"},{"body":{"nodeType":"YulBlock","src":"4771:122:20","statements":[{"nodeType":"YulAssignment","src":"4781:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4793:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4804:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4789:3:20"},"nodeType":"YulFunctionCall","src":"4789:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4781:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4859:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4872:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4883:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4868:3:20"},"nodeType":"YulFunctionCall","src":"4868:17:20"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"4817:41:20"},"nodeType":"YulFunctionCall","src":"4817:69:20"},"nodeType":"YulExpressionStatement","src":"4817:69:20"}]},"name":"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4743:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4755:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4766:4:20","type":""}],"src":"4675:218:20"},{"body":{"nodeType":"YulBlock","src":"4942:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"4999:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5008:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5011:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5001:6:20"},"nodeType":"YulFunctionCall","src":"5001:12:20"},"nodeType":"YulExpressionStatement","src":"5001:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4965:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4990:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"4972:17:20"},"nodeType":"YulFunctionCall","src":"4972:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4962:2:20"},"nodeType":"YulFunctionCall","src":"4962:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4955:6:20"},"nodeType":"YulFunctionCall","src":"4955:43:20"},"nodeType":"YulIf","src":"4952:63:20"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4935:5:20","type":""}],"src":"4899:122:20"},{"body":{"nodeType":"YulBlock","src":"5079:87:20","statements":[{"nodeType":"YulAssignment","src":"5089:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5111:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5098:12:20"},"nodeType":"YulFunctionCall","src":"5098:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5089:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5154:5:20"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"5127:26:20"},"nodeType":"YulFunctionCall","src":"5127:33:20"},"nodeType":"YulExpressionStatement","src":"5127:33:20"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5057:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"5065:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5073:5:20","type":""}],"src":"5027:139:20"},{"body":{"nodeType":"YulBlock","src":"5214:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"5270:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5279:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5282:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5272:6:20"},"nodeType":"YulFunctionCall","src":"5272:12:20"},"nodeType":"YulExpressionStatement","src":"5272:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5237:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5261:5:20"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"5244:16:20"},"nodeType":"YulFunctionCall","src":"5244:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5234:2:20"},"nodeType":"YulFunctionCall","src":"5234:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5227:6:20"},"nodeType":"YulFunctionCall","src":"5227:42:20"},"nodeType":"YulIf","src":"5224:62:20"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5207:5:20","type":""}],"src":"5172:120:20"},{"body":{"nodeType":"YulBlock","src":"5349:86:20","statements":[{"nodeType":"YulAssignment","src":"5359:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5381:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5368:12:20"},"nodeType":"YulFunctionCall","src":"5368:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5359:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5423:5:20"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"5397:25:20"},"nodeType":"YulFunctionCall","src":"5397:32:20"},"nodeType":"YulExpressionStatement","src":"5397:32:20"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5327:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"5335:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5343:5:20","type":""}],"src":"5298:137:20"},{"body":{"nodeType":"YulBlock","src":"5483:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"5539:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5548:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5551:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5541:6:20"},"nodeType":"YulFunctionCall","src":"5541:12:20"},"nodeType":"YulExpressionStatement","src":"5541:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5506:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5530:5:20"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"5513:16:20"},"nodeType":"YulFunctionCall","src":"5513:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5503:2:20"},"nodeType":"YulFunctionCall","src":"5503:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5496:6:20"},"nodeType":"YulFunctionCall","src":"5496:42:20"},"nodeType":"YulIf","src":"5493:62:20"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5476:5:20","type":""}],"src":"5441:120:20"},{"body":{"nodeType":"YulBlock","src":"5618:86:20","statements":[{"nodeType":"YulAssignment","src":"5628:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5650:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5637:12:20"},"nodeType":"YulFunctionCall","src":"5637:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5628:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5692:5:20"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"5666:25:20"},"nodeType":"YulFunctionCall","src":"5666:32:20"},"nodeType":"YulExpressionStatement","src":"5666:32:20"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5596:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"5604:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5612:5:20","type":""}],"src":"5567:137:20"},{"body":{"nodeType":"YulBlock","src":"5840:773:20","statements":[{"body":{"nodeType":"YulBlock","src":"5887:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5889:77:20"},"nodeType":"YulFunctionCall","src":"5889:79:20"},"nodeType":"YulExpressionStatement","src":"5889:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5861:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5870:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5857:3:20"},"nodeType":"YulFunctionCall","src":"5857:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5882:3:20","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5853:3:20"},"nodeType":"YulFunctionCall","src":"5853:33:20"},"nodeType":"YulIf","src":"5850:120:20"},{"nodeType":"YulBlock","src":"5980:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5995:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6009:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5999:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6024:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6059:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6070:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6055:3:20"},"nodeType":"YulFunctionCall","src":"6055:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6079:7:20"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6034:20:20"},"nodeType":"YulFunctionCall","src":"6034:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6024:6:20"}]}]},{"nodeType":"YulBlock","src":"6107:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6122:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6136:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6126:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6152:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6186:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6197:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6182:3:20"},"nodeType":"YulFunctionCall","src":"6182:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6206:7:20"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"6162:19:20"},"nodeType":"YulFunctionCall","src":"6162:52:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6152:6:20"}]}]},{"nodeType":"YulBlock","src":"6234:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6249:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6263:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6253:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6279:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6313:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6324:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6309:3:20"},"nodeType":"YulFunctionCall","src":"6309:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6333:7:20"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"6289:19:20"},"nodeType":"YulFunctionCall","src":"6289:52:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6279:6:20"}]}]},{"nodeType":"YulBlock","src":"6361:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6376:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6390:2:20","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6380:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6406:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6440:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6451:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6436:3:20"},"nodeType":"YulFunctionCall","src":"6436:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6460:7:20"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"6416:19:20"},"nodeType":"YulFunctionCall","src":"6416:52:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6406:6:20"}]}]},{"nodeType":"YulBlock","src":"6488:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6503:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6517:3:20","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6507:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6534:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6568:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6579:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6564:3:20"},"nodeType":"YulFunctionCall","src":"6564:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6588:7:20"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"6544:19:20"},"nodeType":"YulFunctionCall","src":"6544:52:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6534:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5778:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5789:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5801:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5809:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5817:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5825:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5833:6:20","type":""}],"src":"5710:903:20"},{"body":{"nodeType":"YulBlock","src":"6664:32:20","statements":[{"nodeType":"YulAssignment","src":"6674:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"6685:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6674:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6646:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6656:7:20","type":""}],"src":"6619:77:20"},{"body":{"nodeType":"YulBlock","src":"6767:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6784:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6807:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6789:17:20"},"nodeType":"YulFunctionCall","src":"6789:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6777:6:20"},"nodeType":"YulFunctionCall","src":"6777:37:20"},"nodeType":"YulExpressionStatement","src":"6777:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6755:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6762:3:20","type":""}],"src":"6702:118:20"},{"body":{"nodeType":"YulBlock","src":"6924:124:20","statements":[{"nodeType":"YulAssignment","src":"6934:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6946:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6957:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6942:3:20"},"nodeType":"YulFunctionCall","src":"6942:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6934:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7014:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7027:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7038:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7023:3:20"},"nodeType":"YulFunctionCall","src":"7023:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6970:43:20"},"nodeType":"YulFunctionCall","src":"6970:71:20"},"nodeType":"YulExpressionStatement","src":"6970:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6896:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6908:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6919:4:20","type":""}],"src":"6826:222:20"},{"body":{"nodeType":"YulBlock","src":"7097:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"7154:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7163:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7166:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7156:6:20"},"nodeType":"YulFunctionCall","src":"7156:12:20"},"nodeType":"YulExpressionStatement","src":"7156:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7120:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7145:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7127:17:20"},"nodeType":"YulFunctionCall","src":"7127:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7117:2:20"},"nodeType":"YulFunctionCall","src":"7117:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7110:6:20"},"nodeType":"YulFunctionCall","src":"7110:43:20"},"nodeType":"YulIf","src":"7107:63:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7090:5:20","type":""}],"src":"7054:122:20"},{"body":{"nodeType":"YulBlock","src":"7234:87:20","statements":[{"nodeType":"YulAssignment","src":"7244:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7266:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7253:12:20"},"nodeType":"YulFunctionCall","src":"7253:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7244:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7309:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"7282:26:20"},"nodeType":"YulFunctionCall","src":"7282:33:20"},"nodeType":"YulExpressionStatement","src":"7282:33:20"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7212:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"7220:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7228:5:20","type":""}],"src":"7182:139:20"},{"body":{"nodeType":"YulBlock","src":"7410:391:20","statements":[{"body":{"nodeType":"YulBlock","src":"7456:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7458:77:20"},"nodeType":"YulFunctionCall","src":"7458:79:20"},"nodeType":"YulExpressionStatement","src":"7458:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7431:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"7440:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7427:3:20"},"nodeType":"YulFunctionCall","src":"7427:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"7452:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7423:3:20"},"nodeType":"YulFunctionCall","src":"7423:32:20"},"nodeType":"YulIf","src":"7420:119:20"},{"nodeType":"YulBlock","src":"7549:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7564:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7578:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7568:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7593:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7628:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7639:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7624:3:20"},"nodeType":"YulFunctionCall","src":"7624:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7648:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7603:20:20"},"nodeType":"YulFunctionCall","src":"7603:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7593:6:20"}]}]},{"nodeType":"YulBlock","src":"7676:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7691:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7705:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7695:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7721:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7756:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7767:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7752:3:20"},"nodeType":"YulFunctionCall","src":"7752:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7776:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7731:20:20"},"nodeType":"YulFunctionCall","src":"7731:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7721:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7372:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7383:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7395:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7403:6:20","type":""}],"src":"7327:474:20"},{"body":{"nodeType":"YulBlock","src":"7872:262:20","statements":[{"body":{"nodeType":"YulBlock","src":"7918:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7920:77:20"},"nodeType":"YulFunctionCall","src":"7920:79:20"},"nodeType":"YulExpressionStatement","src":"7920:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7893:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"7902:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7889:3:20"},"nodeType":"YulFunctionCall","src":"7889:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"7914:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7885:3:20"},"nodeType":"YulFunctionCall","src":"7885:32:20"},"nodeType":"YulIf","src":"7882:119:20"},{"nodeType":"YulBlock","src":"8011:116:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8026:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8040:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8030:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8055:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8089:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"8100:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8085:3:20"},"nodeType":"YulFunctionCall","src":"8085:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8109:7:20"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"8065:19:20"},"nodeType":"YulFunctionCall","src":"8065:52:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8055:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7842:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7853:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7865:6:20","type":""}],"src":"7807:327:20"},{"body":{"nodeType":"YulBlock","src":"8203:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8220:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8242:5:20"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"8225:16:20"},"nodeType":"YulFunctionCall","src":"8225:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8213:6:20"},"nodeType":"YulFunctionCall","src":"8213:36:20"},"nodeType":"YulExpressionStatement","src":"8213:36:20"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8191:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8198:3:20","type":""}],"src":"8140:115:20"},{"body":{"nodeType":"YulBlock","src":"8357:122:20","statements":[{"nodeType":"YulAssignment","src":"8367:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8379:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8390:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8375:3:20"},"nodeType":"YulFunctionCall","src":"8375:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8367:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8445:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8458:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8469:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8454:3:20"},"nodeType":"YulFunctionCall","src":"8454:17:20"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"8403:41:20"},"nodeType":"YulFunctionCall","src":"8403:69:20"},"nodeType":"YulExpressionStatement","src":"8403:69:20"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8329:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8341:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8352:4:20","type":""}],"src":"8261:218:20"},{"body":{"nodeType":"YulBlock","src":"8550:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8567:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8590:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8572:17:20"},"nodeType":"YulFunctionCall","src":"8572:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8560:6:20"},"nodeType":"YulFunctionCall","src":"8560:37:20"},"nodeType":"YulExpressionStatement","src":"8560:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8538:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8545:3:20","type":""}],"src":"8485:118:20"},{"body":{"nodeType":"YulBlock","src":"8683:40:20","statements":[{"nodeType":"YulAssignment","src":"8694:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8710:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8704:5:20"},"nodeType":"YulFunctionCall","src":"8704:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8694:6:20"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8666:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8676:6:20","type":""}],"src":"8609:114:20"},{"body":{"nodeType":"YulBlock","src":"8840:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8857:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"8862:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8850:6:20"},"nodeType":"YulFunctionCall","src":"8850:19:20"},"nodeType":"YulExpressionStatement","src":"8850:19:20"},{"nodeType":"YulAssignment","src":"8878:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8897:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8902:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8893:3:20"},"nodeType":"YulFunctionCall","src":"8893:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8878:11:20"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8812:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"8817:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8828:11:20","type":""}],"src":"8729:184:20"},{"body":{"nodeType":"YulBlock","src":"8991:60:20","statements":[{"nodeType":"YulAssignment","src":"9001:11:20","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9009:3:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9001:4:20"}]},{"nodeType":"YulAssignment","src":"9022:22:20","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9034:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9039:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9030:3:20"},"nodeType":"YulFunctionCall","src":"9030:14:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9022:4:20"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8978:3:20","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8986:4:20","type":""}],"src":"8919:132:20"},{"body":{"nodeType":"YulBlock","src":"9112:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9129:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9152:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9134:17:20"},"nodeType":"YulFunctionCall","src":"9134:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9122:6:20"},"nodeType":"YulFunctionCall","src":"9122:37:20"},"nodeType":"YulExpressionStatement","src":"9122:37:20"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9100:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9107:3:20","type":""}],"src":"9057:108:20"},{"body":{"nodeType":"YulBlock","src":"9251:99:20","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9295:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"9303:3:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"9261:33:20"},"nodeType":"YulFunctionCall","src":"9261:46:20"},"nodeType":"YulExpressionStatement","src":"9261:46:20"},{"nodeType":"YulAssignment","src":"9316:28:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9334:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9339:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9330:3:20"},"nodeType":"YulFunctionCall","src":"9330:14:20"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"9316:10:20"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"9224:6:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9232:3:20","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"9240:10:20","type":""}],"src":"9171:179:20"},{"body":{"nodeType":"YulBlock","src":"9431:38:20","statements":[{"nodeType":"YulAssignment","src":"9441:22:20","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9453:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9458:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9449:3:20"},"nodeType":"YulFunctionCall","src":"9449:14:20"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9441:4:20"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9418:3:20","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9426:4:20","type":""}],"src":"9356:113:20"},{"body":{"nodeType":"YulBlock","src":"9629:608:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9639:68:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9701:5:20"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9653:47:20"},"nodeType":"YulFunctionCall","src":"9653:54:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9643:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9716:93:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9797:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9802:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9723:73:20"},"nodeType":"YulFunctionCall","src":"9723:86:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9716:3:20"}]},{"nodeType":"YulVariableDeclaration","src":"9818:71:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9883:5:20"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9833:49:20"},"nodeType":"YulFunctionCall","src":"9833:56:20"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"9822:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9898:21:20","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"9912:7:20"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"9902:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"9988:224:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10002:34:20","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10029:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10023:5:20"},"nodeType":"YulFunctionCall","src":"10023:13:20"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"10006:13:20","type":""}]},{"nodeType":"YulAssignment","src":"10049:70:20","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"10100:13:20"},{"name":"pos","nodeType":"YulIdentifier","src":"10115:3:20"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"10056:43:20"},"nodeType":"YulFunctionCall","src":"10056:63:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10049:3:20"}]},{"nodeType":"YulAssignment","src":"10132:70:20","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10195:6:20"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10142:52:20"},"nodeType":"YulFunctionCall","src":"10142:60:20"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10132:6:20"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9950:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"9953:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9947:2:20"},"nodeType":"YulFunctionCall","src":"9947:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9961:18:20","statements":[{"nodeType":"YulAssignment","src":"9963:14:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9972:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"9975:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9968:3:20"},"nodeType":"YulFunctionCall","src":"9968:9:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9963:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"9932:14:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9934:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"9943:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9938:1:20","type":""}]}]},"src":"9928:284:20"},{"nodeType":"YulAssignment","src":"10221:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"10228:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10221:3:20"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9608:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9615:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9624:3:20","type":""}],"src":"9505:732:20"},{"body":{"nodeType":"YulBlock","src":"10471:468:20","statements":[{"nodeType":"YulAssignment","src":"10481:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10493:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10504:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10489:3:20"},"nodeType":"YulFunctionCall","src":"10489:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10481:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10560:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10573:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10584:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10569:3:20"},"nodeType":"YulFunctionCall","src":"10569:17:20"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"10518:41:20"},"nodeType":"YulFunctionCall","src":"10518:69:20"},"nodeType":"YulExpressionStatement","src":"10518:69:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10639:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10652:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10663:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10648:3:20"},"nodeType":"YulFunctionCall","src":"10648:18:20"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"10597:41:20"},"nodeType":"YulFunctionCall","src":"10597:70:20"},"nodeType":"YulExpressionStatement","src":"10597:70:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10721:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10734:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10745:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10730:3:20"},"nodeType":"YulFunctionCall","src":"10730:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10677:43:20"},"nodeType":"YulFunctionCall","src":"10677:72:20"},"nodeType":"YulExpressionStatement","src":"10677:72:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10770:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10781:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10766:3:20"},"nodeType":"YulFunctionCall","src":"10766:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10790:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"10796:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10786:3:20"},"nodeType":"YulFunctionCall","src":"10786:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10759:6:20"},"nodeType":"YulFunctionCall","src":"10759:48:20"},"nodeType":"YulExpressionStatement","src":"10759:48:20"},{"nodeType":"YulAssignment","src":"10816:116:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10918:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"10927:4:20"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10824:93:20"},"nodeType":"YulFunctionCall","src":"10824:108:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10816:4:20"}]}]},"name":"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10419:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10431:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10439:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10447:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10455:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10466:4:20","type":""}],"src":"10243:696:20"},{"body":{"nodeType":"YulBlock","src":"10987:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"11043:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11052:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11055:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11045:6:20"},"nodeType":"YulFunctionCall","src":"11045:12:20"},"nodeType":"YulExpressionStatement","src":"11045:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11010:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11034:5:20"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"11017:16:20"},"nodeType":"YulFunctionCall","src":"11017:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11007:2:20"},"nodeType":"YulFunctionCall","src":"11007:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11000:6:20"},"nodeType":"YulFunctionCall","src":"11000:42:20"},"nodeType":"YulIf","src":"10997:62:20"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10980:5:20","type":""}],"src":"10945:120:20"},{"body":{"nodeType":"YulBlock","src":"11122:86:20","statements":[{"nodeType":"YulAssignment","src":"11132:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11154:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11141:12:20"},"nodeType":"YulFunctionCall","src":"11141:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11132:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11196:5:20"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"11170:25:20"},"nodeType":"YulFunctionCall","src":"11170:32:20"},"nodeType":"YulExpressionStatement","src":"11170:32:20"}]},"name":"abi_decode_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11100:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"11108:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11116:5:20","type":""}],"src":"11071:137:20"},{"body":{"nodeType":"YulBlock","src":"11295:389:20","statements":[{"body":{"nodeType":"YulBlock","src":"11341:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11343:77:20"},"nodeType":"YulFunctionCall","src":"11343:79:20"},"nodeType":"YulExpressionStatement","src":"11343:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11316:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"11325:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11312:3:20"},"nodeType":"YulFunctionCall","src":"11312:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"11337:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11308:3:20"},"nodeType":"YulFunctionCall","src":"11308:32:20"},"nodeType":"YulIf","src":"11305:119:20"},{"nodeType":"YulBlock","src":"11434:116:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11449:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11463:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11453:6:20","type":""}]},{"nodeType":"YulAssignment","src":"11478:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11512:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"11523:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11508:3:20"},"nodeType":"YulFunctionCall","src":"11508:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11532:7:20"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"11488:19:20"},"nodeType":"YulFunctionCall","src":"11488:52:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11478:6:20"}]}]},{"nodeType":"YulBlock","src":"11560:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11575:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11589:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11579:6:20","type":""}]},{"nodeType":"YulAssignment","src":"11605:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11639:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"11650:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11635:3:20"},"nodeType":"YulFunctionCall","src":"11635:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11659:7:20"}],"functionName":{"name":"abi_decode_t_uint96","nodeType":"YulIdentifier","src":"11615:19:20"},"nodeType":"YulFunctionCall","src":"11615:52:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11605:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint64t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11257:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11268:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11280:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11288:6:20","type":""}],"src":"11214:470:20"},{"body":{"nodeType":"YulBlock","src":"11718:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11735:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11738:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11728:6:20"},"nodeType":"YulFunctionCall","src":"11728:88:20"},"nodeType":"YulExpressionStatement","src":"11728:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11832:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11835:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11825:6:20"},"nodeType":"YulFunctionCall","src":"11825:15:20"},"nodeType":"YulExpressionStatement","src":"11825:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11856:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11859:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11849:6:20"},"nodeType":"YulFunctionCall","src":"11849:15:20"},"nodeType":"YulExpressionStatement","src":"11849:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"11690:180:20"},{"body":{"nodeType":"YulBlock","src":"11972:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11989:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"11994:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11982:6:20"},"nodeType":"YulFunctionCall","src":"11982:19:20"},"nodeType":"YulExpressionStatement","src":"11982:19:20"},{"nodeType":"YulAssignment","src":"12010:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12029:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12034:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12025:3:20"},"nodeType":"YulFunctionCall","src":"12025:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12010:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11944:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"11949:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11960:11:20","type":""}],"src":"11876:169:20"},{"body":{"nodeType":"YulBlock","src":"12157:59:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12179:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"12187:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12175:3:20"},"nodeType":"YulFunctionCall","src":"12175:14:20"},{"hexValue":"6e6f7420696d706c656d656e746564","kind":"string","nodeType":"YulLiteral","src":"12191:17:20","type":"","value":"not implemented"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12168:6:20"},"nodeType":"YulFunctionCall","src":"12168:41:20"},"nodeType":"YulExpressionStatement","src":"12168:41:20"}]},"name":"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12149:6:20","type":""}],"src":"12051:165:20"},{"body":{"nodeType":"YulBlock","src":"12368:220:20","statements":[{"nodeType":"YulAssignment","src":"12378:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12444:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12449:2:20","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12385:58:20"},"nodeType":"YulFunctionCall","src":"12385:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12378:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12550:3:20"}],"functionName":{"name":"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","nodeType":"YulIdentifier","src":"12461:88:20"},"nodeType":"YulFunctionCall","src":"12461:93:20"},"nodeType":"YulExpressionStatement","src":"12461:93:20"},{"nodeType":"YulAssignment","src":"12563:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12574:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12579:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12570:3:20"},"nodeType":"YulFunctionCall","src":"12570:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12563:3:20"}]}]},"name":"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12356:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12364:3:20","type":""}],"src":"12222:366:20"},{"body":{"nodeType":"YulBlock","src":"12765:248:20","statements":[{"nodeType":"YulAssignment","src":"12775:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12787:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12798:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12783:3:20"},"nodeType":"YulFunctionCall","src":"12783:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12775:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12822:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12833:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12818:3:20"},"nodeType":"YulFunctionCall","src":"12818:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12841:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"12847:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12837:3:20"},"nodeType":"YulFunctionCall","src":"12837:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12811:6:20"},"nodeType":"YulFunctionCall","src":"12811:47:20"},"nodeType":"YulExpressionStatement","src":"12811:47:20"},{"nodeType":"YulAssignment","src":"12867:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13001:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12875:124:20"},"nodeType":"YulFunctionCall","src":"12875:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12867:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12745:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12760:4:20","type":""}],"src":"12594:419:20"},{"body":{"nodeType":"YulBlock","src":"13047:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13064:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13067:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13057:6:20"},"nodeType":"YulFunctionCall","src":"13057:88:20"},"nodeType":"YulExpressionStatement","src":"13057:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13161:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13164:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13154:6:20"},"nodeType":"YulFunctionCall","src":"13154:15:20"},"nodeType":"YulExpressionStatement","src":"13154:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13185:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13188:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13178:6:20"},"nodeType":"YulFunctionCall","src":"13178:15:20"},"nodeType":"YulExpressionStatement","src":"13178:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13019:180:20"},{"body":{"nodeType":"YulBlock","src":"13248:190:20","statements":[{"nodeType":"YulAssignment","src":"13258:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13285:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13267:17:20"},"nodeType":"YulFunctionCall","src":"13267:24:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13258:5:20"}]},{"body":{"nodeType":"YulBlock","src":"13381:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13383:16:20"},"nodeType":"YulFunctionCall","src":"13383:18:20"},"nodeType":"YulExpressionStatement","src":"13383:18:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13306:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"13313:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13303:2:20"},"nodeType":"YulFunctionCall","src":"13303:77:20"},"nodeType":"YulIf","src":"13300:103:20"},{"nodeType":"YulAssignment","src":"13412:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13423:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"13430:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13419:3:20"},"nodeType":"YulFunctionCall","src":"13419:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13412:3:20"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13234:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13244:3:20","type":""}],"src":"13205:233:20"},{"body":{"nodeType":"YulBlock","src":"13648:448:20","statements":[{"nodeType":"YulAssignment","src":"13658:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13670:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13681:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13666:3:20"},"nodeType":"YulFunctionCall","src":"13666:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13658:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13739:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13752:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13763:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13748:3:20"},"nodeType":"YulFunctionCall","src":"13748:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13695:43:20"},"nodeType":"YulFunctionCall","src":"13695:71:20"},"nodeType":"YulExpressionStatement","src":"13695:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13820:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13833:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13844:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13829:3:20"},"nodeType":"YulFunctionCall","src":"13829:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13776:43:20"},"nodeType":"YulFunctionCall","src":"13776:72:20"},"nodeType":"YulExpressionStatement","src":"13776:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13900:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13913:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13924:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13909:3:20"},"nodeType":"YulFunctionCall","src":"13909:18:20"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"13858:41:20"},"nodeType":"YulFunctionCall","src":"13858:70:20"},"nodeType":"YulExpressionStatement","src":"13858:70:20"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13980:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13993:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14004:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13989:3:20"},"nodeType":"YulFunctionCall","src":"13989:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"13938:41:20"},"nodeType":"YulFunctionCall","src":"13938:70:20"},"nodeType":"YulExpressionStatement","src":"13938:70:20"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"14060:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14073:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14084:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14069:3:20"},"nodeType":"YulFunctionCall","src":"14069:19:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"14018:41:20"},"nodeType":"YulFunctionCall","src":"14018:71:20"},"nodeType":"YulExpressionStatement","src":"14018:71:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13588:9:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13600:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13608:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13616:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13624:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13632:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13643:4:20","type":""}],"src":"13444:652:20"},{"body":{"nodeType":"YulBlock","src":"14208:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14230:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"14238:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14226:3:20"},"nodeType":"YulFunctionCall","src":"14226:14:20"},{"hexValue":"6e6f6e6578697374656e742072657175657374","kind":"string","nodeType":"YulLiteral","src":"14242:21:20","type":"","value":"nonexistent request"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14219:6:20"},"nodeType":"YulFunctionCall","src":"14219:45:20"},"nodeType":"YulExpressionStatement","src":"14219:45:20"}]},"name":"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14200:6:20","type":""}],"src":"14102:169:20"},{"body":{"nodeType":"YulBlock","src":"14423:220:20","statements":[{"nodeType":"YulAssignment","src":"14433:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14499:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14504:2:20","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14440:58:20"},"nodeType":"YulFunctionCall","src":"14440:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14433:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14605:3:20"}],"functionName":{"name":"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","nodeType":"YulIdentifier","src":"14516:88:20"},"nodeType":"YulFunctionCall","src":"14516:93:20"},"nodeType":"YulExpressionStatement","src":"14516:93:20"},{"nodeType":"YulAssignment","src":"14618:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14629:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14634:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14625:3:20"},"nodeType":"YulFunctionCall","src":"14625:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14618:3:20"}]}]},"name":"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14411:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14419:3:20","type":""}],"src":"14277:366:20"},{"body":{"nodeType":"YulBlock","src":"14820:248:20","statements":[{"nodeType":"YulAssignment","src":"14830:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14842:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14853:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14838:3:20"},"nodeType":"YulFunctionCall","src":"14838:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14830:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14877:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14888:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14873:3:20"},"nodeType":"YulFunctionCall","src":"14873:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14896:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"14902:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14892:3:20"},"nodeType":"YulFunctionCall","src":"14892:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14866:6:20"},"nodeType":"YulFunctionCall","src":"14866:47:20"},"nodeType":"YulExpressionStatement","src":"14866:47:20"},{"nodeType":"YulAssignment","src":"14922:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15056:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14930:124:20"},"nodeType":"YulFunctionCall","src":"14930:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14922:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14800:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14815:4:20","type":""}],"src":"14649:419:20"},{"body":{"nodeType":"YulBlock","src":"15200:206:20","statements":[{"nodeType":"YulAssignment","src":"15210:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15222:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15233:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15218:3:20"},"nodeType":"YulFunctionCall","src":"15218:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15210:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15290:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15303:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15314:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15299:3:20"},"nodeType":"YulFunctionCall","src":"15299:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15246:43:20"},"nodeType":"YulFunctionCall","src":"15246:71:20"},"nodeType":"YulExpressionStatement","src":"15246:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15371:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15384:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15395:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15380:3:20"},"nodeType":"YulFunctionCall","src":"15380:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15327:43:20"},"nodeType":"YulFunctionCall","src":"15327:72:20"},"nodeType":"YulExpressionStatement","src":"15327:72:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15164:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15176:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15184:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15195:4:20","type":""}],"src":"15074:332:20"},{"body":{"nodeType":"YulBlock","src":"15440:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15457:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15460:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15450:6:20"},"nodeType":"YulFunctionCall","src":"15450:88:20"},"nodeType":"YulExpressionStatement","src":"15450:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15554:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15557:4:20","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15547:6:20"},"nodeType":"YulFunctionCall","src":"15547:15:20"},"nodeType":"YulExpressionStatement","src":"15547:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15578:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15581:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15571:6:20"},"nodeType":"YulFunctionCall","src":"15571:15:20"},"nodeType":"YulExpressionStatement","src":"15571:15:20"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"15412:180:20"},{"body":{"nodeType":"YulBlock","src":"15672:40:20","statements":[{"nodeType":"YulAssignment","src":"15683:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15699:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15693:5:20"},"nodeType":"YulFunctionCall","src":"15693:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15683:6:20"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15655:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15665:6:20","type":""}],"src":"15598:114:20"},{"body":{"nodeType":"YulBlock","src":"15829:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15846:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"15851:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15839:6:20"},"nodeType":"YulFunctionCall","src":"15839:19:20"},"nodeType":"YulExpressionStatement","src":"15839:19:20"},{"nodeType":"YulAssignment","src":"15867:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15886:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15891:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15882:3:20"},"nodeType":"YulFunctionCall","src":"15882:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15867:11:20"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15801:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"15806:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15817:11:20","type":""}],"src":"15718:184:20"},{"body":{"nodeType":"YulBlock","src":"15980:60:20","statements":[{"nodeType":"YulAssignment","src":"15990:11:20","value":{"name":"ptr","nodeType":"YulIdentifier","src":"15998:3:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15990:4:20"}]},{"nodeType":"YulAssignment","src":"16011:22:20","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16023:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16028:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16019:3:20"},"nodeType":"YulFunctionCall","src":"16019:14:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16011:4:20"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15967:3:20","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"15975:4:20","type":""}],"src":"15908:132:20"},{"body":{"nodeType":"YulBlock","src":"16101:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16118:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16141:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16123:17:20"},"nodeType":"YulFunctionCall","src":"16123:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16111:6:20"},"nodeType":"YulFunctionCall","src":"16111:37:20"},"nodeType":"YulExpressionStatement","src":"16111:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16089:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16096:3:20","type":""}],"src":"16046:108:20"},{"body":{"nodeType":"YulBlock","src":"16240:99:20","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16284:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"16292:3:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16250:33:20"},"nodeType":"YulFunctionCall","src":"16250:46:20"},"nodeType":"YulExpressionStatement","src":"16250:46:20"},{"nodeType":"YulAssignment","src":"16305:28:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16323:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16328:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16319:3:20"},"nodeType":"YulFunctionCall","src":"16319:14:20"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"16305:10:20"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"16213:6:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16221:3:20","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"16229:10:20","type":""}],"src":"16160:179:20"},{"body":{"nodeType":"YulBlock","src":"16420:38:20","statements":[{"nodeType":"YulAssignment","src":"16430:22:20","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16442:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16447:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16438:3:20"},"nodeType":"YulFunctionCall","src":"16438:14:20"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16430:4:20"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16407:3:20","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"16415:4:20","type":""}],"src":"16345:113:20"},{"body":{"nodeType":"YulBlock","src":"16618:608:20","statements":[{"nodeType":"YulVariableDeclaration","src":"16628:68:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16690:5:20"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16642:47:20"},"nodeType":"YulFunctionCall","src":"16642:54:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16632:6:20","type":""}]},{"nodeType":"YulAssignment","src":"16705:93:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16786:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"16791:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16712:73:20"},"nodeType":"YulFunctionCall","src":"16712:86:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16705:3:20"}]},{"nodeType":"YulVariableDeclaration","src":"16807:71:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16872:5:20"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16822:49:20"},"nodeType":"YulFunctionCall","src":"16822:56:20"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"16811:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16887:21:20","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"16901:7:20"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"16891:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"16977:224:20","statements":[{"nodeType":"YulVariableDeclaration","src":"16991:34:20","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17018:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17012:5:20"},"nodeType":"YulFunctionCall","src":"17012:13:20"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"16995:13:20","type":""}]},{"nodeType":"YulAssignment","src":"17038:70:20","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"17089:13:20"},{"name":"pos","nodeType":"YulIdentifier","src":"17104:3:20"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"17045:43:20"},"nodeType":"YulFunctionCall","src":"17045:63:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17038:3:20"}]},{"nodeType":"YulAssignment","src":"17121:70:20","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17184:6:20"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"17131:52:20"},"nodeType":"YulFunctionCall","src":"17131:60:20"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17121:6:20"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16939:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"16942:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16936:2:20"},"nodeType":"YulFunctionCall","src":"16936:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16950:18:20","statements":[{"nodeType":"YulAssignment","src":"16952:14:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16961:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"16964:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16957:3:20"},"nodeType":"YulFunctionCall","src":"16957:9:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16952:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"16921:14:20","statements":[{"nodeType":"YulVariableDeclaration","src":"16923:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"16932:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16927:1:20","type":""}]}]},"src":"16917:284:20"},{"nodeType":"YulAssignment","src":"17210:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"17217:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17210:3:20"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16597:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16604:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16613:3:20","type":""}],"src":"16494:732:20"},{"body":{"nodeType":"YulBlock","src":"17408:307:20","statements":[{"nodeType":"YulAssignment","src":"17418:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17430:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17441:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17426:3:20"},"nodeType":"YulFunctionCall","src":"17426:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17418:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17498:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17511:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17522:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17507:3:20"},"nodeType":"YulFunctionCall","src":"17507:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17454:43:20"},"nodeType":"YulFunctionCall","src":"17454:71:20"},"nodeType":"YulExpressionStatement","src":"17454:71:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17546:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17557:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17542:3:20"},"nodeType":"YulFunctionCall","src":"17542:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17566:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"17572:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17562:3:20"},"nodeType":"YulFunctionCall","src":"17562:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17535:6:20"},"nodeType":"YulFunctionCall","src":"17535:48:20"},"nodeType":"YulExpressionStatement","src":"17535:48:20"},{"nodeType":"YulAssignment","src":"17592:116:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17694:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"17703:4:20"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17600:93:20"},"nodeType":"YulFunctionCall","src":"17600:108:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17592:4:20"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17372:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17384:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17392:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17403:4:20","type":""}],"src":"17232:483:20"},{"body":{"nodeType":"YulBlock","src":"17779:40:20","statements":[{"nodeType":"YulAssignment","src":"17790:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17806:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17800:5:20"},"nodeType":"YulFunctionCall","src":"17800:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17790:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17762:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17772:6:20","type":""}],"src":"17721:98:20"},{"body":{"nodeType":"YulBlock","src":"17938:34:20","statements":[{"nodeType":"YulAssignment","src":"17948:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"17963:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17948:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17910:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"17915:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17926:11:20","type":""}],"src":"17825:147:20"},{"body":{"nodeType":"YulBlock","src":"18027:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"18037:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"18046:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18041:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"18106:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18131:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"18136:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18127:3:20"},"nodeType":"YulFunctionCall","src":"18127:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18150:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"18155:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18146:3:20"},"nodeType":"YulFunctionCall","src":"18146:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18140:5:20"},"nodeType":"YulFunctionCall","src":"18140:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18120:6:20"},"nodeType":"YulFunctionCall","src":"18120:39:20"},"nodeType":"YulExpressionStatement","src":"18120:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18067:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"18070:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18064:2:20"},"nodeType":"YulFunctionCall","src":"18064:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18078:19:20","statements":[{"nodeType":"YulAssignment","src":"18080:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18089:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"18092:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18085:3:20"},"nodeType":"YulFunctionCall","src":"18085:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18080:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"18060:3:20","statements":[]},"src":"18056:113:20"},{"body":{"nodeType":"YulBlock","src":"18203:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18253:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"18258:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18249:3:20"},"nodeType":"YulFunctionCall","src":"18249:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"18267:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18242:6:20"},"nodeType":"YulFunctionCall","src":"18242:27:20"},"nodeType":"YulExpressionStatement","src":"18242:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18184:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"18187:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18181:2:20"},"nodeType":"YulFunctionCall","src":"18181:13:20"},"nodeType":"YulIf","src":"18178:101:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18009:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18014:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"18019:6:20","type":""}],"src":"17978:307:20"},{"body":{"nodeType":"YulBlock","src":"18399:265:20","statements":[{"nodeType":"YulVariableDeclaration","src":"18409:52:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18455:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"18423:31:20"},"nodeType":"YulFunctionCall","src":"18423:38:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18413:6:20","type":""}]},{"nodeType":"YulAssignment","src":"18470:95:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18553:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"18558:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18477:75:20"},"nodeType":"YulFunctionCall","src":"18477:88:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18470:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18600:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18607:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18596:3:20"},"nodeType":"YulFunctionCall","src":"18596:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"18614:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"18619:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"18574:21:20"},"nodeType":"YulFunctionCall","src":"18574:52:20"},"nodeType":"YulExpressionStatement","src":"18574:52:20"},{"nodeType":"YulAssignment","src":"18635:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18646:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"18651:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18642:3:20"},"nodeType":"YulFunctionCall","src":"18642:16:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18635:3:20"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18380:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18387:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18395:3:20","type":""}],"src":"18291:373:20"},{"body":{"nodeType":"YulBlock","src":"18804:137:20","statements":[{"nodeType":"YulAssignment","src":"18815:100:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18902:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"18911:3:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18822:79:20"},"nodeType":"YulFunctionCall","src":"18822:93:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18815:3:20"}]},{"nodeType":"YulAssignment","src":"18925:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"18932:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18925:3:20"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18783:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18789:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18800:3:20","type":""}],"src":"18670:271:20"},{"body":{"nodeType":"YulBlock","src":"18992:146:20","statements":[{"nodeType":"YulAssignment","src":"19002:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19025:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19007:17:20"},"nodeType":"YulFunctionCall","src":"19007:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19002:1:20"}]},{"nodeType":"YulAssignment","src":"19036:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19059:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19041:17:20"},"nodeType":"YulFunctionCall","src":"19041:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19036:1:20"}]},{"body":{"nodeType":"YulBlock","src":"19083:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19085:16:20"},"nodeType":"YulFunctionCall","src":"19085:18:20"},"nodeType":"YulExpressionStatement","src":"19085:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19077:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"19080:1:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19074:2:20"},"nodeType":"YulFunctionCall","src":"19074:8:20"},"nodeType":"YulIf","src":"19071:34:20"},{"nodeType":"YulAssignment","src":"19115:17:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19127:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"19130:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19123:3:20"},"nodeType":"YulFunctionCall","src":"19123:9:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19115:4:20"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18978:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"18981:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"18987:4:20","type":""}],"src":"18947:191:20"},{"body":{"nodeType":"YulBlock","src":"19192:300:20","statements":[{"nodeType":"YulAssignment","src":"19202:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19225:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19207:17:20"},"nodeType":"YulFunctionCall","src":"19207:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19202:1:20"}]},{"nodeType":"YulAssignment","src":"19236:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19259:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19241:17:20"},"nodeType":"YulFunctionCall","src":"19241:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19236:1:20"}]},{"body":{"nodeType":"YulBlock","src":"19434:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19436:16:20"},"nodeType":"YulFunctionCall","src":"19436:18:20"},"nodeType":"YulExpressionStatement","src":"19436:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19346:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19339:6:20"},"nodeType":"YulFunctionCall","src":"19339:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19332:6:20"},"nodeType":"YulFunctionCall","src":"19332:17:20"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19354:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19361:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"19429:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"19357:3:20"},"nodeType":"YulFunctionCall","src":"19357:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19351:2:20"},"nodeType":"YulFunctionCall","src":"19351:81:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19328:3:20"},"nodeType":"YulFunctionCall","src":"19328:105:20"},"nodeType":"YulIf","src":"19325:131:20"},{"nodeType":"YulAssignment","src":"19466:20:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19481:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"19484:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19477:3:20"},"nodeType":"YulFunctionCall","src":"19477:9:20"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"19466:7:20"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19175:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"19178:1:20","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"19184:7:20","type":""}],"src":"19144:348:20"},{"body":{"nodeType":"YulBlock","src":"19542:261:20","statements":[{"nodeType":"YulAssignment","src":"19552:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19575:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19557:17:20"},"nodeType":"YulFunctionCall","src":"19557:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19552:1:20"}]},{"nodeType":"YulAssignment","src":"19586:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19609:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19591:17:20"},"nodeType":"YulFunctionCall","src":"19591:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19586:1:20"}]},{"body":{"nodeType":"YulBlock","src":"19749:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19751:16:20"},"nodeType":"YulFunctionCall","src":"19751:18:20"},"nodeType":"YulExpressionStatement","src":"19751:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19670:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19677:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"19745:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19673:3:20"},"nodeType":"YulFunctionCall","src":"19673:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19667:2:20"},"nodeType":"YulFunctionCall","src":"19667:81:20"},"nodeType":"YulIf","src":"19664:107:20"},{"nodeType":"YulAssignment","src":"19781:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19792:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"19795:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19788:3:20"},"nodeType":"YulFunctionCall","src":"19788:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19781:3:20"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19529:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"19532:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19538:3:20","type":""}],"src":"19498:305:20"},{"body":{"nodeType":"YulBlock","src":"19853:144:20","statements":[{"nodeType":"YulAssignment","src":"19863:24:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19885:1:20"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"19868:16:20"},"nodeType":"YulFunctionCall","src":"19868:19:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19863:1:20"}]},{"nodeType":"YulAssignment","src":"19896:24:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19918:1:20"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"19901:16:20"},"nodeType":"YulFunctionCall","src":"19901:19:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19896:1:20"}]},{"body":{"nodeType":"YulBlock","src":"19942:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19944:16:20"},"nodeType":"YulFunctionCall","src":"19944:18:20"},"nodeType":"YulExpressionStatement","src":"19944:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19936:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"19939:1:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19933:2:20"},"nodeType":"YulFunctionCall","src":"19933:8:20"},"nodeType":"YulIf","src":"19930:34:20"},{"nodeType":"YulAssignment","src":"19974:17:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19986:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"19989:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19982:3:20"},"nodeType":"YulFunctionCall","src":"19982:9:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19974:4:20"}]}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19839:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"19842:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19848:4:20","type":""}],"src":"19809:188:20"},{"body":{"nodeType":"YulBlock","src":"20045:48:20","statements":[{"nodeType":"YulAssignment","src":"20055:32:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20080:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20073:6:20"},"nodeType":"YulFunctionCall","src":"20073:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20066:6:20"},"nodeType":"YulFunctionCall","src":"20066:21:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20055:7:20"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20027:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20037:7:20","type":""}],"src":"20003:90:20"},{"body":{"nodeType":"YulBlock","src":"20158:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20175:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20195:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"20180:14:20"},"nodeType":"YulFunctionCall","src":"20180:21:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20168:6:20"},"nodeType":"YulFunctionCall","src":"20168:34:20"},"nodeType":"YulExpressionStatement","src":"20168:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20146:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20153:3:20","type":""}],"src":"20099:109:20"},{"body":{"nodeType":"YulBlock","src":"20360:280:20","statements":[{"nodeType":"YulAssignment","src":"20370:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20382:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20393:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20378:3:20"},"nodeType":"YulFunctionCall","src":"20378:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20370:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20450:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20463:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20474:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20459:3:20"},"nodeType":"YulFunctionCall","src":"20459:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20406:43:20"},"nodeType":"YulFunctionCall","src":"20406:71:20"},"nodeType":"YulExpressionStatement","src":"20406:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20529:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20542:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20553:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20538:3:20"},"nodeType":"YulFunctionCall","src":"20538:18:20"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"20487:41:20"},"nodeType":"YulFunctionCall","src":"20487:70:20"},"nodeType":"YulExpressionStatement","src":"20487:70:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20605:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20618:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20629:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20614:3:20"},"nodeType":"YulFunctionCall","src":"20614:18:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"20567:37:20"},"nodeType":"YulFunctionCall","src":"20567:66:20"},"nodeType":"YulExpressionStatement","src":"20567:66:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20316:9:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20328:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20336:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20344:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20355:4:20","type":""}],"src":"20214:426:20"},{"body":{"nodeType":"YulBlock","src":"20688:141:20","statements":[{"nodeType":"YulAssignment","src":"20698:32:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20724:5:20"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"20707:16:20"},"nodeType":"YulFunctionCall","src":"20707:23:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20698:5:20"}]},{"body":{"nodeType":"YulBlock","src":"20772:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20774:16:20"},"nodeType":"YulFunctionCall","src":"20774:18:20"},"nodeType":"YulExpressionStatement","src":"20774:18:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20745:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"20752:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20742:2:20"},"nodeType":"YulFunctionCall","src":"20742:29:20"},"nodeType":"YulIf","src":"20739:55:20"},{"nodeType":"YulAssignment","src":"20803:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20814:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"20821:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20810:3:20"},"nodeType":"YulFunctionCall","src":"20810:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20803:3:20"}]}]},"name":"increment_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20674:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20684:3:20","type":""}],"src":"20646:183:20"},{"body":{"nodeType":"YulBlock","src":"20933:124:20","statements":[{"nodeType":"YulAssignment","src":"20943:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20955:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20966:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20951:3:20"},"nodeType":"YulFunctionCall","src":"20951:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20943:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21023:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21036:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21047:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21032:3:20"},"nodeType":"YulFunctionCall","src":"21032:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20979:43:20"},"nodeType":"YulFunctionCall","src":"20979:71:20"},"nodeType":"YulExpressionStatement","src":"20979:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20905:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20917:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20928:4:20","type":""}],"src":"20835:222:20"},{"body":{"nodeType":"YulBlock","src":"21106:219:20","statements":[{"nodeType":"YulAssignment","src":"21116:24:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21138:1:20"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"21121:16:20"},"nodeType":"YulFunctionCall","src":"21121:19:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21116:1:20"}]},{"nodeType":"YulAssignment","src":"21149:24:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21171:1:20"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"21154:16:20"},"nodeType":"YulFunctionCall","src":"21154:19:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21149:1:20"}]},{"body":{"nodeType":"YulBlock","src":"21271:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21273:16:20"},"nodeType":"YulFunctionCall","src":"21273:18:20"},"nodeType":"YulExpressionStatement","src":"21273:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21232:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21239:26:20","type":"","value":"0xffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"21267:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21235:3:20"},"nodeType":"YulFunctionCall","src":"21235:34:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21229:2:20"},"nodeType":"YulFunctionCall","src":"21229:41:20"},"nodeType":"YulIf","src":"21226:67:20"},{"nodeType":"YulAssignment","src":"21303:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21314:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"21317:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21310:3:20"},"nodeType":"YulFunctionCall","src":"21310:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"21303:3:20"}]}]},"name":"checked_add_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21093:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"21096:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"21102:3:20","type":""}],"src":"21063:262:20"},{"body":{"nodeType":"YulBlock","src":"21363:28:20","statements":[{"nodeType":"YulAssignment","src":"21373:12:20","value":{"name":"value","nodeType":"YulIdentifier","src":"21380:5:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21373:3:20"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21349:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21359:3:20","type":""}],"src":"21331:60:20"},{"body":{"nodeType":"YulBlock","src":"21456:81:20","statements":[{"nodeType":"YulAssignment","src":"21466:65:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21523:5:20"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"21506:16:20"},"nodeType":"YulFunctionCall","src":"21506:23:20"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"21497:8:20"},"nodeType":"YulFunctionCall","src":"21497:33:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21479:17:20"},"nodeType":"YulFunctionCall","src":"21479:52:20"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"21466:9:20"}]}]},"name":"convert_t_uint96_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21436:5:20","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"21446:9:20","type":""}],"src":"21397:140:20"},{"body":{"nodeType":"YulBlock","src":"21607:65:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21624:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21659:5:20"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nodeType":"YulIdentifier","src":"21629:29:20"},"nodeType":"YulFunctionCall","src":"21629:36:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21617:6:20"},"nodeType":"YulFunctionCall","src":"21617:49:20"},"nodeType":"YulExpressionStatement","src":"21617:49:20"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21595:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21602:3:20","type":""}],"src":"21543:129:20"},{"body":{"nodeType":"YulBlock","src":"21802:204:20","statements":[{"nodeType":"YulAssignment","src":"21812:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21824:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21835:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21820:3:20"},"nodeType":"YulFunctionCall","src":"21820:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21812:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21891:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21904:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21915:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21900:3:20"},"nodeType":"YulFunctionCall","src":"21900:17:20"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21848:42:20"},"nodeType":"YulFunctionCall","src":"21848:70:20"},"nodeType":"YulExpressionStatement","src":"21848:70:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21971:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21984:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21995:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21980:3:20"},"nodeType":"YulFunctionCall","src":"21980:18:20"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21928:42:20"},"nodeType":"YulFunctionCall","src":"21928:71:20"},"nodeType":"YulExpressionStatement","src":"21928:71:20"}]},"name":"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21766:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21778:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21786:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21797:4:20","type":""}],"src":"21678:328:20"},{"body":{"nodeType":"YulBlock","src":"22137:205:20","statements":[{"nodeType":"YulAssignment","src":"22147:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22159:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22170:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22155:3:20"},"nodeType":"YulFunctionCall","src":"22155:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22147:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22227:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22240:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22251:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22236:3:20"},"nodeType":"YulFunctionCall","src":"22236:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22183:43:20"},"nodeType":"YulFunctionCall","src":"22183:71:20"},"nodeType":"YulExpressionStatement","src":"22183:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22307:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22320:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22331:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22316:3:20"},"nodeType":"YulFunctionCall","src":"22316:18:20"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22264:42:20"},"nodeType":"YulFunctionCall","src":"22264:71:20"},"nodeType":"YulExpressionStatement","src":"22264:71:20"}]},"name":"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22101:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22113:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22121:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22132:4:20","type":""}],"src":"22012:330:20"}]},"contents":"{\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint64t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_uint64t_uint96(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"not implemented\")\n\n    }\n\n    function abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0(memPtr) {\n\n        mstore(add(memPtr, 0), \"nonexistent request\")\n\n    }\n\n    function abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function increment_t_uint64(value) -> ret {\n        value := cleanup_t_uint64(value)\n        if eq(value, 0xffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint96(x, y) -> sum {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"296":[{"length":32,"start":785},{"length":32,"start":2225}],"298":[{"length":32,"start":2156},{"length":32,"start":3292}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82359740 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA410347F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA410347F EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xAFC69B53 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x258 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x82359740 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x1CD JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x3D18651E EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH2 0xE9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x106A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x3 PUSH3 0x1E8480 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29A JUMPI PUSH2 0x299 PUSH2 0x186F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3FA SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x415 SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP10 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x539 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x581 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FE SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CD JUMPI PUSH2 0x6CC PUSH2 0x186F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x771 JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x726 SWAP3 SWAP2 SWAP1 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x752 JUMPI PUSH2 0x751 PUSH2 0x1A7B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x769 SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x701 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x790 SWAP3 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x864 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP9 PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH2 0x8AF SWAP2 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP11 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA9C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1C SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB4C SWAP1 PUSH2 0x1D93 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE61 JUMPI PUSH2 0xE60 PUSH2 0x186F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE8F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE8 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP5 DUP5 PUSH2 0x104F SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105D SWAP3 SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1191 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1188 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP5 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x120F SWAP3 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A4 DUP2 PUSH2 0x128D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C3 DUP2 PUSH2 0x12AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1308 DUP2 PUSH2 0x12F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x131A DUP4 DUP4 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133E DUP3 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x1348 DUP2 DUP6 PUSH2 0x12D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1353 DUP4 PUSH2 0x12E5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1384 JUMPI DUP2 MLOAD PUSH2 0x136B DUP9 DUP3 PUSH2 0x130E JUMP JUMPDEST SWAP8 POP PUSH2 0x1376 DUP4 PUSH2 0x1326 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1357 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13A6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x129B JUMP JUMPDEST PUSH2 0x13B3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12BA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x13C5 DUP2 DUP5 PUSH2 0x1333 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F1 DUP2 PUSH2 0x13D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x13FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140E DUP2 PUSH2 0x13E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143F DUP3 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144F DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP2 EQ PUSH2 0x145A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146C DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1489 JUMPI PUSH2 0x1488 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1497 DUP6 DUP3 DUP7 ADD PUSH2 0x13FF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A8 DUP6 DUP3 DUP7 ADD PUSH2 0x145D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D3 DUP2 PUSH2 0x14B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14EE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14FD DUP2 PUSH2 0x12F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x151A DUP2 PUSH2 0x14F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1529 DUP2 PUSH2 0x128D JUMP JUMPDEST DUP2 EQ PUSH2 0x1534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1546 DUP2 PUSH2 0x1520 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1555 DUP2 PUSH2 0x12AA JUMP JUMPDEST DUP2 EQ PUSH2 0x1560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1572 DUP2 PUSH2 0x154C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1594 JUMPI PUSH2 0x1593 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15A2 DUP9 DUP3 DUP10 ADD PUSH2 0x150B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x15B3 DUP9 DUP3 DUP10 ADD PUSH2 0x13FF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x15C4 DUP9 DUP3 DUP10 ADD PUSH2 0x1537 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x15D5 DUP9 DUP3 DUP10 ADD PUSH2 0x1563 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x15E6 DUP9 DUP3 DUP10 ADD PUSH2 0x1563 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1606 DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1621 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1630 DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x163B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x164D DUP2 PUSH2 0x1627 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x166A JUMPI PUSH2 0x1669 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1678 DUP6 DUP3 DUP7 ADD PUSH2 0x163E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1689 DUP6 DUP3 DUP7 ADD PUSH2 0x145D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A9 JUMPI PUSH2 0x16A8 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16B7 DUP5 DUP3 DUP6 ADD PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16C9 DUP2 PUSH2 0x13D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16F3 DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172E DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1740 DUP4 DUP4 PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1764 DUP3 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x176E DUP2 DUP6 PUSH2 0x1704 JUMP JUMPDEST SWAP4 POP PUSH2 0x1779 DUP4 PUSH2 0x1715 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17AA JUMPI DUP2 MLOAD PUSH2 0x1791 DUP9 DUP3 PUSH2 0x1734 JUMP JUMPDEST SWAP8 POP PUSH2 0x179C DUP4 PUSH2 0x174C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x177D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x17CC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x17D9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x17E6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16EA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x17F8 DUP2 DUP5 PUSH2 0x1759 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x180C DUP2 PUSH2 0x14B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1829 DUP2 PUSH2 0x1803 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1846 JUMPI PUSH2 0x1845 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1854 DUP6 DUP3 DUP7 ADD PUSH2 0x13FF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1865 DUP6 DUP3 DUP7 ADD PUSH2 0x181A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420696D706C656D656E7465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E5 PUSH1 0xF DUP4 PUSH2 0x189E JUMP JUMPDEST SWAP2 POP PUSH2 0x18F0 DUP3 PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1914 DUP2 PUSH2 0x18D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1955 DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1988 JUMPI PUSH2 0x1987 PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x19A8 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x19B5 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x19C2 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x129B JUMP JUMPDEST PUSH2 0x19CF PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x19DC PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x12BA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x6E6F6E6578697374656E74207265717565737400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1C PUSH1 0x13 DUP4 PUSH2 0x189E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A27 DUP3 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4B DUP2 PUSH2 0x1A0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A67 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x1A74 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADF DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF1 DUP4 DUP4 PUSH2 0x1AD6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B15 DUP3 PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0x1B1F DUP2 DUP6 PUSH2 0x1AB5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B2A DUP4 PUSH2 0x1AC6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B5B JUMPI DUP2 MLOAD PUSH2 0x1B42 DUP9 DUP3 PUSH2 0x1AE5 JUMP JUMPDEST SWAP8 POP PUSH2 0x1B4D DUP4 PUSH2 0x1AFD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B2E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B7D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15FD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1B8F DUP2 DUP5 PUSH2 0x1B0A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BCC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BB1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1BDB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEC DUP3 PUSH2 0x1B98 JUMP JUMPDEST PUSH2 0x1BF6 DUP2 DUP6 PUSH2 0x1BA3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C06 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BAE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1E DUP3 DUP5 PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C34 DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3F DUP4 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1C52 JUMPI PUSH2 0x1C51 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C68 DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C73 DUP4 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CAC JUMPI PUSH2 0x1CAB PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC2 DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCD DUP4 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1D02 JUMPI PUSH2 0x1D01 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D18 DUP3 PUSH2 0x14B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D23 DUP4 PUSH2 0x14B2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1D36 JUMPI PUSH2 0x1D35 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D56 DUP2 PUSH2 0x1D41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D71 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x1D7E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x1D8B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D4D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E DUP3 PUSH2 0x13D4 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1DB9 JUMPI PUSH2 0x1DB8 PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEA DUP3 PUSH2 0x14B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF5 DUP4 PUSH2 0x14B2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E16 JUMPI PUSH2 0x1E15 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E46 PUSH2 0x1E41 PUSH2 0x1E3C DUP5 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x1E21 JUMP JUMPDEST PUSH2 0x15F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E56 DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E71 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0x1E7E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E4D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E9A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16EA JUMP JUMPDEST PUSH2 0x1EA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E4D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0x4F SMOD RETURN 0xE4 0xBB PUSH18 0xDAE8E3EADBFE05F98643CA236F2AEF48270E SHL SWAP7 0x2A CALLER 0xEC XOR 0xBD PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"254:5984:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5555:184;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5982:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;317:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3691:718;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5743:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2165:978;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6121:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5861:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4413:269;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;353:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4686:396;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3345:342;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5086:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5555:184;5638:6;5652;5666:16;5705:1;5708:7;5731:1;5717:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5697:37;;;;;;5555:184;;;:::o;5982:135::-;6087:25;;;;;;;;;;:::i;:::-;;;;;;;;317:32;;;:::o;3691:718::-;3884:7;3944:1;3903:43;;:15;:23;3919:6;3903:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;3899:92;;;3963:21;;;;;;;;;;;;;;3899:92;3997:17;4017:15;;:17;;;;;;;;;:::i;:::-;;;;;3997:37;;4040:15;4058:13;;:15;;;;;;;;;:::i;:::-;;;;;4040:33;;4104:82;;;;;;;;4120:6;4104:82;;;;;;4146:17;4104:82;;;;;;4175:9;4104:82;;;;;4080:10;:21;4091:9;4080:21;;;;;;;;;;;:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4366:10;4198:184;;4274:6;4198:184;;4226:8;4198:184;4242:9;4259:7;4288:28;4324:17;4349:9;4198:184;;;;;;;;;;:::i;:::-;;;;;;;;4395:9;4388:16;;;;3691:718;;;;;;;:::o;5743:114::-;5827:25;;;;;;;;;;:::i;:::-;;;;;;;;2165:978;2247:16;2266:9;2247:28;;2317:1;2285:10;:22;2296:10;2285:22;;;;;;;;;;;:28;;;;;;;;;;;;:33;;;2281:83;;;2328:29;;;;;;;;;;:::i;:::-;;;;;;;;2281:83;2369:18;2390:10;:22;2401:10;2390:22;;;;;;;;;;;2369:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2419:22;2458:3;:12;;;2444:27;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2419:52;;2482:9;2477:114;2501:3;:12;;;2497:16;;:1;:16;2477:114;;;2568:10;2580:1;2557:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2547:36;;;;;;2539:45;;2528:5;2534:1;2528:8;;;;;;;;:::i;:::-;;;;;;;:56;;;;;2515:3;;;;;:::i;:::-;;;;2477:114;;;;2597:19;2622:20;2668:32;;;2702:10;2714:5;2645:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2622:98;;2727:12;2745:9;:14;;2765:3;:20;;;2745:50;;2787:7;2745:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2726:69;;;2802:14;2863;2838:39;;2850:9;2839:8;:20;;;;:::i;:::-;2838:39;;;;:::i;:::-;2826:8;:52;;;;;;:::i;:::-;2802:77;;2926:7;2889:44;;:15;:26;2905:3;:9;;;2889:26;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:44;;;2885:93;;;2950:21;;;;;;;;;;;;;;2885:93;3021:7;2983:15;:26;2999:3;:9;;;2983:26;;;;;;;;;;;;;;;:34;;;:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3042:10;:22;3053:10;3042:22;;;;;;;;;;;;3034:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3097:10;3076:62;3109:10;3121:7;3130;3076:62;;;;;;;;:::i;:::-;;;;;;;;2241:902;;;;;;;2165:978;;:::o;6121:115::-;6206:25;;;;;;;;;;:::i;:::-;;;;;;;;5861:117;5948:25;;;;;;;;;;:::i;:::-;;;;;;;;4413:269;4470:13;4491:14;;:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;4547:45;;;;;;;;4568:10;4547:45;;;;;;4589:1;4547:45;;;;;4513:15;:31;4529:14;;;;;;;;;;;4513:31;;;;;;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4623:14;;;;;;;;;;4603:47;;;4639:10;4603:47;;;;;;:::i;:::-;;;;;;;;4663:14;;;;;;;;;;4656:21;;4413:269;:::o;353:38::-;;;:::o;4686:396::-;4781:14;4803:15;4826:13;4847:26;4933:1;4892:43;;:15;:23;4908:6;4892:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;4888:92;;;4952:21;;;;;;;;;;;;;;4888:92;4993:15;:23;5009:6;4993:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;5026:1;5029:15;:23;5045:6;5029:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;5074:1;5060:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4985:92;;;;;;;;4686:396;;;;;:::o;3345:342::-;3460:1;3419:43;;:15;:23;3435:6;3419:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;3415:92;;;3479:21;;;;;;;;;;;;;;3415:92;3512:17;3532:15;:23;3548:6;3532:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;3512:51;;3604:7;3569:15;:23;3585:6;3569:23;;;;;;;;;;;;;;;:31;;;:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3641:6;3622:60;;;3649:10;3674:7;3661:10;:20;;;;:::i;:::-;3622:60;;;;;;;:::i;:::-;;;;;;;;3409:278;3345:342;;:::o;5086:215::-;5173:6;5348:13;5364:15;:23;5380:6;5364:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;5348:45;;5420:1;5403:19;;:5;:19;;;5399:68;;;5439:21;;;;;;;;;;;;;;5399:68;5490:5;5476:19;;:10;:19;;;5472:68;;5527:5;5512:21;;;;;;;;;;;:::i;:::-;;;;;;;;5472:68;5213:6:::1;5192:66;;;5221:3;5226:15;:23;5242:6;5226:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;5192:66;;;;;;;:::i;:::-;;;;;;;;5272:15;:23;5288:6;5272:23;;;;;;;;;;;;;;;;5264:32:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5342:209:::0;5086:215;;;:::o;7:89:20:-;43:7;83:6;76:5;72:18;61:29;;7:89;;;:::o;102:115::-;187:23;204:5;187:23;:::i;:::-;182:3;175:36;102:115;;:::o;223:93::-;259:7;299:10;292:5;288:22;277:33;;223:93;;;:::o;322:115::-;407:23;424:5;407:23;:::i;:::-;402:3;395:36;322:115;;:::o;443:114::-;510:6;544:5;538:12;528:22;;443:114;;;:::o;563:184::-;662:11;696:6;691:3;684:19;736:4;731:3;727:14;712:29;;563:184;;;;:::o;753:132::-;820:4;843:3;835:11;;873:4;868:3;864:14;856:22;;753:132;;;:::o;891:77::-;928:7;957:5;946:16;;891:77;;;:::o;974:108::-;1051:24;1069:5;1051:24;:::i;:::-;1046:3;1039:37;974:108;;:::o;1088:179::-;1157:10;1178:46;1220:3;1212:6;1178:46;:::i;:::-;1256:4;1251:3;1247:14;1233:28;;1088:179;;;;:::o;1273:113::-;1343:4;1375;1370:3;1366:14;1358:22;;1273:113;;;:::o;1422:732::-;1541:3;1570:54;1618:5;1570:54;:::i;:::-;1640:86;1719:6;1714:3;1640:86;:::i;:::-;1633:93;;1750:56;1800:5;1750:56;:::i;:::-;1829:7;1860:1;1845:284;1870:6;1867:1;1864:13;1845:284;;;1946:6;1940:13;1973:63;2032:3;2017:13;1973:63;:::i;:::-;1966:70;;2059:60;2112:6;2059:60;:::i;:::-;2049:70;;1905:224;1892:1;1889;1885:9;1880:14;;1845:284;;;1849:14;2145:3;2138:10;;1546:608;;;1422:732;;;;:::o;2160:585::-;2355:4;2393:2;2382:9;2378:18;2370:26;;2406:69;2472:1;2461:9;2457:17;2448:6;2406:69;:::i;:::-;2485:70;2551:2;2540:9;2536:18;2527:6;2485:70;:::i;:::-;2602:9;2596:4;2592:20;2587:2;2576:9;2572:18;2565:48;2630:108;2733:4;2724:6;2630:108;:::i;:::-;2622:116;;2160:585;;;;;;:::o;2832:117::-;2941:1;2938;2931:12;3078:101;3114:7;3154:18;3147:5;3143:30;3132:41;;3078:101;;;:::o;3185:120::-;3257:23;3274:5;3257:23;:::i;:::-;3250:5;3247:34;3237:62;;3295:1;3292;3285:12;3237:62;3185:120;:::o;3311:137::-;3356:5;3394:6;3381:20;3372:29;;3410:32;3436:5;3410:32;:::i;:::-;3311:137;;;;:::o;3454:126::-;3491:7;3531:42;3524:5;3520:54;3509:65;;3454:126;;;:::o;3586:96::-;3623:7;3652:24;3670:5;3652:24;:::i;:::-;3641:35;;3586:96;;;:::o;3688:122::-;3761:24;3779:5;3761:24;:::i;:::-;3754:5;3751:35;3741:63;;3800:1;3797;3790:12;3741:63;3688:122;:::o;3816:139::-;3862:5;3900:6;3887:20;3878:29;;3916:33;3943:5;3916:33;:::i;:::-;3816:139;;;;:::o;3961:472::-;4028:6;4036;4085:2;4073:9;4064:7;4060:23;4056:32;4053:119;;;4091:79;;:::i;:::-;4053:119;4211:1;4236:52;4280:7;4271:6;4260:9;4256:22;4236:52;:::i;:::-;4226:62;;4182:116;4337:2;4363:53;4408:7;4399:6;4388:9;4384:22;4363:53;:::i;:::-;4353:63;;4308:118;3961:472;;;;;:::o;4439:109::-;4475:7;4515:26;4508:5;4504:38;4493:49;;4439:109;;;:::o;4554:115::-;4639:23;4656:5;4639:23;:::i;:::-;4634:3;4627:36;4554:115;;:::o;4675:218::-;4766:4;4804:2;4793:9;4789:18;4781:26;;4817:69;4883:1;4872:9;4868:17;4859:6;4817:69;:::i;:::-;4675:218;;;;:::o;4899:122::-;4972:24;4990:5;4972:24;:::i;:::-;4965:5;4962:35;4952:63;;5011:1;5008;5001:12;4952:63;4899:122;:::o;5027:139::-;5073:5;5111:6;5098:20;5089:29;;5127:33;5154:5;5127:33;:::i;:::-;5027:139;;;;:::o;5172:120::-;5244:23;5261:5;5244:23;:::i;:::-;5237:5;5234:34;5224:62;;5282:1;5279;5272:12;5224:62;5172:120;:::o;5298:137::-;5343:5;5381:6;5368:20;5359:29;;5397:32;5423:5;5397:32;:::i;:::-;5298:137;;;;:::o;5441:120::-;5513:23;5530:5;5513:23;:::i;:::-;5506:5;5503:34;5493:62;;5551:1;5548;5541:12;5493:62;5441:120;:::o;5567:137::-;5612:5;5650:6;5637:20;5628:29;;5666:32;5692:5;5666:32;:::i;:::-;5567:137;;;;:::o;5710:903::-;5801:6;5809;5817;5825;5833;5882:3;5870:9;5861:7;5857:23;5853:33;5850:120;;;5889:79;;:::i;:::-;5850:120;6009:1;6034:53;6079:7;6070:6;6059:9;6055:22;6034:53;:::i;:::-;6024:63;;5980:117;6136:2;6162:52;6206:7;6197:6;6186:9;6182:22;6162:52;:::i;:::-;6152:62;;6107:117;6263:2;6289:52;6333:7;6324:6;6313:9;6309:22;6289:52;:::i;:::-;6279:62;;6234:117;6390:2;6416:52;6460:7;6451:6;6440:9;6436:22;6416:52;:::i;:::-;6406:62;;6361:117;6517:3;6544:52;6588:7;6579:6;6568:9;6564:22;6544:52;:::i;:::-;6534:62;;6488:118;5710:903;;;;;;;;:::o;6619:77::-;6656:7;6685:5;6674:16;;6619:77;;;:::o;6702:118::-;6789:24;6807:5;6789:24;:::i;:::-;6784:3;6777:37;6702:118;;:::o;6826:222::-;6919:4;6957:2;6946:9;6942:18;6934:26;;6970:71;7038:1;7027:9;7023:17;7014:6;6970:71;:::i;:::-;6826:222;;;;:::o;7054:122::-;7127:24;7145:5;7127:24;:::i;:::-;7120:5;7117:35;7107:63;;7166:1;7163;7156:12;7107:63;7054:122;:::o;7182:139::-;7228:5;7266:6;7253:20;7244:29;;7282:33;7309:5;7282:33;:::i;:::-;7182:139;;;;:::o;7327:474::-;7395:6;7403;7452:2;7440:9;7431:7;7427:23;7423:32;7420:119;;;7458:79;;:::i;:::-;7420:119;7578:1;7603:53;7648:7;7639:6;7628:9;7624:22;7603:53;:::i;:::-;7593:63;;7549:117;7705:2;7731:53;7776:7;7767:6;7756:9;7752:22;7731:53;:::i;:::-;7721:63;;7676:118;7327:474;;;;;:::o;7807:327::-;7865:6;7914:2;7902:9;7893:7;7889:23;7885:32;7882:119;;;7920:79;;:::i;:::-;7882:119;8040:1;8065:52;8109:7;8100:6;8089:9;8085:22;8065:52;:::i;:::-;8055:62;;8011:116;7807:327;;;;:::o;8140:115::-;8225:23;8242:5;8225:23;:::i;:::-;8220:3;8213:36;8140:115;;:::o;8261:218::-;8352:4;8390:2;8379:9;8375:18;8367:26;;8403:69;8469:1;8458:9;8454:17;8445:6;8403:69;:::i;:::-;8261:218;;;;:::o;8485:118::-;8572:24;8590:5;8572:24;:::i;:::-;8567:3;8560:37;8485:118;;:::o;8609:114::-;8676:6;8710:5;8704:12;8694:22;;8609:114;;;:::o;8729:184::-;8828:11;8862:6;8857:3;8850:19;8902:4;8897:3;8893:14;8878:29;;8729:184;;;;:::o;8919:132::-;8986:4;9009:3;9001:11;;9039:4;9034:3;9030:14;9022:22;;8919:132;;;:::o;9057:108::-;9134:24;9152:5;9134:24;:::i;:::-;9129:3;9122:37;9057:108;;:::o;9171:179::-;9240:10;9261:46;9303:3;9295:6;9261:46;:::i;:::-;9339:4;9334:3;9330:14;9316:28;;9171:179;;;;:::o;9356:113::-;9426:4;9458;9453:3;9449:14;9441:22;;9356:113;;;:::o;9505:732::-;9624:3;9653:54;9701:5;9653:54;:::i;:::-;9723:86;9802:6;9797:3;9723:86;:::i;:::-;9716:93;;9833:56;9883:5;9833:56;:::i;:::-;9912:7;9943:1;9928:284;9953:6;9950:1;9947:13;9928:284;;;10029:6;10023:13;10056:63;10115:3;10100:13;10056:63;:::i;:::-;10049:70;;10142:60;10195:6;10142:60;:::i;:::-;10132:70;;9988:224;9975:1;9972;9968:9;9963:14;;9928:284;;;9932:14;10228:3;10221:10;;9629:608;;;9505:732;;;;:::o;10243:696::-;10466:4;10504:3;10493:9;10489:19;10481:27;;10518:69;10584:1;10573:9;10569:17;10560:6;10518:69;:::i;:::-;10597:70;10663:2;10652:9;10648:18;10639:6;10597:70;:::i;:::-;10677:72;10745:2;10734:9;10730:18;10721:6;10677:72;:::i;:::-;10796:9;10790:4;10786:20;10781:2;10770:9;10766:18;10759:48;10824:108;10927:4;10918:6;10824:108;:::i;:::-;10816:116;;10243:696;;;;;;;:::o;10945:120::-;11017:23;11034:5;11017:23;:::i;:::-;11010:5;11007:34;10997:62;;11055:1;11052;11045:12;10997:62;10945:120;:::o;11071:137::-;11116:5;11154:6;11141:20;11132:29;;11170:32;11196:5;11170:32;:::i;:::-;11071:137;;;;:::o;11214:470::-;11280:6;11288;11337:2;11325:9;11316:7;11312:23;11308:32;11305:119;;;11343:79;;:::i;:::-;11305:119;11463:1;11488:52;11532:7;11523:6;11512:9;11508:22;11488:52;:::i;:::-;11478:62;;11434:116;11589:2;11615:52;11659:7;11650:6;11639:9;11635:22;11615:52;:::i;:::-;11605:62;;11560:117;11214:470;;;;;:::o;11690:180::-;11738:77;11735:1;11728:88;11835:4;11832:1;11825:15;11859:4;11856:1;11849:15;11876:169;11960:11;11994:6;11989:3;11982:19;12034:4;12029:3;12025:14;12010:29;;11876:169;;;;:::o;12051:165::-;12191:17;12187:1;12179:6;12175:14;12168:41;12051:165;:::o;12222:366::-;12364:3;12385:67;12449:2;12444:3;12385:67;:::i;:::-;12378:74;;12461:93;12550:3;12461:93;:::i;:::-;12579:2;12574:3;12570:12;12563:19;;12222:366;;;:::o;12594:419::-;12760:4;12798:2;12787:9;12783:18;12775:26;;12847:9;12841:4;12837:20;12833:1;12822:9;12818:17;12811:47;12875:131;13001:4;12875:131;:::i;:::-;12867:139;;12594:419;;;:::o;13019:180::-;13067:77;13064:1;13057:88;13164:4;13161:1;13154:15;13188:4;13185:1;13178:15;13205:233;13244:3;13267:24;13285:5;13267:24;:::i;:::-;13258:33;;13313:66;13306:5;13303:77;13300:103;;;13383:18;;:::i;:::-;13300:103;13430:1;13423:5;13419:13;13412:20;;13205:233;;;:::o;13444:652::-;13643:4;13681:3;13670:9;13666:19;13658:27;;13695:71;13763:1;13752:9;13748:17;13739:6;13695:71;:::i;:::-;13776:72;13844:2;13833:9;13829:18;13820:6;13776:72;:::i;:::-;13858:70;13924:2;13913:9;13909:18;13900:6;13858:70;:::i;:::-;13938;14004:2;13993:9;13989:18;13980:6;13938:70;:::i;:::-;14018:71;14084:3;14073:9;14069:19;14060:6;14018:71;:::i;:::-;13444:652;;;;;;;;:::o;14102:169::-;14242:21;14238:1;14230:6;14226:14;14219:45;14102:169;:::o;14277:366::-;14419:3;14440:67;14504:2;14499:3;14440:67;:::i;:::-;14433:74;;14516:93;14605:3;14516:93;:::i;:::-;14634:2;14629:3;14625:12;14618:19;;14277:366;;;:::o;14649:419::-;14815:4;14853:2;14842:9;14838:18;14830:26;;14902:9;14896:4;14892:20;14888:1;14877:9;14873:17;14866:47;14930:131;15056:4;14930:131;:::i;:::-;14922:139;;14649:419;;;:::o;15074:332::-;15195:4;15233:2;15222:9;15218:18;15210:26;;15246:71;15314:1;15303:9;15299:17;15290:6;15246:71;:::i;:::-;15327:72;15395:2;15384:9;15380:18;15371:6;15327:72;:::i;:::-;15074:332;;;;;:::o;15412:180::-;15460:77;15457:1;15450:88;15557:4;15554:1;15547:15;15581:4;15578:1;15571:15;15598:114;15665:6;15699:5;15693:12;15683:22;;15598:114;;;:::o;15718:184::-;15817:11;15851:6;15846:3;15839:19;15891:4;15886:3;15882:14;15867:29;;15718:184;;;;:::o;15908:132::-;15975:4;15998:3;15990:11;;16028:4;16023:3;16019:14;16011:22;;15908:132;;;:::o;16046:108::-;16123:24;16141:5;16123:24;:::i;:::-;16118:3;16111:37;16046:108;;:::o;16160:179::-;16229:10;16250:46;16292:3;16284:6;16250:46;:::i;:::-;16328:4;16323:3;16319:14;16305:28;;16160:179;;;;:::o;16345:113::-;16415:4;16447;16442:3;16438:14;16430:22;;16345:113;;;:::o;16494:732::-;16613:3;16642:54;16690:5;16642:54;:::i;:::-;16712:86;16791:6;16786:3;16712:86;:::i;:::-;16705:93;;16822:56;16872:5;16822:56;:::i;:::-;16901:7;16932:1;16917:284;16942:6;16939:1;16936:13;16917:284;;;17018:6;17012:13;17045:63;17104:3;17089:13;17045:63;:::i;:::-;17038:70;;17131:60;17184:6;17131:60;:::i;:::-;17121:70;;16977:224;16964:1;16961;16957:9;16952:14;;16917:284;;;16921:14;17217:3;17210:10;;16618:608;;;16494:732;;;;:::o;17232:483::-;17403:4;17441:2;17430:9;17426:18;17418:26;;17454:71;17522:1;17511:9;17507:17;17498:6;17454:71;:::i;:::-;17572:9;17566:4;17562:20;17557:2;17546:9;17542:18;17535:48;17600:108;17703:4;17694:6;17600:108;:::i;:::-;17592:116;;17232:483;;;;;:::o;17721:98::-;17772:6;17806:5;17800:12;17790:22;;17721:98;;;:::o;17825:147::-;17926:11;17963:3;17948:18;;17825:147;;;;:::o;17978:307::-;18046:1;18056:113;18070:6;18067:1;18064:13;18056:113;;;18155:1;18150:3;18146:11;18140:18;18136:1;18131:3;18127:11;18120:39;18092:2;18089:1;18085:10;18080:15;;18056:113;;;18187:6;18184:1;18181:13;18178:101;;;18267:1;18258:6;18253:3;18249:16;18242:27;18178:101;18027:258;17978:307;;;:::o;18291:373::-;18395:3;18423:38;18455:5;18423:38;:::i;:::-;18477:88;18558:6;18553:3;18477:88;:::i;:::-;18470:95;;18574:52;18619:6;18614:3;18607:4;18600:5;18596:16;18574:52;:::i;:::-;18651:6;18646:3;18642:16;18635:23;;18399:265;18291:373;;;;:::o;18670:271::-;18800:3;18822:93;18911:3;18902:6;18822:93;:::i;:::-;18815:100;;18932:3;18925:10;;18670:271;;;;:::o;18947:191::-;18987:4;19007:20;19025:1;19007:20;:::i;:::-;19002:25;;19041:20;19059:1;19041:20;:::i;:::-;19036:25;;19080:1;19077;19074:8;19071:34;;;19085:18;;:::i;:::-;19071:34;19130:1;19127;19123:9;19115:17;;18947:191;;;;:::o;19144:348::-;19184:7;19207:20;19225:1;19207:20;:::i;:::-;19202:25;;19241:20;19259:1;19241:20;:::i;:::-;19236:25;;19429:1;19361:66;19357:74;19354:1;19351:81;19346:1;19339:9;19332:17;19328:105;19325:131;;;19436:18;;:::i;:::-;19325:131;19484:1;19481;19477:9;19466:20;;19144:348;;;;:::o;19498:305::-;19538:3;19557:20;19575:1;19557:20;:::i;:::-;19552:25;;19591:20;19609:1;19591:20;:::i;:::-;19586:25;;19745:1;19677:66;19673:74;19670:1;19667:81;19664:107;;;19751:18;;:::i;:::-;19664:107;19795:1;19792;19788:9;19781:16;;19498:305;;;;:::o;19809:188::-;19848:4;19868:19;19885:1;19868:19;:::i;:::-;19863:24;;19901:19;19918:1;19901:19;:::i;:::-;19896:24;;19939:1;19936;19933:8;19930:34;;;19944:18;;:::i;:::-;19930:34;19989:1;19986;19982:9;19974:17;;19809:188;;;;:::o;20003:90::-;20037:7;20080:5;20073:13;20066:21;20055:32;;20003:90;;;:::o;20099:109::-;20180:21;20195:5;20180:21;:::i;:::-;20175:3;20168:34;20099:109;;:::o;20214:426::-;20355:4;20393:2;20382:9;20378:18;20370:26;;20406:71;20474:1;20463:9;20459:17;20450:6;20406:71;:::i;:::-;20487:70;20553:2;20542:9;20538:18;20529:6;20487:70;:::i;:::-;20567:66;20629:2;20618:9;20614:18;20605:6;20567:66;:::i;:::-;20214:426;;;;;;:::o;20646:183::-;20684:3;20707:23;20724:5;20707:23;:::i;:::-;20698:32;;20752:18;20745:5;20742:29;20739:55;;;20774:18;;:::i;:::-;20739:55;20821:1;20814:5;20810:13;20803:20;;20646:183;;;:::o;20835:222::-;20928:4;20966:2;20955:9;20951:18;20943:26;;20979:71;21047:1;21036:9;21032:17;21023:6;20979:71;:::i;:::-;20835:222;;;;:::o;21063:262::-;21102:3;21121:19;21138:1;21121:19;:::i;:::-;21116:24;;21154:19;21171:1;21154:19;:::i;:::-;21149:24;;21267:1;21239:26;21235:34;21232:1;21229:41;21226:67;;;21273:18;;:::i;:::-;21226:67;21317:1;21314;21310:9;21303:16;;21063:262;;;;:::o;21331:60::-;21359:3;21380:5;21373:12;;21331:60;;;:::o;21397:140::-;21446:9;21479:52;21497:33;21506:23;21523:5;21506:23;:::i;:::-;21497:33;:::i;:::-;21479:52;:::i;:::-;21466:65;;21397:140;;;:::o;21543:129::-;21629:36;21659:5;21629:36;:::i;:::-;21624:3;21617:49;21543:129;;:::o;21678:328::-;21797:4;21835:2;21824:9;21820:18;21812:26;;21848:70;21915:1;21904:9;21900:17;21891:6;21848:70;:::i;:::-;21928:71;21995:2;21984:9;21980:18;21971:6;21928:71;:::i;:::-;21678:328;;;;;:::o;22012:330::-;22132:4;22170:2;22159:9;22155:18;22147:26;;22183:71;22251:1;22240:9;22236:17;22227:6;22183:71;:::i;:::-;22264;22331:2;22320:9;22316:18;22307:6;22264:71;:::i;:::-;22012:330;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1581600","executionCost":"infinite","totalCost":"infinite"},"external":{"BASE_FEE()":"infinite","GAS_PRICE_LINK()":"infinite","acceptSubscriptionOwnerTransfer(uint64)":"723","addConsumer(uint64,address)":"1009","cancelSubscription(uint64,address)":"infinite","createSubscription()":"infinite","fulfillRandomWords(uint256,address)":"infinite","fundSubscription(uint64,uint96)":"infinite","getRequestConfig()":"885","getSubscription(uint64)":"infinite","removeConsumer(uint64,address)":"965","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"infinite","requestSubscriptionOwnerTransfer(uint64,address)":"943"}},"methodIdentifiers":{"BASE_FEE()":"3d18651e","GAS_PRICE_LINK()":"a410347f","acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","fulfillRandomWords(uint256,address)":"808974ff","fundSubscription(uint64,uint96)":"afc69b53","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_baseFee\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_gasPriceLink\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSubscription\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MustBeSubOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputSeed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"payment\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"RandomWordsFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RandomWordsRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFunded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_FEE\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GAS_PRICE_LINK\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"fulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"uint96\",\"name\":\"_amount\",\"type\":\"uint96\"}],\"name\":\"fundSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"_minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"_callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"_subId\":\"- A unique subscription id.\"}},\"fulfillRandomWords(uint256,address)\":{\"details\":\"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.\",\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\"}},\"fundSubscription(uint64,uint96)\":{\"params\":{\"_amount\":\"the amount to fund\",\"_subId\":\"the subscription to fund\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fulfillRandomWords(uint256,address)\":{\"notice\":\"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer.\"},\"fundSubscription(uint64,uint96)\":{\"notice\":\"fundSubscription allows funding a subscription with an arbitrary amount for testing.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\":\"VRFCoordinatorV2Mock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// A mock for testing code that relies on VRFCoordinatorV2.\\npragma solidity ^0.8.4;\\n\\nimport \\\"../interfaces/LinkTokenInterface.sol\\\";\\nimport \\\"../interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"../VRFConsumerBaseV2.sol\\\";\\n\\ncontract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface {\\n  uint96 public immutable BASE_FEE;\\n  uint96 public immutable GAS_PRICE_LINK;\\n\\n  error InvalidSubscription();\\n  error InsufficientBalance();\\n  error MustBeSubOwner(address owner);\\n\\n  event RandomWordsRequested(\\n    bytes32 indexed keyHash,\\n    uint256 requestId,\\n    uint256 preSeed,\\n    uint64 indexed subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords,\\n    address indexed sender\\n  );\\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\\n  event SubscriptionCreated(uint64 indexed subId, address owner);\\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\\n\\n  uint64 s_currentSubId;\\n  uint256 s_nextRequestId = 1;\\n  uint256 s_nextPreSeed = 100;\\n  struct Subscription {\\n    address owner;\\n    uint96 balance;\\n  }\\n  mapping(uint64 => Subscription) s_subscriptions; /* subId */ /* subscription */\\n\\n  struct Request {\\n    uint64 subId;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n  }\\n  mapping(uint256 => Request) s_requests; /* requestId */ /* request */\\n\\n  constructor(uint96 _baseFee, uint96 _gasPriceLink) {\\n    BASE_FEE = _baseFee;\\n    GAS_PRICE_LINK = _gasPriceLink;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\\n   * @notice consumer.\\n   *\\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\\n   * @dev against the real coordinator a small amount of additional LINK is required.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   */\\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external {\\n    uint256 startGas = gasleft();\\n    if (s_requests[_requestId].subId == 0) {\\n      revert(\\\"nonexistent request\\\");\\n    }\\n    Request memory req = s_requests[_requestId];\\n\\n    uint256[] memory words = new uint256[](req.numWords);\\n    for (uint256 i = 0; i < req.numWords; i++) {\\n      words[i] = uint256(keccak256(abi.encode(_requestId, i)));\\n    }\\n\\n    VRFConsumerBaseV2 v;\\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, words);\\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\\n\\n    uint96 payment = uint96(BASE_FEE + ((startGas - gasleft()) * GAS_PRICE_LINK));\\n    if (s_subscriptions[req.subId].balance < payment) {\\n      revert InsufficientBalance();\\n    }\\n    s_subscriptions[req.subId].balance -= payment;\\n    delete (s_requests[_requestId]);\\n    emit RandomWordsFulfilled(_requestId, _requestId, payment, success);\\n  }\\n\\n  /**\\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\\n   *\\n   * @param _subId the subscription to fund\\n   * @param _amount the amount to fund\\n   */\\n  function fundSubscription(uint64 _subId, uint96 _amount) public {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    uint96 oldBalance = s_subscriptions[_subId].balance;\\n    s_subscriptions[_subId].balance += _amount;\\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\\n  }\\n\\n  function requestRandomWords(\\n    bytes32 _keyHash,\\n    uint64 _subId,\\n    uint16 _minimumRequestConfirmations,\\n    uint32 _callbackGasLimit,\\n    uint32 _numWords\\n  ) external override returns (uint256) {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n\\n    uint256 requestId = s_nextRequestId++;\\n    uint256 preSeed = s_nextPreSeed++;\\n\\n    s_requests[requestId] = Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords});\\n\\n    emit RandomWordsRequested(\\n      _keyHash,\\n      requestId,\\n      preSeed,\\n      _subId,\\n      _minimumRequestConfirmations,\\n      _callbackGasLimit,\\n      _numWords,\\n      msg.sender\\n    );\\n    return requestId;\\n  }\\n\\n  function createSubscription() external override returns (uint64 _subId) {\\n    s_currentSubId++;\\n    s_subscriptions[s_currentSubId] = Subscription({owner: msg.sender, balance: 0});\\n    emit SubscriptionCreated(s_currentSubId, msg.sender);\\n    return s_currentSubId;\\n  }\\n\\n  function getSubscription(uint64 _subId)\\n    external\\n    view\\n    override\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    )\\n  {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    return (s_subscriptions[_subId].balance, 0, s_subscriptions[_subId].owner, new address[](0));\\n  }\\n\\n  function cancelSubscription(uint64 _subId, address _to) external override onlySubOwner(_subId) {\\n    emit SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance);\\n    delete (s_subscriptions[_subId]);\\n  }\\n\\n  modifier onlySubOwner(uint64 _subId) {\\n    address owner = s_subscriptions[_subId].owner;\\n    if (owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    if (msg.sender != owner) {\\n      revert MustBeSubOwner(owner);\\n    }\\n    _;\\n  }\\n\\n  function getRequestConfig()\\n    external\\n    pure\\n    override\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    )\\n  {\\n    return (3, 2000000, new bytes32[](0));\\n  }\\n\\n  function addConsumer(uint64 _subId, address _consumer) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function removeConsumer(uint64 _subId, address _consumer) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n}\\n\",\"keccak256\":\"0xb9d619acd3fe9b3571f7d1601ed6aadb235415fbce395001e122773c0bb3843e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":358,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_currentSubId","offset":0,"slot":"0","type":"t_uint64"},{"astId":361,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_nextRequestId","offset":0,"slot":"1","type":"t_uint256"},{"astId":364,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_nextPreSeed","offset":0,"slot":"2","type":"t_uint256"},{"astId":374,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_subscriptions","offset":0,"slot":"3","type":"t_mapping(t_uint64,t_struct(Subscription)369_storage)"},{"astId":386,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_requests","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_struct(Request)381_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_uint256,t_struct(Request)381_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)","numberOfBytes":"32","value":"t_struct(Request)381_storage"},"t_mapping(t_uint64,t_struct(Subscription)369_storage)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)","numberOfBytes":"32","value":"t_struct(Subscription)369_storage"},"t_struct(Request)381_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2Mock.Request","members":[{"astId":376,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"subId","offset":0,"slot":"0","type":"t_uint64"},{"astId":378,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"callbackGasLimit","offset":8,"slot":"0","type":"t_uint32"},{"astId":380,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"numWords","offset":12,"slot":"0","type":"t_uint32"}],"numberOfBytes":"32"},"t_struct(Subscription)369_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2Mock.Subscription","members":[{"astId":366,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":368,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"balance","offset":20,"slot":"0","type":"t_uint96"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{"createSubscription()":{"notice":"Create a VRF subscription."},"fulfillRandomWords(uint256,address)":{"notice":"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer."},"fundSubscription(uint64,uint96)":{"notice":"fundSubscription allows funding a subscription with an arbitrary amount for testing."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"}},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":874,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1042":{"entryPoint":null,"id":1042,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":576,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":437,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":468,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":835,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":336,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":309,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":304,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":299,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:20","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:20","statements":[{"nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:20"},"nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:20"},"nodeType":"YulFunctionCall","src":"187:12:20"},"nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:20"},"nodeType":"YulFunctionCall","src":"310:12:20"},"nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nodeType":"YulBlock","src":"423:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:20"},"nodeType":"YulFunctionCall","src":"433:12:20"},"nodeType":"YulExpressionStatement","src":"433:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:20"},{"body":{"nodeType":"YulBlock","src":"546:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:20"},"nodeType":"YulFunctionCall","src":"556:12:20"},"nodeType":"YulExpressionStatement","src":"556:12:20"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:20"},{"body":{"nodeType":"YulBlock","src":"628:54:20","statements":[{"nodeType":"YulAssignment","src":"638:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:20"},"nodeType":"YulFunctionCall","src":"652:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:20"},"nodeType":"YulFunctionCall","src":"668:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:20"},"nodeType":"YulFunctionCall","src":"648:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:20","type":""}],"src":"580:102:20"},{"body":{"nodeType":"YulBlock","src":"716:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:20"},"nodeType":"YulFunctionCall","src":"726:88:20"},"nodeType":"YulExpressionStatement","src":"726:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:20"},"nodeType":"YulFunctionCall","src":"823:15:20"},"nodeType":"YulExpressionStatement","src":"823:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:20"},"nodeType":"YulFunctionCall","src":"847:15:20"},"nodeType":"YulExpressionStatement","src":"847:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:20"},{"body":{"nodeType":"YulBlock","src":"917:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:20"},"nodeType":"YulFunctionCall","src":"957:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:20"},"nodeType":"YulFunctionCall","src":"945:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:20"},"nodeType":"YulFunctionCall","src":"1098:18:20"},"nodeType":"YulExpressionStatement","src":"1098:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:20"},"nodeType":"YulFunctionCall","src":"1036:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:20"},"nodeType":"YulFunctionCall","src":"1072:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:20"},"nodeType":"YulFunctionCall","src":"1033:62:20"},"nodeType":"YulIf","src":"1030:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:20"},"nodeType":"YulFunctionCall","src":"1127:22:20"},"nodeType":"YulExpressionStatement","src":"1127:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:20","type":""}],"src":"874:281:20"},{"body":{"nodeType":"YulBlock","src":"1202:88:20","statements":[{"nodeType":"YulAssignment","src":"1212:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:20"},"nodeType":"YulFunctionCall","src":"1222:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:20"},"nodeType":"YulFunctionCall","src":"1251:33:20"},"nodeType":"YulExpressionStatement","src":"1251:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:20","type":""}],"src":"1161:129:20"},{"body":{"nodeType":"YulBlock","src":"1363:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:20"},"nodeType":"YulFunctionCall","src":"1470:18:20"},"nodeType":"YulExpressionStatement","src":"1470:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:20"},"nodeType":"YulFunctionCall","src":"1437:30:20"},"nodeType":"YulIf","src":"1434:56:20"},{"nodeType":"YulAssignment","src":"1500:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:20"},"nodeType":"YulFunctionCall","src":"1508:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:20"}]},{"nodeType":"YulAssignment","src":"1574:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:20"},"nodeType":"YulFunctionCall","src":"1582:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:20"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:20","type":""}],"src":"1296:308:20"},{"body":{"nodeType":"YulBlock","src":"1659:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:20"},"nodeType":"YulFunctionCall","src":"1759:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:20"},"nodeType":"YulFunctionCall","src":"1778:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:20"},"nodeType":"YulFunctionCall","src":"1772:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:20"},"nodeType":"YulFunctionCall","src":"1752:39:20"},"nodeType":"YulExpressionStatement","src":"1752:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:20"},"nodeType":"YulFunctionCall","src":"1696:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:20","statements":[{"nodeType":"YulAssignment","src":"1712:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:20"},"nodeType":"YulFunctionCall","src":"1717:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:20","statements":[]},"src":"1688:113:20"},{"body":{"nodeType":"YulBlock","src":"1835:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:20"},"nodeType":"YulFunctionCall","src":"1881:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:20"},"nodeType":"YulFunctionCall","src":"1874:27:20"},"nodeType":"YulExpressionStatement","src":"1874:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:20"},"nodeType":"YulFunctionCall","src":"1813:13:20"},"nodeType":"YulIf","src":"1810:101:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:20","type":""}],"src":"1610:307:20"},{"body":{"nodeType":"YulBlock","src":"2018:326:20","statements":[{"nodeType":"YulAssignment","src":"2028:75:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:20"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:20"},"nodeType":"YulFunctionCall","src":"2053:49:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:20"},"nodeType":"YulFunctionCall","src":"2037:66:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:20"},"nodeType":"YulFunctionCall","src":"2112:21:20"},"nodeType":"YulExpressionStatement","src":"2112:21:20"},{"nodeType":"YulVariableDeclaration","src":"2142:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:20"},"nodeType":"YulFunctionCall","src":"2153:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:20"},"nodeType":"YulFunctionCall","src":"2209:79:20"},"nodeType":"YulExpressionStatement","src":"2209:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:20"},"nodeType":"YulFunctionCall","src":"2184:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:20"},"nodeType":"YulFunctionCall","src":"2181:25:20"},"nodeType":"YulIf","src":"2178:112:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:20"},"nodeType":"YulFunctionCall","src":"2299:39:20"},"nodeType":"YulExpressionStatement","src":"2299:39:20"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:20","type":""}],"src":"1923:421:20"},{"body":{"nodeType":"YulBlock","src":"2437:282:20","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:20"},"nodeType":"YulFunctionCall","src":"2488:79:20"},"nodeType":"YulExpressionStatement","src":"2488:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:20"},"nodeType":"YulFunctionCall","src":"2461:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:20"},"nodeType":"YulFunctionCall","src":"2457:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:20"},"nodeType":"YulFunctionCall","src":"2450:35:20"},"nodeType":"YulIf","src":"2447:122:20"},{"nodeType":"YulVariableDeclaration","src":"2578:27:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:20"},"nodeType":"YulFunctionCall","src":"2592:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:20"},"nodeType":"YulFunctionCall","src":"2682:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:20"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:20"},"nodeType":"YulFunctionCall","src":"2623:90:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:20"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:20","type":""}],"src":"2364:355:20"},{"body":{"nodeType":"YulBlock","src":"2839:739:20","statements":[{"body":{"nodeType":"YulBlock","src":"2885:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2887:77:20"},"nodeType":"YulFunctionCall","src":"2887:79:20"},"nodeType":"YulExpressionStatement","src":"2887:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2856:3:20"},"nodeType":"YulFunctionCall","src":"2856:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2881:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2852:3:20"},"nodeType":"YulFunctionCall","src":"2852:32:20"},"nodeType":"YulIf","src":"2849:119:20"},{"nodeType":"YulBlock","src":"2978:291:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2993:38:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:20"},"nodeType":"YulFunctionCall","src":"3013:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3007:5:20"},"nodeType":"YulFunctionCall","src":"3007:24:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2997:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3078:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3080:77:20"},"nodeType":"YulFunctionCall","src":"3080:79:20"},"nodeType":"YulExpressionStatement","src":"3080:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3050:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3058:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3047:2:20"},"nodeType":"YulFunctionCall","src":"3047:30:20"},"nodeType":"YulIf","src":"3044:117:20"},{"nodeType":"YulAssignment","src":"3175:84:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3242:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3227:3:20"},"nodeType":"YulFunctionCall","src":"3227:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3251:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3185:41:20"},"nodeType":"YulFunctionCall","src":"3185:74:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3175:6:20"}]}]},{"nodeType":"YulBlock","src":"3279:292:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3294:39:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3318:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3329:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:20"},"nodeType":"YulFunctionCall","src":"3314:18:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3308:5:20"},"nodeType":"YulFunctionCall","src":"3308:25:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3298:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3380:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3382:77:20"},"nodeType":"YulFunctionCall","src":"3382:79:20"},"nodeType":"YulExpressionStatement","src":"3382:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3352:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3360:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:20"},"nodeType":"YulFunctionCall","src":"3349:30:20"},"nodeType":"YulIf","src":"3346:117:20"},{"nodeType":"YulAssignment","src":"3477:84:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3544:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:20"},"nodeType":"YulFunctionCall","src":"3529:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3553:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3487:41:20"},"nodeType":"YulFunctionCall","src":"3487:74:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3477:6:20"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2801:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2812:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2824:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2832:6:20","type":""}],"src":"2725:853:20"},{"body":{"nodeType":"YulBlock","src":"3612:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3629:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3632:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:20"},"nodeType":"YulFunctionCall","src":"3622:88:20"},"nodeType":"YulExpressionStatement","src":"3622:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3726:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3729:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3719:6:20"},"nodeType":"YulFunctionCall","src":"3719:15:20"},"nodeType":"YulExpressionStatement","src":"3719:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:20"},"nodeType":"YulFunctionCall","src":"3743:15:20"},"nodeType":"YulExpressionStatement","src":"3743:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3584:180:20"},{"body":{"nodeType":"YulBlock","src":"3821:269:20","statements":[{"nodeType":"YulAssignment","src":"3831:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3845:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3841:3:20"},"nodeType":"YulFunctionCall","src":"3841:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3831:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"3862:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3892:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"3898:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3888:3:20"},"nodeType":"YulFunctionCall","src":"3888:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3866:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3939:51:20","statements":[{"nodeType":"YulAssignment","src":"3953:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3967:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3975:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3963:3:20"},"nodeType":"YulFunctionCall","src":"3963:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3953:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3919:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3912:6:20"},"nodeType":"YulFunctionCall","src":"3912:26:20"},"nodeType":"YulIf","src":"3909:81:20"},{"body":{"nodeType":"YulBlock","src":"4042:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4056:16:20"},"nodeType":"YulFunctionCall","src":"4056:18:20"},"nodeType":"YulExpressionStatement","src":"4056:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4006:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4029:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4037:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4026:2:20"},"nodeType":"YulFunctionCall","src":"4026:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4003:2:20"},"nodeType":"YulFunctionCall","src":"4003:38:20"},"nodeType":"YulIf","src":"4000:84:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3805:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3814:6:20","type":""}],"src":"3770:320:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200254e3803806200254e8339818101604052810190620000379190620002be565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b61219680620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906113cd565b6102bc565b6040516100fb9190611415565b60405180910390f35b61010c61039e565b60405161011991906114c9565b60405180910390f35b61013c60048036038101906101379190611521565b610430565b604051610149919061158f565b60405180910390f35b61016c600480360381019061016791906115d6565b610476565b005b61018860048036038101906101839190611616565b61058e565b005b6101a4600480360381019061019f9190611616565b6105ee565b005b6101c060048036038101906101bb9190611521565b61060e565b6040516101cd919061158f565b60405180910390f35b6101f060048036038101906101eb9190611669565b6106c0565b6040516101fd91906116a5565b60405180910390f35b61020e610778565b60405161021b91906114c9565b60405180910390f35b61023e600480360381019061023991906116ec565b61080a565b005b61025a60048036038101906102559190611861565b610820565b005b61027660048036038101906102719190611521565b610882565b60405161028391906114c9565b60405180910390f35b6102a660048036038101906102a191906118e4565b6108ea565b6040516102b39190611415565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061039757506103968261097e565b5b9050919050565b6060600080546103ad90611953565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611953565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109e8565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e9906119f7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a33565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a33565b6108ea565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611a89565b60405180910390fd5b6105898383610a3b565b505050565b61059f610599610a33565b82610af4565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611b1b565b60405180910390fd5b6105e9838383610b89565b505050565b61060983838360405180602001604052806000815250610820565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae90611b87565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072890611c19565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461078790611953565b80601f01602080910402602001604051908101604052809291908181526020018280546107b390611953565b80156108005780601f106107d557610100808354040283529160200191610800565b820191906000526020600020905b8154815290600101906020018083116107e357829003601f168201915b5050505050905090565b61081c610815610a33565b8383610df0565b5050565b61083161082b610a33565b83610af4565b610870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086790611b1b565b60405180910390fd5b61087c84848484610f5d565b50505050565b606061088d826109e8565b6000610897610fb9565b905060008151116108b757604051806020016040528060008152506108e2565b806108c184610fd0565b6040516020016108d2929190611c75565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109f181611131565b610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2790611b87565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610aae8361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b008361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b425750610b4181856108ea565b5b80610b8057508373ffffffffffffffffffffffffffffffffffffffff16610b6884610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ba98261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf690611d0b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6690611d9d565b60405180910390fd5b610c7a83838361119d565b610c85600082610a3b565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cd59190611dec565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d2c9190611e20565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610deb8383836111a2565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5690611ec2565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f509190611415565b60405180910390a3505050565b610f68848484610b89565b610f74848484846111a7565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa90611f54565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000821415611018576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061112c565b600082905060005b6000821461104a57808061103390611f74565b915050600a826110439190611fec565b9150611020565b60008167ffffffffffffffff81111561106657611065611736565b5b6040519080825280601f01601f1916602001820160405280156110985781602001600182028036833780820191505090505b5090505b60008514611125576001826110b19190611dec565b9150600a856110c0919061201d565b60306110cc9190611e20565b60f81b8183815181106110e2576110e161204e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561111e9190611fec565b945061109c565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b60006111c88473ffffffffffffffffffffffffffffffffffffffff1661133e565b15611331578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111f1610a33565b8786866040518563ffffffff1660e01b815260040161121394939291906120d2565b602060405180830381600087803b15801561122d57600080fd5b505af192505050801561125e57506040513d601f19601f8201168201806040525081019061125b9190612133565b60015b6112e1573d806000811461128e576040519150601f19603f3d011682016040523d82523d6000602084013e611293565b606091505b506000815114156112d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d090611f54565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611336565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113aa81611375565b81146113b557600080fd5b50565b6000813590506113c7816113a1565b92915050565b6000602082840312156113e3576113e261136b565b5b60006113f1848285016113b8565b91505092915050565b60008115159050919050565b61140f816113fa565b82525050565b600060208201905061142a6000830184611406565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561146a57808201518184015260208101905061144f565b83811115611479576000848401525b50505050565b6000601f19601f8301169050919050565b600061149b82611430565b6114a5818561143b565b93506114b581856020860161144c565b6114be8161147f565b840191505092915050565b600060208201905081810360008301526114e38184611490565b905092915050565b6000819050919050565b6114fe816114eb565b811461150957600080fd5b50565b60008135905061151b816114f5565b92915050565b6000602082840312156115375761153661136b565b5b60006115458482850161150c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115798261154e565b9050919050565b6115898161156e565b82525050565b60006020820190506115a46000830184611580565b92915050565b6115b38161156e565b81146115be57600080fd5b50565b6000813590506115d0816115aa565b92915050565b600080604083850312156115ed576115ec61136b565b5b60006115fb858286016115c1565b925050602061160c8582860161150c565b9150509250929050565b60008060006060848603121561162f5761162e61136b565b5b600061163d868287016115c1565b935050602061164e868287016115c1565b925050604061165f8682870161150c565b9150509250925092565b60006020828403121561167f5761167e61136b565b5b600061168d848285016115c1565b91505092915050565b61169f816114eb565b82525050565b60006020820190506116ba6000830184611696565b92915050565b6116c9816113fa565b81146116d457600080fd5b50565b6000813590506116e6816116c0565b92915050565b600080604083850312156117035761170261136b565b5b6000611711858286016115c1565b9250506020611722858286016116d7565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61176e8261147f565b810181811067ffffffffffffffff8211171561178d5761178c611736565b5b80604052505050565b60006117a0611361565b90506117ac8282611765565b919050565b600067ffffffffffffffff8211156117cc576117cb611736565b5b6117d58261147f565b9050602081019050919050565b82818337600083830152505050565b60006118046117ff846117b1565b611796565b9050828152602081018484840111156118205761181f611731565b5b61182b8482856117e2565b509392505050565b600082601f8301126118485761184761172c565b5b81356118588482602086016117f1565b91505092915050565b6000806000806080858703121561187b5761187a61136b565b5b6000611889878288016115c1565b945050602061189a878288016115c1565b93505060406118ab8782880161150c565b925050606085013567ffffffffffffffff8111156118cc576118cb611370565b5b6118d887828801611833565b91505092959194509250565b600080604083850312156118fb576118fa61136b565b5b6000611909858286016115c1565b925050602061191a858286016115c1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061196b57607f821691505b6020821081141561197f5761197e611924565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006119e160218361143b565b91506119ec82611985565b604082019050919050565b60006020820190508181036000830152611a10816119d4565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b6000611a73603e8361143b565b9150611a7e82611a17565b604082019050919050565b60006020820190508181036000830152611aa281611a66565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6000611b05602e8361143b565b9150611b1082611aa9565b604082019050919050565b60006020820190508181036000830152611b3481611af8565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611b7160188361143b565b9150611b7c82611b3b565b602082019050919050565b60006020820190508181036000830152611ba081611b64565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611c0360298361143b565b9150611c0e82611ba7565b604082019050919050565b60006020820190508181036000830152611c3281611bf6565b9050919050565b600081905092915050565b6000611c4f82611430565b611c598185611c39565b9350611c6981856020860161144c565b80840191505092915050565b6000611c818285611c44565b9150611c8d8284611c44565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611cf560258361143b565b9150611d0082611c99565b604082019050919050565b60006020820190508181036000830152611d2481611ce8565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611d8760248361143b565b9150611d9282611d2b565b604082019050919050565b60006020820190508181036000830152611db681611d7a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611df7826114eb565b9150611e02836114eb565b925082821015611e1557611e14611dbd565b5b828203905092915050565b6000611e2b826114eb565b9150611e36836114eb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e6b57611e6a611dbd565b5b828201905092915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611eac60198361143b565b9150611eb782611e76565b602082019050919050565b60006020820190508181036000830152611edb81611e9f565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611f3e60328361143b565b9150611f4982611ee2565b604082019050919050565b60006020820190508181036000830152611f6d81611f31565b9050919050565b6000611f7f826114eb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611fb257611fb1611dbd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ff7826114eb565b9150612002836114eb565b92508261201257612011611fbd565b5b828204905092915050565b6000612028826114eb565b9150612033836114eb565b92508261204357612042611fbd565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006120a48261207d565b6120ae8185612088565b93506120be81856020860161144c565b6120c78161147f565b840191505092915050565b60006080820190506120e76000830187611580565b6120f46020830186611580565b6121016040830185611696565b81810360608301526121138184612099565b905095945050505050565b60008151905061212d816113a1565b92915050565b6000602082840312156121495761214861136b565b5b60006121578482850161211e565b9150509291505056fea26469706673582212201f83597e48ca2aee1c4e2adaf64efb166a65c18eda93205b9b4336d6069741e764736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x254E CODESIZE SUB DUP1 PUSH3 0x254E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A2 JUMPI PUSH3 0x3A1 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2196 DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1669 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x16EC JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x97E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA33 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA3B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA33 JUMP JUMPDEST DUP3 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x820 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x787 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B3 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x800 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x800 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x81C PUSH2 0x815 PUSH2 0xA33 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDF0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x831 PUSH2 0x82B PUSH2 0xA33 JUMP JUMPDEST DUP4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87C DUP5 DUP5 DUP5 DUP5 PUSH2 0xF5D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x88D DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x897 PUSH2 0xFB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8E2 JUMP JUMPDEST DUP1 PUSH2 0x8C1 DUP5 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D2 SWAP3 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F1 DUP2 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP1 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAAE DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB00 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB42 JUMPI POP PUSH2 0xB41 DUP2 DUP6 PUSH2 0x8EA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB80 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB68 DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBA9 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF6 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC66 SWAP1 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7A DUP4 DUP4 DUP4 PUSH2 0x119D JUMP JUMPDEST PUSH2 0xC85 PUSH1 0x0 DUP3 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDEB DUP4 DUP4 DUP4 PUSH2 0x11A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE56 SWAP1 PUSH2 0x1EC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF50 SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xF68 DUP5 DUP5 DUP5 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xF74 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x112C JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x104A JUMPI DUP1 DUP1 PUSH2 0x1033 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1066 JUMPI PUSH2 0x1065 PUSH2 0x1736 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1098 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1125 JUMPI PUSH1 0x1 DUP3 PUSH2 0x10B1 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x10C0 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x30 PUSH2 0x10CC SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10E2 JUMPI PUSH2 0x10E1 PUSH2 0x204E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x111E SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST SWAP5 POP PUSH2 0x109C JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C8 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x133E JUMP JUMPDEST ISZERO PUSH2 0x1331 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11F1 PUSH2 0xA33 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1213 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x122D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x125E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x125B SWAP2 SWAP1 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12E1 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x128E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D0 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1336 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13AA DUP2 PUSH2 0x1375 JUMP JUMPDEST DUP2 EQ PUSH2 0x13B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13C7 DUP2 PUSH2 0x13A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E3 JUMPI PUSH2 0x13E2 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13F1 DUP5 DUP3 DUP6 ADD PUSH2 0x13B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140F DUP2 PUSH2 0x13FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x142A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1406 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x146A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x144F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149B DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x14A5 DUP2 DUP6 PUSH2 0x143B JUMP JUMPDEST SWAP4 POP PUSH2 0x14B5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST PUSH2 0x14BE DUP2 PUSH2 0x147F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14E3 DUP2 DUP5 PUSH2 0x1490 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14FE DUP2 PUSH2 0x14EB JUMP JUMPDEST DUP2 EQ PUSH2 0x1509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x151B DUP2 PUSH2 0x14F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1537 JUMPI PUSH2 0x1536 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1545 DUP5 DUP3 DUP6 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1579 DUP3 PUSH2 0x154E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1589 DUP2 PUSH2 0x156E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1580 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B3 DUP2 PUSH2 0x156E JUMP JUMPDEST DUP2 EQ PUSH2 0x15BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D0 DUP2 PUSH2 0x15AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15ED JUMPI PUSH2 0x15EC PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15FB DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x160C DUP6 DUP3 DUP7 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x162F JUMPI PUSH2 0x162E PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x163D DUP7 DUP3 DUP8 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x164E DUP7 DUP3 DUP8 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x165F DUP7 DUP3 DUP8 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167F JUMPI PUSH2 0x167E PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x168D DUP5 DUP3 DUP6 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x169F DUP2 PUSH2 0x14EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16C9 DUP2 PUSH2 0x13FA JUMP JUMPDEST DUP2 EQ PUSH2 0x16D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16E6 DUP2 PUSH2 0x16C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1703 JUMPI PUSH2 0x1702 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1711 DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1722 DUP6 DUP3 DUP7 ADD PUSH2 0x16D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x176E DUP3 PUSH2 0x147F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x178D JUMPI PUSH2 0x178C PUSH2 0x1736 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A0 PUSH2 0x1361 JUMP JUMPDEST SWAP1 POP PUSH2 0x17AC DUP3 DUP3 PUSH2 0x1765 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17CC JUMPI PUSH2 0x17CB PUSH2 0x1736 JUMP JUMPDEST JUMPDEST PUSH2 0x17D5 DUP3 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1804 PUSH2 0x17FF DUP5 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0x1796 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1820 JUMPI PUSH2 0x181F PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH2 0x182B DUP5 DUP3 DUP6 PUSH2 0x17E2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1848 JUMPI PUSH2 0x1847 PUSH2 0x172C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1858 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x187B JUMPI PUSH2 0x187A PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1889 DUP8 DUP3 DUP9 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x189A DUP8 DUP3 DUP9 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18AB DUP8 DUP3 DUP9 ADD PUSH2 0x150C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18CC JUMPI PUSH2 0x18CB PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH2 0x18D8 DUP8 DUP3 DUP9 ADD PUSH2 0x1833 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18FB JUMPI PUSH2 0x18FA PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1909 DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x191A DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x196B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x197F JUMPI PUSH2 0x197E PUSH2 0x1924 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E1 PUSH1 0x21 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x19EC DUP3 PUSH2 0x1985 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A10 DUP2 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A73 PUSH1 0x3E DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A7E DUP3 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AA2 DUP2 PUSH2 0x1A66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B05 PUSH1 0x2E DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B10 DUP3 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B34 DUP2 PUSH2 0x1AF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B71 PUSH1 0x18 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7C DUP3 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BA0 DUP2 PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C03 PUSH1 0x29 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0E DUP3 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C32 DUP2 PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4F DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x1C59 DUP2 DUP6 PUSH2 0x1C39 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C69 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C81 DUP3 DUP6 PUSH2 0x1C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8D DUP3 DUP5 PUSH2 0x1C44 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF5 PUSH1 0x25 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D00 DUP3 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D24 DUP2 PUSH2 0x1CE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D87 PUSH1 0x24 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D92 DUP3 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB6 DUP2 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DF7 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1E02 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1E15 JUMPI PUSH2 0x1E14 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2B DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1E36 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E6B JUMPI PUSH2 0x1E6A PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAC PUSH1 0x19 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB7 DUP3 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EDB DUP2 PUSH2 0x1E9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3E PUSH1 0x32 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1F49 DUP3 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F6D DUP2 PUSH2 0x1F31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7F DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1FB2 JUMPI PUSH2 0x1FB1 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FF7 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2002 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2012 JUMPI PUSH2 0x2011 PUSH2 0x1FBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2028 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2033 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2043 JUMPI PUSH2 0x2042 PUSH2 0x1FBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A4 DUP3 PUSH2 0x207D JUMP JUMPDEST PUSH2 0x20AE DUP2 DUP6 PUSH2 0x2088 JUMP JUMPDEST SWAP4 POP PUSH2 0x20BE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST PUSH2 0x20C7 DUP2 PUSH2 0x147F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x20E7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x20F4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x2101 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1696 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2113 DUP2 DUP5 PUSH2 0x2099 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x212D DUP2 PUSH2 0x13A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2149 JUMPI PUSH2 0x2148 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2157 DUP5 DUP3 DUP6 ADD PUSH2 0x211E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F DUP4 MSIZE PUSH31 0x48CA2AEE1C4E2ADAF64EFB166A65C18EDA93205B9B4336D6069741E764736F PUSH13 0x63430008080033000000000000 ","sourceMap":"628:13718:6:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;628:13718;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:20:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;628:13718:6:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1845":{"entryPoint":4514,"id":1845,"parameterSlots":3,"returnSlots":0},"@_approve_1715":{"entryPoint":2619,"id":1715,"parameterSlots":2,"returnSlots":0},"@_baseURI_1193":{"entryPoint":4025,"id":1193,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_1834":{"entryPoint":4509,"id":1834,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_1823":{"entryPoint":4519,"id":1823,"parameterSlots":4,"returnSlots":1},"@_exists_1412":{"entryPoint":4401,"id":1412,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1446":{"entryPoint":2804,"id":1446,"parameterSlots":2,"returnSlots":1},"@_msgSender_2439":{"entryPoint":2611,"id":2439,"parameterSlots":0,"returnSlots":1},"@_requireMinted_1761":{"entryPoint":2536,"id":1761,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_1394":{"entryPoint":3933,"id":1394,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1747":{"entryPoint":3568,"id":1747,"parameterSlots":3,"returnSlots":0},"@_transfer_1691":{"entryPoint":2953,"id":1691,"parameterSlots":3,"returnSlots":0},"@approve_1236":{"entryPoint":1142,"id":1236,"parameterSlots":2,"returnSlots":0},"@balanceOf_1097":{"entryPoint":1728,"id":1097,"parameterSlots":1,"returnSlots":1},"@getApproved_1254":{"entryPoint":1072,"id":1254,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1289":{"entryPoint":2282,"id":1289,"parameterSlots":2,"returnSlots":1},"@isContract_2150":{"entryPoint":4926,"id":2150,"parameterSlots":1,"returnSlots":1},"@name_1135":{"entryPoint":926,"id":1135,"parameterSlots":0,"returnSlots":1},"@ownerOf_1125":{"entryPoint":1550,"id":1125,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1335":{"entryPoint":1518,"id":1335,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1365":{"entryPoint":2080,"id":1365,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1271":{"entryPoint":2058,"id":1271,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1073":{"entryPoint":700,"id":1073,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2698":{"entryPoint":2430,"id":2698,"parameterSlots":1,"returnSlots":1},"@symbol_1145":{"entryPoint":1912,"id":1145,"parameterSlots":0,"returnSlots":1},"@toString_2537":{"entryPoint":4048,"id":2537,"parameterSlots":1,"returnSlots":1},"@tokenURI_1184":{"entryPoint":2178,"id":1184,"parameterSlots":1,"returnSlots":1},"@transferFrom_1316":{"entryPoint":1422,"id":1316,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6129,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5569,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5847,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5048,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8478,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6195,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5388,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6372,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5654,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6241,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":5868,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5590,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5069,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8499,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5409,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5504,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5126,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8345,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5264,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7236,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":7985,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":7400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":7546,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":7839,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7158,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack":{"entryPoint":6758,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7012,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6612,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack":{"entryPoint":6904,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5782,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7285,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8402,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5141,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5321,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8020,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7581,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7874,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7193,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6793,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7047,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6647,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6939,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5797,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6038,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4961,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6065,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8317,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5168,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8328,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5179,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7225,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7712,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8172,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7660,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5486,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5114,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":4981,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5454,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5355,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":6114,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":5196,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6483,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5989,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":8052,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":8221,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":7613,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8125,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6436,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8270,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5942,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5932,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5937,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4976,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4971,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5247,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":7906,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":7321,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":7467,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":7798,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":7079,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304":{"entryPoint":6679,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":6971,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":6533,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b":{"entryPoint":6825,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5546,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":5824,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5025,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5365,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24661:20","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:20","statements":[{"nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:20"},"nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:20"},"nodeType":"YulFunctionCall","src":"187:12:20"},"nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:20"},"nodeType":"YulFunctionCall","src":"310:12:20"},"nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nodeType":"YulBlock","src":"378:105:20","statements":[{"nodeType":"YulAssignment","src":"388:89:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:20","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:20"},"nodeType":"YulFunctionCall","src":"399:78:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:20"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:20","type":""}],"src":"334:149:20"},{"body":{"nodeType":"YulBlock","src":"531:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:20"},"nodeType":"YulFunctionCall","src":"589:12:20"},"nodeType":"YulExpressionStatement","src":"589:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:20"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:20"},"nodeType":"YulFunctionCall","src":"561:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:20"},"nodeType":"YulFunctionCall","src":"551:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:20"},"nodeType":"YulFunctionCall","src":"544:42:20"},"nodeType":"YulIf","src":"541:62:20"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:20","type":""}],"src":"489:120:20"},{"body":{"nodeType":"YulBlock","src":"666:86:20","statements":[{"nodeType":"YulAssignment","src":"676:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:20"},"nodeType":"YulFunctionCall","src":"685:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:20"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:20"},"nodeType":"YulFunctionCall","src":"714:32:20"},"nodeType":"YulExpressionStatement","src":"714:32:20"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:20","type":""}],"src":"615:137:20"},{"body":{"nodeType":"YulBlock","src":"823:262:20","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:20"},"nodeType":"YulFunctionCall","src":"871:79:20"},"nodeType":"YulExpressionStatement","src":"871:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:20"},"nodeType":"YulFunctionCall","src":"840:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:20"},"nodeType":"YulFunctionCall","src":"836:32:20"},"nodeType":"YulIf","src":"833:119:20"},{"nodeType":"YulBlock","src":"962:116:20","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:20"},"nodeType":"YulFunctionCall","src":"1036:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:20"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:20"},"nodeType":"YulFunctionCall","src":"1016:52:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:20","type":""}],"src":"758:327:20"},{"body":{"nodeType":"YulBlock","src":"1133:48:20","statements":[{"nodeType":"YulAssignment","src":"1143:32:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:20"},"nodeType":"YulFunctionCall","src":"1161:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:20"},"nodeType":"YulFunctionCall","src":"1154:21:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:20"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:20","type":""}],"src":"1091:90:20"},{"body":{"nodeType":"YulBlock","src":"1246:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:20"},"nodeType":"YulFunctionCall","src":"1268:21:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:20"},"nodeType":"YulFunctionCall","src":"1256:34:20"},"nodeType":"YulExpressionStatement","src":"1256:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:20","type":""}],"src":"1187:109:20"},{"body":{"nodeType":"YulBlock","src":"1394:118:20","statements":[{"nodeType":"YulAssignment","src":"1404:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:20"},"nodeType":"YulFunctionCall","src":"1412:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:20"},"nodeType":"YulFunctionCall","src":"1487:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:20"},"nodeType":"YulFunctionCall","src":"1440:65:20"},"nodeType":"YulExpressionStatement","src":"1440:65:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:20","type":""}],"src":"1302:210:20"},{"body":{"nodeType":"YulBlock","src":"1577:40:20","statements":[{"nodeType":"YulAssignment","src":"1588:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:20"},"nodeType":"YulFunctionCall","src":"1598:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:20","type":""}],"src":"1518:99:20"},{"body":{"nodeType":"YulBlock","src":"1719:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:20"},"nodeType":"YulFunctionCall","src":"1729:19:20"},"nodeType":"YulExpressionStatement","src":"1729:19:20"},{"nodeType":"YulAssignment","src":"1757:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:20"},"nodeType":"YulFunctionCall","src":"1772:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:20","type":""}],"src":"1623:169:20"},{"body":{"nodeType":"YulBlock","src":"1847:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:20"},"nodeType":"YulFunctionCall","src":"1947:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:20"},"nodeType":"YulFunctionCall","src":"1966:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:20"},"nodeType":"YulFunctionCall","src":"1960:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:20"},"nodeType":"YulFunctionCall","src":"1940:39:20"},"nodeType":"YulExpressionStatement","src":"1940:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:20"},"nodeType":"YulFunctionCall","src":"1884:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:20","statements":[{"nodeType":"YulAssignment","src":"1900:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:20"},"nodeType":"YulFunctionCall","src":"1905:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:20","statements":[]},"src":"1876:113:20"},{"body":{"nodeType":"YulBlock","src":"2023:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:20"},"nodeType":"YulFunctionCall","src":"2069:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:20"},"nodeType":"YulFunctionCall","src":"2062:27:20"},"nodeType":"YulExpressionStatement","src":"2062:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:20"},"nodeType":"YulFunctionCall","src":"2001:13:20"},"nodeType":"YulIf","src":"1998:101:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:20","type":""}],"src":"1798:307:20"},{"body":{"nodeType":"YulBlock","src":"2159:54:20","statements":[{"nodeType":"YulAssignment","src":"2169:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:20"},"nodeType":"YulFunctionCall","src":"2183:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:20"},"nodeType":"YulFunctionCall","src":"2199:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:20"},"nodeType":"YulFunctionCall","src":"2179:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:20","type":""}],"src":"2111:102:20"},{"body":{"nodeType":"YulBlock","src":"2311:272:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:20"},"nodeType":"YulFunctionCall","src":"2335:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:20"},"nodeType":"YulFunctionCall","src":"2390:71:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:20"},"nodeType":"YulFunctionCall","src":"2492:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:20"},"nodeType":"YulFunctionCall","src":"2470:52:20"},"nodeType":"YulExpressionStatement","src":"2470:52:20"},{"nodeType":"YulAssignment","src":"2531:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:20"},"nodeType":"YulFunctionCall","src":"2547:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:20"},"nodeType":"YulFunctionCall","src":"2538:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:20","type":""}],"src":"2219:364:20"},{"body":{"nodeType":"YulBlock","src":"2707:195:20","statements":[{"nodeType":"YulAssignment","src":"2717:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:20"},"nodeType":"YulFunctionCall","src":"2725:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:20"},"nodeType":"YulFunctionCall","src":"2760:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:20"},"nodeType":"YulFunctionCall","src":"2779:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:20"},"nodeType":"YulFunctionCall","src":"2753:47:20"},"nodeType":"YulExpressionStatement","src":"2753:47:20"},{"nodeType":"YulAssignment","src":"2809:86:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:20"},"nodeType":"YulFunctionCall","src":"2817:78:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:20","type":""}],"src":"2589:313:20"},{"body":{"nodeType":"YulBlock","src":"2953:32:20","statements":[{"nodeType":"YulAssignment","src":"2963:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:20","type":""}],"src":"2908:77:20"},{"body":{"nodeType":"YulBlock","src":"3034:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:20"},"nodeType":"YulFunctionCall","src":"3093:12:20"},"nodeType":"YulExpressionStatement","src":"3093:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:20"},"nodeType":"YulFunctionCall","src":"3064:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:20"},"nodeType":"YulFunctionCall","src":"3054:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:20"},"nodeType":"YulFunctionCall","src":"3047:43:20"},"nodeType":"YulIf","src":"3044:63:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:20","type":""}],"src":"2991:122:20"},{"body":{"nodeType":"YulBlock","src":"3171:87:20","statements":[{"nodeType":"YulAssignment","src":"3181:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:20"},"nodeType":"YulFunctionCall","src":"3190:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:20"},"nodeType":"YulFunctionCall","src":"3219:33:20"},"nodeType":"YulExpressionStatement","src":"3219:33:20"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:20","type":""}],"src":"3119:139:20"},{"body":{"nodeType":"YulBlock","src":"3330:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:20"},"nodeType":"YulFunctionCall","src":"3378:79:20"},"nodeType":"YulExpressionStatement","src":"3378:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:20"},"nodeType":"YulFunctionCall","src":"3347:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:20"},"nodeType":"YulFunctionCall","src":"3343:32:20"},"nodeType":"YulIf","src":"3340:119:20"},{"nodeType":"YulBlock","src":"3469:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:20"},"nodeType":"YulFunctionCall","src":"3544:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:20"},"nodeType":"YulFunctionCall","src":"3523:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:20","type":""}],"src":"3264:329:20"},{"body":{"nodeType":"YulBlock","src":"3644:81:20","statements":[{"nodeType":"YulAssignment","src":"3654:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:20"},"nodeType":"YulFunctionCall","src":"3665:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:20","type":""}],"src":"3599:126:20"},{"body":{"nodeType":"YulBlock","src":"3776:51:20","statements":[{"nodeType":"YulAssignment","src":"3786:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:20"},"nodeType":"YulFunctionCall","src":"3797:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:20","type":""}],"src":"3731:96:20"},{"body":{"nodeType":"YulBlock","src":"3898:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:20"},"nodeType":"YulFunctionCall","src":"3920:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:20"},"nodeType":"YulFunctionCall","src":"3908:37:20"},"nodeType":"YulExpressionStatement","src":"3908:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:20","type":""}],"src":"3833:118:20"},{"body":{"nodeType":"YulBlock","src":"4055:124:20","statements":[{"nodeType":"YulAssignment","src":"4065:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:20"},"nodeType":"YulFunctionCall","src":"4073:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:20"},"nodeType":"YulFunctionCall","src":"4154:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:20"},"nodeType":"YulFunctionCall","src":"4101:71:20"},"nodeType":"YulExpressionStatement","src":"4101:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:20","type":""}],"src":"3957:222:20"},{"body":{"nodeType":"YulBlock","src":"4228:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:20"},"nodeType":"YulFunctionCall","src":"4287:12:20"},"nodeType":"YulExpressionStatement","src":"4287:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:20"},"nodeType":"YulFunctionCall","src":"4258:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:20"},"nodeType":"YulFunctionCall","src":"4248:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:20"},"nodeType":"YulFunctionCall","src":"4241:43:20"},"nodeType":"YulIf","src":"4238:63:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:20","type":""}],"src":"4185:122:20"},{"body":{"nodeType":"YulBlock","src":"4365:87:20","statements":[{"nodeType":"YulAssignment","src":"4375:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:20"},"nodeType":"YulFunctionCall","src":"4384:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:20"},"nodeType":"YulFunctionCall","src":"4413:33:20"},"nodeType":"YulExpressionStatement","src":"4413:33:20"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:20","type":""}],"src":"4313:139:20"},{"body":{"nodeType":"YulBlock","src":"4541:391:20","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:20"},"nodeType":"YulFunctionCall","src":"4589:79:20"},"nodeType":"YulExpressionStatement","src":"4589:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:20"},"nodeType":"YulFunctionCall","src":"4558:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:20"},"nodeType":"YulFunctionCall","src":"4554:32:20"},"nodeType":"YulIf","src":"4551:119:20"},{"nodeType":"YulBlock","src":"4680:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:20"},"nodeType":"YulFunctionCall","src":"4755:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:20"},"nodeType":"YulFunctionCall","src":"4734:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:20"}]}]},{"nodeType":"YulBlock","src":"4807:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:20"},"nodeType":"YulFunctionCall","src":"4883:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:20"},"nodeType":"YulFunctionCall","src":"4862:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:20","type":""}],"src":"4458:474:20"},{"body":{"nodeType":"YulBlock","src":"5038:519:20","statements":[{"body":{"nodeType":"YulBlock","src":"5084:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5086:77:20"},"nodeType":"YulFunctionCall","src":"5086:79:20"},"nodeType":"YulExpressionStatement","src":"5086:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5059:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5068:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5055:3:20"},"nodeType":"YulFunctionCall","src":"5055:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5080:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5051:3:20"},"nodeType":"YulFunctionCall","src":"5051:32:20"},"nodeType":"YulIf","src":"5048:119:20"},{"nodeType":"YulBlock","src":"5177:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5192:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5206:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5196:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5221:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5256:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5267:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:20"},"nodeType":"YulFunctionCall","src":"5252:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5276:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5231:20:20"},"nodeType":"YulFunctionCall","src":"5231:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5221:6:20"}]}]},{"nodeType":"YulBlock","src":"5304:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5319:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5333:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5323:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5349:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5395:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:20"},"nodeType":"YulFunctionCall","src":"5380:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5404:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5359:20:20"},"nodeType":"YulFunctionCall","src":"5359:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5349:6:20"}]}]},{"nodeType":"YulBlock","src":"5432:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5447:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5461:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5451:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5477:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5512:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5523:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5508:3:20"},"nodeType":"YulFunctionCall","src":"5508:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5532:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5487:20:20"},"nodeType":"YulFunctionCall","src":"5487:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5477:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4992:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5003:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5015:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5023:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5031:6:20","type":""}],"src":"4938:619:20"},{"body":{"nodeType":"YulBlock","src":"5629:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"5675:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5677:77:20"},"nodeType":"YulFunctionCall","src":"5677:79:20"},"nodeType":"YulExpressionStatement","src":"5677:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5650:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5659:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5646:3:20"},"nodeType":"YulFunctionCall","src":"5646:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5671:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5642:3:20"},"nodeType":"YulFunctionCall","src":"5642:32:20"},"nodeType":"YulIf","src":"5639:119:20"},{"nodeType":"YulBlock","src":"5768:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5783:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5797:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5787:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5812:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5847:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5858:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5843:3:20"},"nodeType":"YulFunctionCall","src":"5843:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5867:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5822:20:20"},"nodeType":"YulFunctionCall","src":"5822:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5812:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5599:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5610:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5622:6:20","type":""}],"src":"5563:329:20"},{"body":{"nodeType":"YulBlock","src":"5963:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5980:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6003:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5985:17:20"},"nodeType":"YulFunctionCall","src":"5985:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5973:6:20"},"nodeType":"YulFunctionCall","src":"5973:37:20"},"nodeType":"YulExpressionStatement","src":"5973:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5951:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5958:3:20","type":""}],"src":"5898:118:20"},{"body":{"nodeType":"YulBlock","src":"6120:124:20","statements":[{"nodeType":"YulAssignment","src":"6130:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6142:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6153:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6138:3:20"},"nodeType":"YulFunctionCall","src":"6138:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6130:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6210:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6223:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6234:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6219:3:20"},"nodeType":"YulFunctionCall","src":"6219:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6166:43:20"},"nodeType":"YulFunctionCall","src":"6166:71:20"},"nodeType":"YulExpressionStatement","src":"6166:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6092:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6104:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6115:4:20","type":""}],"src":"6022:222:20"},{"body":{"nodeType":"YulBlock","src":"6290:76:20","statements":[{"body":{"nodeType":"YulBlock","src":"6344:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:20"},"nodeType":"YulFunctionCall","src":"6346:12:20"},"nodeType":"YulExpressionStatement","src":"6346:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6313:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6335:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6320:14:20"},"nodeType":"YulFunctionCall","src":"6320:21:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6310:2:20"},"nodeType":"YulFunctionCall","src":"6310:32:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6303:6:20"},"nodeType":"YulFunctionCall","src":"6303:40:20"},"nodeType":"YulIf","src":"6300:60:20"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6283:5:20","type":""}],"src":"6250:116:20"},{"body":{"nodeType":"YulBlock","src":"6421:84:20","statements":[{"nodeType":"YulAssignment","src":"6431:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6453:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6440:12:20"},"nodeType":"YulFunctionCall","src":"6440:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6431:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6493:5:20"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6469:23:20"},"nodeType":"YulFunctionCall","src":"6469:30:20"},"nodeType":"YulExpressionStatement","src":"6469:30:20"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6399:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"6407:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6415:5:20","type":""}],"src":"6372:133:20"},{"body":{"nodeType":"YulBlock","src":"6591:388:20","statements":[{"body":{"nodeType":"YulBlock","src":"6637:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6639:77:20"},"nodeType":"YulFunctionCall","src":"6639:79:20"},"nodeType":"YulExpressionStatement","src":"6639:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6612:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6608:3:20"},"nodeType":"YulFunctionCall","src":"6608:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"6633:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6604:3:20"},"nodeType":"YulFunctionCall","src":"6604:32:20"},"nodeType":"YulIf","src":"6601:119:20"},{"nodeType":"YulBlock","src":"6730:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6745:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6759:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6749:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6774:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6809:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6820:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6805:3:20"},"nodeType":"YulFunctionCall","src":"6805:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6829:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6784:20:20"},"nodeType":"YulFunctionCall","src":"6784:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6774:6:20"}]}]},{"nodeType":"YulBlock","src":"6857:115:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6872:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6886:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6876:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6902:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6934:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6945:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:20"},"nodeType":"YulFunctionCall","src":"6930:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6954:7:20"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6912:17:20"},"nodeType":"YulFunctionCall","src":"6912:50:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6902:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6553:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6564:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6576:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6584:6:20","type":""}],"src":"6511:468:20"},{"body":{"nodeType":"YulBlock","src":"7074:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7091:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7094:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7084:6:20"},"nodeType":"YulFunctionCall","src":"7084:12:20"},"nodeType":"YulExpressionStatement","src":"7084:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6985:117:20"},{"body":{"nodeType":"YulBlock","src":"7197:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7214:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7217:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7207:6:20"},"nodeType":"YulFunctionCall","src":"7207:12:20"},"nodeType":"YulExpressionStatement","src":"7207:12:20"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7108:117:20"},{"body":{"nodeType":"YulBlock","src":"7259:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7276:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7279:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7269:6:20"},"nodeType":"YulFunctionCall","src":"7269:88:20"},"nodeType":"YulExpressionStatement","src":"7269:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7376:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7366:6:20"},"nodeType":"YulFunctionCall","src":"7366:15:20"},"nodeType":"YulExpressionStatement","src":"7366:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7397:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7400:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7390:6:20"},"nodeType":"YulFunctionCall","src":"7390:15:20"},"nodeType":"YulExpressionStatement","src":"7390:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7231:180:20"},{"body":{"nodeType":"YulBlock","src":"7460:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7470:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7492:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7522:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7500:21:20"},"nodeType":"YulFunctionCall","src":"7500:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:20"},"nodeType":"YulFunctionCall","src":"7488:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7474:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"7639:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7641:16:20"},"nodeType":"YulFunctionCall","src":"7641:18:20"},"nodeType":"YulExpressionStatement","src":"7641:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7582:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"7594:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7579:2:20"},"nodeType":"YulFunctionCall","src":"7579:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7618:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7630:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7615:2:20"},"nodeType":"YulFunctionCall","src":"7615:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7576:2:20"},"nodeType":"YulFunctionCall","src":"7576:62:20"},"nodeType":"YulIf","src":"7573:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7677:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7681:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7670:6:20"},"nodeType":"YulFunctionCall","src":"7670:22:20"},"nodeType":"YulExpressionStatement","src":"7670:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7446:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"7454:4:20","type":""}],"src":"7417:281:20"},{"body":{"nodeType":"YulBlock","src":"7745:88:20","statements":[{"nodeType":"YulAssignment","src":"7755:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7765:18:20"},"nodeType":"YulFunctionCall","src":"7765:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7755:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7814:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"7822:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7794:19:20"},"nodeType":"YulFunctionCall","src":"7794:33:20"},"nodeType":"YulExpressionStatement","src":"7794:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7729:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7738:6:20","type":""}],"src":"7704:129:20"},{"body":{"nodeType":"YulBlock","src":"7905:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"8010:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8012:16:20"},"nodeType":"YulFunctionCall","src":"8012:18:20"},"nodeType":"YulExpressionStatement","src":"8012:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7982:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7990:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7979:2:20"},"nodeType":"YulFunctionCall","src":"7979:30:20"},"nodeType":"YulIf","src":"7976:56:20"},{"nodeType":"YulAssignment","src":"8042:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8072:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8050:21:20"},"nodeType":"YulFunctionCall","src":"8050:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8042:4:20"}]},{"nodeType":"YulAssignment","src":"8116:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8128:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"8134:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8124:3:20"},"nodeType":"YulFunctionCall","src":"8124:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8116:4:20"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7889:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7900:4:20","type":""}],"src":"7839:307:20"},{"body":{"nodeType":"YulBlock","src":"8203:103:20","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8226:3:20"},{"name":"src","nodeType":"YulIdentifier","src":"8231:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"8236:6:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8213:12:20"},"nodeType":"YulFunctionCall","src":"8213:30:20"},"nodeType":"YulExpressionStatement","src":"8213:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8284:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"8289:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8280:3:20"},"nodeType":"YulFunctionCall","src":"8280:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"8298:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8273:6:20"},"nodeType":"YulFunctionCall","src":"8273:27:20"},"nodeType":"YulExpressionStatement","src":"8273:27:20"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8185:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8190:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"8195:6:20","type":""}],"src":"8152:154:20"},{"body":{"nodeType":"YulBlock","src":"8395:327:20","statements":[{"nodeType":"YulAssignment","src":"8405:74:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8471:6:20"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8430:40:20"},"nodeType":"YulFunctionCall","src":"8430:48:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8414:15:20"},"nodeType":"YulFunctionCall","src":"8414:65:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8405:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8495:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"8502:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8488:6:20"},"nodeType":"YulFunctionCall","src":"8488:21:20"},"nodeType":"YulExpressionStatement","src":"8488:21:20"},{"nodeType":"YulVariableDeclaration","src":"8518:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8533:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"8540:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8529:3:20"},"nodeType":"YulFunctionCall","src":"8529:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8522:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"8583:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8585:77:20"},"nodeType":"YulFunctionCall","src":"8585:79:20"},"nodeType":"YulExpressionStatement","src":"8585:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8564:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"8569:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8560:3:20"},"nodeType":"YulFunctionCall","src":"8560:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"8578:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8557:2:20"},"nodeType":"YulFunctionCall","src":"8557:25:20"},"nodeType":"YulIf","src":"8554:112:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8699:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"8704:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"8709:6:20"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"8675:23:20"},"nodeType":"YulFunctionCall","src":"8675:41:20"},"nodeType":"YulExpressionStatement","src":"8675:41:20"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8368:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"8373:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"8381:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8389:5:20","type":""}],"src":"8312:410:20"},{"body":{"nodeType":"YulBlock","src":"8802:277:20","statements":[{"body":{"nodeType":"YulBlock","src":"8851:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8853:77:20"},"nodeType":"YulFunctionCall","src":"8853:79:20"},"nodeType":"YulExpressionStatement","src":"8853:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8830:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8838:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8826:3:20"},"nodeType":"YulFunctionCall","src":"8826:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"8845:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8822:3:20"},"nodeType":"YulFunctionCall","src":"8822:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8815:6:20"},"nodeType":"YulFunctionCall","src":"8815:35:20"},"nodeType":"YulIf","src":"8812:122:20"},{"nodeType":"YulVariableDeclaration","src":"8943:34:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8970:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8957:12:20"},"nodeType":"YulFunctionCall","src":"8957:20:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8947:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8986:87:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9046:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"9054:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9042:3:20"},"nodeType":"YulFunctionCall","src":"9042:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"9061:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"9069:3:20"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8995:46:20"},"nodeType":"YulFunctionCall","src":"8995:78:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8986:5:20"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8780:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"8788:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8796:5:20","type":""}],"src":"8741:338:20"},{"body":{"nodeType":"YulBlock","src":"9211:817:20","statements":[{"body":{"nodeType":"YulBlock","src":"9258:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9260:77:20"},"nodeType":"YulFunctionCall","src":"9260:79:20"},"nodeType":"YulExpressionStatement","src":"9260:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9232:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"9241:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9228:3:20"},"nodeType":"YulFunctionCall","src":"9228:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"9253:3:20","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9224:3:20"},"nodeType":"YulFunctionCall","src":"9224:33:20"},"nodeType":"YulIf","src":"9221:120:20"},{"nodeType":"YulBlock","src":"9351:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9366:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"9380:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9370:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9395:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9430:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"9441:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9426:3:20"},"nodeType":"YulFunctionCall","src":"9426:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9450:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9405:20:20"},"nodeType":"YulFunctionCall","src":"9405:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9395:6:20"}]}]},{"nodeType":"YulBlock","src":"9478:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9493:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"9507:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9497:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9523:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9558:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"9569:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9554:3:20"},"nodeType":"YulFunctionCall","src":"9554:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9578:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9533:20:20"},"nodeType":"YulFunctionCall","src":"9533:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9523:6:20"}]}]},{"nodeType":"YulBlock","src":"9606:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9621:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"9635:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9625:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9651:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9686:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"9697:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9682:3:20"},"nodeType":"YulFunctionCall","src":"9682:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9706:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9661:20:20"},"nodeType":"YulFunctionCall","src":"9661:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9651:6:20"}]}]},{"nodeType":"YulBlock","src":"9734:287:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9749:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9780:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9791:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9776:3:20"},"nodeType":"YulFunctionCall","src":"9776:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9763:12:20"},"nodeType":"YulFunctionCall","src":"9763:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9753:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"9842:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9844:77:20"},"nodeType":"YulFunctionCall","src":"9844:79:20"},"nodeType":"YulExpressionStatement","src":"9844:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9814:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"9822:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9811:2:20"},"nodeType":"YulFunctionCall","src":"9811:30:20"},"nodeType":"YulIf","src":"9808:117:20"},{"nodeType":"YulAssignment","src":"9939:72:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9983:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"9994:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9979:3:20"},"nodeType":"YulFunctionCall","src":"9979:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10003:7:20"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9949:29:20"},"nodeType":"YulFunctionCall","src":"9949:62:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9939:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9157:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9168:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9180:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9188:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9196:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9204:6:20","type":""}],"src":"9085:943:20"},{"body":{"nodeType":"YulBlock","src":"10117:391:20","statements":[{"body":{"nodeType":"YulBlock","src":"10163:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10165:77:20"},"nodeType":"YulFunctionCall","src":"10165:79:20"},"nodeType":"YulExpressionStatement","src":"10165:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10138:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"10147:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10134:3:20"},"nodeType":"YulFunctionCall","src":"10134:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"10159:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10130:3:20"},"nodeType":"YulFunctionCall","src":"10130:32:20"},"nodeType":"YulIf","src":"10127:119:20"},{"nodeType":"YulBlock","src":"10256:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10271:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"10285:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10275:6:20","type":""}]},{"nodeType":"YulAssignment","src":"10300:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10335:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"10346:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10331:3:20"},"nodeType":"YulFunctionCall","src":"10331:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10355:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10310:20:20"},"nodeType":"YulFunctionCall","src":"10310:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10300:6:20"}]}]},{"nodeType":"YulBlock","src":"10383:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10398:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"10412:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10402:6:20","type":""}]},{"nodeType":"YulAssignment","src":"10428:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10463:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"10474:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:20"},"nodeType":"YulFunctionCall","src":"10459:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10483:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10438:20:20"},"nodeType":"YulFunctionCall","src":"10438:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10428:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10079:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10090:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10102:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10110:6:20","type":""}],"src":"10034:474:20"},{"body":{"nodeType":"YulBlock","src":"10542:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10559:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10562:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10552:6:20"},"nodeType":"YulFunctionCall","src":"10552:88:20"},"nodeType":"YulExpressionStatement","src":"10552:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10656:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10659:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10649:6:20"},"nodeType":"YulFunctionCall","src":"10649:15:20"},"nodeType":"YulExpressionStatement","src":"10649:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10680:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10683:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10673:6:20"},"nodeType":"YulFunctionCall","src":"10673:15:20"},"nodeType":"YulExpressionStatement","src":"10673:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10514:180:20"},{"body":{"nodeType":"YulBlock","src":"10751:269:20","statements":[{"nodeType":"YulAssignment","src":"10761:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10775:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"10781:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10771:3:20"},"nodeType":"YulFunctionCall","src":"10771:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10761:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"10792:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10822:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"10828:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10818:3:20"},"nodeType":"YulFunctionCall","src":"10818:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10796:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"10869:51:20","statements":[{"nodeType":"YulAssignment","src":"10883:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10897:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10905:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10893:3:20"},"nodeType":"YulFunctionCall","src":"10893:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10883:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10849:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10842:6:20"},"nodeType":"YulFunctionCall","src":"10842:26:20"},"nodeType":"YulIf","src":"10839:81:20"},{"body":{"nodeType":"YulBlock","src":"10972:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10986:16:20"},"nodeType":"YulFunctionCall","src":"10986:18:20"},"nodeType":"YulExpressionStatement","src":"10986:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10936:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10959:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10967:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10956:2:20"},"nodeType":"YulFunctionCall","src":"10956:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10933:2:20"},"nodeType":"YulFunctionCall","src":"10933:38:20"},"nodeType":"YulIf","src":"10930:84:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10735:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10744:6:20","type":""}],"src":"10700:320:20"},{"body":{"nodeType":"YulBlock","src":"11132:114:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11154:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"11162:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11150:3:20"},"nodeType":"YulFunctionCall","src":"11150:14:20"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"11166:34:20","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11143:6:20"},"nodeType":"YulFunctionCall","src":"11143:58:20"},"nodeType":"YulExpressionStatement","src":"11143:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11222:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"11230:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11218:3:20"},"nodeType":"YulFunctionCall","src":"11218:15:20"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"11235:3:20","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11211:6:20"},"nodeType":"YulFunctionCall","src":"11211:28:20"},"nodeType":"YulExpressionStatement","src":"11211:28:20"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11124:6:20","type":""}],"src":"11026:220:20"},{"body":{"nodeType":"YulBlock","src":"11398:220:20","statements":[{"nodeType":"YulAssignment","src":"11408:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11474:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11479:2:20","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11415:58:20"},"nodeType":"YulFunctionCall","src":"11415:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11408:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11580:3:20"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"11491:88:20"},"nodeType":"YulFunctionCall","src":"11491:93:20"},"nodeType":"YulExpressionStatement","src":"11491:93:20"},{"nodeType":"YulAssignment","src":"11593:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11604:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11609:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11600:3:20"},"nodeType":"YulFunctionCall","src":"11600:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11593:3:20"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11386:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11394:3:20","type":""}],"src":"11252:366:20"},{"body":{"nodeType":"YulBlock","src":"11795:248:20","statements":[{"nodeType":"YulAssignment","src":"11805:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11817:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11828:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11813:3:20"},"nodeType":"YulFunctionCall","src":"11813:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11805:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11852:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11863:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11848:3:20"},"nodeType":"YulFunctionCall","src":"11848:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11871:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"11877:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11867:3:20"},"nodeType":"YulFunctionCall","src":"11867:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11841:6:20"},"nodeType":"YulFunctionCall","src":"11841:47:20"},"nodeType":"YulExpressionStatement","src":"11841:47:20"},{"nodeType":"YulAssignment","src":"11897:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12031:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11905:124:20"},"nodeType":"YulFunctionCall","src":"11905:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11897:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11775:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11790:4:20","type":""}],"src":"11624:419:20"},{"body":{"nodeType":"YulBlock","src":"12155:143:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12177:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"12185:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12173:3:20"},"nodeType":"YulFunctionCall","src":"12173:14:20"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"12189:34:20","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12166:6:20"},"nodeType":"YulFunctionCall","src":"12166:58:20"},"nodeType":"YulExpressionStatement","src":"12166:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12245:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"12253:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12241:3:20"},"nodeType":"YulFunctionCall","src":"12241:15:20"},{"hexValue":"6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"12258:32:20","type":"","value":"ken owner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12234:6:20"},"nodeType":"YulFunctionCall","src":"12234:57:20"},"nodeType":"YulExpressionStatement","src":"12234:57:20"}]},"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12147:6:20","type":""}],"src":"12049:249:20"},{"body":{"nodeType":"YulBlock","src":"12450:220:20","statements":[{"nodeType":"YulAssignment","src":"12460:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12526:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12531:2:20","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12467:58:20"},"nodeType":"YulFunctionCall","src":"12467:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12460:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12632:3:20"}],"functionName":{"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulIdentifier","src":"12543:88:20"},"nodeType":"YulFunctionCall","src":"12543:93:20"},"nodeType":"YulExpressionStatement","src":"12543:93:20"},{"nodeType":"YulAssignment","src":"12645:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12656:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12661:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12652:3:20"},"nodeType":"YulFunctionCall","src":"12652:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12645:3:20"}]}]},"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12438:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12446:3:20","type":""}],"src":"12304:366:20"},{"body":{"nodeType":"YulBlock","src":"12847:248:20","statements":[{"nodeType":"YulAssignment","src":"12857:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12869:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12880:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12865:3:20"},"nodeType":"YulFunctionCall","src":"12865:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12857:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12904:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12915:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12900:3:20"},"nodeType":"YulFunctionCall","src":"12900:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12923:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"12929:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12919:3:20"},"nodeType":"YulFunctionCall","src":"12919:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12893:6:20"},"nodeType":"YulFunctionCall","src":"12893:47:20"},"nodeType":"YulExpressionStatement","src":"12893:47:20"},{"nodeType":"YulAssignment","src":"12949:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13083:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12957:124:20"},"nodeType":"YulFunctionCall","src":"12957:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12949:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12827:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12842:4:20","type":""}],"src":"12676:419:20"},{"body":{"nodeType":"YulBlock","src":"13207:127:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13229:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13237:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13225:3:20"},"nodeType":"YulFunctionCall","src":"13225:14:20"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"13241:34:20","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13218:6:20"},"nodeType":"YulFunctionCall","src":"13218:58:20"},"nodeType":"YulExpressionStatement","src":"13218:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13297:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13305:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13293:3:20"},"nodeType":"YulFunctionCall","src":"13293:15:20"},{"hexValue":"72206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"13310:16:20","type":"","value":"r nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13286:6:20"},"nodeType":"YulFunctionCall","src":"13286:41:20"},"nodeType":"YulExpressionStatement","src":"13286:41:20"}]},"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13199:6:20","type":""}],"src":"13101:233:20"},{"body":{"nodeType":"YulBlock","src":"13486:220:20","statements":[{"nodeType":"YulAssignment","src":"13496:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13562:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13567:2:20","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13503:58:20"},"nodeType":"YulFunctionCall","src":"13503:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13496:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13668:3:20"}],"functionName":{"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulIdentifier","src":"13579:88:20"},"nodeType":"YulFunctionCall","src":"13579:93:20"},"nodeType":"YulExpressionStatement","src":"13579:93:20"},{"nodeType":"YulAssignment","src":"13681:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13692:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13697:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13688:3:20"},"nodeType":"YulFunctionCall","src":"13688:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13681:3:20"}]}]},"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13474:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13482:3:20","type":""}],"src":"13340:366:20"},{"body":{"nodeType":"YulBlock","src":"13883:248:20","statements":[{"nodeType":"YulAssignment","src":"13893:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13905:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13916:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13901:3:20"},"nodeType":"YulFunctionCall","src":"13901:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13893:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13940:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13951:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13936:3:20"},"nodeType":"YulFunctionCall","src":"13936:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13959:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"13965:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13955:3:20"},"nodeType":"YulFunctionCall","src":"13955:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13929:6:20"},"nodeType":"YulFunctionCall","src":"13929:47:20"},"nodeType":"YulExpressionStatement","src":"13929:47:20"},{"nodeType":"YulAssignment","src":"13985:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14119:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13993:124:20"},"nodeType":"YulFunctionCall","src":"13993:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13985:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13863:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13878:4:20","type":""}],"src":"13712:419:20"},{"body":{"nodeType":"YulBlock","src":"14243:68:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14265:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"14273:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14261:3:20"},"nodeType":"YulFunctionCall","src":"14261:14:20"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"14277:26:20","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14254:6:20"},"nodeType":"YulFunctionCall","src":"14254:50:20"},"nodeType":"YulExpressionStatement","src":"14254:50:20"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14235:6:20","type":""}],"src":"14137:174:20"},{"body":{"nodeType":"YulBlock","src":"14463:220:20","statements":[{"nodeType":"YulAssignment","src":"14473:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14539:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14544:2:20","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14480:58:20"},"nodeType":"YulFunctionCall","src":"14480:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14473:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14645:3:20"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"14556:88:20"},"nodeType":"YulFunctionCall","src":"14556:93:20"},"nodeType":"YulExpressionStatement","src":"14556:93:20"},{"nodeType":"YulAssignment","src":"14658:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14669:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14674:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14665:3:20"},"nodeType":"YulFunctionCall","src":"14665:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14658:3:20"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14451:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14459:3:20","type":""}],"src":"14317:366:20"},{"body":{"nodeType":"YulBlock","src":"14860:248:20","statements":[{"nodeType":"YulAssignment","src":"14870:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14882:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14893:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14878:3:20"},"nodeType":"YulFunctionCall","src":"14878:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14870:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14917:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14928:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14913:3:20"},"nodeType":"YulFunctionCall","src":"14913:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14936:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"14942:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14932:3:20"},"nodeType":"YulFunctionCall","src":"14932:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14906:6:20"},"nodeType":"YulFunctionCall","src":"14906:47:20"},"nodeType":"YulExpressionStatement","src":"14906:47:20"},{"nodeType":"YulAssignment","src":"14962:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15096:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14970:124:20"},"nodeType":"YulFunctionCall","src":"14970:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14962:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14840:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14855:4:20","type":""}],"src":"14689:419:20"},{"body":{"nodeType":"YulBlock","src":"15220:122:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15242:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"15250:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15238:3:20"},"nodeType":"YulFunctionCall","src":"15238:14:20"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"15254:34:20","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15231:6:20"},"nodeType":"YulFunctionCall","src":"15231:58:20"},"nodeType":"YulExpressionStatement","src":"15231:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15310:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"15318:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15306:3:20"},"nodeType":"YulFunctionCall","src":"15306:15:20"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15323:11:20","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15299:6:20"},"nodeType":"YulFunctionCall","src":"15299:36:20"},"nodeType":"YulExpressionStatement","src":"15299:36:20"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15212:6:20","type":""}],"src":"15114:228:20"},{"body":{"nodeType":"YulBlock","src":"15494:220:20","statements":[{"nodeType":"YulAssignment","src":"15504:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15570:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15575:2:20","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15511:58:20"},"nodeType":"YulFunctionCall","src":"15511:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15504:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15676:3:20"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"15587:88:20"},"nodeType":"YulFunctionCall","src":"15587:93:20"},"nodeType":"YulExpressionStatement","src":"15587:93:20"},{"nodeType":"YulAssignment","src":"15689:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15700:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15705:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15696:3:20"},"nodeType":"YulFunctionCall","src":"15696:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15689:3:20"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15482:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15490:3:20","type":""}],"src":"15348:366:20"},{"body":{"nodeType":"YulBlock","src":"15891:248:20","statements":[{"nodeType":"YulAssignment","src":"15901:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15913:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15924:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15909:3:20"},"nodeType":"YulFunctionCall","src":"15909:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15901:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15948:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15959:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15944:3:20"},"nodeType":"YulFunctionCall","src":"15944:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15967:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"15973:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15963:3:20"},"nodeType":"YulFunctionCall","src":"15963:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15937:6:20"},"nodeType":"YulFunctionCall","src":"15937:47:20"},"nodeType":"YulExpressionStatement","src":"15937:47:20"},{"nodeType":"YulAssignment","src":"15993:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16127:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16001:124:20"},"nodeType":"YulFunctionCall","src":"16001:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15993:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15871:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15886:4:20","type":""}],"src":"15720:419:20"},{"body":{"nodeType":"YulBlock","src":"16259:34:20","statements":[{"nodeType":"YulAssignment","src":"16269:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"16284:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16269:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16231:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"16236:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16247:11:20","type":""}],"src":"16145:148:20"},{"body":{"nodeType":"YulBlock","src":"16409:267:20","statements":[{"nodeType":"YulVariableDeclaration","src":"16419:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16466:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16433:32:20"},"nodeType":"YulFunctionCall","src":"16433:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16423:6:20","type":""}]},{"nodeType":"YulAssignment","src":"16481:96:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16565:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"16570:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16488:76:20"},"nodeType":"YulFunctionCall","src":"16488:89:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16481:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16612:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"16619:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16608:3:20"},"nodeType":"YulFunctionCall","src":"16608:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"16626:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"16631:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"16586:21:20"},"nodeType":"YulFunctionCall","src":"16586:52:20"},"nodeType":"YulExpressionStatement","src":"16586:52:20"},{"nodeType":"YulAssignment","src":"16647:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16658:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"16663:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16654:3:20"},"nodeType":"YulFunctionCall","src":"16654:16:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16647:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16390:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16397:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16405:3:20","type":""}],"src":"16299:377:20"},{"body":{"nodeType":"YulBlock","src":"16866:251:20","statements":[{"nodeType":"YulAssignment","src":"16877:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16966:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"16975:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16884:81:20"},"nodeType":"YulFunctionCall","src":"16884:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16877:3:20"}]},{"nodeType":"YulAssignment","src":"16989:102:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17078:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"17087:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16996:81:20"},"nodeType":"YulFunctionCall","src":"16996:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16989:3:20"}]},{"nodeType":"YulAssignment","src":"17101:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"17108:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17101:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16837:3:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16843:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16851:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16862:3:20","type":""}],"src":"16682:435:20"},{"body":{"nodeType":"YulBlock","src":"17229:118:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17251:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"17259:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17247:3:20"},"nodeType":"YulFunctionCall","src":"17247:14:20"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"17263:34:20","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17240:6:20"},"nodeType":"YulFunctionCall","src":"17240:58:20"},"nodeType":"YulExpressionStatement","src":"17240:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17319:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"17327:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17315:3:20"},"nodeType":"YulFunctionCall","src":"17315:15:20"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"17332:7:20","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17308:6:20"},"nodeType":"YulFunctionCall","src":"17308:32:20"},"nodeType":"YulExpressionStatement","src":"17308:32:20"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17221:6:20","type":""}],"src":"17123:224:20"},{"body":{"nodeType":"YulBlock","src":"17499:220:20","statements":[{"nodeType":"YulAssignment","src":"17509:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17575:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17580:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17516:58:20"},"nodeType":"YulFunctionCall","src":"17516:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17509:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17681:3:20"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"17592:88:20"},"nodeType":"YulFunctionCall","src":"17592:93:20"},"nodeType":"YulExpressionStatement","src":"17592:93:20"},{"nodeType":"YulAssignment","src":"17694:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17705:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17710:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17701:3:20"},"nodeType":"YulFunctionCall","src":"17701:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17694:3:20"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17487:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17495:3:20","type":""}],"src":"17353:366:20"},{"body":{"nodeType":"YulBlock","src":"17896:248:20","statements":[{"nodeType":"YulAssignment","src":"17906:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17918:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17929:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17914:3:20"},"nodeType":"YulFunctionCall","src":"17914:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17906:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17953:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17964:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17949:3:20"},"nodeType":"YulFunctionCall","src":"17949:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17972:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"17978:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17968:3:20"},"nodeType":"YulFunctionCall","src":"17968:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17942:6:20"},"nodeType":"YulFunctionCall","src":"17942:47:20"},"nodeType":"YulExpressionStatement","src":"17942:47:20"},{"nodeType":"YulAssignment","src":"17998:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18132:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18006:124:20"},"nodeType":"YulFunctionCall","src":"18006:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17998:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17876:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17891:4:20","type":""}],"src":"17725:419:20"},{"body":{"nodeType":"YulBlock","src":"18256:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18278:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"18286:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18274:3:20"},"nodeType":"YulFunctionCall","src":"18274:14:20"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"18290:34:20","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18267:6:20"},"nodeType":"YulFunctionCall","src":"18267:58:20"},"nodeType":"YulExpressionStatement","src":"18267:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18346:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"18354:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18342:3:20"},"nodeType":"YulFunctionCall","src":"18342:15:20"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"18359:6:20","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18335:6:20"},"nodeType":"YulFunctionCall","src":"18335:31:20"},"nodeType":"YulExpressionStatement","src":"18335:31:20"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18248:6:20","type":""}],"src":"18150:223:20"},{"body":{"nodeType":"YulBlock","src":"18525:220:20","statements":[{"nodeType":"YulAssignment","src":"18535:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18601:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18606:2:20","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18542:58:20"},"nodeType":"YulFunctionCall","src":"18542:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18535:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18707:3:20"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"18618:88:20"},"nodeType":"YulFunctionCall","src":"18618:93:20"},"nodeType":"YulExpressionStatement","src":"18618:93:20"},{"nodeType":"YulAssignment","src":"18720:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18731:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18736:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18727:3:20"},"nodeType":"YulFunctionCall","src":"18727:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18720:3:20"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18513:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18521:3:20","type":""}],"src":"18379:366:20"},{"body":{"nodeType":"YulBlock","src":"18922:248:20","statements":[{"nodeType":"YulAssignment","src":"18932:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18944:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18955:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18940:3:20"},"nodeType":"YulFunctionCall","src":"18940:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18932:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18979:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18990:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18975:3:20"},"nodeType":"YulFunctionCall","src":"18975:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18998:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"19004:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18994:3:20"},"nodeType":"YulFunctionCall","src":"18994:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18968:6:20"},"nodeType":"YulFunctionCall","src":"18968:47:20"},"nodeType":"YulExpressionStatement","src":"18968:47:20"},{"nodeType":"YulAssignment","src":"19024:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19158:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19032:124:20"},"nodeType":"YulFunctionCall","src":"19032:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19024:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18902:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18917:4:20","type":""}],"src":"18751:419:20"},{"body":{"nodeType":"YulBlock","src":"19204:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19221:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19224:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19214:6:20"},"nodeType":"YulFunctionCall","src":"19214:88:20"},"nodeType":"YulExpressionStatement","src":"19214:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19318:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19321:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19311:6:20"},"nodeType":"YulFunctionCall","src":"19311:15:20"},"nodeType":"YulExpressionStatement","src":"19311:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19342:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19345:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19335:6:20"},"nodeType":"YulFunctionCall","src":"19335:15:20"},"nodeType":"YulExpressionStatement","src":"19335:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19176:180:20"},{"body":{"nodeType":"YulBlock","src":"19407:146:20","statements":[{"nodeType":"YulAssignment","src":"19417:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19440:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19422:17:20"},"nodeType":"YulFunctionCall","src":"19422:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19417:1:20"}]},{"nodeType":"YulAssignment","src":"19451:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19474:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19456:17:20"},"nodeType":"YulFunctionCall","src":"19456:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19451:1:20"}]},{"body":{"nodeType":"YulBlock","src":"19498:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19500:16:20"},"nodeType":"YulFunctionCall","src":"19500:18:20"},"nodeType":"YulExpressionStatement","src":"19500:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19492:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"19495:1:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19489:2:20"},"nodeType":"YulFunctionCall","src":"19489:8:20"},"nodeType":"YulIf","src":"19486:34:20"},{"nodeType":"YulAssignment","src":"19530:17:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19542:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"19545:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19538:3:20"},"nodeType":"YulFunctionCall","src":"19538:9:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19530:4:20"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19393:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"19396:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19402:4:20","type":""}],"src":"19362:191:20"},{"body":{"nodeType":"YulBlock","src":"19603:261:20","statements":[{"nodeType":"YulAssignment","src":"19613:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19636:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19618:17:20"},"nodeType":"YulFunctionCall","src":"19618:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19613:1:20"}]},{"nodeType":"YulAssignment","src":"19647:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19670:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19652:17:20"},"nodeType":"YulFunctionCall","src":"19652:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19647:1:20"}]},{"body":{"nodeType":"YulBlock","src":"19810:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19812:16:20"},"nodeType":"YulFunctionCall","src":"19812:18:20"},"nodeType":"YulExpressionStatement","src":"19812:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19731:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19738:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"19806:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19734:3:20"},"nodeType":"YulFunctionCall","src":"19734:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19728:2:20"},"nodeType":"YulFunctionCall","src":"19728:81:20"},"nodeType":"YulIf","src":"19725:107:20"},{"nodeType":"YulAssignment","src":"19842:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19853:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"19856:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19849:3:20"},"nodeType":"YulFunctionCall","src":"19849:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19842:3:20"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19590:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"19593:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19599:3:20","type":""}],"src":"19559:305:20"},{"body":{"nodeType":"YulBlock","src":"19976:69:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19998:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"20006:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19994:3:20"},"nodeType":"YulFunctionCall","src":"19994:14:20"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"20010:27:20","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19987:6:20"},"nodeType":"YulFunctionCall","src":"19987:51:20"},"nodeType":"YulExpressionStatement","src":"19987:51:20"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19968:6:20","type":""}],"src":"19870:175:20"},{"body":{"nodeType":"YulBlock","src":"20197:220:20","statements":[{"nodeType":"YulAssignment","src":"20207:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20273:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"20278:2:20","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20214:58:20"},"nodeType":"YulFunctionCall","src":"20214:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20207:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20379:3:20"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"20290:88:20"},"nodeType":"YulFunctionCall","src":"20290:93:20"},"nodeType":"YulExpressionStatement","src":"20290:93:20"},{"nodeType":"YulAssignment","src":"20392:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20403:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"20408:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20399:3:20"},"nodeType":"YulFunctionCall","src":"20399:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20392:3:20"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20185:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20193:3:20","type":""}],"src":"20051:366:20"},{"body":{"nodeType":"YulBlock","src":"20594:248:20","statements":[{"nodeType":"YulAssignment","src":"20604:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20616:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20627:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20612:3:20"},"nodeType":"YulFunctionCall","src":"20612:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20604:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20651:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20662:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20647:3:20"},"nodeType":"YulFunctionCall","src":"20647:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20670:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"20676:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20666:3:20"},"nodeType":"YulFunctionCall","src":"20666:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20640:6:20"},"nodeType":"YulFunctionCall","src":"20640:47:20"},"nodeType":"YulExpressionStatement","src":"20640:47:20"},{"nodeType":"YulAssignment","src":"20696:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20830:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20704:124:20"},"nodeType":"YulFunctionCall","src":"20704:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20696:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20574:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20589:4:20","type":""}],"src":"20423:419:20"},{"body":{"nodeType":"YulBlock","src":"20954:131:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20976:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"20984:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20972:3:20"},"nodeType":"YulFunctionCall","src":"20972:14:20"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"20988:34:20","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20965:6:20"},"nodeType":"YulFunctionCall","src":"20965:58:20"},"nodeType":"YulExpressionStatement","src":"20965:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21044:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21052:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21040:3:20"},"nodeType":"YulFunctionCall","src":"21040:15:20"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"21057:20:20","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21033:6:20"},"nodeType":"YulFunctionCall","src":"21033:45:20"},"nodeType":"YulExpressionStatement","src":"21033:45:20"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20946:6:20","type":""}],"src":"20848:237:20"},{"body":{"nodeType":"YulBlock","src":"21237:220:20","statements":[{"nodeType":"YulAssignment","src":"21247:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21313:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"21318:2:20","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21254:58:20"},"nodeType":"YulFunctionCall","src":"21254:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21247:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21419:3:20"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"21330:88:20"},"nodeType":"YulFunctionCall","src":"21330:93:20"},"nodeType":"YulExpressionStatement","src":"21330:93:20"},{"nodeType":"YulAssignment","src":"21432:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21443:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"21448:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21439:3:20"},"nodeType":"YulFunctionCall","src":"21439:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21432:3:20"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21225:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21233:3:20","type":""}],"src":"21091:366:20"},{"body":{"nodeType":"YulBlock","src":"21634:248:20","statements":[{"nodeType":"YulAssignment","src":"21644:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21656:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21667:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21652:3:20"},"nodeType":"YulFunctionCall","src":"21652:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21644:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21691:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21702:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21687:3:20"},"nodeType":"YulFunctionCall","src":"21687:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21710:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"21716:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21706:3:20"},"nodeType":"YulFunctionCall","src":"21706:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21680:6:20"},"nodeType":"YulFunctionCall","src":"21680:47:20"},"nodeType":"YulExpressionStatement","src":"21680:47:20"},{"nodeType":"YulAssignment","src":"21736:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21870:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21744:124:20"},"nodeType":"YulFunctionCall","src":"21744:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21736:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21614:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21629:4:20","type":""}],"src":"21463:419:20"},{"body":{"nodeType":"YulBlock","src":"21931:190:20","statements":[{"nodeType":"YulAssignment","src":"21941:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21968:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21950:17:20"},"nodeType":"YulFunctionCall","src":"21950:24:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21941:5:20"}]},{"body":{"nodeType":"YulBlock","src":"22064:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22066:16:20"},"nodeType":"YulFunctionCall","src":"22066:18:20"},"nodeType":"YulExpressionStatement","src":"22066:18:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21989:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"21996:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21986:2:20"},"nodeType":"YulFunctionCall","src":"21986:77:20"},"nodeType":"YulIf","src":"21983:103:20"},{"nodeType":"YulAssignment","src":"22095:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22106:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"22113:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22102:3:20"},"nodeType":"YulFunctionCall","src":"22102:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22095:3:20"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21917:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21927:3:20","type":""}],"src":"21888:233:20"},{"body":{"nodeType":"YulBlock","src":"22155:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22172:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22175:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22165:6:20"},"nodeType":"YulFunctionCall","src":"22165:88:20"},"nodeType":"YulExpressionStatement","src":"22165:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22269:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22272:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22262:6:20"},"nodeType":"YulFunctionCall","src":"22262:15:20"},"nodeType":"YulExpressionStatement","src":"22262:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22293:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22296:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22286:6:20"},"nodeType":"YulFunctionCall","src":"22286:15:20"},"nodeType":"YulExpressionStatement","src":"22286:15:20"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"22127:180:20"},{"body":{"nodeType":"YulBlock","src":"22355:143:20","statements":[{"nodeType":"YulAssignment","src":"22365:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22388:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22370:17:20"},"nodeType":"YulFunctionCall","src":"22370:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22365:1:20"}]},{"nodeType":"YulAssignment","src":"22399:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22422:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22404:17:20"},"nodeType":"YulFunctionCall","src":"22404:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22399:1:20"}]},{"body":{"nodeType":"YulBlock","src":"22446:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"22448:16:20"},"nodeType":"YulFunctionCall","src":"22448:18:20"},"nodeType":"YulExpressionStatement","src":"22448:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22443:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22436:6:20"},"nodeType":"YulFunctionCall","src":"22436:9:20"},"nodeType":"YulIf","src":"22433:35:20"},{"nodeType":"YulAssignment","src":"22478:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22487:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"22490:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"22483:3:20"},"nodeType":"YulFunctionCall","src":"22483:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"22478:1:20"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22344:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"22347:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"22353:1:20","type":""}],"src":"22313:185:20"},{"body":{"nodeType":"YulBlock","src":"22538:142:20","statements":[{"nodeType":"YulAssignment","src":"22548:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22571:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22553:17:20"},"nodeType":"YulFunctionCall","src":"22553:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22548:1:20"}]},{"nodeType":"YulAssignment","src":"22582:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22605:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22587:17:20"},"nodeType":"YulFunctionCall","src":"22587:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22582:1:20"}]},{"body":{"nodeType":"YulBlock","src":"22629:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"22631:16:20"},"nodeType":"YulFunctionCall","src":"22631:18:20"},"nodeType":"YulExpressionStatement","src":"22631:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22626:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22619:6:20"},"nodeType":"YulFunctionCall","src":"22619:9:20"},"nodeType":"YulIf","src":"22616:35:20"},{"nodeType":"YulAssignment","src":"22660:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22669:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"22672:1:20"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"22665:3:20"},"nodeType":"YulFunctionCall","src":"22665:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"22660:1:20"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22527:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"22530:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"22536:1:20","type":""}],"src":"22504:176:20"},{"body":{"nodeType":"YulBlock","src":"22714:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22731:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22734:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22724:6:20"},"nodeType":"YulFunctionCall","src":"22724:88:20"},"nodeType":"YulExpressionStatement","src":"22724:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22828:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22831:4:20","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22821:6:20"},"nodeType":"YulFunctionCall","src":"22821:15:20"},"nodeType":"YulExpressionStatement","src":"22821:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22852:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22855:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22845:6:20"},"nodeType":"YulFunctionCall","src":"22845:15:20"},"nodeType":"YulExpressionStatement","src":"22845:15:20"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"22686:180:20"},{"body":{"nodeType":"YulBlock","src":"22930:40:20","statements":[{"nodeType":"YulAssignment","src":"22941:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22957:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22951:5:20"},"nodeType":"YulFunctionCall","src":"22951:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22941:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22913:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22923:6:20","type":""}],"src":"22872:98:20"},{"body":{"nodeType":"YulBlock","src":"23071:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23088:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"23093:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23081:6:20"},"nodeType":"YulFunctionCall","src":"23081:19:20"},"nodeType":"YulExpressionStatement","src":"23081:19:20"},{"nodeType":"YulAssignment","src":"23109:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23128:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"23133:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23124:3:20"},"nodeType":"YulFunctionCall","src":"23124:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"23109:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23043:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"23048:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"23059:11:20","type":""}],"src":"22976:168:20"},{"body":{"nodeType":"YulBlock","src":"23240:270:20","statements":[{"nodeType":"YulVariableDeclaration","src":"23250:52:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23296:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"23264:31:20"},"nodeType":"YulFunctionCall","src":"23264:38:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23254:6:20","type":""}]},{"nodeType":"YulAssignment","src":"23311:77:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23376:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"23381:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23318:57:20"},"nodeType":"YulFunctionCall","src":"23318:70:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23311:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23423:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"23430:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23419:3:20"},"nodeType":"YulFunctionCall","src":"23419:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"23437:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"23442:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"23397:21:20"},"nodeType":"YulFunctionCall","src":"23397:52:20"},"nodeType":"YulExpressionStatement","src":"23397:52:20"},{"nodeType":"YulAssignment","src":"23458:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23469:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23496:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"23474:21:20"},"nodeType":"YulFunctionCall","src":"23474:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23465:3:20"},"nodeType":"YulFunctionCall","src":"23465:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23458:3:20"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23221:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23228:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23236:3:20","type":""}],"src":"23150:360:20"},{"body":{"nodeType":"YulBlock","src":"23716:440:20","statements":[{"nodeType":"YulAssignment","src":"23726:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23738:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23749:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23734:3:20"},"nodeType":"YulFunctionCall","src":"23734:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23726:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23807:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23820:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23831:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23816:3:20"},"nodeType":"YulFunctionCall","src":"23816:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23763:43:20"},"nodeType":"YulFunctionCall","src":"23763:71:20"},"nodeType":"YulExpressionStatement","src":"23763:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23888:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23901:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23912:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23897:3:20"},"nodeType":"YulFunctionCall","src":"23897:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23844:43:20"},"nodeType":"YulFunctionCall","src":"23844:72:20"},"nodeType":"YulExpressionStatement","src":"23844:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23970:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23983:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23994:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23979:3:20"},"nodeType":"YulFunctionCall","src":"23979:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23926:43:20"},"nodeType":"YulFunctionCall","src":"23926:72:20"},"nodeType":"YulExpressionStatement","src":"23926:72:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24019:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24030:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24015:3:20"},"nodeType":"YulFunctionCall","src":"24015:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24039:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"24045:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24035:3:20"},"nodeType":"YulFunctionCall","src":"24035:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24008:6:20"},"nodeType":"YulFunctionCall","src":"24008:48:20"},"nodeType":"YulExpressionStatement","src":"24008:48:20"},{"nodeType":"YulAssignment","src":"24065:84:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24135:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"24144:4:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24073:61:20"},"nodeType":"YulFunctionCall","src":"24073:76:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24065:4:20"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23664:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23676:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23684:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23692:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23700:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23711:4:20","type":""}],"src":"23516:640:20"},{"body":{"nodeType":"YulBlock","src":"24224:79:20","statements":[{"nodeType":"YulAssignment","src":"24234:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24249:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24243:5:20"},"nodeType":"YulFunctionCall","src":"24243:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"24234:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24291:5:20"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"24265:25:20"},"nodeType":"YulFunctionCall","src":"24265:32:20"},"nodeType":"YulExpressionStatement","src":"24265:32:20"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"24202:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"24210:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"24218:5:20","type":""}],"src":"24162:141:20"},{"body":{"nodeType":"YulBlock","src":"24385:273:20","statements":[{"body":{"nodeType":"YulBlock","src":"24431:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24433:77:20"},"nodeType":"YulFunctionCall","src":"24433:79:20"},"nodeType":"YulExpressionStatement","src":"24433:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24406:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"24415:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24402:3:20"},"nodeType":"YulFunctionCall","src":"24402:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"24427:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24398:3:20"},"nodeType":"YulFunctionCall","src":"24398:32:20"},"nodeType":"YulIf","src":"24395:119:20"},{"nodeType":"YulBlock","src":"24524:127:20","statements":[{"nodeType":"YulVariableDeclaration","src":"24539:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"24553:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24543:6:20","type":""}]},{"nodeType":"YulAssignment","src":"24568:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24613:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"24624:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24609:3:20"},"nodeType":"YulFunctionCall","src":"24609:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24633:7:20"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"24578:30:20"},"nodeType":"YulFunctionCall","src":"24578:63:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24568:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24355:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24366:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24378:6:20","type":""}],"src":"24309:349:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906113cd565b6102bc565b6040516100fb9190611415565b60405180910390f35b61010c61039e565b60405161011991906114c9565b60405180910390f35b61013c60048036038101906101379190611521565b610430565b604051610149919061158f565b60405180910390f35b61016c600480360381019061016791906115d6565b610476565b005b61018860048036038101906101839190611616565b61058e565b005b6101a4600480360381019061019f9190611616565b6105ee565b005b6101c060048036038101906101bb9190611521565b61060e565b6040516101cd919061158f565b60405180910390f35b6101f060048036038101906101eb9190611669565b6106c0565b6040516101fd91906116a5565b60405180910390f35b61020e610778565b60405161021b91906114c9565b60405180910390f35b61023e600480360381019061023991906116ec565b61080a565b005b61025a60048036038101906102559190611861565b610820565b005b61027660048036038101906102719190611521565b610882565b60405161028391906114c9565b60405180910390f35b6102a660048036038101906102a191906118e4565b6108ea565b6040516102b39190611415565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061039757506103968261097e565b5b9050919050565b6060600080546103ad90611953565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611953565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109e8565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e9906119f7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a33565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a33565b6108ea565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611a89565b60405180910390fd5b6105898383610a3b565b505050565b61059f610599610a33565b82610af4565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611b1b565b60405180910390fd5b6105e9838383610b89565b505050565b61060983838360405180602001604052806000815250610820565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae90611b87565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072890611c19565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461078790611953565b80601f01602080910402602001604051908101604052809291908181526020018280546107b390611953565b80156108005780601f106107d557610100808354040283529160200191610800565b820191906000526020600020905b8154815290600101906020018083116107e357829003601f168201915b5050505050905090565b61081c610815610a33565b8383610df0565b5050565b61083161082b610a33565b83610af4565b610870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086790611b1b565b60405180910390fd5b61087c84848484610f5d565b50505050565b606061088d826109e8565b6000610897610fb9565b905060008151116108b757604051806020016040528060008152506108e2565b806108c184610fd0565b6040516020016108d2929190611c75565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109f181611131565b610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2790611b87565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610aae8361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b008361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b425750610b4181856108ea565b5b80610b8057508373ffffffffffffffffffffffffffffffffffffffff16610b6884610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ba98261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf690611d0b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6690611d9d565b60405180910390fd5b610c7a83838361119d565b610c85600082610a3b565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cd59190611dec565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d2c9190611e20565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610deb8383836111a2565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5690611ec2565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f509190611415565b60405180910390a3505050565b610f68848484610b89565b610f74848484846111a7565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa90611f54565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000821415611018576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061112c565b600082905060005b6000821461104a57808061103390611f74565b915050600a826110439190611fec565b9150611020565b60008167ffffffffffffffff81111561106657611065611736565b5b6040519080825280601f01601f1916602001820160405280156110985781602001600182028036833780820191505090505b5090505b60008514611125576001826110b19190611dec565b9150600a856110c0919061201d565b60306110cc9190611e20565b60f81b8183815181106110e2576110e161204e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561111e9190611fec565b945061109c565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b60006111c88473ffffffffffffffffffffffffffffffffffffffff1661133e565b15611331578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111f1610a33565b8786866040518563ffffffff1660e01b815260040161121394939291906120d2565b602060405180830381600087803b15801561122d57600080fd5b505af192505050801561125e57506040513d601f19601f8201168201806040525081019061125b9190612133565b60015b6112e1573d806000811461128e576040519150601f19603f3d011682016040523d82523d6000602084013e611293565b606091505b506000815114156112d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d090611f54565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611336565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113aa81611375565b81146113b557600080fd5b50565b6000813590506113c7816113a1565b92915050565b6000602082840312156113e3576113e261136b565b5b60006113f1848285016113b8565b91505092915050565b60008115159050919050565b61140f816113fa565b82525050565b600060208201905061142a6000830184611406565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561146a57808201518184015260208101905061144f565b83811115611479576000848401525b50505050565b6000601f19601f8301169050919050565b600061149b82611430565b6114a5818561143b565b93506114b581856020860161144c565b6114be8161147f565b840191505092915050565b600060208201905081810360008301526114e38184611490565b905092915050565b6000819050919050565b6114fe816114eb565b811461150957600080fd5b50565b60008135905061151b816114f5565b92915050565b6000602082840312156115375761153661136b565b5b60006115458482850161150c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115798261154e565b9050919050565b6115898161156e565b82525050565b60006020820190506115a46000830184611580565b92915050565b6115b38161156e565b81146115be57600080fd5b50565b6000813590506115d0816115aa565b92915050565b600080604083850312156115ed576115ec61136b565b5b60006115fb858286016115c1565b925050602061160c8582860161150c565b9150509250929050565b60008060006060848603121561162f5761162e61136b565b5b600061163d868287016115c1565b935050602061164e868287016115c1565b925050604061165f8682870161150c565b9150509250925092565b60006020828403121561167f5761167e61136b565b5b600061168d848285016115c1565b91505092915050565b61169f816114eb565b82525050565b60006020820190506116ba6000830184611696565b92915050565b6116c9816113fa565b81146116d457600080fd5b50565b6000813590506116e6816116c0565b92915050565b600080604083850312156117035761170261136b565b5b6000611711858286016115c1565b9250506020611722858286016116d7565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61176e8261147f565b810181811067ffffffffffffffff8211171561178d5761178c611736565b5b80604052505050565b60006117a0611361565b90506117ac8282611765565b919050565b600067ffffffffffffffff8211156117cc576117cb611736565b5b6117d58261147f565b9050602081019050919050565b82818337600083830152505050565b60006118046117ff846117b1565b611796565b9050828152602081018484840111156118205761181f611731565b5b61182b8482856117e2565b509392505050565b600082601f8301126118485761184761172c565b5b81356118588482602086016117f1565b91505092915050565b6000806000806080858703121561187b5761187a61136b565b5b6000611889878288016115c1565b945050602061189a878288016115c1565b93505060406118ab8782880161150c565b925050606085013567ffffffffffffffff8111156118cc576118cb611370565b5b6118d887828801611833565b91505092959194509250565b600080604083850312156118fb576118fa61136b565b5b6000611909858286016115c1565b925050602061191a858286016115c1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061196b57607f821691505b6020821081141561197f5761197e611924565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006119e160218361143b565b91506119ec82611985565b604082019050919050565b60006020820190508181036000830152611a10816119d4565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b6000611a73603e8361143b565b9150611a7e82611a17565b604082019050919050565b60006020820190508181036000830152611aa281611a66565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6000611b05602e8361143b565b9150611b1082611aa9565b604082019050919050565b60006020820190508181036000830152611b3481611af8565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611b7160188361143b565b9150611b7c82611b3b565b602082019050919050565b60006020820190508181036000830152611ba081611b64565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611c0360298361143b565b9150611c0e82611ba7565b604082019050919050565b60006020820190508181036000830152611c3281611bf6565b9050919050565b600081905092915050565b6000611c4f82611430565b611c598185611c39565b9350611c6981856020860161144c565b80840191505092915050565b6000611c818285611c44565b9150611c8d8284611c44565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611cf560258361143b565b9150611d0082611c99565b604082019050919050565b60006020820190508181036000830152611d2481611ce8565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611d8760248361143b565b9150611d9282611d2b565b604082019050919050565b60006020820190508181036000830152611db681611d7a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611df7826114eb565b9150611e02836114eb565b925082821015611e1557611e14611dbd565b5b828203905092915050565b6000611e2b826114eb565b9150611e36836114eb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e6b57611e6a611dbd565b5b828201905092915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611eac60198361143b565b9150611eb782611e76565b602082019050919050565b60006020820190508181036000830152611edb81611e9f565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611f3e60328361143b565b9150611f4982611ee2565b604082019050919050565b60006020820190508181036000830152611f6d81611f31565b9050919050565b6000611f7f826114eb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611fb257611fb1611dbd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ff7826114eb565b9150612002836114eb565b92508261201257612011611fbd565b5b828204905092915050565b6000612028826114eb565b9150612033836114eb565b92508261204357612042611fbd565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006120a48261207d565b6120ae8185612088565b93506120be81856020860161144c565b6120c78161147f565b840191505092915050565b60006080820190506120e76000830187611580565b6120f46020830186611580565b6121016040830185611696565b81810360608301526121138184612099565b905095945050505050565b60008151905061212d816113a1565b92915050565b6000602082840312156121495761214861136b565b5b60006121578482850161211e565b9150509291505056fea26469706673582212201f83597e48ca2aee1c4e2adaf64efb166a65c18eda93205b9b4336d6069741e764736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1669 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x16EC JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x97E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA33 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA3B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA33 JUMP JUMPDEST DUP3 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x820 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x787 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B3 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x800 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x800 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x81C PUSH2 0x815 PUSH2 0xA33 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDF0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x831 PUSH2 0x82B PUSH2 0xA33 JUMP JUMPDEST DUP4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87C DUP5 DUP5 DUP5 DUP5 PUSH2 0xF5D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x88D DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x897 PUSH2 0xFB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8E2 JUMP JUMPDEST DUP1 PUSH2 0x8C1 DUP5 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D2 SWAP3 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F1 DUP2 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP1 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAAE DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB00 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB42 JUMPI POP PUSH2 0xB41 DUP2 DUP6 PUSH2 0x8EA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB80 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB68 DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBA9 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF6 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC66 SWAP1 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7A DUP4 DUP4 DUP4 PUSH2 0x119D JUMP JUMPDEST PUSH2 0xC85 PUSH1 0x0 DUP3 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDEB DUP4 DUP4 DUP4 PUSH2 0x11A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE56 SWAP1 PUSH2 0x1EC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF50 SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xF68 DUP5 DUP5 DUP5 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xF74 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x112C JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x104A JUMPI DUP1 DUP1 PUSH2 0x1033 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1066 JUMPI PUSH2 0x1065 PUSH2 0x1736 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1098 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1125 JUMPI PUSH1 0x1 DUP3 PUSH2 0x10B1 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x10C0 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x30 PUSH2 0x10CC SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10E2 JUMPI PUSH2 0x10E1 PUSH2 0x204E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x111E SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST SWAP5 POP PUSH2 0x109C JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C8 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x133E JUMP JUMPDEST ISZERO PUSH2 0x1331 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11F1 PUSH2 0xA33 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1213 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x122D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x125E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x125B SWAP2 SWAP1 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12E1 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x128E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D0 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1336 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13AA DUP2 PUSH2 0x1375 JUMP JUMPDEST DUP2 EQ PUSH2 0x13B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13C7 DUP2 PUSH2 0x13A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E3 JUMPI PUSH2 0x13E2 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13F1 DUP5 DUP3 DUP6 ADD PUSH2 0x13B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140F DUP2 PUSH2 0x13FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x142A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1406 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x146A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x144F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149B DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x14A5 DUP2 DUP6 PUSH2 0x143B JUMP JUMPDEST SWAP4 POP PUSH2 0x14B5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST PUSH2 0x14BE DUP2 PUSH2 0x147F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14E3 DUP2 DUP5 PUSH2 0x1490 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14FE DUP2 PUSH2 0x14EB JUMP JUMPDEST DUP2 EQ PUSH2 0x1509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x151B DUP2 PUSH2 0x14F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1537 JUMPI PUSH2 0x1536 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1545 DUP5 DUP3 DUP6 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1579 DUP3 PUSH2 0x154E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1589 DUP2 PUSH2 0x156E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1580 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B3 DUP2 PUSH2 0x156E JUMP JUMPDEST DUP2 EQ PUSH2 0x15BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D0 DUP2 PUSH2 0x15AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15ED JUMPI PUSH2 0x15EC PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15FB DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x160C DUP6 DUP3 DUP7 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x162F JUMPI PUSH2 0x162E PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x163D DUP7 DUP3 DUP8 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x164E DUP7 DUP3 DUP8 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x165F DUP7 DUP3 DUP8 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167F JUMPI PUSH2 0x167E PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x168D DUP5 DUP3 DUP6 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x169F DUP2 PUSH2 0x14EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16C9 DUP2 PUSH2 0x13FA JUMP JUMPDEST DUP2 EQ PUSH2 0x16D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16E6 DUP2 PUSH2 0x16C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1703 JUMPI PUSH2 0x1702 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1711 DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1722 DUP6 DUP3 DUP7 ADD PUSH2 0x16D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x176E DUP3 PUSH2 0x147F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x178D JUMPI PUSH2 0x178C PUSH2 0x1736 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A0 PUSH2 0x1361 JUMP JUMPDEST SWAP1 POP PUSH2 0x17AC DUP3 DUP3 PUSH2 0x1765 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17CC JUMPI PUSH2 0x17CB PUSH2 0x1736 JUMP JUMPDEST JUMPDEST PUSH2 0x17D5 DUP3 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1804 PUSH2 0x17FF DUP5 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0x1796 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1820 JUMPI PUSH2 0x181F PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH2 0x182B DUP5 DUP3 DUP6 PUSH2 0x17E2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1848 JUMPI PUSH2 0x1847 PUSH2 0x172C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1858 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x187B JUMPI PUSH2 0x187A PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1889 DUP8 DUP3 DUP9 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x189A DUP8 DUP3 DUP9 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18AB DUP8 DUP3 DUP9 ADD PUSH2 0x150C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18CC JUMPI PUSH2 0x18CB PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH2 0x18D8 DUP8 DUP3 DUP9 ADD PUSH2 0x1833 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18FB JUMPI PUSH2 0x18FA PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1909 DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x191A DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x196B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x197F JUMPI PUSH2 0x197E PUSH2 0x1924 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E1 PUSH1 0x21 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x19EC DUP3 PUSH2 0x1985 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A10 DUP2 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A73 PUSH1 0x3E DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A7E DUP3 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AA2 DUP2 PUSH2 0x1A66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B05 PUSH1 0x2E DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B10 DUP3 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B34 DUP2 PUSH2 0x1AF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B71 PUSH1 0x18 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7C DUP3 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BA0 DUP2 PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C03 PUSH1 0x29 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0E DUP3 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C32 DUP2 PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4F DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x1C59 DUP2 DUP6 PUSH2 0x1C39 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C69 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C81 DUP3 DUP6 PUSH2 0x1C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8D DUP3 DUP5 PUSH2 0x1C44 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF5 PUSH1 0x25 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D00 DUP3 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D24 DUP2 PUSH2 0x1CE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D87 PUSH1 0x24 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D92 DUP3 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB6 DUP2 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DF7 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1E02 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1E15 JUMPI PUSH2 0x1E14 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2B DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1E36 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E6B JUMPI PUSH2 0x1E6A PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAC PUSH1 0x19 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB7 DUP3 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EDB DUP2 PUSH2 0x1E9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3E PUSH1 0x32 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1F49 DUP3 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F6D DUP2 PUSH2 0x1F31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7F DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1FB2 JUMPI PUSH2 0x1FB1 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FF7 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2002 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2012 JUMPI PUSH2 0x2011 PUSH2 0x1FBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2028 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2033 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2043 JUMPI PUSH2 0x2042 PUSH2 0x1FBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A4 DUP3 PUSH2 0x207D JUMP JUMPDEST PUSH2 0x20AE DUP2 DUP6 PUSH2 0x2088 JUMP JUMPDEST SWAP4 POP PUSH2 0x20BE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST PUSH2 0x20C7 DUP2 PUSH2 0x147F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x20E7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x20F4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x2101 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1696 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2113 DUP2 DUP5 PUSH2 0x2099 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x212D DUP2 PUSH2 0x13A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2149 JUMPI PUSH2 0x2148 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2157 DUP5 DUP3 DUP6 ADD PUSH2 0x211E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F DUP4 MSIZE PUSH31 0x48CA2AEE1C4E2ADAF64EFB166A65C18EDA93205B9B4336D6069741E764736F PUSH13 0x63430008080033000000000000 ","sourceMap":"628:13718:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2470:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3467:407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:327;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5005:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2632:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5250:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2800:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2470:98::-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;3604:11;;:2;:11;;;;3596:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3701:5;3685:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3710:37;3727:5;3734:12;:10;:12::i;:::-;3710:16;:37::i;:::-;3685:62;3664:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;4612:327::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;:::-;4612:327;;;:::o;5005:179::-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;:::-;5005:179;;;:::o;2190:218::-;2262:7;2281:13;2297:7;:16;2305:7;2297:16;;;;;;;;;;;;;;;;;;;;;2281:32;;2348:1;2331:19;;:5;:19;;;;2323:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:5;2389:12;;;2190:218;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2632:102::-;2688:13;2720:7;2713:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5250:315::-;5418:41;5437:12;:10;:12::i;:::-;5451:7;5418:18;:41::i;:::-;5410:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;2800:276::-;2873:13;2898:23;2913:7;2898:14;:23::i;:::-;2932:21;2956:10;:8;:10::i;:::-;2932:34;;3007:1;2989:7;2983:21;:25;:86;;;;;;;;;;;;;;;;;3035:7;3044:18;:7;:16;:18::i;:::-;3018:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2983:86;2976:93;;;2800:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:14:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;11657:133:6:-;11738:16;11746:7;11738;:16::i;:::-;11730:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;11657:133;:::o;640:96:12:-;693:7;719:10;712:17;;640:96;:::o;10959:171:6:-;11060:2;11033:15;:24;11049:7;11033:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11115:7;11111:2;11077:46;;11086:23;11101:7;11086:14;:23::i;:::-;11077:46;;;;;;;;;;;;10959:171;;:::o;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;7483:16;;:7;:16;;;:52;;;;7503:32;7520:5;7527:7;7503:16;:32::i;:::-;7483:52;:87;;;;7563:7;7539:31;;:20;7551:7;7539:11;:20::i;:::-;:31;;;7483:87;7475:96;;;7317:261;;;;:::o;10242:605::-;10396:4;10369:31;;:23;10384:7;10369:14;:23::i;:::-;:31;;;10361:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10474:1;10460:16;;:2;:16;;;;10452:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;10688:1;10669:9;:15;10679:4;10669:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10716:1;10699:9;:13;10709:2;10699:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10746:2;10727:7;:16;10735:7;10727:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10783:7;10779:2;10764:27;;10773:4;10764:27;;;;;;;;;;;;10802:38;10822:4;10828:2;10832:7;10802:19;:38::i;:::-;10242:605;;;:::o;11266:307::-;11416:8;11407:17;;:5;:17;;;;11399:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11502:8;11464:18;:25;11483:5;11464:25;;;;;;;;;;;;;;;:35;11490:8;11464:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11547:8;11525:41;;11540:5;11525:41;;;11557:8;11525:41;;;;;;:::i;:::-;;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6426:305;;;;:::o;3318:92::-;3369:13;3394:9;;;;;;;;;;;;;;3318:92;:::o;392:703:13:-;448:13;674:1;665:5;:10;661:51;;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;7034:125:6:-;7099:4;7150:1;7122:30;;:7;:16;7130:7;7122:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7115:37;;7034:125;;;:::o;13729:122::-;;;;:::o;14223:121::-;;;;:::o;12342:831::-;12491:4;12511:15;:2;:13;;;:15::i;:::-;12507:660;;;12562:2;12546:36;;;12583:12;:10;:12::i;:::-;12597:4;12603:7;12612:4;12546:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12801:1;12784:6;:13;:18;12780:321;;;12826:60;;;;;;;;;;:::i;:::-;;;;;;;;12780:321;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;12677:41;;;12667:51;;;:6;:51;;;;12660:58;;;;;12507:660;13152:4;13145:11;;12342:831;;;;;;;:::o;1175:320:11:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:20:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:619::-;5015:6;5023;5031;5080:2;5068:9;5059:7;5055:23;5051:32;5048:119;;;5086:79;;:::i;:::-;5048:119;5206:1;5231:53;5276:7;5267:6;5256:9;5252:22;5231:53;:::i;:::-;5221:63;;5177:117;5333:2;5359:53;5404:7;5395:6;5384:9;5380:22;5359:53;:::i;:::-;5349:63;;5304:118;5461:2;5487:53;5532:7;5523:6;5512:9;5508:22;5487:53;:::i;:::-;5477:63;;5432:118;4938:619;;;;;:::o;5563:329::-;5622:6;5671:2;5659:9;5650:7;5646:23;5642:32;5639:119;;;5677:79;;:::i;:::-;5639:119;5797:1;5822:53;5867:7;5858:6;5847:9;5843:22;5822:53;:::i;:::-;5812:63;;5768:117;5563:329;;;;:::o;5898:118::-;5985:24;6003:5;5985:24;:::i;:::-;5980:3;5973:37;5898:118;;:::o;6022:222::-;6115:4;6153:2;6142:9;6138:18;6130:26;;6166:71;6234:1;6223:9;6219:17;6210:6;6166:71;:::i;:::-;6022:222;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:220::-;11166:34;11162:1;11154:6;11150:14;11143:58;11235:3;11230:2;11222:6;11218:15;11211:28;11026:220;:::o;11252:366::-;11394:3;11415:67;11479:2;11474:3;11415:67;:::i;:::-;11408:74;;11491:93;11580:3;11491:93;:::i;:::-;11609:2;11604:3;11600:12;11593:19;;11252:366;;;:::o;11624:419::-;11790:4;11828:2;11817:9;11813:18;11805:26;;11877:9;11871:4;11867:20;11863:1;11852:9;11848:17;11841:47;11905:131;12031:4;11905:131;:::i;:::-;11897:139;;11624:419;;;:::o;12049:249::-;12189:34;12185:1;12177:6;12173:14;12166:58;12258:32;12253:2;12245:6;12241:15;12234:57;12049:249;:::o;12304:366::-;12446:3;12467:67;12531:2;12526:3;12467:67;:::i;:::-;12460:74;;12543:93;12632:3;12543:93;:::i;:::-;12661:2;12656:3;12652:12;12645:19;;12304:366;;;:::o;12676:419::-;12842:4;12880:2;12869:9;12865:18;12857:26;;12929:9;12923:4;12919:20;12915:1;12904:9;12900:17;12893:47;12957:131;13083:4;12957:131;:::i;:::-;12949:139;;12676:419;;;:::o;13101:233::-;13241:34;13237:1;13229:6;13225:14;13218:58;13310:16;13305:2;13297:6;13293:15;13286:41;13101:233;:::o;13340:366::-;13482:3;13503:67;13567:2;13562:3;13503:67;:::i;:::-;13496:74;;13579:93;13668:3;13579:93;:::i;:::-;13697:2;13692:3;13688:12;13681:19;;13340:366;;;:::o;13712:419::-;13878:4;13916:2;13905:9;13901:18;13893:26;;13965:9;13959:4;13955:20;13951:1;13940:9;13936:17;13929:47;13993:131;14119:4;13993:131;:::i;:::-;13985:139;;13712:419;;;:::o;14137:174::-;14277:26;14273:1;14265:6;14261:14;14254:50;14137:174;:::o;14317:366::-;14459:3;14480:67;14544:2;14539:3;14480:67;:::i;:::-;14473:74;;14556:93;14645:3;14556:93;:::i;:::-;14674:2;14669:3;14665:12;14658:19;;14317:366;;;:::o;14689:419::-;14855:4;14893:2;14882:9;14878:18;14870:26;;14942:9;14936:4;14932:20;14928:1;14917:9;14913:17;14906:47;14970:131;15096:4;14970:131;:::i;:::-;14962:139;;14689:419;;;:::o;15114:228::-;15254:34;15250:1;15242:6;15238:14;15231:58;15323:11;15318:2;15310:6;15306:15;15299:36;15114:228;:::o;15348:366::-;15490:3;15511:67;15575:2;15570:3;15511:67;:::i;:::-;15504:74;;15587:93;15676:3;15587:93;:::i;:::-;15705:2;15700:3;15696:12;15689:19;;15348:366;;;:::o;15720:419::-;15886:4;15924:2;15913:9;15909:18;15901:26;;15973:9;15967:4;15963:20;15959:1;15948:9;15944:17;15937:47;16001:131;16127:4;16001:131;:::i;:::-;15993:139;;15720:419;;;:::o;16145:148::-;16247:11;16284:3;16269:18;;16145:148;;;;:::o;16299:377::-;16405:3;16433:39;16466:5;16433:39;:::i;:::-;16488:89;16570:6;16565:3;16488:89;:::i;:::-;16481:96;;16586:52;16631:6;16626:3;16619:4;16612:5;16608:16;16586:52;:::i;:::-;16663:6;16658:3;16654:16;16647:23;;16409:267;16299:377;;;;:::o;16682:435::-;16862:3;16884:95;16975:3;16966:6;16884:95;:::i;:::-;16877:102;;16996:95;17087:3;17078:6;16996:95;:::i;:::-;16989:102;;17108:3;17101:10;;16682:435;;;;;:::o;17123:224::-;17263:34;17259:1;17251:6;17247:14;17240:58;17332:7;17327:2;17319:6;17315:15;17308:32;17123:224;:::o;17353:366::-;17495:3;17516:67;17580:2;17575:3;17516:67;:::i;:::-;17509:74;;17592:93;17681:3;17592:93;:::i;:::-;17710:2;17705:3;17701:12;17694:19;;17353:366;;;:::o;17725:419::-;17891:4;17929:2;17918:9;17914:18;17906:26;;17978:9;17972:4;17968:20;17964:1;17953:9;17949:17;17942:47;18006:131;18132:4;18006:131;:::i;:::-;17998:139;;17725:419;;;:::o;18150:223::-;18290:34;18286:1;18278:6;18274:14;18267:58;18359:6;18354:2;18346:6;18342:15;18335:31;18150:223;:::o;18379:366::-;18521:3;18542:67;18606:2;18601:3;18542:67;:::i;:::-;18535:74;;18618:93;18707:3;18618:93;:::i;:::-;18736:2;18731:3;18727:12;18720:19;;18379:366;;;:::o;18751:419::-;18917:4;18955:2;18944:9;18940:18;18932:26;;19004:9;18998:4;18994:20;18990:1;18979:9;18975:17;18968:47;19032:131;19158:4;19032:131;:::i;:::-;19024:139;;18751:419;;;:::o;19176:180::-;19224:77;19221:1;19214:88;19321:4;19318:1;19311:15;19345:4;19342:1;19335:15;19362:191;19402:4;19422:20;19440:1;19422:20;:::i;:::-;19417:25;;19456:20;19474:1;19456:20;:::i;:::-;19451:25;;19495:1;19492;19489:8;19486:34;;;19500:18;;:::i;:::-;19486:34;19545:1;19542;19538:9;19530:17;;19362:191;;;;:::o;19559:305::-;19599:3;19618:20;19636:1;19618:20;:::i;:::-;19613:25;;19652:20;19670:1;19652:20;:::i;:::-;19647:25;;19806:1;19738:66;19734:74;19731:1;19728:81;19725:107;;;19812:18;;:::i;:::-;19725:107;19856:1;19853;19849:9;19842:16;;19559:305;;;;:::o;19870:175::-;20010:27;20006:1;19998:6;19994:14;19987:51;19870:175;:::o;20051:366::-;20193:3;20214:67;20278:2;20273:3;20214:67;:::i;:::-;20207:74;;20290:93;20379:3;20290:93;:::i;:::-;20408:2;20403:3;20399:12;20392:19;;20051:366;;;:::o;20423:419::-;20589:4;20627:2;20616:9;20612:18;20604:26;;20676:9;20670:4;20666:20;20662:1;20651:9;20647:17;20640:47;20704:131;20830:4;20704:131;:::i;:::-;20696:139;;20423:419;;;:::o;20848:237::-;20988:34;20984:1;20976:6;20972:14;20965:58;21057:20;21052:2;21044:6;21040:15;21033:45;20848:237;:::o;21091:366::-;21233:3;21254:67;21318:2;21313:3;21254:67;:::i;:::-;21247:74;;21330:93;21419:3;21330:93;:::i;:::-;21448:2;21443:3;21439:12;21432:19;;21091:366;;;:::o;21463:419::-;21629:4;21667:2;21656:9;21652:18;21644:26;;21716:9;21710:4;21706:20;21702:1;21691:9;21687:17;21680:47;21744:131;21870:4;21744:131;:::i;:::-;21736:139;;21463:419;;;:::o;21888:233::-;21927:3;21950:24;21968:5;21950:24;:::i;:::-;21941:33;;21996:66;21989:5;21986:77;21983:103;;;22066:18;;:::i;:::-;21983:103;22113:1;22106:5;22102:13;22095:20;;21888:233;;;:::o;22127:180::-;22175:77;22172:1;22165:88;22272:4;22269:1;22262:15;22296:4;22293:1;22286:15;22313:185;22353:1;22370:20;22388:1;22370:20;:::i;:::-;22365:25;;22404:20;22422:1;22404:20;:::i;:::-;22399:25;;22443:1;22433:35;;22448:18;;:::i;:::-;22433:35;22490:1;22487;22483:9;22478:14;;22313:185;;;;:::o;22504:176::-;22536:1;22553:20;22571:1;22553:20;:::i;:::-;22548:25;;22587:20;22605:1;22587:20;:::i;:::-;22582:25;;22626:1;22616:35;;22631:18;;:::i;:::-;22616:35;22672:1;22669;22665:9;22660:14;;22504:176;;;;:::o;22686:180::-;22734:77;22731:1;22724:88;22831:4;22828:1;22821:15;22855:4;22852:1;22845:15;22872:98;22923:6;22957:5;22951:12;22941:22;;22872:98;;;:::o;22976:168::-;23059:11;23093:6;23088:3;23081:19;23133:4;23128:3;23124:14;23109:29;;22976:168;;;;:::o;23150:360::-;23236:3;23264:38;23296:5;23264:38;:::i;:::-;23318:70;23381:6;23376:3;23318:70;:::i;:::-;23311:77;;23397:52;23442:6;23437:3;23430:4;23423:5;23419:16;23397:52;:::i;:::-;23474:29;23496:6;23474:29;:::i;:::-;23469:3;23465:39;23458:46;;23240:270;23150:360;;;;:::o;23516:640::-;23711:4;23749:3;23738:9;23734:19;23726:27;;23763:71;23831:1;23820:9;23816:17;23807:6;23763:71;:::i;:::-;23844:72;23912:2;23901:9;23897:18;23888:6;23844:72;:::i;:::-;23926;23994:2;23983:9;23979:18;23970:6;23926:72;:::i;:::-;24045:9;24039:4;24035:20;24030:2;24019:9;24015:18;24008:48;24073:76;24144:4;24135:6;24073:76;:::i;:::-;24065:84;;23516:640;;;;;;;:::o;24162:141::-;24218:5;24249:6;24243:13;24234:22;;24265:32;24291:5;24265:32;:::i;:::-;24162:141;;;;:::o;24309:349::-;24378:6;24427:2;24415:9;24406:7;24402:23;24398:32;24395:119;;;24433:79;;:::i;:::-;24395:119;24553:1;24578:63;24633:7;24624:6;24613:9;24609:22;24578:63;:::i;:::-;24568:73;;24524:127;24309:349;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1719600","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2924","getApproved(uint256)":"5234","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"2982","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"3424","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2269","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1005,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1007,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1011,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1015,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1019,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1025,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC721 token with storage based token URI management.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1005,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1007,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1011,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1015,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1019,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1025,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1993,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7b5188a5018a5d7175bf3b31329eb92b025b77c0916d2170dbfc7c869a30dfb64736f6c63430008080033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xB5 XOR DUP11 POP XOR 0xA5 0xD7 OR JUMPDEST RETURN 0xB3 SGT 0x29 0xEB SWAP3 0xB0 0x25 0xB7 PUSH29 0x916D2170DBFC7C869A30DFB64736F6C63430008080033000000000000 ","sourceMap":"194:8111:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7b5188a5018a5d7175bf3b31329eb92b025b77c0916d2170dbfc7c869a30dfb64736f6c63430008080033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xB5 XOR DUP11 POP XOR 0xA5 0xD7 OR JUMPDEST RETURN 0xB3 SGT 0x29 0xEB SWAP3 0xB0 0x25 0xB7 PUSH29 0x916D2170DBFC7C869A30DFB64736F6C63430008080033000000000000 ","sourceMap":"194:8111:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206891d0c917038081a11ecf3eecdf413381aaa3c4c3a6e0ac00057a0e06ebe05964736f6c63430008080033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x91D0C917038081A11E 0xCF RETURNDATACOPY 0xEC 0xDF COINBASE CALLER DUP2 0xAA LOG3 0xC4 0xC3 0xA6 0xE0 0xAC STOP SDIV PUSH27 0xE06EBE05964736F6C634300080800330000000000000000000000 ","sourceMap":"161:2235:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206891d0c917038081a11ecf3eecdf413381aaa3c4c3a6e0ac00057a0e06ebe05964736f6c63430008080033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x91D0C917038081A11E 0xCF RETURNDATACOPY 0xEC 0xDF COINBASE CALLER DUP2 0xAA LOG3 0xC4 0xC3 0xA6 0xE0 0xAC STOP SDIV PUSH27 0xE06EBE05964736F6C634300080800330000000000000000000000 ","sourceMap":"161:2235:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"base64-sol/base64.sol":{"Base64":{"abi":[],"devdoc":{"author":"Brecht Devos - <brecht@loopring.org>","kind":"dev","methods":{},"title":"Base64","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122091866af9c18e2993d491d2cf1438ee2b37e122d1b29321b45075ae8dd74a7cee64736f6c63430008080033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 DUP7 PUSH11 0xF9C18E2993D491D2CF1438 0xEE 0x2B CALLDATACOPY 0xE1 0x22 0xD1 0xB2 SWAP4 0x21 0xB4 POP PUSH22 0xAE8DD74A7CEE64736F6C634300080800330000000000 ","sourceMap":"186:4638:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122091866af9c18e2993d491d2cf1438ee2b37e122d1b29321b45075ae8dd74a7cee64736f6c63430008080033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 DUP7 PUSH11 0xF9C18E2993D491D2CF1438 0xEE 0x2B CALLDATACOPY 0xE1 0x22 0xD1 0xB2 SWAP4 0x21 0xB4 POP PUSH22 0xAE8DD74A7CEE64736F6C634300080800330000000000 ","sourceMap":"186:4638:16:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"decode(string memory)":"infinite","encode(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Brecht Devos - <brecht@loopring.org>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Base64\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides functions for encoding/decoding base64\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"base64-sol/base64.sol\":\"Base64\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"base64-sol/base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n    bytes  internal constant TABLE_DECODE = hex\\\"0000000000000000000000000000000000000000000000000000000000000000\\\"\\n                                            hex\\\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\\\"\\n                                            hex\\\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\\\"\\n                                            hex\\\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\\\";\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n\\n        // load the table into memory\\n        string memory table = TABLE_ENCODE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                // read 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // write 4 characters\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n            // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n\\n    function decode(string memory _data) internal pure returns (bytes memory) {\\n        bytes memory data = bytes(_data);\\n\\n        if (data.length == 0) return new bytes(0);\\n        require(data.length % 4 == 0, \\\"invalid base64 decoder input\\\");\\n\\n        // load the table into memory\\n        bytes memory table = TABLE_DECODE;\\n\\n        // every 4 characters represent 3 bytes\\n        uint256 decodedLen = (data.length / 4) * 3;\\n\\n        // add some extra buffer at the end required for the writing\\n        bytes memory result = new bytes(decodedLen + 32);\\n\\n        assembly {\\n            // padding with '='\\n            let lastBytes := mload(add(data, mload(data)))\\n            if eq(and(lastBytes, 0xFF), 0x3d) {\\n                decodedLen := sub(decodedLen, 1)\\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\\n                    decodedLen := sub(decodedLen, 1)\\n                }\\n            }\\n\\n            // set the actual output length\\n            mstore(result, decodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 4 characters at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               // read 4 characters\\n               dataPtr := add(dataPtr, 4)\\n               let input := mload(dataPtr)\\n\\n               // write 3 bytes\\n               let output := add(\\n                   add(\\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\\n                   add(\\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\\n                    )\\n                )\\n                mstore(resultPtr, shl(232, output))\\n                resultPtr := add(resultPtr, 3)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Provides functions for encoding/decoding base64","version":1}}},"contracts/DynamicSvgNft.sol":{"DynamicSvgNft":{"abi":[{"inputs":[{"internalType":"address","name":"priceFeedAddress","type":"address"},{"internalType":"string","name":"lowSvg","type":"string"},{"internalType":"string","name":"highSvg","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"int256","name":"highValue","type":"int256"}],"name":"CreatedNFT","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int256","name":"highValue","type":"int256"}],"name":"mintNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_tokenIdToHighValue","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"svg","type":"string"}],"name":"svgToImageURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1042":{"entryPoint":null,"id":1042,"parameterSlots":2,"returnSlots":0},"@_2891":{"entryPoint":null,"id":2891,"parameterSlots":3,"returnSlots":0},"@encode_2764":{"entryPoint":527,"id":2764,"parameterSlots":1,"returnSlots":1},"@svgToImageURI_2924":{"entryPoint":369,"id":2924,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1489,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1199,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1564,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":1615,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1846,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1871,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":1350,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1101,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1381,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1769,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1780,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1968,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":2108,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2164,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1153,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1121,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1911,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1435,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2308,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1296,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":1921,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":2061,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2261,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1249,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1222,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1227,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1116,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1111,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1232,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1173,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7435:20","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:20","statements":[{"nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:20"},"nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:20"},"nodeType":"YulFunctionCall","src":"187:12:20"},"nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:20"},"nodeType":"YulFunctionCall","src":"310:12:20"},"nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nodeType":"YulBlock","src":"379:81:20","statements":[{"nodeType":"YulAssignment","src":"389:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:20"},"nodeType":"YulFunctionCall","src":"400:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:20","type":""}],"src":"334:126:20"},{"body":{"nodeType":"YulBlock","src":"511:51:20","statements":[{"nodeType":"YulAssignment","src":"521:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:20"},"nodeType":"YulFunctionCall","src":"532:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:20","type":""}],"src":"466:96:20"},{"body":{"nodeType":"YulBlock","src":"611:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:20"},"nodeType":"YulFunctionCall","src":"670:12:20"},"nodeType":"YulExpressionStatement","src":"670:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:20"},"nodeType":"YulFunctionCall","src":"641:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:20"},"nodeType":"YulFunctionCall","src":"631:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:20"},"nodeType":"YulFunctionCall","src":"624:43:20"},"nodeType":"YulIf","src":"621:63:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:20","type":""}],"src":"568:122:20"},{"body":{"nodeType":"YulBlock","src":"759:80:20","statements":[{"nodeType":"YulAssignment","src":"769:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:20"},"nodeType":"YulFunctionCall","src":"778:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:20"},"nodeType":"YulFunctionCall","src":"800:33:20"},"nodeType":"YulExpressionStatement","src":"800:33:20"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:20","type":""}],"src":"696:143:20"},{"body":{"nodeType":"YulBlock","src":"934:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"951:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"944:6:20"},"nodeType":"YulFunctionCall","src":"944:12:20"},"nodeType":"YulExpressionStatement","src":"944:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"845:117:20"},{"body":{"nodeType":"YulBlock","src":"1057:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1074:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1077:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1067:6:20"},"nodeType":"YulFunctionCall","src":"1067:12:20"},"nodeType":"YulExpressionStatement","src":"1067:12:20"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"968:117:20"},{"body":{"nodeType":"YulBlock","src":"1139:54:20","statements":[{"nodeType":"YulAssignment","src":"1149:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1167:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1163:3:20"},"nodeType":"YulFunctionCall","src":"1163:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1179:3:20"},"nodeType":"YulFunctionCall","src":"1179:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1159:3:20"},"nodeType":"YulFunctionCall","src":"1159:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1149:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1122:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1132:6:20","type":""}],"src":"1091:102:20"},{"body":{"nodeType":"YulBlock","src":"1227:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1244:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1247:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1237:6:20"},"nodeType":"YulFunctionCall","src":"1237:88:20"},"nodeType":"YulExpressionStatement","src":"1237:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1341:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1344:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:20"},"nodeType":"YulFunctionCall","src":"1334:15:20"},"nodeType":"YulExpressionStatement","src":"1334:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1365:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1368:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1358:6:20"},"nodeType":"YulFunctionCall","src":"1358:15:20"},"nodeType":"YulExpressionStatement","src":"1358:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1199:180:20"},{"body":{"nodeType":"YulBlock","src":"1428:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1438:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1460:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1490:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1468:21:20"},"nodeType":"YulFunctionCall","src":"1468:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1456:3:20"},"nodeType":"YulFunctionCall","src":"1456:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1442:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1607:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1609:16:20"},"nodeType":"YulFunctionCall","src":"1609:18:20"},"nodeType":"YulExpressionStatement","src":"1609:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1550:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"1562:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1547:2:20"},"nodeType":"YulFunctionCall","src":"1547:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1586:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1598:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1583:2:20"},"nodeType":"YulFunctionCall","src":"1583:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1544:2:20"},"nodeType":"YulFunctionCall","src":"1544:62:20"},"nodeType":"YulIf","src":"1541:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1645:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1649:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1638:6:20"},"nodeType":"YulFunctionCall","src":"1638:22:20"},"nodeType":"YulExpressionStatement","src":"1638:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1414:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"1422:4:20","type":""}],"src":"1385:281:20"},{"body":{"nodeType":"YulBlock","src":"1713:88:20","statements":[{"nodeType":"YulAssignment","src":"1723:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1733:18:20"},"nodeType":"YulFunctionCall","src":"1733:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1723:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1782:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"1790:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1762:19:20"},"nodeType":"YulFunctionCall","src":"1762:33:20"},"nodeType":"YulExpressionStatement","src":"1762:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1697:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1706:6:20","type":""}],"src":"1672:129:20"},{"body":{"nodeType":"YulBlock","src":"1874:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"1979:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1981:16:20"},"nodeType":"YulFunctionCall","src":"1981:18:20"},"nodeType":"YulExpressionStatement","src":"1981:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1951:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1959:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1948:2:20"},"nodeType":"YulFunctionCall","src":"1948:30:20"},"nodeType":"YulIf","src":"1945:56:20"},{"nodeType":"YulAssignment","src":"2011:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2041:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2019:21:20"},"nodeType":"YulFunctionCall","src":"2019:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2011:4:20"}]},{"nodeType":"YulAssignment","src":"2085:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2097:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2093:3:20"},"nodeType":"YulFunctionCall","src":"2093:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2085:4:20"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1858:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1869:4:20","type":""}],"src":"1807:308:20"},{"body":{"nodeType":"YulBlock","src":"2170:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2180:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2189:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2184:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2249:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2274:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"2279:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2270:3:20"},"nodeType":"YulFunctionCall","src":"2270:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"2298:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:20"},"nodeType":"YulFunctionCall","src":"2289:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:20"},"nodeType":"YulFunctionCall","src":"2283:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2263:6:20"},"nodeType":"YulFunctionCall","src":"2263:39:20"},"nodeType":"YulExpressionStatement","src":"2263:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2210:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"2213:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2207:2:20"},"nodeType":"YulFunctionCall","src":"2207:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2221:19:20","statements":[{"nodeType":"YulAssignment","src":"2223:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2232:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"2235:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2228:3:20"},"nodeType":"YulFunctionCall","src":"2228:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2223:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"2203:3:20","statements":[]},"src":"2199:113:20"},{"body":{"nodeType":"YulBlock","src":"2346:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2396:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2401:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2392:3:20"},"nodeType":"YulFunctionCall","src":"2392:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"2410:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2385:6:20"},"nodeType":"YulFunctionCall","src":"2385:27:20"},"nodeType":"YulExpressionStatement","src":"2385:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2327:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"2330:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2324:2:20"},"nodeType":"YulFunctionCall","src":"2324:13:20"},"nodeType":"YulIf","src":"2321:101:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2152:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2157:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"2162:6:20","type":""}],"src":"2121:307:20"},{"body":{"nodeType":"YulBlock","src":"2529:326:20","statements":[{"nodeType":"YulAssignment","src":"2539:75:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2606:6:20"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2564:41:20"},"nodeType":"YulFunctionCall","src":"2564:49:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2548:15:20"},"nodeType":"YulFunctionCall","src":"2548:66:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2539:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2630:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"2637:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2623:6:20"},"nodeType":"YulFunctionCall","src":"2623:21:20"},"nodeType":"YulExpressionStatement","src":"2623:21:20"},{"nodeType":"YulVariableDeclaration","src":"2653:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2668:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2675:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2664:3:20"},"nodeType":"YulFunctionCall","src":"2664:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2657:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2718:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2720:77:20"},"nodeType":"YulFunctionCall","src":"2720:79:20"},"nodeType":"YulExpressionStatement","src":"2720:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2699:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2704:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:20"},"nodeType":"YulFunctionCall","src":"2695:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"2713:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2692:2:20"},"nodeType":"YulFunctionCall","src":"2692:25:20"},"nodeType":"YulIf","src":"2689:112:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2832:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"2837:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2842:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2810:21:20"},"nodeType":"YulFunctionCall","src":"2810:39:20"},"nodeType":"YulExpressionStatement","src":"2810:39:20"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2502:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"2507:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2515:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2523:5:20","type":""}],"src":"2434:421:20"},{"body":{"nodeType":"YulBlock","src":"2948:282:20","statements":[{"body":{"nodeType":"YulBlock","src":"2997:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2999:77:20"},"nodeType":"YulFunctionCall","src":"2999:79:20"},"nodeType":"YulExpressionStatement","src":"2999:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2976:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2984:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2972:3:20"},"nodeType":"YulFunctionCall","src":"2972:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"2991:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2968:3:20"},"nodeType":"YulFunctionCall","src":"2968:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2961:6:20"},"nodeType":"YulFunctionCall","src":"2961:35:20"},"nodeType":"YulIf","src":"2958:122:20"},{"nodeType":"YulVariableDeclaration","src":"3089:27:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3109:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3103:5:20"},"nodeType":"YulFunctionCall","src":"3103:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3093:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3125:99:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3197:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3205:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3193:3:20"},"nodeType":"YulFunctionCall","src":"3193:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"3212:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"3220:3:20"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3134:58:20"},"nodeType":"YulFunctionCall","src":"3134:90:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3125:5:20"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2926:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2934:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2942:5:20","type":""}],"src":"2875:355:20"},{"body":{"nodeType":"YulBlock","src":"3367:878:20","statements":[{"body":{"nodeType":"YulBlock","src":"3413:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3415:77:20"},"nodeType":"YulFunctionCall","src":"3415:79:20"},"nodeType":"YulExpressionStatement","src":"3415:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3388:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3397:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3384:3:20"},"nodeType":"YulFunctionCall","src":"3384:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3409:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3380:3:20"},"nodeType":"YulFunctionCall","src":"3380:32:20"},"nodeType":"YulIf","src":"3377:119:20"},{"nodeType":"YulBlock","src":"3506:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3521:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3535:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3525:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3550:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3596:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3607:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3592:3:20"},"nodeType":"YulFunctionCall","src":"3592:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3616:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3560:31:20"},"nodeType":"YulFunctionCall","src":"3560:64:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3550:6:20"}]}]},{"nodeType":"YulBlock","src":"3644:292:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3659:39:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3683:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3694:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3679:3:20"},"nodeType":"YulFunctionCall","src":"3679:18:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3673:5:20"},"nodeType":"YulFunctionCall","src":"3673:25:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3663:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3745:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3747:77:20"},"nodeType":"YulFunctionCall","src":"3747:79:20"},"nodeType":"YulExpressionStatement","src":"3747:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3717:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3725:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3714:2:20"},"nodeType":"YulFunctionCall","src":"3714:30:20"},"nodeType":"YulIf","src":"3711:117:20"},{"nodeType":"YulAssignment","src":"3842:84:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3898:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3909:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3894:3:20"},"nodeType":"YulFunctionCall","src":"3894:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3918:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3852:41:20"},"nodeType":"YulFunctionCall","src":"3852:74:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3842:6:20"}]}]},{"nodeType":"YulBlock","src":"3946:292:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3961:39:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3985:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3996:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3981:3:20"},"nodeType":"YulFunctionCall","src":"3981:18:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3975:5:20"},"nodeType":"YulFunctionCall","src":"3975:25:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3965:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4047:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4049:77:20"},"nodeType":"YulFunctionCall","src":"4049:79:20"},"nodeType":"YulExpressionStatement","src":"4049:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4019:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4027:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4016:2:20"},"nodeType":"YulFunctionCall","src":"4016:30:20"},"nodeType":"YulIf","src":"4013:117:20"},{"nodeType":"YulAssignment","src":"4144:84:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4200:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4211:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4196:3:20"},"nodeType":"YulFunctionCall","src":"4196:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4220:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4154:41:20"},"nodeType":"YulFunctionCall","src":"4154:74:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4144:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3321:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3332:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3344:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3352:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3360:6:20","type":""}],"src":"3236:1009:20"},{"body":{"nodeType":"YulBlock","src":"4310:40:20","statements":[{"nodeType":"YulAssignment","src":"4321:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4337:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4331:5:20"},"nodeType":"YulFunctionCall","src":"4331:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4321:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4293:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4303:6:20","type":""}],"src":"4251:99:20"},{"body":{"nodeType":"YulBlock","src":"4470:34:20","statements":[{"nodeType":"YulAssignment","src":"4480:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"4495:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4480:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4442:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"4447:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4458:11:20","type":""}],"src":"4356:148:20"},{"body":{"nodeType":"YulBlock","src":"4620:267:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4630:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4677:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4644:32:20"},"nodeType":"YulFunctionCall","src":"4644:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4634:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4692:96:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4776:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"4781:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4699:76:20"},"nodeType":"YulFunctionCall","src":"4699:89:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4692:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4823:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"4830:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4819:3:20"},"nodeType":"YulFunctionCall","src":"4819:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"4837:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"4842:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4797:21:20"},"nodeType":"YulFunctionCall","src":"4797:52:20"},"nodeType":"YulExpressionStatement","src":"4797:52:20"},{"nodeType":"YulAssignment","src":"4858:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4869:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"4874:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4865:3:20"},"nodeType":"YulFunctionCall","src":"4865:16:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4858:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4601:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4608:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4616:3:20","type":""}],"src":"4510:377:20"},{"body":{"nodeType":"YulBlock","src":"5029:139:20","statements":[{"nodeType":"YulAssignment","src":"5040:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5129:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"5138:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5047:81:20"},"nodeType":"YulFunctionCall","src":"5047:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5040:3:20"}]},{"nodeType":"YulAssignment","src":"5152:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"5159:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5152:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5008:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5014:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5025:3:20","type":""}],"src":"4893:275:20"},{"body":{"nodeType":"YulBlock","src":"5358:251:20","statements":[{"nodeType":"YulAssignment","src":"5369:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5458:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"5467:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5376:81:20"},"nodeType":"YulFunctionCall","src":"5376:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5369:3:20"}]},{"nodeType":"YulAssignment","src":"5481:102:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5570:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"5579:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5488:81:20"},"nodeType":"YulFunctionCall","src":"5488:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5481:3:20"}]},{"nodeType":"YulAssignment","src":"5593:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"5600:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5593:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5329:3:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5335:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5343:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5354:3:20","type":""}],"src":"5174:435:20"},{"body":{"nodeType":"YulBlock","src":"5660:32:20","statements":[{"nodeType":"YulAssignment","src":"5670:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"5681:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5670:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5642:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5652:7:20","type":""}],"src":"5615:77:20"},{"body":{"nodeType":"YulBlock","src":"5726:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5743:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5746:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5736:6:20"},"nodeType":"YulFunctionCall","src":"5736:88:20"},"nodeType":"YulExpressionStatement","src":"5736:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5840:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5843:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5833:6:20"},"nodeType":"YulFunctionCall","src":"5833:15:20"},"nodeType":"YulExpressionStatement","src":"5833:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5864:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5867:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5857:6:20"},"nodeType":"YulFunctionCall","src":"5857:15:20"},"nodeType":"YulExpressionStatement","src":"5857:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5698:180:20"},{"body":{"nodeType":"YulBlock","src":"5928:261:20","statements":[{"nodeType":"YulAssignment","src":"5938:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5961:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5943:17:20"},"nodeType":"YulFunctionCall","src":"5943:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5938:1:20"}]},{"nodeType":"YulAssignment","src":"5972:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5995:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5977:17:20"},"nodeType":"YulFunctionCall","src":"5977:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5972:1:20"}]},{"body":{"nodeType":"YulBlock","src":"6135:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6137:16:20"},"nodeType":"YulFunctionCall","src":"6137:18:20"},"nodeType":"YulExpressionStatement","src":"6137:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6056:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6063:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"6131:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6059:3:20"},"nodeType":"YulFunctionCall","src":"6059:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6053:2:20"},"nodeType":"YulFunctionCall","src":"6053:81:20"},"nodeType":"YulIf","src":"6050:107:20"},{"nodeType":"YulAssignment","src":"6167:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6178:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"6181:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6174:3:20"},"nodeType":"YulFunctionCall","src":"6174:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6167:3:20"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5915:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"5918:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5924:3:20","type":""}],"src":"5884:305:20"},{"body":{"nodeType":"YulBlock","src":"6223:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6240:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6243:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6233:6:20"},"nodeType":"YulFunctionCall","src":"6233:88:20"},"nodeType":"YulExpressionStatement","src":"6233:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6340:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6330:6:20"},"nodeType":"YulFunctionCall","src":"6330:15:20"},"nodeType":"YulExpressionStatement","src":"6330:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6361:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6364:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6354:6:20"},"nodeType":"YulFunctionCall","src":"6354:15:20"},"nodeType":"YulExpressionStatement","src":"6354:15:20"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"6195:180:20"},{"body":{"nodeType":"YulBlock","src":"6423:143:20","statements":[{"nodeType":"YulAssignment","src":"6433:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6456:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6438:17:20"},"nodeType":"YulFunctionCall","src":"6438:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6433:1:20"}]},{"nodeType":"YulAssignment","src":"6467:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6490:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6472:17:20"},"nodeType":"YulFunctionCall","src":"6472:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6467:1:20"}]},{"body":{"nodeType":"YulBlock","src":"6514:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"6516:16:20"},"nodeType":"YulFunctionCall","src":"6516:18:20"},"nodeType":"YulExpressionStatement","src":"6516:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6511:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6504:6:20"},"nodeType":"YulFunctionCall","src":"6504:9:20"},"nodeType":"YulIf","src":"6501:35:20"},{"nodeType":"YulAssignment","src":"6546:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6555:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"6558:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6551:3:20"},"nodeType":"YulFunctionCall","src":"6551:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6546:1:20"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6412:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"6415:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6421:1:20","type":""}],"src":"6381:185:20"},{"body":{"nodeType":"YulBlock","src":"6620:300:20","statements":[{"nodeType":"YulAssignment","src":"6630:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6653:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6635:17:20"},"nodeType":"YulFunctionCall","src":"6635:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6630:1:20"}]},{"nodeType":"YulAssignment","src":"6664:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6687:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6669:17:20"},"nodeType":"YulFunctionCall","src":"6669:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6664:1:20"}]},{"body":{"nodeType":"YulBlock","src":"6862:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6864:16:20"},"nodeType":"YulFunctionCall","src":"6864:18:20"},"nodeType":"YulExpressionStatement","src":"6864:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6774:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6767:6:20"},"nodeType":"YulFunctionCall","src":"6767:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6760:6:20"},"nodeType":"YulFunctionCall","src":"6760:17:20"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6782:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6789:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"6857:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6785:3:20"},"nodeType":"YulFunctionCall","src":"6785:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6779:2:20"},"nodeType":"YulFunctionCall","src":"6779:81:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6756:3:20"},"nodeType":"YulFunctionCall","src":"6756:105:20"},"nodeType":"YulIf","src":"6753:131:20"},{"nodeType":"YulAssignment","src":"6894:20:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6909:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"6912:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6905:3:20"},"nodeType":"YulFunctionCall","src":"6905:9:20"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6894:7:20"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6603:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"6606:1:20","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6612:7:20","type":""}],"src":"6572:348:20"},{"body":{"nodeType":"YulBlock","src":"6954:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6971:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6974:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6964:6:20"},"nodeType":"YulFunctionCall","src":"6964:88:20"},"nodeType":"YulExpressionStatement","src":"6964:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7068:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7071:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7061:6:20"},"nodeType":"YulFunctionCall","src":"7061:15:20"},"nodeType":"YulExpressionStatement","src":"7061:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7092:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7095:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7085:6:20"},"nodeType":"YulFunctionCall","src":"7085:15:20"},"nodeType":"YulExpressionStatement","src":"7085:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6926:180:20"},{"body":{"nodeType":"YulBlock","src":"7163:269:20","statements":[{"nodeType":"YulAssignment","src":"7173:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7187:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"7193:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7183:3:20"},"nodeType":"YulFunctionCall","src":"7183:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7173:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"7204:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7234:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"7240:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7230:3:20"},"nodeType":"YulFunctionCall","src":"7230:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7208:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"7281:51:20","statements":[{"nodeType":"YulAssignment","src":"7295:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7309:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7317:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7305:3:20"},"nodeType":"YulFunctionCall","src":"7305:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7295:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7261:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7254:6:20"},"nodeType":"YulFunctionCall","src":"7254:26:20"},"nodeType":"YulIf","src":"7251:81:20"},{"body":{"nodeType":"YulBlock","src":"7384:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"7398:16:20"},"nodeType":"YulFunctionCall","src":"7398:18:20"},"nodeType":"YulExpressionStatement","src":"7398:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7348:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7371:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7379:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7368:2:20"},"nodeType":"YulFunctionCall","src":"7368:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7345:2:20"},"nodeType":"YulFunctionCall","src":"7345:38:20"},"nodeType":"YulIf","src":"7342:84:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7147:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7156:6:20","type":""}],"src":"7112:320:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x37A4 CODESIZE SUB DUP1 PUSH3 0x37A4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44796E616D69635376674E667400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44534E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xBB SWAP3 SWAP2 SWAP1 PUSH3 0x39D JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xD4 SWAP3 SWAP2 SWAP1 PUSH3 0x39D JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0xF0 DUP3 PUSH3 0x171 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x107 SWAP3 SWAP2 SWAP1 PUSH3 0x39D JUMP JUMPDEST POP PUSH3 0x119 DUP2 PUSH3 0x171 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x130 SWAP3 SWAP2 SWAP1 PUSH3 0x39D JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP POP POP PUSH3 0x93A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH3 0x1AC DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x18C SWAP2 SWAP1 PUSH3 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH3 0x20F PUSH1 0x20 SHL PUSH3 0xD6F OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1F8 SWAP3 SWAP2 SWAP1 PUSH3 0x74F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH3 0x234 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH3 0x398 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x3764 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH3 0x266 SWAP2 SWAP1 PUSH3 0x7B0 JUMP JUMPDEST PUSH3 0x272 SWAP2 SWAP1 PUSH3 0x83C JUMP JUMPDEST PUSH1 0x4 PUSH3 0x280 SWAP2 SWAP1 PUSH3 0x874 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH3 0x293 SWAP2 SWAP1 PUSH3 0x7B0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2AF JUMPI PUSH3 0x2AE PUSH3 0x4E1 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x2E2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH3 0x353 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH3 0x2F6 JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH3 0x370 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x381 JUMPI PUSH3 0x38C JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH3 0x38C JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x3AB SWAP1 PUSH3 0x904 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x3CF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x41B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x3EA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x41B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x41B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x41A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3FD JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x42A SWAP2 SWAP1 PUSH3 0x42E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x449 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x42F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x48E DUP3 PUSH3 0x461 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4A0 DUP2 PUSH3 0x481 JUMP JUMPDEST DUP2 EQ PUSH3 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4C0 DUP2 PUSH3 0x495 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x51B DUP3 PUSH3 0x4D0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x53D JUMPI PUSH3 0x53C PUSH3 0x4E1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x552 PUSH3 0x44D JUMP JUMPDEST SWAP1 POP PUSH3 0x560 DUP3 DUP3 PUSH3 0x510 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x583 JUMPI PUSH3 0x582 PUSH3 0x4E1 JUMP JUMPDEST JUMPDEST PUSH3 0x58E DUP3 PUSH3 0x4D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5BB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x59E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x5CB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5E8 PUSH3 0x5E2 DUP5 PUSH3 0x565 JUMP JUMPDEST PUSH3 0x546 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x607 JUMPI PUSH3 0x606 PUSH3 0x4CB JUMP JUMPDEST JUMPDEST PUSH3 0x614 DUP5 DUP3 DUP6 PUSH3 0x59B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x634 JUMPI PUSH3 0x633 PUSH3 0x4C6 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x646 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x5D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x66B JUMPI PUSH3 0x66A PUSH3 0x457 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x67B DUP7 DUP3 DUP8 ADD PUSH3 0x4AF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x69F JUMPI PUSH3 0x69E PUSH3 0x45C JUMP JUMPDEST JUMPDEST PUSH3 0x6AD DUP7 DUP3 DUP8 ADD PUSH3 0x61C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6D1 JUMPI PUSH3 0x6D0 PUSH3 0x45C JUMP JUMPDEST JUMPDEST PUSH3 0x6DF DUP7 DUP3 DUP8 ADD PUSH3 0x61C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x70C DUP3 PUSH3 0x6E9 JUMP JUMPDEST PUSH3 0x718 DUP2 DUP6 PUSH3 0x6F4 JUMP JUMPDEST SWAP4 POP PUSH3 0x72A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x59B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x744 DUP3 DUP5 PUSH3 0x6FF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x75D DUP3 DUP6 PUSH3 0x6FF JUMP JUMPDEST SWAP2 POP PUSH3 0x76B DUP3 DUP5 PUSH3 0x6FF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x7BD DUP3 PUSH3 0x777 JUMP JUMPDEST SWAP2 POP PUSH3 0x7CA DUP4 PUSH3 0x777 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH3 0x802 JUMPI PUSH3 0x801 PUSH3 0x781 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x849 DUP3 PUSH3 0x777 JUMP JUMPDEST SWAP2 POP PUSH3 0x856 DUP4 PUSH3 0x777 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x869 JUMPI PUSH3 0x868 PUSH3 0x80D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x881 DUP3 PUSH3 0x777 JUMP JUMPDEST SWAP2 POP PUSH3 0x88E DUP4 PUSH3 0x777 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x8CA JUMPI PUSH3 0x8C9 PUSH3 0x781 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x91D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x934 JUMPI PUSH3 0x933 PUSH3 0x8D5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x2E0B PUSH3 0x959 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xA88 ADD MSTORE PUSH2 0x2E0B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xE425ADED EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x339 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2A1 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1E930812 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1E930812 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x30D871C6 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1A4F JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1CCE JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1E83 JUMP JUMPDEST PUSH2 0x719 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1F08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH2 0x9C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH2 0x9D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x20C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x434 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x444 JUMPI POP PUSH2 0x443 DUP3 PUSH2 0xEE8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x45A SWAP1 PUSH2 0x214C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x486 SWAP1 PUSH2 0x214C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E8 DUP3 PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52E DUP3 PUSH2 0x7C6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x596 SWAP1 PUSH2 0x21F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5BE PUSH2 0xF9D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5ED JUMPI POP PUSH2 0x5EC DUP2 PUSH2 0x5E7 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST JUMPDEST PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x623 SWAP1 PUSH2 0x2282 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x636 DUP4 DUP4 PUSH2 0xFA5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x67C CALLER PUSH1 0x6 SLOAD PUSH2 0x105E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH32 0x882D3B5A729A8BB95CF6C0083C99B42ECD9637123D4425BD7B768877FD8AF8B0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x6AE SWAP2 SWAP1 PUSH2 0x20C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x6CA PUSH2 0x6C4 PUSH2 0xF9D JUMP JUMPDEST DUP3 PUSH2 0x107C JUMP JUMPDEST PUSH2 0x709 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP1 PUSH2 0x2399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x714 DUP4 DUP4 DUP4 PUSH2 0x1111 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x745 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x731 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xD6F JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x78F SWAP3 SWAP2 SWAP1 PUSH2 0x240C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C1 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP1 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E0 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x93F SWAP1 PUSH2 0x214C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x96B SWAP1 PUSH2 0x214C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x98D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x99B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D4 PUSH2 0x9CD PUSH2 0xF9D JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1378 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9E9 PUSH2 0x9E3 PUSH2 0xF9D JUMP JUMPDEST DUP4 PUSH2 0x107C JUMP JUMPDEST PUSH2 0xA28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1F SWAP1 PUSH2 0x2399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA34 DUP5 DUP5 DUP5 DUP5 PUSH2 0x14E5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA45 DUP3 PUSH2 0x1541 JUMP JUMPDEST PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7B SWAP1 PUSH2 0x257A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0x2606 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD PUSH2 0xB39 SWAP1 PUSH2 0x214C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB65 SWAP1 PUSH2 0x214C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB87 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB95 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 SLT PUSH2 0xC61 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH2 0xBE0 SWAP1 PUSH2 0x214C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC0C SWAP1 PUSH2 0x214C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC59 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC59 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC3C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST PUSH2 0xC69 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0xC9A PUSH2 0xC74 PUSH2 0x44B JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC86 SWAP3 SWAP2 SWAP1 PUSH2 0x286F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xD6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCAB SWAP3 SWAP2 SWAP1 PUSH2 0x240C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0xD92 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D96 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0xDC1 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH2 0xDCB SWAP2 SWAP1 PUSH2 0x28F9 JUMP JUMPDEST PUSH1 0x4 PUSH2 0xDD7 SWAP2 SWAP1 PUSH2 0x292A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH2 0xDE8 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE01 JUMPI PUSH2 0xE00 PUSH2 0x1D58 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE33 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0xEA2 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH2 0xE47 JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0xEBC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xECC JUMPI PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5B DUP2 PUSH2 0x1541 JUMP JUMPDEST PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF91 SWAP1 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1018 DUP4 PUSH2 0x7C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1078 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x15EA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1088 DUP4 PUSH2 0x7C6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x10CA JUMPI POP PUSH2 0x10C9 DUP2 DUP6 PUSH2 0xCDB JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1108 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10F0 DUP5 PUSH2 0x4DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1131 DUP3 PUSH2 0x7C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1187 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117E SWAP1 PUSH2 0x29F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EE SWAP1 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1202 DUP4 DUP4 DUP4 PUSH2 0x1645 JUMP JUMPDEST PUSH2 0x120D PUSH1 0x0 DUP3 PUSH2 0xFA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x125D SWAP2 SWAP1 PUSH2 0x2AA8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12B4 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1373 DUP4 DUP4 DUP4 PUSH2 0x164A JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DE SWAP1 PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x14D8 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x14F0 DUP5 DUP5 DUP5 PUSH2 0x1111 JUMP JUMPDEST PUSH2 0x14FC DUP5 DUP5 DUP5 DUP5 PUSH2 0x164F JUMP JUMPDEST PUSH2 0x153B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1532 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x15F4 DUP4 DUP4 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x1601 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x164F JUMP JUMPDEST PUSH2 0x1640 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1637 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1670 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19C0 JUMP JUMPDEST ISZERO PUSH2 0x17D9 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1699 PUSH2 0xF9D JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16BB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C2F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1706 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1703 SWAP2 SWAP1 PUSH2 0x2C90 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1789 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1736 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x173B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1781 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1778 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x17DE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184D SWAP1 PUSH2 0x2D09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x185F DUP2 PUSH2 0x1541 JUMP JUMPDEST ISZERO PUSH2 0x189F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1896 SWAP1 PUSH2 0x2D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18AB PUSH1 0x0 DUP4 DUP4 PUSH2 0x1645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18FB SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x19BC PUSH1 0x0 DUP4 DUP4 PUSH2 0x164A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2C DUP2 PUSH2 0x19F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A49 DUP2 PUSH2 0x1A23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A65 JUMPI PUSH2 0x1A64 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A73 DUP5 DUP3 DUP6 ADD PUSH2 0x1A3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A91 DUP2 PUSH2 0x1A7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AEC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AD1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1AFB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1D DUP3 PUSH2 0x1AB2 JUMP JUMPDEST PUSH2 0x1B27 DUP2 DUP6 PUSH2 0x1ABD JUMP JUMPDEST SWAP4 POP PUSH2 0x1B37 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x1B40 DUP2 PUSH2 0x1B01 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B65 DUP2 DUP5 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B80 DUP2 PUSH2 0x1B6D JUMP JUMPDEST DUP2 EQ PUSH2 0x1B8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B9D DUP2 PUSH2 0x1B77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB9 JUMPI PUSH2 0x1BB8 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BC7 DUP5 DUP3 DUP6 ADD PUSH2 0x1B8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BFB DUP3 PUSH2 0x1BD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C0B DUP2 PUSH2 0x1BF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C26 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C35 DUP2 PUSH2 0x1BF0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C52 DUP2 PUSH2 0x1C2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C6F JUMPI PUSH2 0x1C6E PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C7D DUP6 DUP3 DUP7 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C8E DUP6 DUP3 DUP7 ADD PUSH2 0x1B8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CAB DUP2 PUSH2 0x1C98 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CC8 DUP2 PUSH2 0x1CA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE4 JUMPI PUSH2 0x1CE3 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CF2 DUP5 DUP3 DUP6 ADD PUSH2 0x1CB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D14 JUMPI PUSH2 0x1D13 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D22 DUP7 DUP3 DUP8 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D33 DUP7 DUP3 DUP8 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D44 DUP7 DUP3 DUP8 ADD PUSH2 0x1B8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D90 DUP3 PUSH2 0x1B01 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1DAF JUMPI PUSH2 0x1DAE PUSH2 0x1D58 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC2 PUSH2 0x19E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DCE DUP3 DUP3 PUSH2 0x1D87 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DEE JUMPI PUSH2 0x1DED PUSH2 0x1D58 JUMP JUMPDEST JUMPDEST PUSH2 0x1DF7 DUP3 PUSH2 0x1B01 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E26 PUSH2 0x1E21 DUP5 PUSH2 0x1DD3 JUMP JUMPDEST PUSH2 0x1DB8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E42 JUMPI PUSH2 0x1E41 PUSH2 0x1D53 JUMP JUMPDEST JUMPDEST PUSH2 0x1E4D DUP5 DUP3 DUP6 PUSH2 0x1E04 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E6A JUMPI PUSH2 0x1E69 PUSH2 0x1D4E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E7A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E99 JUMPI PUSH2 0x1E98 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EB7 JUMPI PUSH2 0x1EB6 PUSH2 0x19F2 JUMP JUMPDEST JUMPDEST PUSH2 0x1EC3 DUP5 DUP3 DUP6 ADD PUSH2 0x1E55 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EE2 JUMPI PUSH2 0x1EE1 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EF0 DUP5 DUP3 DUP6 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F02 DUP2 PUSH2 0x1B6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F1D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F2C DUP2 PUSH2 0x1A7C JUMP JUMPDEST DUP2 EQ PUSH2 0x1F37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F49 DUP2 PUSH2 0x1F23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F66 JUMPI PUSH2 0x1F65 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F74 DUP6 DUP3 DUP7 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F85 DUP6 DUP3 DUP7 ADD PUSH2 0x1F3A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FAA JUMPI PUSH2 0x1FA9 PUSH2 0x1D58 JUMP JUMPDEST JUMPDEST PUSH2 0x1FB3 DUP3 PUSH2 0x1B01 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD3 PUSH2 0x1FCE DUP5 PUSH2 0x1F8F JUMP JUMPDEST PUSH2 0x1DB8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1FEF JUMPI PUSH2 0x1FEE PUSH2 0x1D53 JUMP JUMPDEST JUMPDEST PUSH2 0x1FFA DUP5 DUP3 DUP6 PUSH2 0x1E04 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2017 JUMPI PUSH2 0x2016 PUSH2 0x1D4E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2027 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x204A JUMPI PUSH2 0x2049 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2058 DUP8 DUP3 DUP9 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2069 DUP8 DUP3 DUP9 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x207A DUP8 DUP3 DUP9 ADD PUSH2 0x1B8E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x209B JUMPI PUSH2 0x209A PUSH2 0x19F2 JUMP JUMPDEST JUMPDEST PUSH2 0x20A7 DUP8 DUP3 DUP9 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x20BC DUP2 PUSH2 0x1C98 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20F4 JUMPI PUSH2 0x20F3 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2102 DUP6 DUP3 DUP7 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2113 DUP6 DUP3 DUP7 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2164 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2178 JUMPI PUSH2 0x2177 PUSH2 0x211D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DA PUSH1 0x21 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x21E5 DUP3 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2209 DUP2 PUSH2 0x21CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226C PUSH1 0x3E DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x2277 DUP3 PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x229B DUP2 PUSH2 0x225F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22DC DUP3 PUSH2 0x1B6D JUMP JUMPDEST SWAP2 POP PUSH2 0x22E7 DUP4 PUSH2 0x1B6D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x231C JUMPI PUSH2 0x231B PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2383 PUSH1 0x2E DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x238E DUP3 PUSH2 0x2327 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B2 DUP2 PUSH2 0x2376 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23CF DUP3 PUSH2 0x1AB2 JUMP JUMPDEST PUSH2 0x23D9 DUP2 DUP6 PUSH2 0x23B9 JUMP JUMPDEST SWAP4 POP PUSH2 0x23E9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1ACE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2401 DUP3 DUP5 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2418 DUP3 DUP6 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2424 DUP3 DUP5 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2466 PUSH1 0x18 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x2471 DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2495 DUP2 PUSH2 0x2459 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F8 PUSH1 0x29 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x2503 DUP3 PUSH2 0x249C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2527 DUP2 PUSH2 0x24EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x55524920517565727920666F72206E6F6E206578697374656E7420746F6B656E PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2564 PUSH1 0x20 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x256F DUP3 PUSH2 0x252E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2593 DUP2 PUSH2 0x2557 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25B9 DUP2 PUSH2 0x259A JUMP JUMPDEST DUP2 EQ PUSH2 0x25C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25D6 DUP2 PUSH2 0x25B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25EB DUP2 PUSH2 0x1CA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2600 DUP2 PUSH2 0x1B77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2622 JUMPI PUSH2 0x2621 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2630 DUP9 DUP3 DUP10 ADD PUSH2 0x25C7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2641 DUP9 DUP3 DUP10 ADD PUSH2 0x25DC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2652 DUP9 DUP3 DUP10 ADD PUSH2 0x25F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2663 DUP9 DUP3 DUP10 ADD PUSH2 0x25F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2674 DUP9 DUP3 DUP10 ADD PUSH2 0x25C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x7B226E616D653A22000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B7 PUSH1 0x8 DUP4 PUSH2 0x23B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x26C2 DUP3 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2703 PUSH1 0x1 DUP4 PUSH2 0x23B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x270E DUP3 PUSH2 0x26CD JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x226465736372697074696F6E223A22416E204E46542074686174206368616E67 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573206261736564206F6E20636861696E6C696E6B2070726963652046656564 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2121220000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x279B PUSH1 0x43 DUP4 PUSH2 0x23B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x27A6 DUP3 PUSH2 0x2719 JUMP JUMPDEST PUSH1 0x43 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A5B7B2274726169745F74797065223A2022636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6C6E657373222C3A76616C75653A3130307D5D2C22696D616765223A220000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280D PUSH1 0x3E DUP4 PUSH2 0x23B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2818 DUP3 PUSH2 0x27B1 JUMP JUMPDEST PUSH1 0x3E DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x227D000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2859 PUSH1 0x2 DUP4 PUSH2 0x23B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2864 DUP3 PUSH2 0x2823 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x287A DUP3 PUSH2 0x26AA JUMP JUMPDEST SWAP2 POP PUSH2 0x2886 DUP3 DUP6 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2891 DUP3 PUSH2 0x26F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x289C DUP3 PUSH2 0x278E JUMP JUMPDEST SWAP2 POP PUSH2 0x28A7 DUP3 PUSH2 0x2800 JUMP JUMPDEST SWAP2 POP PUSH2 0x28B3 DUP3 DUP5 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x28BE DUP3 PUSH2 0x284C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2904 DUP3 PUSH2 0x1B6D JUMP JUMPDEST SWAP2 POP PUSH2 0x290F DUP4 PUSH2 0x1B6D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x291F JUMPI PUSH2 0x291E PUSH2 0x28CA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2935 DUP3 PUSH2 0x1B6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2940 DUP4 PUSH2 0x1B6D JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2979 JUMPI PUSH2 0x2978 PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E0 PUSH1 0x25 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x29EB DUP3 PUSH2 0x2984 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A0F DUP2 PUSH2 0x29D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A72 PUSH1 0x24 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x2A7D DUP3 PUSH2 0x2A16 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AA1 DUP2 PUSH2 0x2A65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB3 DUP3 PUSH2 0x1B6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2ABE DUP4 PUSH2 0x1B6D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2AD1 JUMPI PUSH2 0x2AD0 PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B12 PUSH1 0x19 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x2B1D DUP3 PUSH2 0x2ADC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B41 DUP2 PUSH2 0x2B05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA4 PUSH1 0x32 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x2BAF DUP3 PUSH2 0x2B48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BD3 DUP2 PUSH2 0x2B97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C01 DUP3 PUSH2 0x2BDA JUMP JUMPDEST PUSH2 0x2C0B DUP2 DUP6 PUSH2 0x2BE5 JUMP JUMPDEST SWAP4 POP PUSH2 0x2C1B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x2C24 DUP2 PUSH2 0x1B01 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2C44 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C02 JUMP JUMPDEST PUSH2 0x2C51 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C02 JUMP JUMPDEST PUSH2 0x2C5E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1EF9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2C70 DUP2 DUP5 PUSH2 0x2BF6 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C8A DUP2 PUSH2 0x1A23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CA6 JUMPI PUSH2 0x2CA5 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CB4 DUP5 DUP3 DUP6 ADD PUSH2 0x2C7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF3 PUSH1 0x20 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFE DUP3 PUSH2 0x2CBD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D22 DUP2 PUSH2 0x2CE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5F PUSH1 0x1C DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x2D6A DUP3 PUSH2 0x2D29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D8E DUP2 PUSH2 0x2D52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 PUSH13 0x8DE9CC7C9A9F7656505F379EA8 SWAP6 GASLIMIT 0x28 MUL 0xC5 0xDD SGT 0xBF 0xC4 LOG3 GT BASEFEE EQ ORIGIN BYTE EXTCODECOPY DUP4 0xBF PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2F00000000000000 ","sourceMap":"224:2617:17:-:0;;;645:338;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;816:1:17::1;799:14;:18;;;;843:21;857:6;843:13;;;:21;;:::i;:::-;827:13;:37;;;;;;;;;;;;:::i;:::-;;891:22;905:7;891:13;;;:22;;:::i;:::-;874:14;:39;;;;;;;;;;;;:::i;:::-;;959:16;923:53;;;;;;;;;;::::0;::::1;645:338:::0;;;224:2617;;989:324;1076:13;1105:30;1138:73;1195:3;1178:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;1138:13;;;;;:73;;:::i;:::-;1105:106;;1264:22;;;;;;;;;;;;;;;;;1288:16;1247:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1221:85;;;989:324;;;:::o;777:1861:16:-;835:13;879:1;864:4;:11;:16;860:31;;;882:9;;;;;;;;;;;;;;;;860:31;940:19;962:12;;;;;;;;;;;;;;;;;940:34;;1023:18;1069:1;1064;1050:4;:11;:15;;;;:::i;:::-;1049:21;;;;:::i;:::-;1044:1;:27;;;;:::i;:::-;1023:48;;1151:20;1198:2;1185:10;:15;;;;:::i;:::-;1174:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1151:50;;1294:10;1286:6;1279:26;1386:1;1379:5;1375:13;1442:4;1492;1486:11;1477:7;1473:25;1585:2;1577:6;1573:15;1655:739;1674:6;1665:7;1662:19;1655:739;;;1771:1;1762:7;1758:15;1747:26;;1809:7;1803:14;1932:4;1924:5;1920:2;1916:14;1912:25;1902:8;1898:40;1892:47;1881:9;1873:67;1985:1;1974:9;1970:17;1957:30;;2063:4;2055:5;2051:2;2047:14;2043:25;2033:8;2029:40;2023:47;2012:9;2004:67;2116:1;2105:9;2101:17;2088:30;;2194:4;2186:5;2183:1;2178:14;2174:25;2164:8;2160:40;2154:47;2143:9;2135:67;2247:1;2236:9;2232:17;2219:30;;2325:4;2317:5;2305:25;2295:8;2291:40;2285:47;2274:9;2266:67;2378:1;2367:9;2363:17;2350:30;;1697:697;1655:739;;;2464:1;2457:4;2451:11;2447:19;2484:1;2479:54;;;;2551:1;2546:52;;;;2440:158;;2479:54;2523:6;2518:3;2514:16;2510:1;2499:9;2495:17;2488:43;2479:54;;2546:52;2590:4;2585:3;2581:14;2577:1;2566:9;2562:17;2555:41;2440:158;;1221:1387;;;;2625:6;2618:13;;;;;777:1861;;;;:::o;224:2617:17:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:20:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:307::-;2189:1;2199:113;2213:6;2210:1;2207:13;2199:113;;;2298:1;2293:3;2289:11;2283:18;2279:1;2274:3;2270:11;2263:39;2235:2;2232:1;2228:10;2223:15;;2199:113;;;2330:6;2327:1;2324:13;2321:101;;;2410:1;2401:6;2396:3;2392:16;2385:27;2321:101;2170:258;2121:307;;;:::o;2434:421::-;2523:5;2548:66;2564:49;2606:6;2564:49;:::i;:::-;2548:66;:::i;:::-;2539:75;;2637:6;2630:5;2623:21;2675:4;2668:5;2664:16;2713:3;2704:6;2699:3;2695:16;2692:25;2689:112;;;2720:79;;:::i;:::-;2689:112;2810:39;2842:6;2837:3;2832;2810:39;:::i;:::-;2529:326;2434:421;;;;;:::o;2875:355::-;2942:5;2991:3;2984:4;2976:6;2972:17;2968:27;2958:122;;2999:79;;:::i;:::-;2958:122;3109:6;3103:13;3134:90;3220:3;3212:6;3205:4;3197:6;3193:17;3134:90;:::i;:::-;3125:99;;2948:282;2875:355;;;;:::o;3236:1009::-;3344:6;3352;3360;3409:2;3397:9;3388:7;3384:23;3380:32;3377:119;;;3415:79;;:::i;:::-;3377:119;3535:1;3560:64;3616:7;3607:6;3596:9;3592:22;3560:64;:::i;:::-;3550:74;;3506:128;3694:2;3683:9;3679:18;3673:25;3725:18;3717:6;3714:30;3711:117;;;3747:79;;:::i;:::-;3711:117;3852:74;3918:7;3909:6;3898:9;3894:22;3852:74;:::i;:::-;3842:84;;3644:292;3996:2;3985:9;3981:18;3975:25;4027:18;4019:6;4016:30;4013:117;;;4049:79;;:::i;:::-;4013:117;4154:74;4220:7;4211:6;4200:9;4196:22;4154:74;:::i;:::-;4144:84;;3946:292;3236:1009;;;;;:::o;4251:99::-;4303:6;4337:5;4331:12;4321:22;;4251:99;;;:::o;4356:148::-;4458:11;4495:3;4480:18;;4356:148;;;;:::o;4510:377::-;4616:3;4644:39;4677:5;4644:39;:::i;:::-;4699:89;4781:6;4776:3;4699:89;:::i;:::-;4692:96;;4797:52;4842:6;4837:3;4830:4;4823:5;4819:16;4797:52;:::i;:::-;4874:6;4869:3;4865:16;4858:23;;4620:267;4510:377;;;;:::o;4893:275::-;5025:3;5047:95;5138:3;5129:6;5047:95;:::i;:::-;5040:102;;5159:3;5152:10;;4893:275;;;;:::o;5174:435::-;5354:3;5376:95;5467:3;5458:6;5376:95;:::i;:::-;5369:102;;5488:95;5579:3;5570:6;5488:95;:::i;:::-;5481:102;;5600:3;5593:10;;5174:435;;;;;:::o;5615:77::-;5652:7;5681:5;5670:16;;5615:77;;;:::o;5698:180::-;5746:77;5743:1;5736:88;5843:4;5840:1;5833:15;5867:4;5864:1;5857:15;5884:305;5924:3;5943:20;5961:1;5943:20;:::i;:::-;5938:25;;5977:20;5995:1;5977:20;:::i;:::-;5972:25;;6131:1;6063:66;6059:74;6056:1;6053:81;6050:107;;;6137:18;;:::i;:::-;6050:107;6181:1;6178;6174:9;6167:16;;5884:305;;;;:::o;6195:180::-;6243:77;6240:1;6233:88;6340:4;6337:1;6330:15;6364:4;6361:1;6354:15;6381:185;6421:1;6438:20;6456:1;6438:20;:::i;:::-;6433:25;;6472:20;6490:1;6472:20;:::i;:::-;6467:25;;6511:1;6501:35;;6516:18;;:::i;:::-;6501:35;6558:1;6555;6551:9;6546:14;;6381:185;;;;:::o;6572:348::-;6612:7;6635:20;6653:1;6635:20;:::i;:::-;6630:25;;6669:20;6687:1;6669:20;:::i;:::-;6664:25;;6857:1;6789:66;6785:74;6782:1;6779:81;6774:1;6767:9;6760:17;6756:105;6753:131;;;6864:18;;:::i;:::-;6753:131;6912:1;6909;6905:9;6894:20;;6572:348;;;;:::o;6926:180::-;6974:77;6971:1;6964:88;7071:4;7068:1;7061:15;7095:4;7092:1;7085:15;7112:320;7156:6;7193:1;7187:4;7183:12;7173:22;;7240:1;7234:4;7230:12;7261:18;7251:81;;7317:4;7309:6;7305:17;7295:27;;7251:81;7379:2;7371:6;7368:14;7348:18;7345:38;7342:84;;;7398:18;;:::i;:::-;7342:84;7163:269;7112:320;;;:::o;224:2617:17:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1845":{"entryPoint":5706,"id":1845,"parameterSlots":3,"returnSlots":0},"@_approve_1715":{"entryPoint":4005,"id":1715,"parameterSlots":2,"returnSlots":0},"@_baseURI_3024":{"entryPoint":5549,"id":3024,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_1834":{"entryPoint":5701,"id":1834,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_1823":{"entryPoint":5711,"id":1823,"parameterSlots":4,"returnSlots":1},"@_exists_1412":{"entryPoint":5441,"id":1412,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1446":{"entryPoint":4220,"id":1446,"parameterSlots":2,"returnSlots":1},"@_mint_1556":{"entryPoint":6118,"id":1556,"parameterSlots":2,"returnSlots":0},"@_msgSender_2439":{"entryPoint":3997,"id":2439,"parameterSlots":0,"returnSlots":1},"@_requireMinted_1761":{"entryPoint":3922,"id":1761,"parameterSlots":1,"returnSlots":0},"@_safeMint_1461":{"entryPoint":4190,"id":1461,"parameterSlots":2,"returnSlots":0},"@_safeMint_1490":{"entryPoint":5610,"id":1490,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_1394":{"entryPoint":5349,"id":1394,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1747":{"entryPoint":4984,"id":1747,"parameterSlots":3,"returnSlots":0},"@_transfer_1691":{"entryPoint":4369,"id":1691,"parameterSlots":3,"returnSlots":0},"@approve_1236":{"entryPoint":1315,"id":1236,"parameterSlots":2,"returnSlots":0},"@balanceOf_1097":{"entryPoint":2168,"id":1097,"parameterSlots":1,"returnSlots":1},"@encode_2764":{"entryPoint":3439,"id":2764,"parameterSlots":1,"returnSlots":1},"@getApproved_1254":{"entryPoint":1245,"id":1254,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1289":{"entryPoint":3291,"id":1289,"parameterSlots":2,"returnSlots":1},"@isContract_2150":{"entryPoint":6592,"id":2150,"parameterSlots":1,"returnSlots":1},"@mintNft_2951":{"entryPoint":1595,"id":2951,"parameterSlots":1,"returnSlots":0},"@name_1135":{"entryPoint":1099,"id":1135,"parameterSlots":0,"returnSlots":1},"@ownerOf_1125":{"entryPoint":1990,"id":1125,"parameterSlots":1,"returnSlots":1},"@s_tokenIdToHighValue_2849":{"entryPoint":3267,"id":2849,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1335":{"entryPoint":1958,"id":1335,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1365":{"entryPoint":2520,"id":1365,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1271":{"entryPoint":2498,"id":1271,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1073":{"entryPoint":873,"id":1073,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2698":{"entryPoint":3816,"id":2698,"parameterSlots":1,"returnSlots":1},"@svgToImageURI_2924":{"entryPoint":1817,"id":2924,"parameterSlots":1,"returnSlots":1},"@symbol_1145":{"entryPoint":2352,"id":1145,"parameterSlots":0,"returnSlots":1},"@tokenURI_3015":{"entryPoint":2618,"id":3015,"parameterSlots":1,"returnSlots":1},"@transferFrom_1316":{"entryPoint":1721,"id":1316,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":8128,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":7699,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":7235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":7994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":6714,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":11387,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":8194,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256":{"entryPoint":7353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":9692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":7765,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7054,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":9713,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":9671,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7884,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8413,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7419,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":8240,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":8015,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7256,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6735,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":11408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_int256":{"entryPoint":7374,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":7811,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7075,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":9734,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7170,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6792,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":11254,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":8371,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6930,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9156,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":11159,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":10707,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":11602,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":10853,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10240,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":11013,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":9451,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9974,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10316,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10126,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack":{"entryPoint":8799,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":11494,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9898,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf_to_t_string_memory_ptr_fromStack":{"entryPoint":9559,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":9305,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":8653,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack":{"entryPoint":9078,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7929,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9205,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9228,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d_t_string_memory_ptr_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735_t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10351,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7185,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11311,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6807,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":8386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6987,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11194,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10742,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11637,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10888,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11048,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9486,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8834,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11529,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9594,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9340,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8688,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9113,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7944,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7608,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":6627,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8079,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":7635,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":11226,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6834,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":11237,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6845,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9145,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8913,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":10489,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":10538,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10920,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7152,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6780,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":6647,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":7320,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7120,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7021,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":9626,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":7684,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":6862,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8524,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7559,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":8866,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":10442,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8477,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7512,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7502,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7507,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":6642,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6637,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6913,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":11080,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":10628,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":11561,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":10774,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24":{"entryPoint":10161,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":10972,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":9372,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0":{"entryPoint":9933,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475":{"entryPoint":10275,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735":{"entryPoint":10009,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304":{"entryPoint":8720,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":11453,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d":{"entryPoint":9857,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf":{"entryPoint":9518,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":9264,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":8574,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b":{"entryPoint":8999,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7212,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":7971,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":6691,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":7330,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7031,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":9648,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:37109:20","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:20","statements":[{"nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:20"},"nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:20"},"nodeType":"YulFunctionCall","src":"187:12:20"},"nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:20"},"nodeType":"YulFunctionCall","src":"310:12:20"},"nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nodeType":"YulBlock","src":"378:105:20","statements":[{"nodeType":"YulAssignment","src":"388:89:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:20","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:20"},"nodeType":"YulFunctionCall","src":"399:78:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:20"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:20","type":""}],"src":"334:149:20"},{"body":{"nodeType":"YulBlock","src":"531:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:20"},"nodeType":"YulFunctionCall","src":"589:12:20"},"nodeType":"YulExpressionStatement","src":"589:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:20"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:20"},"nodeType":"YulFunctionCall","src":"561:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:20"},"nodeType":"YulFunctionCall","src":"551:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:20"},"nodeType":"YulFunctionCall","src":"544:42:20"},"nodeType":"YulIf","src":"541:62:20"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:20","type":""}],"src":"489:120:20"},{"body":{"nodeType":"YulBlock","src":"666:86:20","statements":[{"nodeType":"YulAssignment","src":"676:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:20"},"nodeType":"YulFunctionCall","src":"685:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:20"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:20"},"nodeType":"YulFunctionCall","src":"714:32:20"},"nodeType":"YulExpressionStatement","src":"714:32:20"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:20","type":""}],"src":"615:137:20"},{"body":{"nodeType":"YulBlock","src":"823:262:20","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:20"},"nodeType":"YulFunctionCall","src":"871:79:20"},"nodeType":"YulExpressionStatement","src":"871:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:20"},"nodeType":"YulFunctionCall","src":"840:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:20"},"nodeType":"YulFunctionCall","src":"836:32:20"},"nodeType":"YulIf","src":"833:119:20"},{"nodeType":"YulBlock","src":"962:116:20","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:20"},"nodeType":"YulFunctionCall","src":"1036:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:20"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:20"},"nodeType":"YulFunctionCall","src":"1016:52:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:20","type":""}],"src":"758:327:20"},{"body":{"nodeType":"YulBlock","src":"1133:48:20","statements":[{"nodeType":"YulAssignment","src":"1143:32:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:20"},"nodeType":"YulFunctionCall","src":"1161:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:20"},"nodeType":"YulFunctionCall","src":"1154:21:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:20"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:20","type":""}],"src":"1091:90:20"},{"body":{"nodeType":"YulBlock","src":"1246:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:20"},"nodeType":"YulFunctionCall","src":"1268:21:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:20"},"nodeType":"YulFunctionCall","src":"1256:34:20"},"nodeType":"YulExpressionStatement","src":"1256:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:20","type":""}],"src":"1187:109:20"},{"body":{"nodeType":"YulBlock","src":"1394:118:20","statements":[{"nodeType":"YulAssignment","src":"1404:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:20"},"nodeType":"YulFunctionCall","src":"1412:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:20"},"nodeType":"YulFunctionCall","src":"1487:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:20"},"nodeType":"YulFunctionCall","src":"1440:65:20"},"nodeType":"YulExpressionStatement","src":"1440:65:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:20","type":""}],"src":"1302:210:20"},{"body":{"nodeType":"YulBlock","src":"1577:40:20","statements":[{"nodeType":"YulAssignment","src":"1588:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:20"},"nodeType":"YulFunctionCall","src":"1598:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:20","type":""}],"src":"1518:99:20"},{"body":{"nodeType":"YulBlock","src":"1719:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:20"},"nodeType":"YulFunctionCall","src":"1729:19:20"},"nodeType":"YulExpressionStatement","src":"1729:19:20"},{"nodeType":"YulAssignment","src":"1757:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:20"},"nodeType":"YulFunctionCall","src":"1772:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:20","type":""}],"src":"1623:169:20"},{"body":{"nodeType":"YulBlock","src":"1847:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:20"},"nodeType":"YulFunctionCall","src":"1947:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:20"},"nodeType":"YulFunctionCall","src":"1966:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:20"},"nodeType":"YulFunctionCall","src":"1960:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:20"},"nodeType":"YulFunctionCall","src":"1940:39:20"},"nodeType":"YulExpressionStatement","src":"1940:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:20"},"nodeType":"YulFunctionCall","src":"1884:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:20","statements":[{"nodeType":"YulAssignment","src":"1900:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:20"},"nodeType":"YulFunctionCall","src":"1905:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:20","statements":[]},"src":"1876:113:20"},{"body":{"nodeType":"YulBlock","src":"2023:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:20"},"nodeType":"YulFunctionCall","src":"2069:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:20"},"nodeType":"YulFunctionCall","src":"2062:27:20"},"nodeType":"YulExpressionStatement","src":"2062:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:20"},"nodeType":"YulFunctionCall","src":"2001:13:20"},"nodeType":"YulIf","src":"1998:101:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:20","type":""}],"src":"1798:307:20"},{"body":{"nodeType":"YulBlock","src":"2159:54:20","statements":[{"nodeType":"YulAssignment","src":"2169:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:20"},"nodeType":"YulFunctionCall","src":"2183:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:20"},"nodeType":"YulFunctionCall","src":"2199:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:20"},"nodeType":"YulFunctionCall","src":"2179:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:20","type":""}],"src":"2111:102:20"},{"body":{"nodeType":"YulBlock","src":"2311:272:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:20"},"nodeType":"YulFunctionCall","src":"2335:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:20"},"nodeType":"YulFunctionCall","src":"2390:71:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:20"},"nodeType":"YulFunctionCall","src":"2492:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:20"},"nodeType":"YulFunctionCall","src":"2470:52:20"},"nodeType":"YulExpressionStatement","src":"2470:52:20"},{"nodeType":"YulAssignment","src":"2531:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:20"},"nodeType":"YulFunctionCall","src":"2547:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:20"},"nodeType":"YulFunctionCall","src":"2538:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:20","type":""}],"src":"2219:364:20"},{"body":{"nodeType":"YulBlock","src":"2707:195:20","statements":[{"nodeType":"YulAssignment","src":"2717:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:20"},"nodeType":"YulFunctionCall","src":"2725:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:20"},"nodeType":"YulFunctionCall","src":"2760:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:20"},"nodeType":"YulFunctionCall","src":"2779:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:20"},"nodeType":"YulFunctionCall","src":"2753:47:20"},"nodeType":"YulExpressionStatement","src":"2753:47:20"},{"nodeType":"YulAssignment","src":"2809:86:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:20"},"nodeType":"YulFunctionCall","src":"2817:78:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:20","type":""}],"src":"2589:313:20"},{"body":{"nodeType":"YulBlock","src":"2953:32:20","statements":[{"nodeType":"YulAssignment","src":"2963:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:20","type":""}],"src":"2908:77:20"},{"body":{"nodeType":"YulBlock","src":"3034:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:20"},"nodeType":"YulFunctionCall","src":"3093:12:20"},"nodeType":"YulExpressionStatement","src":"3093:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:20"},"nodeType":"YulFunctionCall","src":"3064:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:20"},"nodeType":"YulFunctionCall","src":"3054:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:20"},"nodeType":"YulFunctionCall","src":"3047:43:20"},"nodeType":"YulIf","src":"3044:63:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:20","type":""}],"src":"2991:122:20"},{"body":{"nodeType":"YulBlock","src":"3171:87:20","statements":[{"nodeType":"YulAssignment","src":"3181:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:20"},"nodeType":"YulFunctionCall","src":"3190:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:20"},"nodeType":"YulFunctionCall","src":"3219:33:20"},"nodeType":"YulExpressionStatement","src":"3219:33:20"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:20","type":""}],"src":"3119:139:20"},{"body":{"nodeType":"YulBlock","src":"3330:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:20"},"nodeType":"YulFunctionCall","src":"3378:79:20"},"nodeType":"YulExpressionStatement","src":"3378:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:20"},"nodeType":"YulFunctionCall","src":"3347:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:20"},"nodeType":"YulFunctionCall","src":"3343:32:20"},"nodeType":"YulIf","src":"3340:119:20"},{"nodeType":"YulBlock","src":"3469:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:20"},"nodeType":"YulFunctionCall","src":"3544:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:20"},"nodeType":"YulFunctionCall","src":"3523:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:20","type":""}],"src":"3264:329:20"},{"body":{"nodeType":"YulBlock","src":"3644:81:20","statements":[{"nodeType":"YulAssignment","src":"3654:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:20"},"nodeType":"YulFunctionCall","src":"3665:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:20","type":""}],"src":"3599:126:20"},{"body":{"nodeType":"YulBlock","src":"3776:51:20","statements":[{"nodeType":"YulAssignment","src":"3786:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:20"},"nodeType":"YulFunctionCall","src":"3797:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:20","type":""}],"src":"3731:96:20"},{"body":{"nodeType":"YulBlock","src":"3898:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:20"},"nodeType":"YulFunctionCall","src":"3920:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:20"},"nodeType":"YulFunctionCall","src":"3908:37:20"},"nodeType":"YulExpressionStatement","src":"3908:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:20","type":""}],"src":"3833:118:20"},{"body":{"nodeType":"YulBlock","src":"4055:124:20","statements":[{"nodeType":"YulAssignment","src":"4065:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:20"},"nodeType":"YulFunctionCall","src":"4073:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:20"},"nodeType":"YulFunctionCall","src":"4154:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:20"},"nodeType":"YulFunctionCall","src":"4101:71:20"},"nodeType":"YulExpressionStatement","src":"4101:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:20","type":""}],"src":"3957:222:20"},{"body":{"nodeType":"YulBlock","src":"4228:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:20"},"nodeType":"YulFunctionCall","src":"4287:12:20"},"nodeType":"YulExpressionStatement","src":"4287:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:20"},"nodeType":"YulFunctionCall","src":"4258:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:20"},"nodeType":"YulFunctionCall","src":"4248:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:20"},"nodeType":"YulFunctionCall","src":"4241:43:20"},"nodeType":"YulIf","src":"4238:63:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:20","type":""}],"src":"4185:122:20"},{"body":{"nodeType":"YulBlock","src":"4365:87:20","statements":[{"nodeType":"YulAssignment","src":"4375:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:20"},"nodeType":"YulFunctionCall","src":"4384:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:20"},"nodeType":"YulFunctionCall","src":"4413:33:20"},"nodeType":"YulExpressionStatement","src":"4413:33:20"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:20","type":""}],"src":"4313:139:20"},{"body":{"nodeType":"YulBlock","src":"4541:391:20","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:20"},"nodeType":"YulFunctionCall","src":"4589:79:20"},"nodeType":"YulExpressionStatement","src":"4589:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:20"},"nodeType":"YulFunctionCall","src":"4558:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:20"},"nodeType":"YulFunctionCall","src":"4554:32:20"},"nodeType":"YulIf","src":"4551:119:20"},{"nodeType":"YulBlock","src":"4680:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:20"},"nodeType":"YulFunctionCall","src":"4755:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:20"},"nodeType":"YulFunctionCall","src":"4734:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:20"}]}]},{"nodeType":"YulBlock","src":"4807:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:20"},"nodeType":"YulFunctionCall","src":"4883:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:20"},"nodeType":"YulFunctionCall","src":"4862:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:20","type":""}],"src":"4458:474:20"},{"body":{"nodeType":"YulBlock","src":"4982:32:20","statements":[{"nodeType":"YulAssignment","src":"4992:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"5003:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4992:7:20"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4964:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4974:7:20","type":""}],"src":"4938:76:20"},{"body":{"nodeType":"YulBlock","src":"5062:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"5118:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5127:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5130:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5120:6:20"},"nodeType":"YulFunctionCall","src":"5120:12:20"},"nodeType":"YulExpressionStatement","src":"5120:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5085:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5109:5:20"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"5092:16:20"},"nodeType":"YulFunctionCall","src":"5092:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5082:2:20"},"nodeType":"YulFunctionCall","src":"5082:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5075:6:20"},"nodeType":"YulFunctionCall","src":"5075:42:20"},"nodeType":"YulIf","src":"5072:62:20"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5055:5:20","type":""}],"src":"5020:120:20"},{"body":{"nodeType":"YulBlock","src":"5197:86:20","statements":[{"nodeType":"YulAssignment","src":"5207:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5229:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5216:12:20"},"nodeType":"YulFunctionCall","src":"5216:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5207:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5271:5:20"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"5245:25:20"},"nodeType":"YulFunctionCall","src":"5245:32:20"},"nodeType":"YulExpressionStatement","src":"5245:32:20"}]},"name":"abi_decode_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5175:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"5183:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5191:5:20","type":""}],"src":"5146:137:20"},{"body":{"nodeType":"YulBlock","src":"5354:262:20","statements":[{"body":{"nodeType":"YulBlock","src":"5400:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5402:77:20"},"nodeType":"YulFunctionCall","src":"5402:79:20"},"nodeType":"YulExpressionStatement","src":"5402:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5375:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5371:3:20"},"nodeType":"YulFunctionCall","src":"5371:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5396:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5367:3:20"},"nodeType":"YulFunctionCall","src":"5367:32:20"},"nodeType":"YulIf","src":"5364:119:20"},{"nodeType":"YulBlock","src":"5493:116:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5508:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5522:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5512:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5537:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5571:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5582:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5567:3:20"},"nodeType":"YulFunctionCall","src":"5567:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5591:7:20"}],"functionName":{"name":"abi_decode_t_int256","nodeType":"YulIdentifier","src":"5547:19:20"},"nodeType":"YulFunctionCall","src":"5547:52:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5537:6:20"}]}]}]},"name":"abi_decode_tuple_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5324:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5335:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5347:6:20","type":""}],"src":"5289:327:20"},{"body":{"nodeType":"YulBlock","src":"5722:519:20","statements":[{"body":{"nodeType":"YulBlock","src":"5768:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5770:77:20"},"nodeType":"YulFunctionCall","src":"5770:79:20"},"nodeType":"YulExpressionStatement","src":"5770:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5743:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5752:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5739:3:20"},"nodeType":"YulFunctionCall","src":"5739:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5764:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5735:3:20"},"nodeType":"YulFunctionCall","src":"5735:32:20"},"nodeType":"YulIf","src":"5732:119:20"},{"nodeType":"YulBlock","src":"5861:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5876:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5890:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5880:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5905:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5940:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5951:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5936:3:20"},"nodeType":"YulFunctionCall","src":"5936:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5960:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5915:20:20"},"nodeType":"YulFunctionCall","src":"5915:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5905:6:20"}]}]},{"nodeType":"YulBlock","src":"5988:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6003:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6017:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6007:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6033:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6068:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6079:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6064:3:20"},"nodeType":"YulFunctionCall","src":"6064:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6088:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6043:20:20"},"nodeType":"YulFunctionCall","src":"6043:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6033:6:20"}]}]},{"nodeType":"YulBlock","src":"6116:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6131:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6145:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6135:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6161:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6196:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6207:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6192:3:20"},"nodeType":"YulFunctionCall","src":"6192:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6216:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6171:20:20"},"nodeType":"YulFunctionCall","src":"6171:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6161:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5676:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5687:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5699:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5707:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5715:6:20","type":""}],"src":"5622:619:20"},{"body":{"nodeType":"YulBlock","src":"6336:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:20"},"nodeType":"YulFunctionCall","src":"6346:12:20"},"nodeType":"YulExpressionStatement","src":"6346:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6247:117:20"},{"body":{"nodeType":"YulBlock","src":"6459:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6476:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6479:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6469:6:20"},"nodeType":"YulFunctionCall","src":"6469:12:20"},"nodeType":"YulExpressionStatement","src":"6469:12:20"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"6370:117:20"},{"body":{"nodeType":"YulBlock","src":"6521:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6538:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6541:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6531:6:20"},"nodeType":"YulFunctionCall","src":"6531:88:20"},"nodeType":"YulExpressionStatement","src":"6531:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6635:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6638:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6628:6:20"},"nodeType":"YulFunctionCall","src":"6628:15:20"},"nodeType":"YulExpressionStatement","src":"6628:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6659:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6662:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6652:6:20"},"nodeType":"YulFunctionCall","src":"6652:15:20"},"nodeType":"YulExpressionStatement","src":"6652:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6493:180:20"},{"body":{"nodeType":"YulBlock","src":"6722:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6732:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6754:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6784:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6762:21:20"},"nodeType":"YulFunctionCall","src":"6762:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6750:3:20"},"nodeType":"YulFunctionCall","src":"6750:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6736:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"6901:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6903:16:20"},"nodeType":"YulFunctionCall","src":"6903:18:20"},"nodeType":"YulExpressionStatement","src":"6903:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6844:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"6856:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6841:2:20"},"nodeType":"YulFunctionCall","src":"6841:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6880:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6892:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6877:2:20"},"nodeType":"YulFunctionCall","src":"6877:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6838:2:20"},"nodeType":"YulFunctionCall","src":"6838:62:20"},"nodeType":"YulIf","src":"6835:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6939:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6943:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6932:6:20"},"nodeType":"YulFunctionCall","src":"6932:22:20"},"nodeType":"YulExpressionStatement","src":"6932:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6708:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"6716:4:20","type":""}],"src":"6679:281:20"},{"body":{"nodeType":"YulBlock","src":"7007:88:20","statements":[{"nodeType":"YulAssignment","src":"7017:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7027:18:20"},"nodeType":"YulFunctionCall","src":"7027:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7017:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7076:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"7084:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7056:19:20"},"nodeType":"YulFunctionCall","src":"7056:33:20"},"nodeType":"YulExpressionStatement","src":"7056:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6991:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7000:6:20","type":""}],"src":"6966:129:20"},{"body":{"nodeType":"YulBlock","src":"7168:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"7273:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7275:16:20"},"nodeType":"YulFunctionCall","src":"7275:18:20"},"nodeType":"YulExpressionStatement","src":"7275:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7245:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7253:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7242:2:20"},"nodeType":"YulFunctionCall","src":"7242:30:20"},"nodeType":"YulIf","src":"7239:56:20"},{"nodeType":"YulAssignment","src":"7305:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7335:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7313:21:20"},"nodeType":"YulFunctionCall","src":"7313:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7305:4:20"}]},{"nodeType":"YulAssignment","src":"7379:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7391:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"7397:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7387:3:20"},"nodeType":"YulFunctionCall","src":"7387:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7379:4:20"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7152:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7163:4:20","type":""}],"src":"7101:308:20"},{"body":{"nodeType":"YulBlock","src":"7466:103:20","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7489:3:20"},{"name":"src","nodeType":"YulIdentifier","src":"7494:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"7499:6:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7476:12:20"},"nodeType":"YulFunctionCall","src":"7476:30:20"},"nodeType":"YulExpressionStatement","src":"7476:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7547:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"7552:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7543:3:20"},"nodeType":"YulFunctionCall","src":"7543:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"7561:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7536:6:20"},"nodeType":"YulFunctionCall","src":"7536:27:20"},"nodeType":"YulExpressionStatement","src":"7536:27:20"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7448:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7453:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"7458:6:20","type":""}],"src":"7415:154:20"},{"body":{"nodeType":"YulBlock","src":"7659:328:20","statements":[{"nodeType":"YulAssignment","src":"7669:75:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7736:6:20"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7694:41:20"},"nodeType":"YulFunctionCall","src":"7694:49:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7678:15:20"},"nodeType":"YulFunctionCall","src":"7678:66:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7669:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7760:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"7767:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7753:6:20"},"nodeType":"YulFunctionCall","src":"7753:21:20"},"nodeType":"YulExpressionStatement","src":"7753:21:20"},{"nodeType":"YulVariableDeclaration","src":"7783:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7798:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"7805:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7794:3:20"},"nodeType":"YulFunctionCall","src":"7794:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7787:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"7848:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"7850:77:20"},"nodeType":"YulFunctionCall","src":"7850:79:20"},"nodeType":"YulExpressionStatement","src":"7850:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7829:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"7834:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7825:3:20"},"nodeType":"YulFunctionCall","src":"7825:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"7843:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7822:2:20"},"nodeType":"YulFunctionCall","src":"7822:25:20"},"nodeType":"YulIf","src":"7819:112:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7964:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"7969:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"7974:6:20"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"7940:23:20"},"nodeType":"YulFunctionCall","src":"7940:41:20"},"nodeType":"YulExpressionStatement","src":"7940:41:20"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7632:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"7637:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"7645:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7653:5:20","type":""}],"src":"7575:412:20"},{"body":{"nodeType":"YulBlock","src":"8069:278:20","statements":[{"body":{"nodeType":"YulBlock","src":"8118:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8120:77:20"},"nodeType":"YulFunctionCall","src":"8120:79:20"},"nodeType":"YulExpressionStatement","src":"8120:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8097:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8105:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8093:3:20"},"nodeType":"YulFunctionCall","src":"8093:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"8112:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8089:3:20"},"nodeType":"YulFunctionCall","src":"8089:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8082:6:20"},"nodeType":"YulFunctionCall","src":"8082:35:20"},"nodeType":"YulIf","src":"8079:122:20"},{"nodeType":"YulVariableDeclaration","src":"8210:34:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8237:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8224:12:20"},"nodeType":"YulFunctionCall","src":"8224:20:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8214:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8253:88:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8314:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8322:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8310:3:20"},"nodeType":"YulFunctionCall","src":"8310:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"8329:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"8337:3:20"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8262:47:20"},"nodeType":"YulFunctionCall","src":"8262:79:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8253:5:20"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8047:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"8055:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8063:5:20","type":""}],"src":"8007:340:20"},{"body":{"nodeType":"YulBlock","src":"8429:433:20","statements":[{"body":{"nodeType":"YulBlock","src":"8475:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8477:77:20"},"nodeType":"YulFunctionCall","src":"8477:79:20"},"nodeType":"YulExpressionStatement","src":"8477:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8450:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"8459:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8446:3:20"},"nodeType":"YulFunctionCall","src":"8446:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"8471:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8442:3:20"},"nodeType":"YulFunctionCall","src":"8442:32:20"},"nodeType":"YulIf","src":"8439:119:20"},{"nodeType":"YulBlock","src":"8568:287:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8583:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8614:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8625:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8610:3:20"},"nodeType":"YulFunctionCall","src":"8610:17:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8597:12:20"},"nodeType":"YulFunctionCall","src":"8597:31:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8587:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"8675:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8677:77:20"},"nodeType":"YulFunctionCall","src":"8677:79:20"},"nodeType":"YulExpressionStatement","src":"8677:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8647:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8655:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8644:2:20"},"nodeType":"YulFunctionCall","src":"8644:30:20"},"nodeType":"YulIf","src":"8641:117:20"},{"nodeType":"YulAssignment","src":"8772:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8817:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"8828:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8813:3:20"},"nodeType":"YulFunctionCall","src":"8813:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8837:7:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8782:30:20"},"nodeType":"YulFunctionCall","src":"8782:63:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8772:6:20"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8399:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8410:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8422:6:20","type":""}],"src":"8353:509:20"},{"body":{"nodeType":"YulBlock","src":"8934:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"8980:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8982:77:20"},"nodeType":"YulFunctionCall","src":"8982:79:20"},"nodeType":"YulExpressionStatement","src":"8982:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8955:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"8964:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8951:3:20"},"nodeType":"YulFunctionCall","src":"8951:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"8976:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8947:3:20"},"nodeType":"YulFunctionCall","src":"8947:32:20"},"nodeType":"YulIf","src":"8944:119:20"},{"nodeType":"YulBlock","src":"9073:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9088:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"9102:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9092:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9117:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9152:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"9163:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9148:3:20"},"nodeType":"YulFunctionCall","src":"9148:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9172:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9127:20:20"},"nodeType":"YulFunctionCall","src":"9127:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9117:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8904:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8915:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8927:6:20","type":""}],"src":"8868:329:20"},{"body":{"nodeType":"YulBlock","src":"9268:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9285:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9308:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9290:17:20"},"nodeType":"YulFunctionCall","src":"9290:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9278:6:20"},"nodeType":"YulFunctionCall","src":"9278:37:20"},"nodeType":"YulExpressionStatement","src":"9278:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9256:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9263:3:20","type":""}],"src":"9203:118:20"},{"body":{"nodeType":"YulBlock","src":"9425:124:20","statements":[{"nodeType":"YulAssignment","src":"9435:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9447:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9458:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9443:3:20"},"nodeType":"YulFunctionCall","src":"9443:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9435:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9515:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9528:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9539:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9524:3:20"},"nodeType":"YulFunctionCall","src":"9524:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9471:43:20"},"nodeType":"YulFunctionCall","src":"9471:71:20"},"nodeType":"YulExpressionStatement","src":"9471:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9397:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9409:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9420:4:20","type":""}],"src":"9327:222:20"},{"body":{"nodeType":"YulBlock","src":"9595:76:20","statements":[{"body":{"nodeType":"YulBlock","src":"9649:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9658:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9661:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9651:6:20"},"nodeType":"YulFunctionCall","src":"9651:12:20"},"nodeType":"YulExpressionStatement","src":"9651:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9618:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9640:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9625:14:20"},"nodeType":"YulFunctionCall","src":"9625:21:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9615:2:20"},"nodeType":"YulFunctionCall","src":"9615:32:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9608:6:20"},"nodeType":"YulFunctionCall","src":"9608:40:20"},"nodeType":"YulIf","src":"9605:60:20"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9588:5:20","type":""}],"src":"9555:116:20"},{"body":{"nodeType":"YulBlock","src":"9726:84:20","statements":[{"nodeType":"YulAssignment","src":"9736:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9758:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9745:12:20"},"nodeType":"YulFunctionCall","src":"9745:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9736:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9798:5:20"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"9774:23:20"},"nodeType":"YulFunctionCall","src":"9774:30:20"},"nodeType":"YulExpressionStatement","src":"9774:30:20"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9704:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"9712:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9720:5:20","type":""}],"src":"9677:133:20"},{"body":{"nodeType":"YulBlock","src":"9896:388:20","statements":[{"body":{"nodeType":"YulBlock","src":"9942:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9944:77:20"},"nodeType":"YulFunctionCall","src":"9944:79:20"},"nodeType":"YulExpressionStatement","src":"9944:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9917:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"9926:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9913:3:20"},"nodeType":"YulFunctionCall","src":"9913:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"9938:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9909:3:20"},"nodeType":"YulFunctionCall","src":"9909:32:20"},"nodeType":"YulIf","src":"9906:119:20"},{"nodeType":"YulBlock","src":"10035:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10050:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"10064:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10054:6:20","type":""}]},{"nodeType":"YulAssignment","src":"10079:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10114:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"10125:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10110:3:20"},"nodeType":"YulFunctionCall","src":"10110:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10134:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10089:20:20"},"nodeType":"YulFunctionCall","src":"10089:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10079:6:20"}]}]},{"nodeType":"YulBlock","src":"10162:115:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10177:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"10191:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10181:6:20","type":""}]},{"nodeType":"YulAssignment","src":"10207:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10239:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"10250:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10235:3:20"},"nodeType":"YulFunctionCall","src":"10235:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10259:7:20"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"10217:17:20"},"nodeType":"YulFunctionCall","src":"10217:50:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10207:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9858:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9869:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9881:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9889:6:20","type":""}],"src":"9816:468:20"},{"body":{"nodeType":"YulBlock","src":"10356:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"10461:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10463:16:20"},"nodeType":"YulFunctionCall","src":"10463:18:20"},"nodeType":"YulExpressionStatement","src":"10463:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10433:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10441:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10430:2:20"},"nodeType":"YulFunctionCall","src":"10430:30:20"},"nodeType":"YulIf","src":"10427:56:20"},{"nodeType":"YulAssignment","src":"10493:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10523:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10501:21:20"},"nodeType":"YulFunctionCall","src":"10501:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10493:4:20"}]},{"nodeType":"YulAssignment","src":"10567:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10579:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"10585:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10575:3:20"},"nodeType":"YulFunctionCall","src":"10575:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10567:4:20"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10340:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10351:4:20","type":""}],"src":"10290:307:20"},{"body":{"nodeType":"YulBlock","src":"10686:327:20","statements":[{"nodeType":"YulAssignment","src":"10696:74:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10762:6:20"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10721:40:20"},"nodeType":"YulFunctionCall","src":"10721:48:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10705:15:20"},"nodeType":"YulFunctionCall","src":"10705:65:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10696:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10786:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"10793:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10779:6:20"},"nodeType":"YulFunctionCall","src":"10779:21:20"},"nodeType":"YulExpressionStatement","src":"10779:21:20"},{"nodeType":"YulVariableDeclaration","src":"10809:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10824:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"10831:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10820:3:20"},"nodeType":"YulFunctionCall","src":"10820:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"10813:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"10874:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"10876:77:20"},"nodeType":"YulFunctionCall","src":"10876:79:20"},"nodeType":"YulExpressionStatement","src":"10876:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10855:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"10860:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10851:3:20"},"nodeType":"YulFunctionCall","src":"10851:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"10869:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10848:2:20"},"nodeType":"YulFunctionCall","src":"10848:25:20"},"nodeType":"YulIf","src":"10845:112:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10990:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"10995:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"11000:6:20"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"10966:23:20"},"nodeType":"YulFunctionCall","src":"10966:41:20"},"nodeType":"YulExpressionStatement","src":"10966:41:20"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10659:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"10664:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"10672:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10680:5:20","type":""}],"src":"10603:410:20"},{"body":{"nodeType":"YulBlock","src":"11093:277:20","statements":[{"body":{"nodeType":"YulBlock","src":"11142:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11144:77:20"},"nodeType":"YulFunctionCall","src":"11144:79:20"},"nodeType":"YulExpressionStatement","src":"11144:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11121:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"11129:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11117:3:20"},"nodeType":"YulFunctionCall","src":"11117:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"11136:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11113:3:20"},"nodeType":"YulFunctionCall","src":"11113:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11106:6:20"},"nodeType":"YulFunctionCall","src":"11106:35:20"},"nodeType":"YulIf","src":"11103:122:20"},{"nodeType":"YulVariableDeclaration","src":"11234:34:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11261:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11248:12:20"},"nodeType":"YulFunctionCall","src":"11248:20:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11238:6:20","type":""}]},{"nodeType":"YulAssignment","src":"11277:87:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11337:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"11345:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11333:3:20"},"nodeType":"YulFunctionCall","src":"11333:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"11352:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"11360:3:20"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11286:46:20"},"nodeType":"YulFunctionCall","src":"11286:78:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11277:5:20"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11071:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"11079:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11087:5:20","type":""}],"src":"11032:338:20"},{"body":{"nodeType":"YulBlock","src":"11502:817:20","statements":[{"body":{"nodeType":"YulBlock","src":"11549:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11551:77:20"},"nodeType":"YulFunctionCall","src":"11551:79:20"},"nodeType":"YulExpressionStatement","src":"11551:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11523:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"11532:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11519:3:20"},"nodeType":"YulFunctionCall","src":"11519:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"11544:3:20","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11515:3:20"},"nodeType":"YulFunctionCall","src":"11515:33:20"},"nodeType":"YulIf","src":"11512:120:20"},{"nodeType":"YulBlock","src":"11642:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11657:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11671:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11661:6:20","type":""}]},{"nodeType":"YulAssignment","src":"11686:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11721:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"11732:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11717:3:20"},"nodeType":"YulFunctionCall","src":"11717:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11741:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11696:20:20"},"nodeType":"YulFunctionCall","src":"11696:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11686:6:20"}]}]},{"nodeType":"YulBlock","src":"11769:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11784:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11798:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11788:6:20","type":""}]},{"nodeType":"YulAssignment","src":"11814:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11849:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"11860:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11845:3:20"},"nodeType":"YulFunctionCall","src":"11845:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11869:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11824:20:20"},"nodeType":"YulFunctionCall","src":"11824:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11814:6:20"}]}]},{"nodeType":"YulBlock","src":"11897:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11912:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11926:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11916:6:20","type":""}]},{"nodeType":"YulAssignment","src":"11942:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11977:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"11988:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11973:3:20"},"nodeType":"YulFunctionCall","src":"11973:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11997:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11952:20:20"},"nodeType":"YulFunctionCall","src":"11952:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11942:6:20"}]}]},{"nodeType":"YulBlock","src":"12025:287:20","statements":[{"nodeType":"YulVariableDeclaration","src":"12040:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12071:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12082:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12067:3:20"},"nodeType":"YulFunctionCall","src":"12067:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12054:12:20"},"nodeType":"YulFunctionCall","src":"12054:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12044:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"12133:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12135:77:20"},"nodeType":"YulFunctionCall","src":"12135:79:20"},"nodeType":"YulExpressionStatement","src":"12135:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12105:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"12113:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12102:2:20"},"nodeType":"YulFunctionCall","src":"12102:30:20"},"nodeType":"YulIf","src":"12099:117:20"},{"nodeType":"YulAssignment","src":"12230:72:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12274:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"12285:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12270:3:20"},"nodeType":"YulFunctionCall","src":"12270:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12294:7:20"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12240:29:20"},"nodeType":"YulFunctionCall","src":"12240:62:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12230:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11448:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11459:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11471:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11479:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11487:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11495:6:20","type":""}],"src":"11376:943:20"},{"body":{"nodeType":"YulBlock","src":"12388:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12405:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12427:5:20"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"12410:16:20"},"nodeType":"YulFunctionCall","src":"12410:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12398:6:20"},"nodeType":"YulFunctionCall","src":"12398:36:20"},"nodeType":"YulExpressionStatement","src":"12398:36:20"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12376:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12383:3:20","type":""}],"src":"12325:115:20"},{"body":{"nodeType":"YulBlock","src":"12542:122:20","statements":[{"nodeType":"YulAssignment","src":"12552:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12564:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12575:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12560:3:20"},"nodeType":"YulFunctionCall","src":"12560:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12552:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12630:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12643:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12654:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12639:3:20"},"nodeType":"YulFunctionCall","src":"12639:17:20"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"12588:41:20"},"nodeType":"YulFunctionCall","src":"12588:69:20"},"nodeType":"YulExpressionStatement","src":"12588:69:20"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12514:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12526:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12537:4:20","type":""}],"src":"12446:218:20"},{"body":{"nodeType":"YulBlock","src":"12753:391:20","statements":[{"body":{"nodeType":"YulBlock","src":"12799:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12801:77:20"},"nodeType":"YulFunctionCall","src":"12801:79:20"},"nodeType":"YulExpressionStatement","src":"12801:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12774:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"12783:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12770:3:20"},"nodeType":"YulFunctionCall","src":"12770:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"12795:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12766:3:20"},"nodeType":"YulFunctionCall","src":"12766:32:20"},"nodeType":"YulIf","src":"12763:119:20"},{"nodeType":"YulBlock","src":"12892:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"12907:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"12921:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12911:6:20","type":""}]},{"nodeType":"YulAssignment","src":"12936:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12971:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"12982:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12967:3:20"},"nodeType":"YulFunctionCall","src":"12967:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12991:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12946:20:20"},"nodeType":"YulFunctionCall","src":"12946:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12936:6:20"}]}]},{"nodeType":"YulBlock","src":"13019:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"13034:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"13048:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13038:6:20","type":""}]},{"nodeType":"YulAssignment","src":"13064:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13099:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"13110:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13095:3:20"},"nodeType":"YulFunctionCall","src":"13095:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13119:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13074:20:20"},"nodeType":"YulFunctionCall","src":"13074:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13064:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12715:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12726:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12738:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12746:6:20","type":""}],"src":"12670:474:20"},{"body":{"nodeType":"YulBlock","src":"13178:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13195:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13198:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13188:6:20"},"nodeType":"YulFunctionCall","src":"13188:88:20"},"nodeType":"YulExpressionStatement","src":"13188:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13292:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13295:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13285:6:20"},"nodeType":"YulFunctionCall","src":"13285:15:20"},"nodeType":"YulExpressionStatement","src":"13285:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13316:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13319:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13309:6:20"},"nodeType":"YulFunctionCall","src":"13309:15:20"},"nodeType":"YulExpressionStatement","src":"13309:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"13150:180:20"},{"body":{"nodeType":"YulBlock","src":"13387:269:20","statements":[{"nodeType":"YulAssignment","src":"13397:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13411:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"13417:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13407:3:20"},"nodeType":"YulFunctionCall","src":"13407:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13397:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"13428:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13458:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"13464:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13454:3:20"},"nodeType":"YulFunctionCall","src":"13454:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"13432:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"13505:51:20","statements":[{"nodeType":"YulAssignment","src":"13519:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13533:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13541:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13529:3:20"},"nodeType":"YulFunctionCall","src":"13529:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13519:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13485:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13478:6:20"},"nodeType":"YulFunctionCall","src":"13478:26:20"},"nodeType":"YulIf","src":"13475:81:20"},{"body":{"nodeType":"YulBlock","src":"13608:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"13622:16:20"},"nodeType":"YulFunctionCall","src":"13622:18:20"},"nodeType":"YulExpressionStatement","src":"13622:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13572:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13595:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13603:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13592:2:20"},"nodeType":"YulFunctionCall","src":"13592:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13569:2:20"},"nodeType":"YulFunctionCall","src":"13569:38:20"},"nodeType":"YulIf","src":"13566:84:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13371:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13380:6:20","type":""}],"src":"13336:320:20"},{"body":{"nodeType":"YulBlock","src":"13768:114:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13790:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13798:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13786:3:20"},"nodeType":"YulFunctionCall","src":"13786:14:20"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"13802:34:20","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13779:6:20"},"nodeType":"YulFunctionCall","src":"13779:58:20"},"nodeType":"YulExpressionStatement","src":"13779:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13858:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13866:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13854:3:20"},"nodeType":"YulFunctionCall","src":"13854:15:20"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"13871:3:20","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13847:6:20"},"nodeType":"YulFunctionCall","src":"13847:28:20"},"nodeType":"YulExpressionStatement","src":"13847:28:20"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13760:6:20","type":""}],"src":"13662:220:20"},{"body":{"nodeType":"YulBlock","src":"14034:220:20","statements":[{"nodeType":"YulAssignment","src":"14044:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14110:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14115:2:20","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14051:58:20"},"nodeType":"YulFunctionCall","src":"14051:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14044:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14216:3:20"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"14127:88:20"},"nodeType":"YulFunctionCall","src":"14127:93:20"},"nodeType":"YulExpressionStatement","src":"14127:93:20"},{"nodeType":"YulAssignment","src":"14229:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14240:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"14245:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14236:3:20"},"nodeType":"YulFunctionCall","src":"14236:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14229:3:20"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14022:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14030:3:20","type":""}],"src":"13888:366:20"},{"body":{"nodeType":"YulBlock","src":"14431:248:20","statements":[{"nodeType":"YulAssignment","src":"14441:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14453:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14464:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14449:3:20"},"nodeType":"YulFunctionCall","src":"14449:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14441:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14488:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14499:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14484:3:20"},"nodeType":"YulFunctionCall","src":"14484:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14507:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"14513:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14503:3:20"},"nodeType":"YulFunctionCall","src":"14503:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14477:6:20"},"nodeType":"YulFunctionCall","src":"14477:47:20"},"nodeType":"YulExpressionStatement","src":"14477:47:20"},{"nodeType":"YulAssignment","src":"14533:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14667:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14541:124:20"},"nodeType":"YulFunctionCall","src":"14541:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14533:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14411:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14426:4:20","type":""}],"src":"14260:419:20"},{"body":{"nodeType":"YulBlock","src":"14791:143:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14813:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"14821:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14809:3:20"},"nodeType":"YulFunctionCall","src":"14809:14:20"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"14825:34:20","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14802:6:20"},"nodeType":"YulFunctionCall","src":"14802:58:20"},"nodeType":"YulExpressionStatement","src":"14802:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14881:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"14889:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14877:3:20"},"nodeType":"YulFunctionCall","src":"14877:15:20"},{"hexValue":"6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"14894:32:20","type":"","value":"ken owner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14870:6:20"},"nodeType":"YulFunctionCall","src":"14870:57:20"},"nodeType":"YulExpressionStatement","src":"14870:57:20"}]},"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14783:6:20","type":""}],"src":"14685:249:20"},{"body":{"nodeType":"YulBlock","src":"15086:220:20","statements":[{"nodeType":"YulAssignment","src":"15096:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15162:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15167:2:20","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15103:58:20"},"nodeType":"YulFunctionCall","src":"15103:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15096:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15268:3:20"}],"functionName":{"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulIdentifier","src":"15179:88:20"},"nodeType":"YulFunctionCall","src":"15179:93:20"},"nodeType":"YulExpressionStatement","src":"15179:93:20"},{"nodeType":"YulAssignment","src":"15281:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15292:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15297:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15288:3:20"},"nodeType":"YulFunctionCall","src":"15288:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15281:3:20"}]}]},"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15074:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15082:3:20","type":""}],"src":"14940:366:20"},{"body":{"nodeType":"YulBlock","src":"15483:248:20","statements":[{"nodeType":"YulAssignment","src":"15493:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15505:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15516:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15501:3:20"},"nodeType":"YulFunctionCall","src":"15501:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15493:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15540:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15551:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15536:3:20"},"nodeType":"YulFunctionCall","src":"15536:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15559:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"15565:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15555:3:20"},"nodeType":"YulFunctionCall","src":"15555:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15529:6:20"},"nodeType":"YulFunctionCall","src":"15529:47:20"},"nodeType":"YulExpressionStatement","src":"15529:47:20"},{"nodeType":"YulAssignment","src":"15585:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15719:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15593:124:20"},"nodeType":"YulFunctionCall","src":"15593:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15585:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15463:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15478:4:20","type":""}],"src":"15312:419:20"},{"body":{"nodeType":"YulBlock","src":"15765:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15782:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15785:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15775:6:20"},"nodeType":"YulFunctionCall","src":"15775:88:20"},"nodeType":"YulExpressionStatement","src":"15775:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15879:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15882:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15872:6:20"},"nodeType":"YulFunctionCall","src":"15872:15:20"},"nodeType":"YulExpressionStatement","src":"15872:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15903:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15906:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15896:6:20"},"nodeType":"YulFunctionCall","src":"15896:15:20"},"nodeType":"YulExpressionStatement","src":"15896:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15737:180:20"},{"body":{"nodeType":"YulBlock","src":"15967:261:20","statements":[{"nodeType":"YulAssignment","src":"15977:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16000:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15982:17:20"},"nodeType":"YulFunctionCall","src":"15982:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15977:1:20"}]},{"nodeType":"YulAssignment","src":"16011:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16034:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16016:17:20"},"nodeType":"YulFunctionCall","src":"16016:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16011:1:20"}]},{"body":{"nodeType":"YulBlock","src":"16174:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16176:16:20"},"nodeType":"YulFunctionCall","src":"16176:18:20"},"nodeType":"YulExpressionStatement","src":"16176:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16095:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16102:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"16170:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16098:3:20"},"nodeType":"YulFunctionCall","src":"16098:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16092:2:20"},"nodeType":"YulFunctionCall","src":"16092:81:20"},"nodeType":"YulIf","src":"16089:107:20"},{"nodeType":"YulAssignment","src":"16206:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16217:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"16220:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16213:3:20"},"nodeType":"YulFunctionCall","src":"16213:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16206:3:20"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15954:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"15957:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"15963:3:20","type":""}],"src":"15923:305:20"},{"body":{"nodeType":"YulBlock","src":"16340:127:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16362:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"16370:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16358:3:20"},"nodeType":"YulFunctionCall","src":"16358:14:20"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"16374:34:20","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16351:6:20"},"nodeType":"YulFunctionCall","src":"16351:58:20"},"nodeType":"YulExpressionStatement","src":"16351:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16430:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"16438:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16426:3:20"},"nodeType":"YulFunctionCall","src":"16426:15:20"},{"hexValue":"72206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"16443:16:20","type":"","value":"r nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16419:6:20"},"nodeType":"YulFunctionCall","src":"16419:41:20"},"nodeType":"YulExpressionStatement","src":"16419:41:20"}]},"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16332:6:20","type":""}],"src":"16234:233:20"},{"body":{"nodeType":"YulBlock","src":"16619:220:20","statements":[{"nodeType":"YulAssignment","src":"16629:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16695:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16700:2:20","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16636:58:20"},"nodeType":"YulFunctionCall","src":"16636:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16629:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16801:3:20"}],"functionName":{"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulIdentifier","src":"16712:88:20"},"nodeType":"YulFunctionCall","src":"16712:93:20"},"nodeType":"YulExpressionStatement","src":"16712:93:20"},{"nodeType":"YulAssignment","src":"16814:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16825:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16830:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16821:3:20"},"nodeType":"YulFunctionCall","src":"16821:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16814:3:20"}]}]},"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16607:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16615:3:20","type":""}],"src":"16473:366:20"},{"body":{"nodeType":"YulBlock","src":"17016:248:20","statements":[{"nodeType":"YulAssignment","src":"17026:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17038:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17049:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17034:3:20"},"nodeType":"YulFunctionCall","src":"17034:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17026:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17073:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17084:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17069:3:20"},"nodeType":"YulFunctionCall","src":"17069:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17092:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"17098:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17088:3:20"},"nodeType":"YulFunctionCall","src":"17088:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17062:6:20"},"nodeType":"YulFunctionCall","src":"17062:47:20"},"nodeType":"YulExpressionStatement","src":"17062:47:20"},{"nodeType":"YulAssignment","src":"17118:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17252:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17126:124:20"},"nodeType":"YulFunctionCall","src":"17126:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17118:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16996:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17011:4:20","type":""}],"src":"16845:419:20"},{"body":{"nodeType":"YulBlock","src":"17384:34:20","statements":[{"nodeType":"YulAssignment","src":"17394:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"17409:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17394:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17356:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"17361:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17372:11:20","type":""}],"src":"17270:148:20"},{"body":{"nodeType":"YulBlock","src":"17534:267:20","statements":[{"nodeType":"YulVariableDeclaration","src":"17544:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17591:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17558:32:20"},"nodeType":"YulFunctionCall","src":"17558:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17548:6:20","type":""}]},{"nodeType":"YulAssignment","src":"17606:96:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17690:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"17695:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17613:76:20"},"nodeType":"YulFunctionCall","src":"17613:89:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17606:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17737:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"17744:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17733:3:20"},"nodeType":"YulFunctionCall","src":"17733:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"17751:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"17756:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"17711:21:20"},"nodeType":"YulFunctionCall","src":"17711:52:20"},"nodeType":"YulExpressionStatement","src":"17711:52:20"},{"nodeType":"YulAssignment","src":"17772:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17783:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"17788:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17779:3:20"},"nodeType":"YulFunctionCall","src":"17779:16:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17772:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17515:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17522:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17530:3:20","type":""}],"src":"17424:377:20"},{"body":{"nodeType":"YulBlock","src":"17943:139:20","statements":[{"nodeType":"YulAssignment","src":"17954:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18043:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"18052:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17961:81:20"},"nodeType":"YulFunctionCall","src":"17961:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17954:3:20"}]},{"nodeType":"YulAssignment","src":"18066:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"18073:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18066:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17922:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17928:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17939:3:20","type":""}],"src":"17807:275:20"},{"body":{"nodeType":"YulBlock","src":"18272:251:20","statements":[{"nodeType":"YulAssignment","src":"18283:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18372:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"18381:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18290:81:20"},"nodeType":"YulFunctionCall","src":"18290:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18283:3:20"}]},{"nodeType":"YulAssignment","src":"18395:102:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18484:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"18493:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18402:81:20"},"nodeType":"YulFunctionCall","src":"18402:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18395:3:20"}]},{"nodeType":"YulAssignment","src":"18507:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"18514:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18507:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18243:3:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18249:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18257:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18268:3:20","type":""}],"src":"18088:435:20"},{"body":{"nodeType":"YulBlock","src":"18635:68:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18657:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"18665:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18653:3:20"},"nodeType":"YulFunctionCall","src":"18653:14:20"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"18669:26:20","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18646:6:20"},"nodeType":"YulFunctionCall","src":"18646:50:20"},"nodeType":"YulExpressionStatement","src":"18646:50:20"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18627:6:20","type":""}],"src":"18529:174:20"},{"body":{"nodeType":"YulBlock","src":"18855:220:20","statements":[{"nodeType":"YulAssignment","src":"18865:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18931:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18936:2:20","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18872:58:20"},"nodeType":"YulFunctionCall","src":"18872:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18865:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19037:3:20"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"18948:88:20"},"nodeType":"YulFunctionCall","src":"18948:93:20"},"nodeType":"YulExpressionStatement","src":"18948:93:20"},{"nodeType":"YulAssignment","src":"19050:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19061:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19066:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19057:3:20"},"nodeType":"YulFunctionCall","src":"19057:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19050:3:20"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18843:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18851:3:20","type":""}],"src":"18709:366:20"},{"body":{"nodeType":"YulBlock","src":"19252:248:20","statements":[{"nodeType":"YulAssignment","src":"19262:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19274:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"19285:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19270:3:20"},"nodeType":"YulFunctionCall","src":"19270:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19262:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19309:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"19320:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19305:3:20"},"nodeType":"YulFunctionCall","src":"19305:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19328:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"19334:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19324:3:20"},"nodeType":"YulFunctionCall","src":"19324:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19298:6:20"},"nodeType":"YulFunctionCall","src":"19298:47:20"},"nodeType":"YulExpressionStatement","src":"19298:47:20"},{"nodeType":"YulAssignment","src":"19354:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19488:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19362:124:20"},"nodeType":"YulFunctionCall","src":"19362:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19354:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19232:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19247:4:20","type":""}],"src":"19081:419:20"},{"body":{"nodeType":"YulBlock","src":"19612:122:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19634:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"19642:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19630:3:20"},"nodeType":"YulFunctionCall","src":"19630:14:20"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"19646:34:20","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19623:6:20"},"nodeType":"YulFunctionCall","src":"19623:58:20"},"nodeType":"YulExpressionStatement","src":"19623:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19702:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"19710:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19698:3:20"},"nodeType":"YulFunctionCall","src":"19698:15:20"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"19715:11:20","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19691:6:20"},"nodeType":"YulFunctionCall","src":"19691:36:20"},"nodeType":"YulExpressionStatement","src":"19691:36:20"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19604:6:20","type":""}],"src":"19506:228:20"},{"body":{"nodeType":"YulBlock","src":"19886:220:20","statements":[{"nodeType":"YulAssignment","src":"19896:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19962:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19967:2:20","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19903:58:20"},"nodeType":"YulFunctionCall","src":"19903:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19896:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20068:3:20"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"19979:88:20"},"nodeType":"YulFunctionCall","src":"19979:93:20"},"nodeType":"YulExpressionStatement","src":"19979:93:20"},{"nodeType":"YulAssignment","src":"20081:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20092:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"20097:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20088:3:20"},"nodeType":"YulFunctionCall","src":"20088:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20081:3:20"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19874:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19882:3:20","type":""}],"src":"19740:366:20"},{"body":{"nodeType":"YulBlock","src":"20283:248:20","statements":[{"nodeType":"YulAssignment","src":"20293:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20305:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20316:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20301:3:20"},"nodeType":"YulFunctionCall","src":"20301:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20293:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20340:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20351:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20336:3:20"},"nodeType":"YulFunctionCall","src":"20336:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20359:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"20365:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20355:3:20"},"nodeType":"YulFunctionCall","src":"20355:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20329:6:20"},"nodeType":"YulFunctionCall","src":"20329:47:20"},"nodeType":"YulExpressionStatement","src":"20329:47:20"},{"nodeType":"YulAssignment","src":"20385:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20519:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20393:124:20"},"nodeType":"YulFunctionCall","src":"20393:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20385:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20263:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20278:4:20","type":""}],"src":"20112:419:20"},{"body":{"nodeType":"YulBlock","src":"20643:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20665:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"20673:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20661:3:20"},"nodeType":"YulFunctionCall","src":"20661:14:20"},{"hexValue":"55524920517565727920666f72206e6f6e206578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"20677:34:20","type":"","value":"URI Query for non existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20654:6:20"},"nodeType":"YulFunctionCall","src":"20654:58:20"},"nodeType":"YulExpressionStatement","src":"20654:58:20"}]},"name":"store_literal_in_memory_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20635:6:20","type":""}],"src":"20537:182:20"},{"body":{"nodeType":"YulBlock","src":"20871:220:20","statements":[{"nodeType":"YulAssignment","src":"20881:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20947:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"20952:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20888:58:20"},"nodeType":"YulFunctionCall","src":"20888:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20881:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21053:3:20"}],"functionName":{"name":"store_literal_in_memory_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf","nodeType":"YulIdentifier","src":"20964:88:20"},"nodeType":"YulFunctionCall","src":"20964:93:20"},"nodeType":"YulExpressionStatement","src":"20964:93:20"},{"nodeType":"YulAssignment","src":"21066:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21077:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"21082:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21073:3:20"},"nodeType":"YulFunctionCall","src":"21073:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21066:3:20"}]}]},"name":"abi_encode_t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20859:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20867:3:20","type":""}],"src":"20725:366:20"},{"body":{"nodeType":"YulBlock","src":"21268:248:20","statements":[{"nodeType":"YulAssignment","src":"21278:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21290:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21301:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21286:3:20"},"nodeType":"YulFunctionCall","src":"21286:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21278:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21325:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21336:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21321:3:20"},"nodeType":"YulFunctionCall","src":"21321:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21344:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"21350:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21340:3:20"},"nodeType":"YulFunctionCall","src":"21340:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21314:6:20"},"nodeType":"YulFunctionCall","src":"21314:47:20"},"nodeType":"YulExpressionStatement","src":"21314:47:20"},{"nodeType":"YulAssignment","src":"21370:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21504:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21378:124:20"},"nodeType":"YulFunctionCall","src":"21378:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21370:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21248:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21263:4:20","type":""}],"src":"21097:419:20"},{"body":{"nodeType":"YulBlock","src":"21566:61:20","statements":[{"nodeType":"YulAssignment","src":"21576:45:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21591:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"21598:22:20","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21587:3:20"},"nodeType":"YulFunctionCall","src":"21587:34:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21576:7:20"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21548:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21558:7:20","type":""}],"src":"21522:105:20"},{"body":{"nodeType":"YulBlock","src":"21675:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"21731:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21740:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21743:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21733:6:20"},"nodeType":"YulFunctionCall","src":"21733:12:20"},"nodeType":"YulExpressionStatement","src":"21733:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21698:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21722:5:20"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"21705:16:20"},"nodeType":"YulFunctionCall","src":"21705:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21695:2:20"},"nodeType":"YulFunctionCall","src":"21695:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21688:6:20"},"nodeType":"YulFunctionCall","src":"21688:42:20"},"nodeType":"YulIf","src":"21685:62:20"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21668:5:20","type":""}],"src":"21633:120:20"},{"body":{"nodeType":"YulBlock","src":"21821:79:20","statements":[{"nodeType":"YulAssignment","src":"21831:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21846:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21840:5:20"},"nodeType":"YulFunctionCall","src":"21840:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21831:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21888:5:20"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"21862:25:20"},"nodeType":"YulFunctionCall","src":"21862:32:20"},"nodeType":"YulExpressionStatement","src":"21862:32:20"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21799:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"21807:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21815:5:20","type":""}],"src":"21759:141:20"},{"body":{"nodeType":"YulBlock","src":"21968:79:20","statements":[{"nodeType":"YulAssignment","src":"21978:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21993:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21987:5:20"},"nodeType":"YulFunctionCall","src":"21987:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21978:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22035:5:20"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"22009:25:20"},"nodeType":"YulFunctionCall","src":"22009:32:20"},"nodeType":"YulExpressionStatement","src":"22009:32:20"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21946:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"21954:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21962:5:20","type":""}],"src":"21906:141:20"},{"body":{"nodeType":"YulBlock","src":"22116:80:20","statements":[{"nodeType":"YulAssignment","src":"22126:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22141:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22135:5:20"},"nodeType":"YulFunctionCall","src":"22135:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22126:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22184:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"22157:26:20"},"nodeType":"YulFunctionCall","src":"22157:33:20"},"nodeType":"YulExpressionStatement","src":"22157:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22094:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"22102:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22110:5:20","type":""}],"src":"22053:143:20"},{"body":{"nodeType":"YulBlock","src":"22344:829:20","statements":[{"body":{"nodeType":"YulBlock","src":"22391:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22393:77:20"},"nodeType":"YulFunctionCall","src":"22393:79:20"},"nodeType":"YulExpressionStatement","src":"22393:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22365:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"22374:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22361:3:20"},"nodeType":"YulFunctionCall","src":"22361:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"22386:3:20","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22357:3:20"},"nodeType":"YulFunctionCall","src":"22357:33:20"},"nodeType":"YulIf","src":"22354:120:20"},{"nodeType":"YulBlock","src":"22484:127:20","statements":[{"nodeType":"YulVariableDeclaration","src":"22499:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"22513:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22503:6:20","type":""}]},{"nodeType":"YulAssignment","src":"22528:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22573:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"22584:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22569:3:20"},"nodeType":"YulFunctionCall","src":"22569:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22593:7:20"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"22538:30:20"},"nodeType":"YulFunctionCall","src":"22538:63:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22528:6:20"}]}]},{"nodeType":"YulBlock","src":"22621:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"22636:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"22650:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22640:6:20","type":""}]},{"nodeType":"YulAssignment","src":"22666:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22711:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"22722:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22707:3:20"},"nodeType":"YulFunctionCall","src":"22707:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22731:7:20"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"22676:30:20"},"nodeType":"YulFunctionCall","src":"22676:63:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"22666:6:20"}]}]},{"nodeType":"YulBlock","src":"22759:129:20","statements":[{"nodeType":"YulVariableDeclaration","src":"22774:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"22788:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22778:6:20","type":""}]},{"nodeType":"YulAssignment","src":"22804:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22850:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"22861:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22846:3:20"},"nodeType":"YulFunctionCall","src":"22846:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22870:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"22814:31:20"},"nodeType":"YulFunctionCall","src":"22814:64:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"22804:6:20"}]}]},{"nodeType":"YulBlock","src":"22898:129:20","statements":[{"nodeType":"YulVariableDeclaration","src":"22913:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"22927:2:20","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22917:6:20","type":""}]},{"nodeType":"YulAssignment","src":"22943:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22989:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"23000:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22985:3:20"},"nodeType":"YulFunctionCall","src":"22985:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23009:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"22953:31:20"},"nodeType":"YulFunctionCall","src":"22953:64:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"22943:6:20"}]}]},{"nodeType":"YulBlock","src":"23037:129:20","statements":[{"nodeType":"YulVariableDeclaration","src":"23052:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"23066:3:20","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23056:6:20","type":""}]},{"nodeType":"YulAssignment","src":"23083:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23128:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"23139:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23124:3:20"},"nodeType":"YulFunctionCall","src":"23124:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23148:7:20"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"23093:30:20"},"nodeType":"YulFunctionCall","src":"23093:63:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"23083:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22282:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22293:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22305:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22313:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22321:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22329:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22337:6:20","type":""}],"src":"22202:971:20"},{"body":{"nodeType":"YulBlock","src":"23285:108:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23307:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"23315:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23303:3:20"},"nodeType":"YulFunctionCall","src":"23303:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"23319:66:20","type":"","value":"0x7b226e616d653a22000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23296:6:20"},"nodeType":"YulFunctionCall","src":"23296:90:20"},"nodeType":"YulExpressionStatement","src":"23296:90:20"}]},"name":"store_literal_in_memory_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23277:6:20","type":""}],"src":"23179:214:20"},{"body":{"nodeType":"YulBlock","src":"23563:236:20","statements":[{"nodeType":"YulAssignment","src":"23573:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23657:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"23662:1:20","type":"","value":"8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23580:76:20"},"nodeType":"YulFunctionCall","src":"23580:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23573:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23762:3:20"}],"functionName":{"name":"store_literal_in_memory_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d","nodeType":"YulIdentifier","src":"23673:88:20"},"nodeType":"YulFunctionCall","src":"23673:93:20"},"nodeType":"YulExpressionStatement","src":"23673:93:20"},{"nodeType":"YulAssignment","src":"23775:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23786:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"23791:1:20","type":"","value":"8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23782:3:20"},"nodeType":"YulFunctionCall","src":"23782:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23775:3:20"}]}]},"name":"abi_encode_t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23551:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23559:3:20","type":""}],"src":"23399:400:20"},{"body":{"nodeType":"YulBlock","src":"23911:108:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23933:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"23941:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23929:3:20"},"nodeType":"YulFunctionCall","src":"23929:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"23945:66:20","type":"","value":"0x2200000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23922:6:20"},"nodeType":"YulFunctionCall","src":"23922:90:20"},"nodeType":"YulExpressionStatement","src":"23922:90:20"}]},"name":"store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23903:6:20","type":""}],"src":"23805:214:20"},{"body":{"nodeType":"YulBlock","src":"24189:236:20","statements":[{"nodeType":"YulAssignment","src":"24199:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24283:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"24288:1:20","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24206:76:20"},"nodeType":"YulFunctionCall","src":"24206:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24199:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24388:3:20"}],"functionName":{"name":"store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","nodeType":"YulIdentifier","src":"24299:88:20"},"nodeType":"YulFunctionCall","src":"24299:93:20"},"nodeType":"YulExpressionStatement","src":"24299:93:20"},{"nodeType":"YulAssignment","src":"24401:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24412:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"24417:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24408:3:20"},"nodeType":"YulFunctionCall","src":"24408:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24401:3:20"}]}]},"name":"abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24177:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24185:3:20","type":""}],"src":"24025:400:20"},{"body":{"nodeType":"YulBlock","src":"24537:278:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24559:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"24567:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24555:3:20"},"nodeType":"YulFunctionCall","src":"24555:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"24571:66:20","type":"","value":"0x226465736372697074696f6e223a22416e204e46542074686174206368616e67"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24548:6:20"},"nodeType":"YulFunctionCall","src":"24548:90:20"},"nodeType":"YulExpressionStatement","src":"24548:90:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24659:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"24667:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24655:3:20"},"nodeType":"YulFunctionCall","src":"24655:15:20"},{"hexValue":"6573206261736564206f6e20636861696e6c696e6b2070726963652046656564","kind":"string","nodeType":"YulLiteral","src":"24672:34:20","type":"","value":"es based on chainlink price Feed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24648:6:20"},"nodeType":"YulFunctionCall","src":"24648:59:20"},"nodeType":"YulExpressionStatement","src":"24648:59:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24728:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"24736:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24724:3:20"},"nodeType":"YulFunctionCall","src":"24724:15:20"},{"kind":"number","nodeType":"YulLiteral","src":"24741:66:20","type":"","value":"0x2121220000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24717:6:20"},"nodeType":"YulFunctionCall","src":"24717:91:20"},"nodeType":"YulExpressionStatement","src":"24717:91:20"}]},"name":"store_literal_in_memory_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24529:6:20","type":""}],"src":"24431:384:20"},{"body":{"nodeType":"YulBlock","src":"24985:238:20","statements":[{"nodeType":"YulAssignment","src":"24995:92:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25079:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"25084:2:20","type":"","value":"67"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25002:76:20"},"nodeType":"YulFunctionCall","src":"25002:85:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24995:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25185:3:20"}],"functionName":{"name":"store_literal_in_memory_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735","nodeType":"YulIdentifier","src":"25096:88:20"},"nodeType":"YulFunctionCall","src":"25096:93:20"},"nodeType":"YulExpressionStatement","src":"25096:93:20"},{"nodeType":"YulAssignment","src":"25198:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25209:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"25214:2:20","type":"","value":"67"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25205:3:20"},"nodeType":"YulFunctionCall","src":"25205:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25198:3:20"}]}]},"name":"abi_encode_t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24973:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24981:3:20","type":""}],"src":"24821:402:20"},{"body":{"nodeType":"YulBlock","src":"25335:209:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25357:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"25365:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25353:3:20"},"nodeType":"YulFunctionCall","src":"25353:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"25369:66:20","type":"","value":"0x2261747472696275746573223a5b7b2274726169745f74797065223a2022636f"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25346:6:20"},"nodeType":"YulFunctionCall","src":"25346:90:20"},"nodeType":"YulExpressionStatement","src":"25346:90:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25457:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"25465:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25453:3:20"},"nodeType":"YulFunctionCall","src":"25453:15:20"},{"kind":"number","nodeType":"YulLiteral","src":"25470:66:20","type":"","value":"0x6f6c6e657373222c3a76616c75653a3130307d5d2c22696d616765223a220000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25446:6:20"},"nodeType":"YulFunctionCall","src":"25446:91:20"},"nodeType":"YulExpressionStatement","src":"25446:91:20"}]},"name":"store_literal_in_memory_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25327:6:20","type":""}],"src":"25229:315:20"},{"body":{"nodeType":"YulBlock","src":"25714:238:20","statements":[{"nodeType":"YulAssignment","src":"25724:92:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25808:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"25813:2:20","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25731:76:20"},"nodeType":"YulFunctionCall","src":"25731:85:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25724:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25914:3:20"}],"functionName":{"name":"store_literal_in_memory_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24","nodeType":"YulIdentifier","src":"25825:88:20"},"nodeType":"YulFunctionCall","src":"25825:93:20"},"nodeType":"YulExpressionStatement","src":"25825:93:20"},{"nodeType":"YulAssignment","src":"25927:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25938:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"25943:2:20","type":"","value":"62"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25934:3:20"},"nodeType":"YulFunctionCall","src":"25934:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25927:3:20"}]}]},"name":"abi_encode_t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25702:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25710:3:20","type":""}],"src":"25550:402:20"},{"body":{"nodeType":"YulBlock","src":"26064:108:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26086:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"26094:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26082:3:20"},"nodeType":"YulFunctionCall","src":"26082:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"26098:66:20","type":"","value":"0x227d000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26075:6:20"},"nodeType":"YulFunctionCall","src":"26075:90:20"},"nodeType":"YulExpressionStatement","src":"26075:90:20"}]},"name":"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26056:6:20","type":""}],"src":"25958:214:20"},{"body":{"nodeType":"YulBlock","src":"26342:236:20","statements":[{"nodeType":"YulAssignment","src":"26352:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26436:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"26441:1:20","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26359:76:20"},"nodeType":"YulFunctionCall","src":"26359:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26352:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26541:3:20"}],"functionName":{"name":"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","nodeType":"YulIdentifier","src":"26452:88:20"},"nodeType":"YulFunctionCall","src":"26452:93:20"},"nodeType":"YulExpressionStatement","src":"26452:93:20"},{"nodeType":"YulAssignment","src":"26554:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26565:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"26570:1:20","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26561:3:20"},"nodeType":"YulFunctionCall","src":"26561:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26554:3:20"}]}]},"name":"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26330:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26338:3:20","type":""}],"src":"26178:400:20"},{"body":{"nodeType":"YulBlock","src":"27273:1076:20","statements":[{"nodeType":"YulAssignment","src":"27284:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27435:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27291:142:20"},"nodeType":"YulFunctionCall","src":"27291:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27284:3:20"}]},{"nodeType":"YulAssignment","src":"27449:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27538:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"27547:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27456:81:20"},"nodeType":"YulFunctionCall","src":"27456:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27449:3:20"}]},{"nodeType":"YulAssignment","src":"27561:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27712:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27568:142:20"},"nodeType":"YulFunctionCall","src":"27568:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27561:3:20"}]},{"nodeType":"YulAssignment","src":"27726:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27877:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27733:142:20"},"nodeType":"YulFunctionCall","src":"27733:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27726:3:20"}]},{"nodeType":"YulAssignment","src":"27891:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28042:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27898:142:20"},"nodeType":"YulFunctionCall","src":"27898:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27891:3:20"}]},{"nodeType":"YulAssignment","src":"28056:102:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28145:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"28154:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28063:81:20"},"nodeType":"YulFunctionCall","src":"28063:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28056:3:20"}]},{"nodeType":"YulAssignment","src":"28168:155:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28319:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28175:142:20"},"nodeType":"YulFunctionCall","src":"28175:148:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28168:3:20"}]},{"nodeType":"YulAssignment","src":"28333:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"28340:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28333:3:20"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d_t_string_memory_ptr_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735_t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27244:3:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27250:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27258:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27269:3:20","type":""}],"src":"26584:1765:20"},{"body":{"nodeType":"YulBlock","src":"28383:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28400:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28403:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28393:6:20"},"nodeType":"YulFunctionCall","src":"28393:88:20"},"nodeType":"YulExpressionStatement","src":"28393:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28497:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28500:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28490:6:20"},"nodeType":"YulFunctionCall","src":"28490:15:20"},"nodeType":"YulExpressionStatement","src":"28490:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28521:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28524:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28514:6:20"},"nodeType":"YulFunctionCall","src":"28514:15:20"},"nodeType":"YulExpressionStatement","src":"28514:15:20"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"28355:180:20"},{"body":{"nodeType":"YulBlock","src":"28583:143:20","statements":[{"nodeType":"YulAssignment","src":"28593:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28616:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28598:17:20"},"nodeType":"YulFunctionCall","src":"28598:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"28593:1:20"}]},{"nodeType":"YulAssignment","src":"28627:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28650:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28632:17:20"},"nodeType":"YulFunctionCall","src":"28632:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"28627:1:20"}]},{"body":{"nodeType":"YulBlock","src":"28674:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"28676:16:20"},"nodeType":"YulFunctionCall","src":"28676:18:20"},"nodeType":"YulExpressionStatement","src":"28676:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28671:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28664:6:20"},"nodeType":"YulFunctionCall","src":"28664:9:20"},"nodeType":"YulIf","src":"28661:35:20"},{"nodeType":"YulAssignment","src":"28706:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28715:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"28718:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28711:3:20"},"nodeType":"YulFunctionCall","src":"28711:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28706:1:20"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28572:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"28575:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"28581:1:20","type":""}],"src":"28541:185:20"},{"body":{"nodeType":"YulBlock","src":"28780:300:20","statements":[{"nodeType":"YulAssignment","src":"28790:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28813:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28795:17:20"},"nodeType":"YulFunctionCall","src":"28795:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"28790:1:20"}]},{"nodeType":"YulAssignment","src":"28824:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28847:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28829:17:20"},"nodeType":"YulFunctionCall","src":"28829:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"28824:1:20"}]},{"body":{"nodeType":"YulBlock","src":"29022:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29024:16:20"},"nodeType":"YulFunctionCall","src":"29024:18:20"},"nodeType":"YulExpressionStatement","src":"29024:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28934:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28927:6:20"},"nodeType":"YulFunctionCall","src":"28927:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28920:6:20"},"nodeType":"YulFunctionCall","src":"28920:17:20"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28942:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28949:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"29017:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28945:3:20"},"nodeType":"YulFunctionCall","src":"28945:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28939:2:20"},"nodeType":"YulFunctionCall","src":"28939:81:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28916:3:20"},"nodeType":"YulFunctionCall","src":"28916:105:20"},"nodeType":"YulIf","src":"28913:131:20"},{"nodeType":"YulAssignment","src":"29054:20:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29069:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"29072:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29065:3:20"},"nodeType":"YulFunctionCall","src":"29065:9:20"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"29054:7:20"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28763:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"28766:1:20","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"28772:7:20","type":""}],"src":"28732:348:20"},{"body":{"nodeType":"YulBlock","src":"29192:118:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29214:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"29222:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29210:3:20"},"nodeType":"YulFunctionCall","src":"29210:14:20"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"29226:34:20","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29203:6:20"},"nodeType":"YulFunctionCall","src":"29203:58:20"},"nodeType":"YulExpressionStatement","src":"29203:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29282:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"29290:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29278:3:20"},"nodeType":"YulFunctionCall","src":"29278:15:20"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"29295:7:20","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29271:6:20"},"nodeType":"YulFunctionCall","src":"29271:32:20"},"nodeType":"YulExpressionStatement","src":"29271:32:20"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29184:6:20","type":""}],"src":"29086:224:20"},{"body":{"nodeType":"YulBlock","src":"29462:220:20","statements":[{"nodeType":"YulAssignment","src":"29472:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29538:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"29543:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29479:58:20"},"nodeType":"YulFunctionCall","src":"29479:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29472:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29644:3:20"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"29555:88:20"},"nodeType":"YulFunctionCall","src":"29555:93:20"},"nodeType":"YulExpressionStatement","src":"29555:93:20"},{"nodeType":"YulAssignment","src":"29657:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29668:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"29673:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29664:3:20"},"nodeType":"YulFunctionCall","src":"29664:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29657:3:20"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29450:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29458:3:20","type":""}],"src":"29316:366:20"},{"body":{"nodeType":"YulBlock","src":"29859:248:20","statements":[{"nodeType":"YulAssignment","src":"29869:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29881:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29892:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29877:3:20"},"nodeType":"YulFunctionCall","src":"29877:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29869:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29916:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29927:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29912:3:20"},"nodeType":"YulFunctionCall","src":"29912:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29935:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"29941:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29931:3:20"},"nodeType":"YulFunctionCall","src":"29931:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29905:6:20"},"nodeType":"YulFunctionCall","src":"29905:47:20"},"nodeType":"YulExpressionStatement","src":"29905:47:20"},{"nodeType":"YulAssignment","src":"29961:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30095:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29969:124:20"},"nodeType":"YulFunctionCall","src":"29969:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29961:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29839:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29854:4:20","type":""}],"src":"29688:419:20"},{"body":{"nodeType":"YulBlock","src":"30219:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30241:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"30249:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30237:3:20"},"nodeType":"YulFunctionCall","src":"30237:14:20"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"30253:34:20","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30230:6:20"},"nodeType":"YulFunctionCall","src":"30230:58:20"},"nodeType":"YulExpressionStatement","src":"30230:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30309:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"30317:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30305:3:20"},"nodeType":"YulFunctionCall","src":"30305:15:20"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"30322:6:20","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30298:6:20"},"nodeType":"YulFunctionCall","src":"30298:31:20"},"nodeType":"YulExpressionStatement","src":"30298:31:20"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30211:6:20","type":""}],"src":"30113:223:20"},{"body":{"nodeType":"YulBlock","src":"30488:220:20","statements":[{"nodeType":"YulAssignment","src":"30498:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30564:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"30569:2:20","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30505:58:20"},"nodeType":"YulFunctionCall","src":"30505:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30498:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30670:3:20"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"30581:88:20"},"nodeType":"YulFunctionCall","src":"30581:93:20"},"nodeType":"YulExpressionStatement","src":"30581:93:20"},{"nodeType":"YulAssignment","src":"30683:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30694:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"30699:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30690:3:20"},"nodeType":"YulFunctionCall","src":"30690:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30683:3:20"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30476:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30484:3:20","type":""}],"src":"30342:366:20"},{"body":{"nodeType":"YulBlock","src":"30885:248:20","statements":[{"nodeType":"YulAssignment","src":"30895:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30907:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30918:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30903:3:20"},"nodeType":"YulFunctionCall","src":"30903:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30895:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30942:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30953:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30938:3:20"},"nodeType":"YulFunctionCall","src":"30938:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30961:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"30967:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30957:3:20"},"nodeType":"YulFunctionCall","src":"30957:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30931:6:20"},"nodeType":"YulFunctionCall","src":"30931:47:20"},"nodeType":"YulExpressionStatement","src":"30931:47:20"},{"nodeType":"YulAssignment","src":"30987:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31121:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30995:124:20"},"nodeType":"YulFunctionCall","src":"30995:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30987:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30865:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30880:4:20","type":""}],"src":"30714:419:20"},{"body":{"nodeType":"YulBlock","src":"31184:146:20","statements":[{"nodeType":"YulAssignment","src":"31194:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"31217:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31199:17:20"},"nodeType":"YulFunctionCall","src":"31199:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"31194:1:20"}]},{"nodeType":"YulAssignment","src":"31228:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"31251:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31233:17:20"},"nodeType":"YulFunctionCall","src":"31233:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"31228:1:20"}]},{"body":{"nodeType":"YulBlock","src":"31275:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"31277:16:20"},"nodeType":"YulFunctionCall","src":"31277:18:20"},"nodeType":"YulExpressionStatement","src":"31277:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"31269:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"31272:1:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31266:2:20"},"nodeType":"YulFunctionCall","src":"31266:8:20"},"nodeType":"YulIf","src":"31263:34:20"},{"nodeType":"YulAssignment","src":"31307:17:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"31319:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"31322:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31315:3:20"},"nodeType":"YulFunctionCall","src":"31315:9:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"31307:4:20"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"31170:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"31173:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"31179:4:20","type":""}],"src":"31139:191:20"},{"body":{"nodeType":"YulBlock","src":"31442:69:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31464:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"31472:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31460:3:20"},"nodeType":"YulFunctionCall","src":"31460:14:20"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"31476:27:20","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31453:6:20"},"nodeType":"YulFunctionCall","src":"31453:51:20"},"nodeType":"YulExpressionStatement","src":"31453:51:20"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31434:6:20","type":""}],"src":"31336:175:20"},{"body":{"nodeType":"YulBlock","src":"31663:220:20","statements":[{"nodeType":"YulAssignment","src":"31673:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31739:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"31744:2:20","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31680:58:20"},"nodeType":"YulFunctionCall","src":"31680:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31673:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31845:3:20"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"31756:88:20"},"nodeType":"YulFunctionCall","src":"31756:93:20"},"nodeType":"YulExpressionStatement","src":"31756:93:20"},{"nodeType":"YulAssignment","src":"31858:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31869:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"31874:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31865:3:20"},"nodeType":"YulFunctionCall","src":"31865:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31858:3:20"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31651:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31659:3:20","type":""}],"src":"31517:366:20"},{"body":{"nodeType":"YulBlock","src":"32060:248:20","statements":[{"nodeType":"YulAssignment","src":"32070:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32082:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32093:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32078:3:20"},"nodeType":"YulFunctionCall","src":"32078:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32070:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32117:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32128:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32113:3:20"},"nodeType":"YulFunctionCall","src":"32113:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32136:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"32142:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32132:3:20"},"nodeType":"YulFunctionCall","src":"32132:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32106:6:20"},"nodeType":"YulFunctionCall","src":"32106:47:20"},"nodeType":"YulExpressionStatement","src":"32106:47:20"},{"nodeType":"YulAssignment","src":"32162:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32296:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32170:124:20"},"nodeType":"YulFunctionCall","src":"32170:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32162:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32040:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32055:4:20","type":""}],"src":"31889:419:20"},{"body":{"nodeType":"YulBlock","src":"32420:131:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32442:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"32450:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32438:3:20"},"nodeType":"YulFunctionCall","src":"32438:14:20"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"32454:34:20","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32431:6:20"},"nodeType":"YulFunctionCall","src":"32431:58:20"},"nodeType":"YulExpressionStatement","src":"32431:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32510:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"32518:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32506:3:20"},"nodeType":"YulFunctionCall","src":"32506:15:20"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"32523:20:20","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32499:6:20"},"nodeType":"YulFunctionCall","src":"32499:45:20"},"nodeType":"YulExpressionStatement","src":"32499:45:20"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32412:6:20","type":""}],"src":"32314:237:20"},{"body":{"nodeType":"YulBlock","src":"32703:220:20","statements":[{"nodeType":"YulAssignment","src":"32713:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32779:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"32784:2:20","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32720:58:20"},"nodeType":"YulFunctionCall","src":"32720:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32713:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32885:3:20"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"32796:88:20"},"nodeType":"YulFunctionCall","src":"32796:93:20"},"nodeType":"YulExpressionStatement","src":"32796:93:20"},{"nodeType":"YulAssignment","src":"32898:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32909:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"32914:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32905:3:20"},"nodeType":"YulFunctionCall","src":"32905:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32898:3:20"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32691:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32699:3:20","type":""}],"src":"32557:366:20"},{"body":{"nodeType":"YulBlock","src":"33100:248:20","statements":[{"nodeType":"YulAssignment","src":"33110:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33122:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33133:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33118:3:20"},"nodeType":"YulFunctionCall","src":"33118:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33110:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33157:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33168:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33153:3:20"},"nodeType":"YulFunctionCall","src":"33153:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33176:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"33182:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33172:3:20"},"nodeType":"YulFunctionCall","src":"33172:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33146:6:20"},"nodeType":"YulFunctionCall","src":"33146:47:20"},"nodeType":"YulExpressionStatement","src":"33146:47:20"},{"nodeType":"YulAssignment","src":"33202:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33336:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33210:124:20"},"nodeType":"YulFunctionCall","src":"33210:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33202:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33080:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33095:4:20","type":""}],"src":"32929:419:20"},{"body":{"nodeType":"YulBlock","src":"33412:40:20","statements":[{"nodeType":"YulAssignment","src":"33423:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33439:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33433:5:20"},"nodeType":"YulFunctionCall","src":"33433:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"33423:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33395:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"33405:6:20","type":""}],"src":"33354:98:20"},{"body":{"nodeType":"YulBlock","src":"33553:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33570:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"33575:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33563:6:20"},"nodeType":"YulFunctionCall","src":"33563:19:20"},"nodeType":"YulExpressionStatement","src":"33563:19:20"},{"nodeType":"YulAssignment","src":"33591:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33610:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"33615:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33606:3:20"},"nodeType":"YulFunctionCall","src":"33606:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"33591:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33525:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"33530:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"33541:11:20","type":""}],"src":"33458:168:20"},{"body":{"nodeType":"YulBlock","src":"33722:270:20","statements":[{"nodeType":"YulVariableDeclaration","src":"33732:52:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33778:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"33746:31:20"},"nodeType":"YulFunctionCall","src":"33746:38:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"33736:6:20","type":""}]},{"nodeType":"YulAssignment","src":"33793:77:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33858:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"33863:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33800:57:20"},"nodeType":"YulFunctionCall","src":"33800:70:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33793:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33905:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"33912:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33901:3:20"},"nodeType":"YulFunctionCall","src":"33901:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"33919:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"33924:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"33879:21:20"},"nodeType":"YulFunctionCall","src":"33879:52:20"},"nodeType":"YulExpressionStatement","src":"33879:52:20"},{"nodeType":"YulAssignment","src":"33940:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33951:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"33978:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"33956:21:20"},"nodeType":"YulFunctionCall","src":"33956:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33947:3:20"},"nodeType":"YulFunctionCall","src":"33947:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33940:3:20"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33703:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"33710:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33718:3:20","type":""}],"src":"33632:360:20"},{"body":{"nodeType":"YulBlock","src":"34198:440:20","statements":[{"nodeType":"YulAssignment","src":"34208:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34220:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34231:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34216:3:20"},"nodeType":"YulFunctionCall","src":"34216:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34208:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34289:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34302:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34313:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34298:3:20"},"nodeType":"YulFunctionCall","src":"34298:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34245:43:20"},"nodeType":"YulFunctionCall","src":"34245:71:20"},"nodeType":"YulExpressionStatement","src":"34245:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34370:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34383:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34394:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34379:3:20"},"nodeType":"YulFunctionCall","src":"34379:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34326:43:20"},"nodeType":"YulFunctionCall","src":"34326:72:20"},"nodeType":"YulExpressionStatement","src":"34326:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"34452:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34465:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34476:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34461:3:20"},"nodeType":"YulFunctionCall","src":"34461:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34408:43:20"},"nodeType":"YulFunctionCall","src":"34408:72:20"},"nodeType":"YulExpressionStatement","src":"34408:72:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34501:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34512:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34497:3:20"},"nodeType":"YulFunctionCall","src":"34497:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34521:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"34527:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34517:3:20"},"nodeType":"YulFunctionCall","src":"34517:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34490:6:20"},"nodeType":"YulFunctionCall","src":"34490:48:20"},"nodeType":"YulExpressionStatement","src":"34490:48:20"},{"nodeType":"YulAssignment","src":"34547:84:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"34617:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"34626:4:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34555:61:20"},"nodeType":"YulFunctionCall","src":"34555:76:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34547:4:20"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34146:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"34158:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"34166:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34174:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34182:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34193:4:20","type":""}],"src":"33998:640:20"},{"body":{"nodeType":"YulBlock","src":"34706:79:20","statements":[{"nodeType":"YulAssignment","src":"34716:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"34731:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34725:5:20"},"nodeType":"YulFunctionCall","src":"34725:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"34716:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34773:5:20"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"34747:25:20"},"nodeType":"YulFunctionCall","src":"34747:32:20"},"nodeType":"YulExpressionStatement","src":"34747:32:20"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"34684:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"34692:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"34700:5:20","type":""}],"src":"34644:141:20"},{"body":{"nodeType":"YulBlock","src":"34867:273:20","statements":[{"body":{"nodeType":"YulBlock","src":"34913:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"34915:77:20"},"nodeType":"YulFunctionCall","src":"34915:79:20"},"nodeType":"YulExpressionStatement","src":"34915:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"34888:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"34897:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34884:3:20"},"nodeType":"YulFunctionCall","src":"34884:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"34909:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"34880:3:20"},"nodeType":"YulFunctionCall","src":"34880:32:20"},"nodeType":"YulIf","src":"34877:119:20"},{"nodeType":"YulBlock","src":"35006:127:20","statements":[{"nodeType":"YulVariableDeclaration","src":"35021:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"35035:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"35025:6:20","type":""}]},{"nodeType":"YulAssignment","src":"35050:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35095:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"35106:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35091:3:20"},"nodeType":"YulFunctionCall","src":"35091:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"35115:7:20"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"35060:30:20"},"nodeType":"YulFunctionCall","src":"35060:63:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"35050:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34837:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"34848:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"34860:6:20","type":""}],"src":"34791:349:20"},{"body":{"nodeType":"YulBlock","src":"35252:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35274:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"35282:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35270:3:20"},"nodeType":"YulFunctionCall","src":"35270:14:20"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"35286:34:20","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35263:6:20"},"nodeType":"YulFunctionCall","src":"35263:58:20"},"nodeType":"YulExpressionStatement","src":"35263:58:20"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35244:6:20","type":""}],"src":"35146:182:20"},{"body":{"nodeType":"YulBlock","src":"35480:220:20","statements":[{"nodeType":"YulAssignment","src":"35490:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35556:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"35561:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35497:58:20"},"nodeType":"YulFunctionCall","src":"35497:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35490:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35662:3:20"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"35573:88:20"},"nodeType":"YulFunctionCall","src":"35573:93:20"},"nodeType":"YulExpressionStatement","src":"35573:93:20"},{"nodeType":"YulAssignment","src":"35675:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35686:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"35691:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35682:3:20"},"nodeType":"YulFunctionCall","src":"35682:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35675:3:20"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35468:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35476:3:20","type":""}],"src":"35334:366:20"},{"body":{"nodeType":"YulBlock","src":"35877:248:20","statements":[{"nodeType":"YulAssignment","src":"35887:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35899:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35910:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35895:3:20"},"nodeType":"YulFunctionCall","src":"35895:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35887:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35934:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35945:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35930:3:20"},"nodeType":"YulFunctionCall","src":"35930:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35953:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"35959:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35949:3:20"},"nodeType":"YulFunctionCall","src":"35949:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35923:6:20"},"nodeType":"YulFunctionCall","src":"35923:47:20"},"nodeType":"YulExpressionStatement","src":"35923:47:20"},{"nodeType":"YulAssignment","src":"35979:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36113:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35987:124:20"},"nodeType":"YulFunctionCall","src":"35987:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35979:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35857:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35872:4:20","type":""}],"src":"35706:419:20"},{"body":{"nodeType":"YulBlock","src":"36237:72:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36259:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"36267:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36255:3:20"},"nodeType":"YulFunctionCall","src":"36255:14:20"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"36271:30:20","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36248:6:20"},"nodeType":"YulFunctionCall","src":"36248:54:20"},"nodeType":"YulExpressionStatement","src":"36248:54:20"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36229:6:20","type":""}],"src":"36131:178:20"},{"body":{"nodeType":"YulBlock","src":"36461:220:20","statements":[{"nodeType":"YulAssignment","src":"36471:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36537:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"36542:2:20","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36478:58:20"},"nodeType":"YulFunctionCall","src":"36478:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36471:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36643:3:20"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"36554:88:20"},"nodeType":"YulFunctionCall","src":"36554:93:20"},"nodeType":"YulExpressionStatement","src":"36554:93:20"},{"nodeType":"YulAssignment","src":"36656:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36667:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"36672:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36663:3:20"},"nodeType":"YulFunctionCall","src":"36663:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36656:3:20"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36449:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36457:3:20","type":""}],"src":"36315:366:20"},{"body":{"nodeType":"YulBlock","src":"36858:248:20","statements":[{"nodeType":"YulAssignment","src":"36868:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36880:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36891:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36876:3:20"},"nodeType":"YulFunctionCall","src":"36876:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36868:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36915:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36926:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36911:3:20"},"nodeType":"YulFunctionCall","src":"36911:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36934:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"36940:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36930:3:20"},"nodeType":"YulFunctionCall","src":"36930:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36904:6:20"},"nodeType":"YulFunctionCall","src":"36904:47:20"},"nodeType":"YulExpressionStatement","src":"36904:47:20"},{"nodeType":"YulAssignment","src":"36960:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37094:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36968:124:20"},"nodeType":"YulFunctionCall","src":"36968:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36960:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36838:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36853:4:20","type":""}],"src":"36687:419:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf(memPtr) {\n\n        mstore(add(memPtr, 0), \"URI Query for non existent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d(memPtr) {\n\n        mstore(add(memPtr, 0), 0x7b226e616d653a22000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 8)\n        store_literal_in_memory_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d(pos)\n        end := add(pos, 8)\n    }\n\n    function store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2200000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0(pos)\n        end := add(pos, 1)\n    }\n\n    function store_literal_in_memory_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735(memPtr) {\n\n        mstore(add(memPtr, 0), 0x226465736372697074696f6e223a22416e204e46542074686174206368616e67)\n\n        mstore(add(memPtr, 32), \"es based on chainlink price Feed\")\n\n        mstore(add(memPtr, 64), 0x2121220000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 67)\n        store_literal_in_memory_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735(pos)\n        end := add(pos, 67)\n    }\n\n    function store_literal_in_memory_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2261747472696275746573223a5b7b2274726169745f74797065223a2022636f)\n\n        mstore(add(memPtr, 32), 0x6f6c6e657373222c3a76616c75653a3130307d5d2c22696d616765223a220000)\n\n    }\n\n    function abi_encode_t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 62)\n        store_literal_in_memory_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24(pos)\n        end := add(pos, 62)\n    }\n\n    function store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475(memPtr) {\n\n        mstore(add(memPtr, 0), 0x227d000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475(pos)\n        end := add(pos, 2)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d_t_string_memory_ptr_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735_t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2845":[{"length":32,"start":2696}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101005760003560e01c80636352211e11610097578063b88d4fde11610066578063b88d4fde146102bd578063c87b56dd146102d9578063e425aded14610309578063e985e9c51461033957610100565b80636352211e1461022357806370a082311461025357806395d89b4114610283578063a22cb465146102a157610100565b80631e930812116100d35780631e9308121461019f57806323b872dd146101bb57806330d871c6146101d757806342842e0e1461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a9190611a4f565b610369565b60405161012c9190611a97565b60405180910390f35b61013d61044b565b60405161014a9190611b4b565b60405180910390f35b61016d60048036038101906101689190611ba3565b6104dd565b60405161017a9190611c11565b60405180910390f35b61019d60048036038101906101989190611c58565b610523565b005b6101b960048036038101906101b49190611cce565b61063b565b005b6101d560048036038101906101d09190611cfb565b6106b9565b005b6101f160048036038101906101ec9190611e83565b610719565b6040516101fe9190611b4b565b60405180910390f35b610221600480360381019061021c9190611cfb565b6107a6565b005b61023d60048036038101906102389190611ba3565b6107c6565b60405161024a9190611c11565b60405180910390f35b61026d60048036038101906102689190611ecc565b610878565b60405161027a9190611f08565b60405180910390f35b61028b610930565b6040516102989190611b4b565b60405180910390f35b6102bb60048036038101906102b69190611f4f565b6109c2565b005b6102d760048036038101906102d29190612030565b6109d8565b005b6102f360048036038101906102ee9190611ba3565b610a3a565b6040516103009190611b4b565b60405180910390f35b610323600480360381019061031e9190611ba3565b610cc3565b60405161033091906120c2565b60405180910390f35b610353600480360381019061034e91906120dd565b610cdb565b6040516103609190611a97565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043457507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610444575061044382610ee8565b5b9050919050565b60606000805461045a9061214c565b80601f01602080910402602001604051908101604052809291908181526020018280546104869061214c565b80156104d35780601f106104a8576101008083540402835291602001916104d3565b820191906000526020600020905b8154815290600101906020018083116104b657829003601f168201915b5050505050905090565b60006104e882610f52565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061052e826107c6565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561059f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610596906121f0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105be610f9d565b73ffffffffffffffffffffffffffffffffffffffff1614806105ed57506105ec816105e7610f9d565b610cdb565b5b61062c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062390612282565b60405180910390fd5b6106368383610fa5565b505050565b80600960006006548152602001908152602001600020819055506006546006600082825461066991906122d1565b9250508190555061067c3360065461105e565b6006547f882d3b5a729a8bb95cf6c0083c99b42ecd9637123d4425bd7b768877fd8af8b0826040516106ae91906120c2565b60405180910390a250565b6106ca6106c4610f9d565b8261107c565b610709576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070090612399565b60405180910390fd5b610714838383611111565b505050565b606060006107458360405160200161073191906123f5565b604051602081830303815290604052610d6f565b90506040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c0000000000008152508160405160200161078f92919061240c565b604051602081830303815290604052915050919050565b6107c1838383604051806020016040528060008152506109d8565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561086f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108669061247c565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e09061250e565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461093f9061214c565b80601f016020809104026020016040519081016040528092919081815260200182805461096b9061214c565b80156109b85780601f1061098d576101008083540402835291602001916109b8565b820191906000526020600020905b81548152906001019060200180831161099b57829003601f168201915b5050505050905090565b6109d46109cd610f9d565b8383611378565b5050565b6109e96109e3610f9d565b8361107c565b610a28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1f90612399565b60405180910390fd5b610a34848484846114e5565b50505050565b6060610a4582611541565b610a84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7b9061257a565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610aec57600080fd5b505afa158015610b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b249190612606565b505050915050600060078054610b399061214c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b659061214c565b8015610bb25780601f10610b8757610100808354040283529160200191610bb2565b820191906000526020600020905b815481529060010190602001808311610b9557829003601f168201915b5050505050905060096000858152602001908152602001600020548212610c615760088054610be09061214c565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0c9061214c565b8015610c595780601f10610c2e57610100808354040283529160200191610c59565b820191906000526020600020905b815481529060010190602001808311610c3c57829003601f168201915b505050505090505b610c696115ad565b610c9a610c7461044b565b83604051602001610c8692919061286f565b604051602081830303815290604052610d6f565b604051602001610cab92919061240c565b60405160208183030381529060405292505050919050565b60096020528060005260406000206000915090505481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6060600082511415610d9257604051806020016040528060008152509050610ee3565b6000604051806060016040528060408152602001612d966040913990506000600360028551610dc191906122d1565b610dcb91906128f9565b6004610dd7919061292a565b90506000602082610de891906122d1565b67ffffffffffffffff811115610e0157610e00611d58565b5b6040519080825280601f01601f191660200182016040528015610e335781602001600182028036833780820191505090505b509050818152600183018586518101602084015b81831015610ea2576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825360018201915050610e47565b600389510660018114610ebc5760028114610ecc57610ed7565b613d3d60f01b6002830352610ed7565b603d60f81b60018303525b50505050508093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610f5b81611541565b610f9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f919061247c565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611018836107c6565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6110788282604051806020016040528060008152506115ea565b5050565b600080611088836107c6565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806110ca57506110c98185610cdb565b5b8061110857508373ffffffffffffffffffffffffffffffffffffffff166110f0846104dd565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611131826107c6565b73ffffffffffffffffffffffffffffffffffffffff1614611187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117e906129f6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ee90612a88565b60405180910390fd5b611202838383611645565b61120d600082610fa5565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461125d9190612aa8565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112b491906122d1565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461137383838361164a565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113de90612b28565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114d89190611a97565b60405180910390a3505050565b6114f0848484611111565b6114fc8484848461164f565b61153b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153290612bba565b60405180910390fd5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60606040518060400160405280601d81526020017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815250905090565b6115f483836117e6565b611601600084848461164f565b611640576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163790612bba565b60405180910390fd5b505050565b505050565b505050565b60006116708473ffffffffffffffffffffffffffffffffffffffff166119c0565b156117d9578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611699610f9d565b8786866040518563ffffffff1660e01b81526004016116bb9493929190612c2f565b602060405180830381600087803b1580156116d557600080fd5b505af192505050801561170657506040513d601f19601f820116820180604052508101906117039190612c90565b60015b611789573d8060008114611736576040519150601f19603f3d011682016040523d82523d6000602084013e61173b565b606091505b50600081511415611781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177890612bba565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506117de565b600190505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184d90612d09565b60405180910390fd5b61185f81611541565b1561189f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189690612d75565b60405180910390fd5b6118ab60008383611645565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118fb91906122d1565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46119bc6000838361164a565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a2c816119f7565b8114611a3757600080fd5b50565b600081359050611a4981611a23565b92915050565b600060208284031215611a6557611a646119ed565b5b6000611a7384828501611a3a565b91505092915050565b60008115159050919050565b611a9181611a7c565b82525050565b6000602082019050611aac6000830184611a88565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611aec578082015181840152602081019050611ad1565b83811115611afb576000848401525b50505050565b6000601f19601f8301169050919050565b6000611b1d82611ab2565b611b278185611abd565b9350611b37818560208601611ace565b611b4081611b01565b840191505092915050565b60006020820190508181036000830152611b658184611b12565b905092915050565b6000819050919050565b611b8081611b6d565b8114611b8b57600080fd5b50565b600081359050611b9d81611b77565b92915050565b600060208284031215611bb957611bb86119ed565b5b6000611bc784828501611b8e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bfb82611bd0565b9050919050565b611c0b81611bf0565b82525050565b6000602082019050611c266000830184611c02565b92915050565b611c3581611bf0565b8114611c4057600080fd5b50565b600081359050611c5281611c2c565b92915050565b60008060408385031215611c6f57611c6e6119ed565b5b6000611c7d85828601611c43565b9250506020611c8e85828601611b8e565b9150509250929050565b6000819050919050565b611cab81611c98565b8114611cb657600080fd5b50565b600081359050611cc881611ca2565b92915050565b600060208284031215611ce457611ce36119ed565b5b6000611cf284828501611cb9565b91505092915050565b600080600060608486031215611d1457611d136119ed565b5b6000611d2286828701611c43565b9350506020611d3386828701611c43565b9250506040611d4486828701611b8e565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d9082611b01565b810181811067ffffffffffffffff82111715611daf57611dae611d58565b5b80604052505050565b6000611dc26119e3565b9050611dce8282611d87565b919050565b600067ffffffffffffffff821115611dee57611ded611d58565b5b611df782611b01565b9050602081019050919050565b82818337600083830152505050565b6000611e26611e2184611dd3565b611db8565b905082815260208101848484011115611e4257611e41611d53565b5b611e4d848285611e04565b509392505050565b600082601f830112611e6a57611e69611d4e565b5b8135611e7a848260208601611e13565b91505092915050565b600060208284031215611e9957611e986119ed565b5b600082013567ffffffffffffffff811115611eb757611eb66119f2565b5b611ec384828501611e55565b91505092915050565b600060208284031215611ee257611ee16119ed565b5b6000611ef084828501611c43565b91505092915050565b611f0281611b6d565b82525050565b6000602082019050611f1d6000830184611ef9565b92915050565b611f2c81611a7c565b8114611f3757600080fd5b50565b600081359050611f4981611f23565b92915050565b60008060408385031215611f6657611f656119ed565b5b6000611f7485828601611c43565b9250506020611f8585828601611f3a565b9150509250929050565b600067ffffffffffffffff821115611faa57611fa9611d58565b5b611fb382611b01565b9050602081019050919050565b6000611fd3611fce84611f8f565b611db8565b905082815260208101848484011115611fef57611fee611d53565b5b611ffa848285611e04565b509392505050565b600082601f83011261201757612016611d4e565b5b8135612027848260208601611fc0565b91505092915050565b6000806000806080858703121561204a576120496119ed565b5b600061205887828801611c43565b945050602061206987828801611c43565b935050604061207a87828801611b8e565b925050606085013567ffffffffffffffff81111561209b5761209a6119f2565b5b6120a787828801612002565b91505092959194509250565b6120bc81611c98565b82525050565b60006020820190506120d760008301846120b3565b92915050565b600080604083850312156120f4576120f36119ed565b5b600061210285828601611c43565b925050602061211385828601611c43565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061216457607f821691505b602082108114156121785761217761211d565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006121da602183611abd565b91506121e58261217e565b604082019050919050565b60006020820190508181036000830152612209816121cd565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b600061226c603e83611abd565b915061227782612210565b604082019050919050565b6000602082019050818103600083015261229b8161225f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006122dc82611b6d565b91506122e783611b6d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561231c5761231b6122a2565b5b828201905092915050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6000612383602e83611abd565b915061238e82612327565b604082019050919050565b600060208201905081810360008301526123b281612376565b9050919050565b600081905092915050565b60006123cf82611ab2565b6123d981856123b9565b93506123e9818560208601611ace565b80840191505092915050565b600061240182846123c4565b915081905092915050565b600061241882856123c4565b915061242482846123c4565b91508190509392505050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000612466601883611abd565b915061247182612430565b602082019050919050565b6000602082019050818103600083015261249581612459565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b60006124f8602983611abd565b91506125038261249c565b604082019050919050565b60006020820190508181036000830152612527816124eb565b9050919050565b7f55524920517565727920666f72206e6f6e206578697374656e7420746f6b656e600082015250565b6000612564602083611abd565b915061256f8261252e565b602082019050919050565b6000602082019050818103600083015261259381612557565b9050919050565b600069ffffffffffffffffffff82169050919050565b6125b98161259a565b81146125c457600080fd5b50565b6000815190506125d6816125b0565b92915050565b6000815190506125eb81611ca2565b92915050565b60008151905061260081611b77565b92915050565b600080600080600060a08688031215612622576126216119ed565b5b6000612630888289016125c7565b9550506020612641888289016125dc565b9450506040612652888289016125f1565b9350506060612663888289016125f1565b9250506080612674888289016125c7565b9150509295509295909350565b7f7b226e616d653a22000000000000000000000000000000000000000000000000600082015250565b60006126b76008836123b9565b91506126c282612681565b600882019050919050565b7f2200000000000000000000000000000000000000000000000000000000000000600082015250565b60006127036001836123b9565b915061270e826126cd565b600182019050919050565b7f226465736372697074696f6e223a22416e204e46542074686174206368616e6760008201527f6573206261736564206f6e20636861696e6c696e6b207072696365204665656460208201527f2121220000000000000000000000000000000000000000000000000000000000604082015250565b600061279b6043836123b9565b91506127a682612719565b604382019050919050565b7f2261747472696275746573223a5b7b2274726169745f74797065223a2022636f60008201527f6f6c6e657373222c3a76616c75653a3130307d5d2c22696d616765223a220000602082015250565b600061280d603e836123b9565b9150612818826127b1565b603e82019050919050565b7f227d000000000000000000000000000000000000000000000000000000000000600082015250565b60006128596002836123b9565b915061286482612823565b600282019050919050565b600061287a826126aa565b915061288682856123c4565b9150612891826126f6565b915061289c8261278e565b91506128a782612800565b91506128b382846123c4565b91506128be8261284c565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061290482611b6d565b915061290f83611b6d565b92508261291f5761291e6128ca565b5b828204905092915050565b600061293582611b6d565b915061294083611b6d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612979576129786122a2565b5b828202905092915050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b60006129e0602583611abd565b91506129eb82612984565b604082019050919050565b60006020820190508181036000830152612a0f816129d3565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612a72602483611abd565b9150612a7d82612a16565b604082019050919050565b60006020820190508181036000830152612aa181612a65565b9050919050565b6000612ab382611b6d565b9150612abe83611b6d565b925082821015612ad157612ad06122a2565b5b828203905092915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000612b12601983611abd565b9150612b1d82612adc565b602082019050919050565b60006020820190508181036000830152612b4181612b05565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612ba4603283611abd565b9150612baf82612b48565b604082019050919050565b60006020820190508181036000830152612bd381612b97565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000612c0182612bda565b612c0b8185612be5565b9350612c1b818560208601611ace565b612c2481611b01565b840191505092915050565b6000608082019050612c446000830187611c02565b612c516020830186611c02565b612c5e6040830185611ef9565b8181036060830152612c708184612bf6565b905095945050505050565b600081519050612c8a81611a23565b92915050565b600060208284031215612ca657612ca56119ed565b5b6000612cb484828501612c7b565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612cf3602083611abd565b9150612cfe82612cbd565b602082019050919050565b60006020820190508181036000830152612d2281612ce6565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612d5f601c83611abd565b9150612d6a82612d29565b602082019050919050565b60006020820190508181036000830152612d8e81612d52565b905091905056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212206c8de9cc7c9a9f7656505f379ea895452802c5dd13bfc4a3114814321a3c83bf64736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xE425ADED EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x339 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2A1 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1E930812 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1E930812 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x30D871C6 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1A4F JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1CCE JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1E83 JUMP JUMPDEST PUSH2 0x719 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1F08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH2 0x9C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH2 0x9D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x20C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x434 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x444 JUMPI POP PUSH2 0x443 DUP3 PUSH2 0xEE8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x45A SWAP1 PUSH2 0x214C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x486 SWAP1 PUSH2 0x214C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E8 DUP3 PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52E DUP3 PUSH2 0x7C6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x596 SWAP1 PUSH2 0x21F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5BE PUSH2 0xF9D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5ED JUMPI POP PUSH2 0x5EC DUP2 PUSH2 0x5E7 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST JUMPDEST PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x623 SWAP1 PUSH2 0x2282 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x636 DUP4 DUP4 PUSH2 0xFA5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x67C CALLER PUSH1 0x6 SLOAD PUSH2 0x105E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH32 0x882D3B5A729A8BB95CF6C0083C99B42ECD9637123D4425BD7B768877FD8AF8B0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x6AE SWAP2 SWAP1 PUSH2 0x20C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x6CA PUSH2 0x6C4 PUSH2 0xF9D JUMP JUMPDEST DUP3 PUSH2 0x107C JUMP JUMPDEST PUSH2 0x709 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP1 PUSH2 0x2399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x714 DUP4 DUP4 DUP4 PUSH2 0x1111 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x745 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x731 SWAP2 SWAP1 PUSH2 0x23F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xD6F JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x78F SWAP3 SWAP2 SWAP1 PUSH2 0x240C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C1 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP1 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E0 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x93F SWAP1 PUSH2 0x214C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x96B SWAP1 PUSH2 0x214C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x98D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x99B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D4 PUSH2 0x9CD PUSH2 0xF9D JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1378 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9E9 PUSH2 0x9E3 PUSH2 0xF9D JUMP JUMPDEST DUP4 PUSH2 0x107C JUMP JUMPDEST PUSH2 0xA28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1F SWAP1 PUSH2 0x2399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA34 DUP5 DUP5 DUP5 DUP5 PUSH2 0x14E5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA45 DUP3 PUSH2 0x1541 JUMP JUMPDEST PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7B SWAP1 PUSH2 0x257A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0x2606 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD PUSH2 0xB39 SWAP1 PUSH2 0x214C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB65 SWAP1 PUSH2 0x214C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB87 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB95 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 SLT PUSH2 0xC61 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH2 0xBE0 SWAP1 PUSH2 0x214C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC0C SWAP1 PUSH2 0x214C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC59 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC59 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC3C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST PUSH2 0xC69 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0xC9A PUSH2 0xC74 PUSH2 0x44B JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC86 SWAP3 SWAP2 SWAP1 PUSH2 0x286F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xD6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCAB SWAP3 SWAP2 SWAP1 PUSH2 0x240C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0xD92 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D96 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0xDC1 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH2 0xDCB SWAP2 SWAP1 PUSH2 0x28F9 JUMP JUMPDEST PUSH1 0x4 PUSH2 0xDD7 SWAP2 SWAP1 PUSH2 0x292A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH2 0xDE8 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE01 JUMPI PUSH2 0xE00 PUSH2 0x1D58 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE33 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0xEA2 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH2 0xE47 JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0xEBC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xECC JUMPI PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5B DUP2 PUSH2 0x1541 JUMP JUMPDEST PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF91 SWAP1 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1018 DUP4 PUSH2 0x7C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1078 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x15EA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1088 DUP4 PUSH2 0x7C6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x10CA JUMPI POP PUSH2 0x10C9 DUP2 DUP6 PUSH2 0xCDB JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1108 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10F0 DUP5 PUSH2 0x4DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1131 DUP3 PUSH2 0x7C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1187 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117E SWAP1 PUSH2 0x29F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EE SWAP1 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1202 DUP4 DUP4 DUP4 PUSH2 0x1645 JUMP JUMPDEST PUSH2 0x120D PUSH1 0x0 DUP3 PUSH2 0xFA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x125D SWAP2 SWAP1 PUSH2 0x2AA8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12B4 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1373 DUP4 DUP4 DUP4 PUSH2 0x164A JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DE SWAP1 PUSH2 0x2B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x14D8 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x14F0 DUP5 DUP5 DUP5 PUSH2 0x1111 JUMP JUMPDEST PUSH2 0x14FC DUP5 DUP5 DUP5 DUP5 PUSH2 0x164F JUMP JUMPDEST PUSH2 0x153B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1532 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x15F4 DUP4 DUP4 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x1601 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x164F JUMP JUMPDEST PUSH2 0x1640 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1637 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1670 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19C0 JUMP JUMPDEST ISZERO PUSH2 0x17D9 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1699 PUSH2 0xF9D JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16BB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C2F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1706 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1703 SWAP2 SWAP1 PUSH2 0x2C90 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1789 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1736 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x173B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1781 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1778 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x17DE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184D SWAP1 PUSH2 0x2D09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x185F DUP2 PUSH2 0x1541 JUMP JUMPDEST ISZERO PUSH2 0x189F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1896 SWAP1 PUSH2 0x2D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18AB PUSH1 0x0 DUP4 DUP4 PUSH2 0x1645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18FB SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x19BC PUSH1 0x0 DUP4 DUP4 PUSH2 0x164A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2C DUP2 PUSH2 0x19F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A49 DUP2 PUSH2 0x1A23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A65 JUMPI PUSH2 0x1A64 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A73 DUP5 DUP3 DUP6 ADD PUSH2 0x1A3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A91 DUP2 PUSH2 0x1A7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AEC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AD1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1AFB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1D DUP3 PUSH2 0x1AB2 JUMP JUMPDEST PUSH2 0x1B27 DUP2 DUP6 PUSH2 0x1ABD JUMP JUMPDEST SWAP4 POP PUSH2 0x1B37 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x1B40 DUP2 PUSH2 0x1B01 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B65 DUP2 DUP5 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B80 DUP2 PUSH2 0x1B6D JUMP JUMPDEST DUP2 EQ PUSH2 0x1B8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B9D DUP2 PUSH2 0x1B77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB9 JUMPI PUSH2 0x1BB8 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BC7 DUP5 DUP3 DUP6 ADD PUSH2 0x1B8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BFB DUP3 PUSH2 0x1BD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C0B DUP2 PUSH2 0x1BF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C26 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C35 DUP2 PUSH2 0x1BF0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C52 DUP2 PUSH2 0x1C2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C6F JUMPI PUSH2 0x1C6E PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C7D DUP6 DUP3 DUP7 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C8E DUP6 DUP3 DUP7 ADD PUSH2 0x1B8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CAB DUP2 PUSH2 0x1C98 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CC8 DUP2 PUSH2 0x1CA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE4 JUMPI PUSH2 0x1CE3 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CF2 DUP5 DUP3 DUP6 ADD PUSH2 0x1CB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D14 JUMPI PUSH2 0x1D13 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D22 DUP7 DUP3 DUP8 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D33 DUP7 DUP3 DUP8 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D44 DUP7 DUP3 DUP8 ADD PUSH2 0x1B8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D90 DUP3 PUSH2 0x1B01 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1DAF JUMPI PUSH2 0x1DAE PUSH2 0x1D58 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC2 PUSH2 0x19E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DCE DUP3 DUP3 PUSH2 0x1D87 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DEE JUMPI PUSH2 0x1DED PUSH2 0x1D58 JUMP JUMPDEST JUMPDEST PUSH2 0x1DF7 DUP3 PUSH2 0x1B01 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E26 PUSH2 0x1E21 DUP5 PUSH2 0x1DD3 JUMP JUMPDEST PUSH2 0x1DB8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E42 JUMPI PUSH2 0x1E41 PUSH2 0x1D53 JUMP JUMPDEST JUMPDEST PUSH2 0x1E4D DUP5 DUP3 DUP6 PUSH2 0x1E04 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E6A JUMPI PUSH2 0x1E69 PUSH2 0x1D4E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E7A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E99 JUMPI PUSH2 0x1E98 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EB7 JUMPI PUSH2 0x1EB6 PUSH2 0x19F2 JUMP JUMPDEST JUMPDEST PUSH2 0x1EC3 DUP5 DUP3 DUP6 ADD PUSH2 0x1E55 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EE2 JUMPI PUSH2 0x1EE1 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EF0 DUP5 DUP3 DUP6 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F02 DUP2 PUSH2 0x1B6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F1D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F2C DUP2 PUSH2 0x1A7C JUMP JUMPDEST DUP2 EQ PUSH2 0x1F37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F49 DUP2 PUSH2 0x1F23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F66 JUMPI PUSH2 0x1F65 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F74 DUP6 DUP3 DUP7 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F85 DUP6 DUP3 DUP7 ADD PUSH2 0x1F3A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FAA JUMPI PUSH2 0x1FA9 PUSH2 0x1D58 JUMP JUMPDEST JUMPDEST PUSH2 0x1FB3 DUP3 PUSH2 0x1B01 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD3 PUSH2 0x1FCE DUP5 PUSH2 0x1F8F JUMP JUMPDEST PUSH2 0x1DB8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1FEF JUMPI PUSH2 0x1FEE PUSH2 0x1D53 JUMP JUMPDEST JUMPDEST PUSH2 0x1FFA DUP5 DUP3 DUP6 PUSH2 0x1E04 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2017 JUMPI PUSH2 0x2016 PUSH2 0x1D4E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2027 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x204A JUMPI PUSH2 0x2049 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2058 DUP8 DUP3 DUP9 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2069 DUP8 DUP3 DUP9 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x207A DUP8 DUP3 DUP9 ADD PUSH2 0x1B8E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x209B JUMPI PUSH2 0x209A PUSH2 0x19F2 JUMP JUMPDEST JUMPDEST PUSH2 0x20A7 DUP8 DUP3 DUP9 ADD PUSH2 0x2002 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x20BC DUP2 PUSH2 0x1C98 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20F4 JUMPI PUSH2 0x20F3 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2102 DUP6 DUP3 DUP7 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2113 DUP6 DUP3 DUP7 ADD PUSH2 0x1C43 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2164 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2178 JUMPI PUSH2 0x2177 PUSH2 0x211D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DA PUSH1 0x21 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x21E5 DUP3 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2209 DUP2 PUSH2 0x21CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226C PUSH1 0x3E DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x2277 DUP3 PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x229B DUP2 PUSH2 0x225F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22DC DUP3 PUSH2 0x1B6D JUMP JUMPDEST SWAP2 POP PUSH2 0x22E7 DUP4 PUSH2 0x1B6D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x231C JUMPI PUSH2 0x231B PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2383 PUSH1 0x2E DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x238E DUP3 PUSH2 0x2327 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B2 DUP2 PUSH2 0x2376 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23CF DUP3 PUSH2 0x1AB2 JUMP JUMPDEST PUSH2 0x23D9 DUP2 DUP6 PUSH2 0x23B9 JUMP JUMPDEST SWAP4 POP PUSH2 0x23E9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1ACE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2401 DUP3 DUP5 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2418 DUP3 DUP6 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2424 DUP3 DUP5 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2466 PUSH1 0x18 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x2471 DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2495 DUP2 PUSH2 0x2459 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F8 PUSH1 0x29 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x2503 DUP3 PUSH2 0x249C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2527 DUP2 PUSH2 0x24EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x55524920517565727920666F72206E6F6E206578697374656E7420746F6B656E PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2564 PUSH1 0x20 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x256F DUP3 PUSH2 0x252E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2593 DUP2 PUSH2 0x2557 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25B9 DUP2 PUSH2 0x259A JUMP JUMPDEST DUP2 EQ PUSH2 0x25C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25D6 DUP2 PUSH2 0x25B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25EB DUP2 PUSH2 0x1CA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2600 DUP2 PUSH2 0x1B77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2622 JUMPI PUSH2 0x2621 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2630 DUP9 DUP3 DUP10 ADD PUSH2 0x25C7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2641 DUP9 DUP3 DUP10 ADD PUSH2 0x25DC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2652 DUP9 DUP3 DUP10 ADD PUSH2 0x25F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2663 DUP9 DUP3 DUP10 ADD PUSH2 0x25F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2674 DUP9 DUP3 DUP10 ADD PUSH2 0x25C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x7B226E616D653A22000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B7 PUSH1 0x8 DUP4 PUSH2 0x23B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x26C2 DUP3 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2703 PUSH1 0x1 DUP4 PUSH2 0x23B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x270E DUP3 PUSH2 0x26CD JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x226465736372697074696F6E223A22416E204E46542074686174206368616E67 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573206261736564206F6E20636861696E6C696E6B2070726963652046656564 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2121220000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x279B PUSH1 0x43 DUP4 PUSH2 0x23B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x27A6 DUP3 PUSH2 0x2719 JUMP JUMPDEST PUSH1 0x43 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A5B7B2274726169745F74797065223A2022636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6C6E657373222C3A76616C75653A3130307D5D2C22696D616765223A220000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280D PUSH1 0x3E DUP4 PUSH2 0x23B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2818 DUP3 PUSH2 0x27B1 JUMP JUMPDEST PUSH1 0x3E DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x227D000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2859 PUSH1 0x2 DUP4 PUSH2 0x23B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2864 DUP3 PUSH2 0x2823 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x287A DUP3 PUSH2 0x26AA JUMP JUMPDEST SWAP2 POP PUSH2 0x2886 DUP3 DUP6 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2891 DUP3 PUSH2 0x26F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x289C DUP3 PUSH2 0x278E JUMP JUMPDEST SWAP2 POP PUSH2 0x28A7 DUP3 PUSH2 0x2800 JUMP JUMPDEST SWAP2 POP PUSH2 0x28B3 DUP3 DUP5 PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x28BE DUP3 PUSH2 0x284C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2904 DUP3 PUSH2 0x1B6D JUMP JUMPDEST SWAP2 POP PUSH2 0x290F DUP4 PUSH2 0x1B6D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x291F JUMPI PUSH2 0x291E PUSH2 0x28CA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2935 DUP3 PUSH2 0x1B6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2940 DUP4 PUSH2 0x1B6D JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2979 JUMPI PUSH2 0x2978 PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E0 PUSH1 0x25 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x29EB DUP3 PUSH2 0x2984 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A0F DUP2 PUSH2 0x29D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A72 PUSH1 0x24 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x2A7D DUP3 PUSH2 0x2A16 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AA1 DUP2 PUSH2 0x2A65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB3 DUP3 PUSH2 0x1B6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2ABE DUP4 PUSH2 0x1B6D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2AD1 JUMPI PUSH2 0x2AD0 PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B12 PUSH1 0x19 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x2B1D DUP3 PUSH2 0x2ADC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B41 DUP2 PUSH2 0x2B05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA4 PUSH1 0x32 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x2BAF DUP3 PUSH2 0x2B48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BD3 DUP2 PUSH2 0x2B97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C01 DUP3 PUSH2 0x2BDA JUMP JUMPDEST PUSH2 0x2C0B DUP2 DUP6 PUSH2 0x2BE5 JUMP JUMPDEST SWAP4 POP PUSH2 0x2C1B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x2C24 DUP2 PUSH2 0x1B01 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2C44 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C02 JUMP JUMPDEST PUSH2 0x2C51 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C02 JUMP JUMPDEST PUSH2 0x2C5E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1EF9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2C70 DUP2 DUP5 PUSH2 0x2BF6 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C8A DUP2 PUSH2 0x1A23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CA6 JUMPI PUSH2 0x2CA5 PUSH2 0x19ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CB4 DUP5 DUP3 DUP6 ADD PUSH2 0x2C7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF3 PUSH1 0x20 DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFE DUP3 PUSH2 0x2CBD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D22 DUP2 PUSH2 0x2CE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5F PUSH1 0x1C DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP2 POP PUSH2 0x2D6A DUP3 PUSH2 0x2D29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D8E DUP2 PUSH2 0x2D52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 PUSH13 0x8DE9CC7C9A9F7656505F379EA8 SWAP6 GASLIMIT 0x28 MUL 0xC5 0xDD SGT 0xBF 0xC4 LOG3 GT BASEFEE EQ ORIGIN BYTE EXTCODECOPY DUP4 0xBF PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"224:2617:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2470:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3467:407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1319:249:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:327:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;989:324:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5005:179:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2632:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5250:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1574:1137:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;518:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2470:98::-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;3604:11;;:2;:11;;;;3596:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3701:5;3685:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3710:37;3727:5;3734:12;:10;:12::i;:::-;3710:16;:37::i;:::-;3685:62;3664:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;1319:249:17:-;1410:9;1371:20;:36;1392:14;;1371:36;;;;;;;;;;;:48;;;;1447:14;;1429;;:32;;;;;;;:::i;:::-;;;;;;;;1471:37;1481:10;1493:14;;1471:9;:37::i;:::-;1535:14;;1524:37;1551:9;1524:37;;;;;;:::i;:::-;;;;;;;;1319:249;:::o;4612:327:6:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;:::-;4612:327;;;:::o;989:324:17:-;1076:13;1105:30;1138:73;1195:3;1178:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;1138:13;:73::i;:::-;1105:106;;1264:22;;;;;;;;;;;;;;;;;1288:16;1247:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1221:85;;;989:324;;;:::o;5005:179:6:-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;:::-;5005:179;;;:::o;2190:218::-;2262:7;2281:13;2297:7;:16;2305:7;2297:16;;;;;;;;;;;;;;;;;;;;;2281:32;;2348:1;2331:19;;:5;:19;;;;2323:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:5;2389:12;;;2190:218;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2632:102::-;2688:13;2720:7;2713:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5250:315::-;5418:41;5437:12;:10;:12::i;:::-;5451:7;5418:18;:41::i;:::-;5410:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;1574:1137:17:-;1671:13;1708:16;1716:7;1708;:16::i;:::-;1700:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1775:12;1797:11;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1772:54;;;;;;1836:22;1861:13;1836:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1897:20;:29;1918:7;1897:29;;;;;;;;;;;;1888:5;:38;1884:94;;1953:14;1942:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1884:94;2068:10;:8;:10::i;:::-;2100:572;2270:6;:4;:6::i;:::-;2548:8;2174:450;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2100:13;:572::i;:::-;2030:660;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1987:717;;;;1574:1137;;;:::o;518:54::-;;;;;;;;;;;;;;;;;:::o;4388:162:6:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;777:1861:16:-;835:13;879:1;864:4;:11;:16;860:31;;;882:9;;;;;;;;;;;;;;;;860:31;940:19;962:12;;;;;;;;;;;;;;;;;940:34;;1023:18;1069:1;1064;1050:4;:11;:15;;;;:::i;:::-;1049:21;;;;:::i;:::-;1044:1;:27;;;;:::i;:::-;1023:48;;1151:20;1198:2;1185:10;:15;;;;:::i;:::-;1174:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1151:50;;1294:10;1286:6;1279:26;1386:1;1379:5;1375:13;1442:4;1492;1486:11;1477:7;1473:25;1585:2;1577:6;1573:15;1655:739;1674:6;1665:7;1662:19;1655:739;;;1771:1;1762:7;1758:15;1747:26;;1809:7;1803:14;1932:4;1924:5;1920:2;1916:14;1912:25;1902:8;1898:40;1892:47;1881:9;1873:67;1985:1;1974:9;1970:17;1957:30;;2063:4;2055:5;2051:2;2047:14;2043:25;2033:8;2029:40;2023:47;2012:9;2004:67;2116:1;2105:9;2101:17;2088:30;;2194:4;2186:5;2183:1;2178:14;2174:25;2164:8;2160:40;2154:47;2143:9;2135:67;2247:1;2236:9;2232:17;2219:30;;2325:4;2317:5;2305:25;2295:8;2291:40;2285:47;2274:9;2266:67;2378:1;2367:9;2363:17;2350:30;;1697:697;1655:739;;;2464:1;2457:4;2451:11;2447:19;2484:1;2479:54;;;;2551:1;2546:52;;;;2440:158;;2479:54;2523:6;2518:3;2514:16;2510:1;2499:9;2495:17;2488:43;2479:54;;2546:52;2590:4;2585:3;2581:14;2577:1;2566:9;2562:17;2555:41;2440:158;;1221:1387;;;;2625:6;2618:13;;;;;777:1861;;;;:::o;829:155:14:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;11657:133:6:-;11738:16;11746:7;11738;:16::i;:::-;11730:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;11657:133;:::o;640:96:12:-;693:7;719:10;712:17;;640:96;:::o;10959:171:6:-;11060:2;11033:15;:24;11049:7;11033:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11115:7;11111:2;11077:46;;11086:23;11101:7;11086:14;:23::i;:::-;11077:46;;;;;;;;;;;;10959:171;;:::o;7908:108::-;7983:26;7993:2;7997:7;7983:26;;;;;;;;;;;;:9;:26::i;:::-;7908:108;;:::o;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;7483:16;;:7;:16;;;:52;;;;7503:32;7520:5;7527:7;7503:16;:32::i;:::-;7483:52;:87;;;;7563:7;7539:31;;:20;7551:7;7539:11;:20::i;:::-;:31;;;7483:87;7475:96;;;7317:261;;;;:::o;10242:605::-;10396:4;10369:31;;:23;10384:7;10369:14;:23::i;:::-;:31;;;10361:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10474:1;10460:16;;:2;:16;;;;10452:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;10688:1;10669:9;:15;10679:4;10669:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10716:1;10699:9;:13;10709:2;10699:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10746:2;10727:7;:16;10735:7;10727:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10783:7;10779:2;10764:27;;10773:4;10764:27;;;;;;;;;;;;10802:38;10822:4;10828:2;10832:7;10802:19;:38::i;:::-;10242:605;;;:::o;11266:307::-;11416:8;11407:17;;:5;:17;;;;11399:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11502:8;11464:18;:25;11483:5;11464:25;;;;;;;;;;;;;;;:35;11490:8;11464:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11547:8;11525:41;;11540:5;11525:41;;;11557:8;11525:41;;;;;;:::i;:::-;;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6426:305;;;;:::o;7034:125::-;7099:4;7150:1;7122:30;;:7;:16;7130:7;7122:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7115:37;;7034:125;;;:::o;2717:122:17:-;2769:13;2794:38;;;;;;;;;;;;;;;;;;;2717:122;:::o;8237:309:6:-;8361:18;8367:2;8371:7;8361:5;:18::i;:::-;8410:53;8441:1;8445:2;8449:7;8458:4;8410:22;:53::i;:::-;8389:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8237:309;;;:::o;13729:122::-;;;;:::o;14223:121::-;;;;:::o;12342:831::-;12491:4;12511:15;:2;:13;;;:15::i;:::-;12507:660;;;12562:2;12546:36;;;12583:12;:10;:12::i;:::-;12597:4;12603:7;12612:4;12546:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12801:1;12784:6;:13;:18;12780:321;;;12826:60;;;;;;;;;;:::i;:::-;;;;;;;;12780:321;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;12677:41;;;12667:51;;;:6;:51;;;;12660:58;;;;;12507:660;13152:4;13145:11;;12342:831;;;;;;;:::o;8868:427::-;8961:1;8947:16;;:2;:16;;;;8939:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9019:16;9027:7;9019;:16::i;:::-;9018:17;9010:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9079:45;9108:1;9112:2;9116:7;9079:20;:45::i;:::-;9152:1;9135:9;:13;9145:2;9135:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;9182:2;9163:7;:16;9171:7;9163:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9225:7;9221:2;9200:33;;9217:1;9200:33;;;;;;;;;;;;9244:44;9272:1;9276:2;9280:7;9244:19;:44::i;:::-;8868:427;;:::o;1175:320:11:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:20:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:76::-;4974:7;5003:5;4992:16;;4938:76;;;:::o;5020:120::-;5092:23;5109:5;5092:23;:::i;:::-;5085:5;5082:34;5072:62;;5130:1;5127;5120:12;5072:62;5020:120;:::o;5146:137::-;5191:5;5229:6;5216:20;5207:29;;5245:32;5271:5;5245:32;:::i;:::-;5146:137;;;;:::o;5289:327::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:52;5591:7;5582:6;5571:9;5567:22;5547:52;:::i;:::-;5537:62;;5493:116;5289:327;;;;:::o;5622:619::-;5699:6;5707;5715;5764:2;5752:9;5743:7;5739:23;5735:32;5732:119;;;5770:79;;:::i;:::-;5732:119;5890:1;5915:53;5960:7;5951:6;5940:9;5936:22;5915:53;:::i;:::-;5905:63;;5861:117;6017:2;6043:53;6088:7;6079:6;6068:9;6064:22;6043:53;:::i;:::-;6033:63;;5988:118;6145:2;6171:53;6216:7;6207:6;6196:9;6192:22;6171:53;:::i;:::-;6161:63;;6116:118;5622:619;;;;;:::o;6247:117::-;6356:1;6353;6346:12;6370:117;6479:1;6476;6469:12;6493:180;6541:77;6538:1;6531:88;6638:4;6635:1;6628:15;6662:4;6659:1;6652:15;6679:281;6762:27;6784:4;6762:27;:::i;:::-;6754:6;6750:40;6892:6;6880:10;6877:22;6856:18;6844:10;6841:34;6838:62;6835:88;;;6903:18;;:::i;:::-;6835:88;6943:10;6939:2;6932:22;6722:238;6679:281;;:::o;6966:129::-;7000:6;7027:20;;:::i;:::-;7017:30;;7056:33;7084:4;7076:6;7056:33;:::i;:::-;6966:129;;;:::o;7101:308::-;7163:4;7253:18;7245:6;7242:30;7239:56;;;7275:18;;:::i;:::-;7239:56;7313:29;7335:6;7313:29;:::i;:::-;7305:37;;7397:4;7391;7387:15;7379:23;;7101:308;;;:::o;7415:154::-;7499:6;7494:3;7489;7476:30;7561:1;7552:6;7547:3;7543:16;7536:27;7415:154;;;:::o;7575:412::-;7653:5;7678:66;7694:49;7736:6;7694:49;:::i;:::-;7678:66;:::i;:::-;7669:75;;7767:6;7760:5;7753:21;7805:4;7798:5;7794:16;7843:3;7834:6;7829:3;7825:16;7822:25;7819:112;;;7850:79;;:::i;:::-;7819:112;7940:41;7974:6;7969:3;7964;7940:41;:::i;:::-;7659:328;7575:412;;;;;:::o;8007:340::-;8063:5;8112:3;8105:4;8097:6;8093:17;8089:27;8079:122;;8120:79;;:::i;:::-;8079:122;8237:6;8224:20;8262:79;8337:3;8329:6;8322:4;8314:6;8310:17;8262:79;:::i;:::-;8253:88;;8069:278;8007:340;;;;:::o;8353:509::-;8422:6;8471:2;8459:9;8450:7;8446:23;8442:32;8439:119;;;8477:79;;:::i;:::-;8439:119;8625:1;8614:9;8610:17;8597:31;8655:18;8647:6;8644:30;8641:117;;;8677:79;;:::i;:::-;8641:117;8782:63;8837:7;8828:6;8817:9;8813:22;8782:63;:::i;:::-;8772:73;;8568:287;8353:509;;;;:::o;8868:329::-;8927:6;8976:2;8964:9;8955:7;8951:23;8947:32;8944:119;;;8982:79;;:::i;:::-;8944:119;9102:1;9127:53;9172:7;9163:6;9152:9;9148:22;9127:53;:::i;:::-;9117:63;;9073:117;8868:329;;;;:::o;9203:118::-;9290:24;9308:5;9290:24;:::i;:::-;9285:3;9278:37;9203:118;;:::o;9327:222::-;9420:4;9458:2;9447:9;9443:18;9435:26;;9471:71;9539:1;9528:9;9524:17;9515:6;9471:71;:::i;:::-;9327:222;;;;:::o;9555:116::-;9625:21;9640:5;9625:21;:::i;:::-;9618:5;9615:32;9605:60;;9661:1;9658;9651:12;9605:60;9555:116;:::o;9677:133::-;9720:5;9758:6;9745:20;9736:29;;9774:30;9798:5;9774:30;:::i;:::-;9677:133;;;;:::o;9816:468::-;9881:6;9889;9938:2;9926:9;9917:7;9913:23;9909:32;9906:119;;;9944:79;;:::i;:::-;9906:119;10064:1;10089:53;10134:7;10125:6;10114:9;10110:22;10089:53;:::i;:::-;10079:63;;10035:117;10191:2;10217:50;10259:7;10250:6;10239:9;10235:22;10217:50;:::i;:::-;10207:60;;10162:115;9816:468;;;;;:::o;10290:307::-;10351:4;10441:18;10433:6;10430:30;10427:56;;;10463:18;;:::i;:::-;10427:56;10501:29;10523:6;10501:29;:::i;:::-;10493:37;;10585:4;10579;10575:15;10567:23;;10290:307;;;:::o;10603:410::-;10680:5;10705:65;10721:48;10762:6;10721:48;:::i;:::-;10705:65;:::i;:::-;10696:74;;10793:6;10786:5;10779:21;10831:4;10824:5;10820:16;10869:3;10860:6;10855:3;10851:16;10848:25;10845:112;;;10876:79;;:::i;:::-;10845:112;10966:41;11000:6;10995:3;10990;10966:41;:::i;:::-;10686:327;10603:410;;;;;:::o;11032:338::-;11087:5;11136:3;11129:4;11121:6;11117:17;11113:27;11103:122;;11144:79;;:::i;:::-;11103:122;11261:6;11248:20;11286:78;11360:3;11352:6;11345:4;11337:6;11333:17;11286:78;:::i;:::-;11277:87;;11093:277;11032:338;;;;:::o;11376:943::-;11471:6;11479;11487;11495;11544:3;11532:9;11523:7;11519:23;11515:33;11512:120;;;11551:79;;:::i;:::-;11512:120;11671:1;11696:53;11741:7;11732:6;11721:9;11717:22;11696:53;:::i;:::-;11686:63;;11642:117;11798:2;11824:53;11869:7;11860:6;11849:9;11845:22;11824:53;:::i;:::-;11814:63;;11769:118;11926:2;11952:53;11997:7;11988:6;11977:9;11973:22;11952:53;:::i;:::-;11942:63;;11897:118;12082:2;12071:9;12067:18;12054:32;12113:18;12105:6;12102:30;12099:117;;;12135:79;;:::i;:::-;12099:117;12240:62;12294:7;12285:6;12274:9;12270:22;12240:62;:::i;:::-;12230:72;;12025:287;11376:943;;;;;;;:::o;12325:115::-;12410:23;12427:5;12410:23;:::i;:::-;12405:3;12398:36;12325:115;;:::o;12446:218::-;12537:4;12575:2;12564:9;12560:18;12552:26;;12588:69;12654:1;12643:9;12639:17;12630:6;12588:69;:::i;:::-;12446:218;;;;:::o;12670:474::-;12738:6;12746;12795:2;12783:9;12774:7;12770:23;12766:32;12763:119;;;12801:79;;:::i;:::-;12763:119;12921:1;12946:53;12991:7;12982:6;12971:9;12967:22;12946:53;:::i;:::-;12936:63;;12892:117;13048:2;13074:53;13119:7;13110:6;13099:9;13095:22;13074:53;:::i;:::-;13064:63;;13019:118;12670:474;;;;;:::o;13150:180::-;13198:77;13195:1;13188:88;13295:4;13292:1;13285:15;13319:4;13316:1;13309:15;13336:320;13380:6;13417:1;13411:4;13407:12;13397:22;;13464:1;13458:4;13454:12;13485:18;13475:81;;13541:4;13533:6;13529:17;13519:27;;13475:81;13603:2;13595:6;13592:14;13572:18;13569:38;13566:84;;;13622:18;;:::i;:::-;13566:84;13387:269;13336:320;;;:::o;13662:220::-;13802:34;13798:1;13790:6;13786:14;13779:58;13871:3;13866:2;13858:6;13854:15;13847:28;13662:220;:::o;13888:366::-;14030:3;14051:67;14115:2;14110:3;14051:67;:::i;:::-;14044:74;;14127:93;14216:3;14127:93;:::i;:::-;14245:2;14240:3;14236:12;14229:19;;13888:366;;;:::o;14260:419::-;14426:4;14464:2;14453:9;14449:18;14441:26;;14513:9;14507:4;14503:20;14499:1;14488:9;14484:17;14477:47;14541:131;14667:4;14541:131;:::i;:::-;14533:139;;14260:419;;;:::o;14685:249::-;14825:34;14821:1;14813:6;14809:14;14802:58;14894:32;14889:2;14881:6;14877:15;14870:57;14685:249;:::o;14940:366::-;15082:3;15103:67;15167:2;15162:3;15103:67;:::i;:::-;15096:74;;15179:93;15268:3;15179:93;:::i;:::-;15297:2;15292:3;15288:12;15281:19;;14940:366;;;:::o;15312:419::-;15478:4;15516:2;15505:9;15501:18;15493:26;;15565:9;15559:4;15555:20;15551:1;15540:9;15536:17;15529:47;15593:131;15719:4;15593:131;:::i;:::-;15585:139;;15312:419;;;:::o;15737:180::-;15785:77;15782:1;15775:88;15882:4;15879:1;15872:15;15906:4;15903:1;15896:15;15923:305;15963:3;15982:20;16000:1;15982:20;:::i;:::-;15977:25;;16016:20;16034:1;16016:20;:::i;:::-;16011:25;;16170:1;16102:66;16098:74;16095:1;16092:81;16089:107;;;16176:18;;:::i;:::-;16089:107;16220:1;16217;16213:9;16206:16;;15923:305;;;;:::o;16234:233::-;16374:34;16370:1;16362:6;16358:14;16351:58;16443:16;16438:2;16430:6;16426:15;16419:41;16234:233;:::o;16473:366::-;16615:3;16636:67;16700:2;16695:3;16636:67;:::i;:::-;16629:74;;16712:93;16801:3;16712:93;:::i;:::-;16830:2;16825:3;16821:12;16814:19;;16473:366;;;:::o;16845:419::-;17011:4;17049:2;17038:9;17034:18;17026:26;;17098:9;17092:4;17088:20;17084:1;17073:9;17069:17;17062:47;17126:131;17252:4;17126:131;:::i;:::-;17118:139;;16845:419;;;:::o;17270:148::-;17372:11;17409:3;17394:18;;17270:148;;;;:::o;17424:377::-;17530:3;17558:39;17591:5;17558:39;:::i;:::-;17613:89;17695:6;17690:3;17613:89;:::i;:::-;17606:96;;17711:52;17756:6;17751:3;17744:4;17737:5;17733:16;17711:52;:::i;:::-;17788:6;17783:3;17779:16;17772:23;;17534:267;17424:377;;;;:::o;17807:275::-;17939:3;17961:95;18052:3;18043:6;17961:95;:::i;:::-;17954:102;;18073:3;18066:10;;17807:275;;;;:::o;18088:435::-;18268:3;18290:95;18381:3;18372:6;18290:95;:::i;:::-;18283:102;;18402:95;18493:3;18484:6;18402:95;:::i;:::-;18395:102;;18514:3;18507:10;;18088:435;;;;;:::o;18529:174::-;18669:26;18665:1;18657:6;18653:14;18646:50;18529:174;:::o;18709:366::-;18851:3;18872:67;18936:2;18931:3;18872:67;:::i;:::-;18865:74;;18948:93;19037:3;18948:93;:::i;:::-;19066:2;19061:3;19057:12;19050:19;;18709:366;;;:::o;19081:419::-;19247:4;19285:2;19274:9;19270:18;19262:26;;19334:9;19328:4;19324:20;19320:1;19309:9;19305:17;19298:47;19362:131;19488:4;19362:131;:::i;:::-;19354:139;;19081:419;;;:::o;19506:228::-;19646:34;19642:1;19634:6;19630:14;19623:58;19715:11;19710:2;19702:6;19698:15;19691:36;19506:228;:::o;19740:366::-;19882:3;19903:67;19967:2;19962:3;19903:67;:::i;:::-;19896:74;;19979:93;20068:3;19979:93;:::i;:::-;20097:2;20092:3;20088:12;20081:19;;19740:366;;;:::o;20112:419::-;20278:4;20316:2;20305:9;20301:18;20293:26;;20365:9;20359:4;20355:20;20351:1;20340:9;20336:17;20329:47;20393:131;20519:4;20393:131;:::i;:::-;20385:139;;20112:419;;;:::o;20537:182::-;20677:34;20673:1;20665:6;20661:14;20654:58;20537:182;:::o;20725:366::-;20867:3;20888:67;20952:2;20947:3;20888:67;:::i;:::-;20881:74;;20964:93;21053:3;20964:93;:::i;:::-;21082:2;21077:3;21073:12;21066:19;;20725:366;;;:::o;21097:419::-;21263:4;21301:2;21290:9;21286:18;21278:26;;21350:9;21344:4;21340:20;21336:1;21325:9;21321:17;21314:47;21378:131;21504:4;21378:131;:::i;:::-;21370:139;;21097:419;;;:::o;21522:105::-;21558:7;21598:22;21591:5;21587:34;21576:45;;21522:105;;;:::o;21633:120::-;21705:23;21722:5;21705:23;:::i;:::-;21698:5;21695:34;21685:62;;21743:1;21740;21733:12;21685:62;21633:120;:::o;21759:141::-;21815:5;21846:6;21840:13;21831:22;;21862:32;21888:5;21862:32;:::i;:::-;21759:141;;;;:::o;21906:::-;21962:5;21993:6;21987:13;21978:22;;22009:32;22035:5;22009:32;:::i;:::-;21906:141;;;;:::o;22053:143::-;22110:5;22141:6;22135:13;22126:22;;22157:33;22184:5;22157:33;:::i;:::-;22053:143;;;;:::o;22202:971::-;22305:6;22313;22321;22329;22337;22386:3;22374:9;22365:7;22361:23;22357:33;22354:120;;;22393:79;;:::i;:::-;22354:120;22513:1;22538:63;22593:7;22584:6;22573:9;22569:22;22538:63;:::i;:::-;22528:73;;22484:127;22650:2;22676:63;22731:7;22722:6;22711:9;22707:22;22676:63;:::i;:::-;22666:73;;22621:128;22788:2;22814:64;22870:7;22861:6;22850:9;22846:22;22814:64;:::i;:::-;22804:74;;22759:129;22927:2;22953:64;23009:7;23000:6;22989:9;22985:22;22953:64;:::i;:::-;22943:74;;22898:129;23066:3;23093:63;23148:7;23139:6;23128:9;23124:22;23093:63;:::i;:::-;23083:73;;23037:129;22202:971;;;;;;;;:::o;23179:214::-;23319:66;23315:1;23307:6;23303:14;23296:90;23179:214;:::o;23399:400::-;23559:3;23580:84;23662:1;23657:3;23580:84;:::i;:::-;23573:91;;23673:93;23762:3;23673:93;:::i;:::-;23791:1;23786:3;23782:11;23775:18;;23399:400;;;:::o;23805:214::-;23945:66;23941:1;23933:6;23929:14;23922:90;23805:214;:::o;24025:400::-;24185:3;24206:84;24288:1;24283:3;24206:84;:::i;:::-;24199:91;;24299:93;24388:3;24299:93;:::i;:::-;24417:1;24412:3;24408:11;24401:18;;24025:400;;;:::o;24431:384::-;24571:66;24567:1;24559:6;24555:14;24548:90;24672:34;24667:2;24659:6;24655:15;24648:59;24741:66;24736:2;24728:6;24724:15;24717:91;24431:384;:::o;24821:402::-;24981:3;25002:85;25084:2;25079:3;25002:85;:::i;:::-;24995:92;;25096:93;25185:3;25096:93;:::i;:::-;25214:2;25209:3;25205:12;25198:19;;24821:402;;;:::o;25229:315::-;25369:66;25365:1;25357:6;25353:14;25346:90;25470:66;25465:2;25457:6;25453:15;25446:91;25229:315;:::o;25550:402::-;25710:3;25731:85;25813:2;25808:3;25731:85;:::i;:::-;25724:92;;25825:93;25914:3;25825:93;:::i;:::-;25943:2;25938:3;25934:12;25927:19;;25550:402;;;:::o;25958:214::-;26098:66;26094:1;26086:6;26082:14;26075:90;25958:214;:::o;26178:400::-;26338:3;26359:84;26441:1;26436:3;26359:84;:::i;:::-;26352:91;;26452:93;26541:3;26452:93;:::i;:::-;26570:1;26565:3;26561:11;26554:18;;26178:400;;;:::o;26584:1765::-;27269:3;27291:148;27435:3;27291:148;:::i;:::-;27284:155;;27456:95;27547:3;27538:6;27456:95;:::i;:::-;27449:102;;27568:148;27712:3;27568:148;:::i;:::-;27561:155;;27733:148;27877:3;27733:148;:::i;:::-;27726:155;;27898:148;28042:3;27898:148;:::i;:::-;27891:155;;28063:95;28154:3;28145:6;28063:95;:::i;:::-;28056:102;;28175:148;28319:3;28175:148;:::i;:::-;28168:155;;28340:3;28333:10;;26584:1765;;;;;:::o;28355:180::-;28403:77;28400:1;28393:88;28500:4;28497:1;28490:15;28524:4;28521:1;28514:15;28541:185;28581:1;28598:20;28616:1;28598:20;:::i;:::-;28593:25;;28632:20;28650:1;28632:20;:::i;:::-;28627:25;;28671:1;28661:35;;28676:18;;:::i;:::-;28661:35;28718:1;28715;28711:9;28706:14;;28541:185;;;;:::o;28732:348::-;28772:7;28795:20;28813:1;28795:20;:::i;:::-;28790:25;;28829:20;28847:1;28829:20;:::i;:::-;28824:25;;29017:1;28949:66;28945:74;28942:1;28939:81;28934:1;28927:9;28920:17;28916:105;28913:131;;;29024:18;;:::i;:::-;28913:131;29072:1;29069;29065:9;29054:20;;28732:348;;;;:::o;29086:224::-;29226:34;29222:1;29214:6;29210:14;29203:58;29295:7;29290:2;29282:6;29278:15;29271:32;29086:224;:::o;29316:366::-;29458:3;29479:67;29543:2;29538:3;29479:67;:::i;:::-;29472:74;;29555:93;29644:3;29555:93;:::i;:::-;29673:2;29668:3;29664:12;29657:19;;29316:366;;;:::o;29688:419::-;29854:4;29892:2;29881:9;29877:18;29869:26;;29941:9;29935:4;29931:20;29927:1;29916:9;29912:17;29905:47;29969:131;30095:4;29969:131;:::i;:::-;29961:139;;29688:419;;;:::o;30113:223::-;30253:34;30249:1;30241:6;30237:14;30230:58;30322:6;30317:2;30309:6;30305:15;30298:31;30113:223;:::o;30342:366::-;30484:3;30505:67;30569:2;30564:3;30505:67;:::i;:::-;30498:74;;30581:93;30670:3;30581:93;:::i;:::-;30699:2;30694:3;30690:12;30683:19;;30342:366;;;:::o;30714:419::-;30880:4;30918:2;30907:9;30903:18;30895:26;;30967:9;30961:4;30957:20;30953:1;30942:9;30938:17;30931:47;30995:131;31121:4;30995:131;:::i;:::-;30987:139;;30714:419;;;:::o;31139:191::-;31179:4;31199:20;31217:1;31199:20;:::i;:::-;31194:25;;31233:20;31251:1;31233:20;:::i;:::-;31228:25;;31272:1;31269;31266:8;31263:34;;;31277:18;;:::i;:::-;31263:34;31322:1;31319;31315:9;31307:17;;31139:191;;;;:::o;31336:175::-;31476:27;31472:1;31464:6;31460:14;31453:51;31336:175;:::o;31517:366::-;31659:3;31680:67;31744:2;31739:3;31680:67;:::i;:::-;31673:74;;31756:93;31845:3;31756:93;:::i;:::-;31874:2;31869:3;31865:12;31858:19;;31517:366;;;:::o;31889:419::-;32055:4;32093:2;32082:9;32078:18;32070:26;;32142:9;32136:4;32132:20;32128:1;32117:9;32113:17;32106:47;32170:131;32296:4;32170:131;:::i;:::-;32162:139;;31889:419;;;:::o;32314:237::-;32454:34;32450:1;32442:6;32438:14;32431:58;32523:20;32518:2;32510:6;32506:15;32499:45;32314:237;:::o;32557:366::-;32699:3;32720:67;32784:2;32779:3;32720:67;:::i;:::-;32713:74;;32796:93;32885:3;32796:93;:::i;:::-;32914:2;32909:3;32905:12;32898:19;;32557:366;;;:::o;32929:419::-;33095:4;33133:2;33122:9;33118:18;33110:26;;33182:9;33176:4;33172:20;33168:1;33157:9;33153:17;33146:47;33210:131;33336:4;33210:131;:::i;:::-;33202:139;;32929:419;;;:::o;33354:98::-;33405:6;33439:5;33433:12;33423:22;;33354:98;;;:::o;33458:168::-;33541:11;33575:6;33570:3;33563:19;33615:4;33610:3;33606:14;33591:29;;33458:168;;;;:::o;33632:360::-;33718:3;33746:38;33778:5;33746:38;:::i;:::-;33800:70;33863:6;33858:3;33800:70;:::i;:::-;33793:77;;33879:52;33924:6;33919:3;33912:4;33905:5;33901:16;33879:52;:::i;:::-;33956:29;33978:6;33956:29;:::i;:::-;33951:3;33947:39;33940:46;;33722:270;33632:360;;;;:::o;33998:640::-;34193:4;34231:3;34220:9;34216:19;34208:27;;34245:71;34313:1;34302:9;34298:17;34289:6;34245:71;:::i;:::-;34326:72;34394:2;34383:9;34379:18;34370:6;34326:72;:::i;:::-;34408;34476:2;34465:9;34461:18;34452:6;34408:72;:::i;:::-;34527:9;34521:4;34517:20;34512:2;34501:9;34497:18;34490:48;34555:76;34626:4;34617:6;34555:76;:::i;:::-;34547:84;;33998:640;;;;;;;:::o;34644:141::-;34700:5;34731:6;34725:13;34716:22;;34747:32;34773:5;34747:32;:::i;:::-;34644:141;;;;:::o;34791:349::-;34860:6;34909:2;34897:9;34888:7;34884:23;34880:32;34877:119;;;34915:79;;:::i;:::-;34877:119;35035:1;35060:63;35115:7;35106:6;35095:9;35091:22;35060:63;:::i;:::-;35050:73;;35006:127;34791:349;;;;:::o;35146:182::-;35286:34;35282:1;35274:6;35270:14;35263:58;35146:182;:::o;35334:366::-;35476:3;35497:67;35561:2;35556:3;35497:67;:::i;:::-;35490:74;;35573:93;35662:3;35573:93;:::i;:::-;35691:2;35686:3;35682:12;35675:19;;35334:366;;;:::o;35706:419::-;35872:4;35910:2;35899:9;35895:18;35887:26;;35959:9;35953:4;35949:20;35945:1;35934:9;35930:17;35923:47;35987:131;36113:4;35987:131;:::i;:::-;35979:139;;35706:419;;;:::o;36131:178::-;36271:30;36267:1;36259:6;36255:14;36248:54;36131:178;:::o;36315:366::-;36457:3;36478:67;36542:2;36537:3;36478:67;:::i;:::-;36471:74;;36554:93;36643:3;36554:93;:::i;:::-;36672:2;36667:3;36663:12;36656:19;;36315:366;;;:::o;36687:419::-;36853:4;36891:2;36880:9;36876:18;36868:26;;36940:9;36934:4;36930:20;36926:1;36915:9;36911:17;36904:47;36968:131;37094:4;36968:131;:::i;:::-;36960:139;;36687:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2357400","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2924","getApproved(uint256)":"5257","isApprovedForAll(address,address)":"infinite","mintNft(int256)":"infinite","name()":"infinite","ownerOf(uint256)":"2982","s_tokenIdToHighValue(uint256)":"2831","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","svgToImageURI(string)":"infinite","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_baseURI()":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mintNft(int256)":"1e930812","name()":"06fdde03","ownerOf(uint256)":"6352211e","s_tokenIdToHighValue(uint256)":"e425aded","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","svgToImageURI(string)":"30d871c6","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"lowSvg\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"highSvg\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"highValue\",\"type\":\"int256\"}],\"name\":\"CreatedNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"highValue\",\"type\":\"int256\"}],\"name\":\"mintNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_tokenIdToHighValue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"svg\",\"type\":\"string\"}],\"name\":\"svgToImageURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DynamicSvgNft.sol\":\"DynamicSvgNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"base64-sol/base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n    bytes  internal constant TABLE_DECODE = hex\\\"0000000000000000000000000000000000000000000000000000000000000000\\\"\\n                                            hex\\\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\\\"\\n                                            hex\\\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\\\"\\n                                            hex\\\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\\\";\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n\\n        // load the table into memory\\n        string memory table = TABLE_ENCODE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                // read 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // write 4 characters\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n            // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n\\n    function decode(string memory _data) internal pure returns (bytes memory) {\\n        bytes memory data = bytes(_data);\\n\\n        if (data.length == 0) return new bytes(0);\\n        require(data.length % 4 == 0, \\\"invalid base64 decoder input\\\");\\n\\n        // load the table into memory\\n        bytes memory table = TABLE_DECODE;\\n\\n        // every 4 characters represent 3 bytes\\n        uint256 decodedLen = (data.length / 4) * 3;\\n\\n        // add some extra buffer at the end required for the writing\\n        bytes memory result = new bytes(decodedLen + 32);\\n\\n        assembly {\\n            // padding with '='\\n            let lastBytes := mload(add(data, mload(data)))\\n            if eq(and(lastBytes, 0xFF), 0x3d) {\\n                decodedLen := sub(decodedLen, 1)\\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\\n                    decodedLen := sub(decodedLen, 1)\\n                }\\n            }\\n\\n            // set the actual output length\\n            mstore(result, decodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 4 characters at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               // read 4 characters\\n               dataPtr := add(dataPtr, 4)\\n               let input := mload(dataPtr)\\n\\n               // write 3 bytes\\n               let output := add(\\n                   add(\\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\\n                   add(\\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\\n                    )\\n                )\\n                mstore(resultPtr, shl(232, output))\\n                resultPtr := add(resultPtr, 3)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\"},\"contracts/DynamicSvgNft.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"base64-sol/base64.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract DynamicSvgNft is ERC721 {\\n    uint256 private s_tokenCounter;\\n    string private i_lowImageURI;\\n    string private i_highImageURI;\\n    string private constant base64EncodedSvgPrefix =\\n        \\\"data:image/svg+xml;base64,\\\";\\n\\n    AggregatorV3Interface internal immutable i_priceFeed;\\n    mapping(uint256 => int256) public s_tokenIdToHighValue;\\n\\n    event CreatedNFT(uint256 indexed tokenId, int256 highValue);\\n\\n    constructor(\\n        address priceFeedAddress,\\n        string memory lowSvg,\\n        string memory highSvg\\n    ) ERC721(\\\"DynamicSvgNft\\\", \\\"DSN\\\") {\\n        s_tokenCounter = 0;\\n        i_lowImageURI = svgToImageURI(lowSvg);\\n        i_highImageURI = svgToImageURI(highSvg);\\n        i_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function svgToImageURI(string memory svg)\\n        public\\n        pure\\n        returns (string memory)\\n    {\\n        string memory svgBase64Encoded = Base64.encode(\\n            bytes(string(abi.encodePacked(svg)))\\n        );\\n        return\\n            string(abi.encodePacked(base64EncodedSvgPrefix, svgBase64Encoded));\\n    }\\n\\n    function mintNft(int256 highValue) public {\\n        s_tokenIdToHighValue[s_tokenCounter] = highValue;\\n        s_tokenCounter += s_tokenCounter;\\n        _safeMint(msg.sender, s_tokenCounter);\\n\\n        emit CreatedNFT(s_tokenCounter, highValue);\\n    }\\n\\n    function tokenURI(uint256 tokenId)\\n        public\\n        view\\n        override\\n        returns (string memory)\\n    {\\n        require(_exists(tokenId), \\\"URI Query for non existent token\\\");\\n\\n        (, int256 price, , , ) = i_priceFeed.latestRoundData();\\n        string memory imageURI = i_lowImageURI;\\n        if (price >= s_tokenIdToHighValue[tokenId]) {\\n            imageURI = i_highImageURI;\\n        }\\n        return\\n            string(\\n                abi.encodePacked(\\n                    _baseURI(),\\n                    Base64.encode(\\n                        bytes(\\n                            abi.encodePacked(\\n                                ('{\\\"name:\\\"'),\\n                                name(),\\n                                '\\\"',\\n                                '\\\"description\\\":\\\"An NFT that changes based on chainlink price Feed!!\\\"',\\n                                '\\\"attributes\\\":[{\\\"trait_type\\\": \\\"coolness\\\",:value:100}],\\\"image\\\":\\\"',\\n                                imageURI,\\n                                '\\\"}'\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n\\n    function _baseURI() internal pure override returns (string memory) {\\n        return \\\"data:application/json;base64,\\\";\\n    }\\n}\\n\",\"keccak256\":\"0x0d30c5e1abc35cdadd22ab5fa154886ad17bb55ae79f36a70f26a2ebb1caa187\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1005,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1007,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1011,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1015,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1019,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1025,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2835,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"s_tokenCounter","offset":0,"slot":"6","type":"t_uint256"},{"astId":2837,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"i_lowImageURI","offset":0,"slot":"7","type":"t_string_storage"},{"astId":2839,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"i_highImageURI","offset":0,"slot":"8","type":"t_string_storage"},{"astId":2849,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"s_tokenIdToHighValue","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_int256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_int256":{"encoding":"inplace","label":"int256","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_int256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => int256)","numberOfBytes":"32","value":"t_int256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/RandomIpfsNft.sol":{"RandomIpfsNft":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinatorV2","type":"address"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"string[3]","name":"dogTokenUris","type":"string[3]"},{"internalType":"uint256","name":"mintFee","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"RandomIpfsNft__NeedMoreETHSent","type":"error"},{"inputs":[],"name":"RandomIpfsNft__OutOfBounds","type":"error"},{"inputs":[],"name":"RandomIpfsNft__TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"enum RandomIpfsNft.Breed","name":"dogBreed","type":"uint8"},{"indexed":false,"internalType":"address","name":"minter","type":"address"}],"name":"NftMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"address","name":"requester","type":"address"}],"name":"NftRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"moddedRng","type":"uint256"}],"name":"getBreedFromModdedRng","outputs":[{"internalType":"enum RandomIpfsNft.Breed","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getChanceArray","outputs":[{"internalType":"uint256[3]","name":"","type":"uint256[3]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getDogTokenUris","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMintFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestNft","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_requestIdToSender","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_tokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1042":{"entryPoint":null,"id":1042,"parameterSlots":2,"returnSlots":0},"@_21":{"entryPoint":null,"id":21,"parameterSlots":1,"returnSlots":0},"@_3140":{"entryPoint":null,"id":3140,"parameterSlots":6,"returnSlots":0},"@_890":{"entryPoint":null,"id":890,"parameterSlots":0,"returnSlots":0},"@_msgSender_2439":{"entryPoint":464,"id":2439,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_978":{"entryPoint":472,"id":978,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory":{"entryPoint":1812,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1686,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory":{"entryPoint":1952,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":1285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1761,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2036,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":1350,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":1226,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_uint256_fromMemory":{"entryPoint":2059,"id":null,"parameterSlots":2,"returnSlots":6},"allocate_memory":{"entryPoint":1496,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1059,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr":{"entryPoint":1527,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1578,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":1111,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1249,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2000,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":1308,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":1180,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1632,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2293,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1442,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":2246,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1395,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1373,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":1568,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1573,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1074,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1069,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1378,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1131,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":1259,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2010,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":1324,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":1200,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8280:20","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:20","statements":[{"nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:20"},"nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:20"},"nodeType":"YulFunctionCall","src":"187:12:20"},"nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:20"},"nodeType":"YulFunctionCall","src":"310:12:20"},"nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nodeType":"YulBlock","src":"379:81:20","statements":[{"nodeType":"YulAssignment","src":"389:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:20"},"nodeType":"YulFunctionCall","src":"400:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:20","type":""}],"src":"334:126:20"},{"body":{"nodeType":"YulBlock","src":"511:51:20","statements":[{"nodeType":"YulAssignment","src":"521:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:20"},"nodeType":"YulFunctionCall","src":"532:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:20","type":""}],"src":"466:96:20"},{"body":{"nodeType":"YulBlock","src":"611:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:20"},"nodeType":"YulFunctionCall","src":"670:12:20"},"nodeType":"YulExpressionStatement","src":"670:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:20"},"nodeType":"YulFunctionCall","src":"641:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:20"},"nodeType":"YulFunctionCall","src":"631:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:20"},"nodeType":"YulFunctionCall","src":"624:43:20"},"nodeType":"YulIf","src":"621:63:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:20","type":""}],"src":"568:122:20"},{"body":{"nodeType":"YulBlock","src":"759:80:20","statements":[{"nodeType":"YulAssignment","src":"769:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:20"},"nodeType":"YulFunctionCall","src":"778:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:20"},"nodeType":"YulFunctionCall","src":"800:33:20"},"nodeType":"YulExpressionStatement","src":"800:33:20"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:20","type":""}],"src":"696:143:20"},{"body":{"nodeType":"YulBlock","src":"889:57:20","statements":[{"nodeType":"YulAssignment","src":"899:41:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"914:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"921:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"910:3:20"},"nodeType":"YulFunctionCall","src":"910:30:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"899:7:20"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"871:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"881:7:20","type":""}],"src":"845:101:20"},{"body":{"nodeType":"YulBlock","src":"994:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"1050:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1059:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1062:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1052:6:20"},"nodeType":"YulFunctionCall","src":"1052:12:20"},"nodeType":"YulExpressionStatement","src":"1052:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1017:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1041:5:20"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"1024:16:20"},"nodeType":"YulFunctionCall","src":"1024:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1014:2:20"},"nodeType":"YulFunctionCall","src":"1014:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1007:6:20"},"nodeType":"YulFunctionCall","src":"1007:42:20"},"nodeType":"YulIf","src":"1004:62:20"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"987:5:20","type":""}],"src":"952:120:20"},{"body":{"nodeType":"YulBlock","src":"1140:79:20","statements":[{"nodeType":"YulAssignment","src":"1150:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1165:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1159:5:20"},"nodeType":"YulFunctionCall","src":"1159:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1150:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1207:5:20"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"1181:25:20"},"nodeType":"YulFunctionCall","src":"1181:32:20"},"nodeType":"YulExpressionStatement","src":"1181:32:20"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1118:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1126:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1134:5:20","type":""}],"src":"1078:141:20"},{"body":{"nodeType":"YulBlock","src":"1270:32:20","statements":[{"nodeType":"YulAssignment","src":"1280:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"1291:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1280:7:20"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1252:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1262:7:20","type":""}],"src":"1225:77:20"},{"body":{"nodeType":"YulBlock","src":"1351:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"1408:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1417:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1420:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1410:6:20"},"nodeType":"YulFunctionCall","src":"1410:12:20"},"nodeType":"YulExpressionStatement","src":"1410:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1374:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1399:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1381:17:20"},"nodeType":"YulFunctionCall","src":"1381:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1371:2:20"},"nodeType":"YulFunctionCall","src":"1371:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1364:6:20"},"nodeType":"YulFunctionCall","src":"1364:43:20"},"nodeType":"YulIf","src":"1361:63:20"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1344:5:20","type":""}],"src":"1308:122:20"},{"body":{"nodeType":"YulBlock","src":"1499:80:20","statements":[{"nodeType":"YulAssignment","src":"1509:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1524:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1518:5:20"},"nodeType":"YulFunctionCall","src":"1518:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1509:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1567:5:20"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1540:26:20"},"nodeType":"YulFunctionCall","src":"1540:33:20"},"nodeType":"YulExpressionStatement","src":"1540:33:20"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1477:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1485:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1493:5:20","type":""}],"src":"1436:143:20"},{"body":{"nodeType":"YulBlock","src":"1629:49:20","statements":[{"nodeType":"YulAssignment","src":"1639:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1654:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1661:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1650:3:20"},"nodeType":"YulFunctionCall","src":"1650:22:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1639:7:20"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1611:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1621:7:20","type":""}],"src":"1585:93:20"},{"body":{"nodeType":"YulBlock","src":"1726:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"1782:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1791:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1794:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1784:6:20"},"nodeType":"YulFunctionCall","src":"1784:12:20"},"nodeType":"YulExpressionStatement","src":"1784:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1749:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:20"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"1756:16:20"},"nodeType":"YulFunctionCall","src":"1756:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1746:2:20"},"nodeType":"YulFunctionCall","src":"1746:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1739:6:20"},"nodeType":"YulFunctionCall","src":"1739:42:20"},"nodeType":"YulIf","src":"1736:62:20"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1719:5:20","type":""}],"src":"1684:120:20"},{"body":{"nodeType":"YulBlock","src":"1872:79:20","statements":[{"nodeType":"YulAssignment","src":"1882:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1897:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1891:5:20"},"nodeType":"YulFunctionCall","src":"1891:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1882:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1939:5:20"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1913:25:20"},"nodeType":"YulFunctionCall","src":"1913:32:20"},"nodeType":"YulExpressionStatement","src":"1913:32:20"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1850:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"1858:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1866:5:20","type":""}],"src":"1810:141:20"},{"body":{"nodeType":"YulBlock","src":"2046:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2063:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2066:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2056:6:20"},"nodeType":"YulFunctionCall","src":"2056:12:20"},"nodeType":"YulExpressionStatement","src":"2056:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1957:117:20"},{"body":{"nodeType":"YulBlock","src":"2128:54:20","statements":[{"nodeType":"YulAssignment","src":"2138:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2156:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2152:3:20"},"nodeType":"YulFunctionCall","src":"2152:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2172:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2168:3:20"},"nodeType":"YulFunctionCall","src":"2168:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2148:3:20"},"nodeType":"YulFunctionCall","src":"2148:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2138:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2111:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2121:6:20","type":""}],"src":"2080:102:20"},{"body":{"nodeType":"YulBlock","src":"2216:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2226:6:20"},"nodeType":"YulFunctionCall","src":"2226:88:20"},"nodeType":"YulExpressionStatement","src":"2226:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2330:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2333:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2323:6:20"},"nodeType":"YulFunctionCall","src":"2323:15:20"},"nodeType":"YulExpressionStatement","src":"2323:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2354:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2357:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2347:6:20"},"nodeType":"YulFunctionCall","src":"2347:15:20"},"nodeType":"YulExpressionStatement","src":"2347:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2188:180:20"},{"body":{"nodeType":"YulBlock","src":"2417:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2427:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2449:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2479:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2457:21:20"},"nodeType":"YulFunctionCall","src":"2457:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2445:3:20"},"nodeType":"YulFunctionCall","src":"2445:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2431:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2596:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2598:16:20"},"nodeType":"YulFunctionCall","src":"2598:18:20"},"nodeType":"YulExpressionStatement","src":"2598:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2539:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"2551:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2536:2:20"},"nodeType":"YulFunctionCall","src":"2536:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2575:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2587:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2572:2:20"},"nodeType":"YulFunctionCall","src":"2572:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2533:2:20"},"nodeType":"YulFunctionCall","src":"2533:62:20"},"nodeType":"YulIf","src":"2530:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2634:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2638:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2627:6:20"},"nodeType":"YulFunctionCall","src":"2627:22:20"},"nodeType":"YulExpressionStatement","src":"2627:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2403:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"2411:4:20","type":""}],"src":"2374:281:20"},{"body":{"nodeType":"YulBlock","src":"2702:88:20","statements":[{"nodeType":"YulAssignment","src":"2712:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2722:18:20"},"nodeType":"YulFunctionCall","src":"2722:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2712:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2771:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"2779:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2751:19:20"},"nodeType":"YulFunctionCall","src":"2751:33:20"},"nodeType":"YulExpressionStatement","src":"2751:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2686:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2695:6:20","type":""}],"src":"2661:129:20"},{"body":{"nodeType":"YulBlock","src":"2886:169:20","statements":[{"body":{"nodeType":"YulBlock","src":"2991:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2993:16:20"},"nodeType":"YulFunctionCall","src":"2993:18:20"},"nodeType":"YulExpressionStatement","src":"2993:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2963:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2971:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2960:2:20"},"nodeType":"YulFunctionCall","src":"2960:30:20"},"nodeType":"YulIf","src":"2957:56:20"},{"nodeType":"YulAssignment","src":"3023:25:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3035:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3043:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3031:3:20"},"nodeType":"YulFunctionCall","src":"3031:17:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3023:4:20"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2870:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2881:4:20","type":""}],"src":"2796:259:20"},{"body":{"nodeType":"YulBlock","src":"3150:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3167:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3170:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3160:6:20"},"nodeType":"YulFunctionCall","src":"3160:12:20"},"nodeType":"YulExpressionStatement","src":"3160:12:20"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"3061:117:20"},{"body":{"nodeType":"YulBlock","src":"3273:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3290:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3293:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3283:6:20"},"nodeType":"YulFunctionCall","src":"3283:12:20"},"nodeType":"YulExpressionStatement","src":"3283:12:20"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3184:117:20"},{"body":{"nodeType":"YulBlock","src":"3374:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"3479:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3481:16:20"},"nodeType":"YulFunctionCall","src":"3481:18:20"},"nodeType":"YulExpressionStatement","src":"3481:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3451:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3459:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3448:2:20"},"nodeType":"YulFunctionCall","src":"3448:30:20"},"nodeType":"YulIf","src":"3445:56:20"},{"nodeType":"YulAssignment","src":"3511:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3541:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3519:21:20"},"nodeType":"YulFunctionCall","src":"3519:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3511:4:20"}]},{"nodeType":"YulAssignment","src":"3585:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3597:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"3603:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3593:3:20"},"nodeType":"YulFunctionCall","src":"3593:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3585:4:20"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3358:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3369:4:20","type":""}],"src":"3307:308:20"},{"body":{"nodeType":"YulBlock","src":"3670:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3680:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3689:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3684:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3749:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3774:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"3779:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3770:3:20"},"nodeType":"YulFunctionCall","src":"3770:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3793:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"3798:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3789:3:20"},"nodeType":"YulFunctionCall","src":"3789:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3783:5:20"},"nodeType":"YulFunctionCall","src":"3783:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3763:6:20"},"nodeType":"YulFunctionCall","src":"3763:39:20"},"nodeType":"YulExpressionStatement","src":"3763:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3710:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"3713:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3707:2:20"},"nodeType":"YulFunctionCall","src":"3707:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3721:19:20","statements":[{"nodeType":"YulAssignment","src":"3723:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3732:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"3735:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3728:3:20"},"nodeType":"YulFunctionCall","src":"3728:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3723:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"3703:3:20","statements":[]},"src":"3699:113:20"},{"body":{"nodeType":"YulBlock","src":"3846:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3896:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"3901:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3892:3:20"},"nodeType":"YulFunctionCall","src":"3892:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"3910:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3885:6:20"},"nodeType":"YulFunctionCall","src":"3885:27:20"},"nodeType":"YulExpressionStatement","src":"3885:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3827:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"3830:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3824:2:20"},"nodeType":"YulFunctionCall","src":"3824:13:20"},"nodeType":"YulIf","src":"3821:101:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3652:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3657:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"3662:6:20","type":""}],"src":"3621:307:20"},{"body":{"nodeType":"YulBlock","src":"4029:326:20","statements":[{"nodeType":"YulAssignment","src":"4039:75:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4106:6:20"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4064:41:20"},"nodeType":"YulFunctionCall","src":"4064:49:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4048:15:20"},"nodeType":"YulFunctionCall","src":"4048:66:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4039:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4130:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"4137:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4123:6:20"},"nodeType":"YulFunctionCall","src":"4123:21:20"},"nodeType":"YulExpressionStatement","src":"4123:21:20"},{"nodeType":"YulVariableDeclaration","src":"4153:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4168:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"4175:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4164:3:20"},"nodeType":"YulFunctionCall","src":"4164:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4157:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4218:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4220:77:20"},"nodeType":"YulFunctionCall","src":"4220:79:20"},"nodeType":"YulExpressionStatement","src":"4220:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4199:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"4204:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4195:3:20"},"nodeType":"YulFunctionCall","src":"4195:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"4213:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4192:2:20"},"nodeType":"YulFunctionCall","src":"4192:25:20"},"nodeType":"YulIf","src":"4189:112:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4332:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"4337:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"4342:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4310:21:20"},"nodeType":"YulFunctionCall","src":"4310:39:20"},"nodeType":"YulExpressionStatement","src":"4310:39:20"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4002:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"4007:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"4015:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4023:5:20","type":""}],"src":"3934:421:20"},{"body":{"nodeType":"YulBlock","src":"4448:282:20","statements":[{"body":{"nodeType":"YulBlock","src":"4497:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4499:77:20"},"nodeType":"YulFunctionCall","src":"4499:79:20"},"nodeType":"YulExpressionStatement","src":"4499:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4476:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4484:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4472:3:20"},"nodeType":"YulFunctionCall","src":"4472:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"4491:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4468:3:20"},"nodeType":"YulFunctionCall","src":"4468:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4461:6:20"},"nodeType":"YulFunctionCall","src":"4461:35:20"},"nodeType":"YulIf","src":"4458:122:20"},{"nodeType":"YulVariableDeclaration","src":"4589:27:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4609:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4603:5:20"},"nodeType":"YulFunctionCall","src":"4603:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4593:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4625:99:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4697:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4705:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4693:3:20"},"nodeType":"YulFunctionCall","src":"4693:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"4712:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"4720:3:20"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4634:58:20"},"nodeType":"YulFunctionCall","src":"4634:90:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4625:5:20"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4426:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"4434:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4442:5:20","type":""}],"src":"4375:355:20"},{"body":{"nodeType":"YulBlock","src":"4874:772:20","statements":[{"nodeType":"YulAssignment","src":"4884:98:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4974:6:20"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr","nodeType":"YulIdentifier","src":"4909:64:20"},"nodeType":"YulFunctionCall","src":"4909:72:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4893:15:20"},"nodeType":"YulFunctionCall","src":"4893:89:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4884:5:20"}]},{"nodeType":"YulVariableDeclaration","src":"4991:16:20","value":{"name":"array","nodeType":"YulIdentifier","src":"5002:5:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4995:3:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5017:44:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5035:6:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5047:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"5055:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5043:3:20"},"nodeType":"YulFunctionCall","src":"5043:17:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5031:3:20"},"nodeType":"YulFunctionCall","src":"5031:30:20"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5021:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5089:103:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5103:77:20"},"nodeType":"YulFunctionCall","src":"5103:79:20"},"nodeType":"YulExpressionStatement","src":"5103:79:20"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5076:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"5084:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5073:2:20"},"nodeType":"YulFunctionCall","src":"5073:15:20"},"nodeType":"YulIf","src":"5070:122:20"},{"body":{"nodeType":"YulBlock","src":"5277:363:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5292:29:20","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5317:3:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5311:5:20"},"nodeType":"YulFunctionCall","src":"5311:10:20"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"5296:11:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5373:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5375:77:20"},"nodeType":"YulFunctionCall","src":"5375:79:20"},"nodeType":"YulExpressionStatement","src":"5375:79:20"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"5340:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"5353:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5337:2:20"},"nodeType":"YulFunctionCall","src":"5337:35:20"},"nodeType":"YulIf","src":"5334:122:20"},{"nodeType":"YulVariableDeclaration","src":"5469:42:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5491:6:20"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"5499:11:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5487:3:20"},"nodeType":"YulFunctionCall","src":"5487:24:20"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"5473:10:20","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5532:3:20"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"5579:10:20"},{"name":"end","nodeType":"YulIdentifier","src":"5591:3:20"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"5537:41:20"},"nodeType":"YulFunctionCall","src":"5537:58:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5525:6:20"},"nodeType":"YulFunctionCall","src":"5525:71:20"},"nodeType":"YulExpressionStatement","src":"5525:71:20"},{"nodeType":"YulAssignment","src":"5609:21:20","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5620:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"5625:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5616:3:20"},"nodeType":"YulFunctionCall","src":"5616:14:20"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5609:3:20"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5230:3:20"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5235:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5227:2:20"},"nodeType":"YulFunctionCall","src":"5227:15:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5243:25:20","statements":[{"nodeType":"YulAssignment","src":"5245:21:20","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5256:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"5261:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:20"},"nodeType":"YulFunctionCall","src":"5252:14:20"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5245:3:20"}]}]},"pre":{"nodeType":"YulBlock","src":"5205:21:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5207:17:20","value":{"name":"offset","nodeType":"YulIdentifier","src":"5218:6:20"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5211:3:20","type":""}]}]},"src":"5201:439:20"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4844:6:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"4852:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"4860:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4868:5:20","type":""}],"src":"4753:893:20"},{"body":{"nodeType":"YulBlock","src":"5765:285:20","statements":[{"body":{"nodeType":"YulBlock","src":"5814:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5816:77:20"},"nodeType":"YulFunctionCall","src":"5816:79:20"},"nodeType":"YulExpressionStatement","src":"5816:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5793:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"5801:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5789:3:20"},"nodeType":"YulFunctionCall","src":"5789:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"5808:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5785:3:20"},"nodeType":"YulFunctionCall","src":"5785:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5778:6:20"},"nodeType":"YulFunctionCall","src":"5778:35:20"},"nodeType":"YulIf","src":"5775:122:20"},{"nodeType":"YulVariableDeclaration","src":"5906:18:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5920:4:20","type":"","value":"0x03"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5910:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5933:111:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6024:6:20"},{"name":"length","nodeType":"YulIdentifier","src":"6032:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"6040:3:20"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"5942:81:20"},"nodeType":"YulFunctionCall","src":"5942:102:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5933:5:20"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5743:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"5751:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5759:5:20","type":""}],"src":"5669:381:20"},{"body":{"nodeType":"YulBlock","src":"6101:32:20","statements":[{"nodeType":"YulAssignment","src":"6111:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"6122:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6111:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6083:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6093:7:20","type":""}],"src":"6056:77:20"},{"body":{"nodeType":"YulBlock","src":"6182:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"6239:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6248:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6251:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6241:6:20"},"nodeType":"YulFunctionCall","src":"6241:12:20"},"nodeType":"YulExpressionStatement","src":"6241:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6205:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6230:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6212:17:20"},"nodeType":"YulFunctionCall","src":"6212:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6202:2:20"},"nodeType":"YulFunctionCall","src":"6202:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6195:6:20"},"nodeType":"YulFunctionCall","src":"6195:43:20"},"nodeType":"YulIf","src":"6192:63:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6175:5:20","type":""}],"src":"6139:122:20"},{"body":{"nodeType":"YulBlock","src":"6330:80:20","statements":[{"nodeType":"YulAssignment","src":"6340:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6355:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6349:5:20"},"nodeType":"YulFunctionCall","src":"6349:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6340:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6398:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6371:26:20"},"nodeType":"YulFunctionCall","src":"6371:33:20"},"nodeType":"YulExpressionStatement","src":"6371:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6308:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"6316:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6324:5:20","type":""}],"src":"6267:143:20"},{"body":{"nodeType":"YulBlock","src":"6609:1156:20","statements":[{"body":{"nodeType":"YulBlock","src":"6656:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6658:77:20"},"nodeType":"YulFunctionCall","src":"6658:79:20"},"nodeType":"YulExpressionStatement","src":"6658:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6630:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"6639:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6626:3:20"},"nodeType":"YulFunctionCall","src":"6626:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"6651:3:20","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6622:3:20"},"nodeType":"YulFunctionCall","src":"6622:33:20"},"nodeType":"YulIf","src":"6619:120:20"},{"nodeType":"YulBlock","src":"6749:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6764:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6778:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6768:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6793:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6839:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6850:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6835:3:20"},"nodeType":"YulFunctionCall","src":"6835:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6859:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"6803:31:20"},"nodeType":"YulFunctionCall","src":"6803:64:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6793:6:20"}]}]},{"nodeType":"YulBlock","src":"6887:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6902:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6916:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6906:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6932:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6977:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6988:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6973:3:20"},"nodeType":"YulFunctionCall","src":"6973:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6997:7:20"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"6942:30:20"},"nodeType":"YulFunctionCall","src":"6942:63:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6932:6:20"}]}]},{"nodeType":"YulBlock","src":"7025:129:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7040:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7054:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7044:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7070:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7116:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7127:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7112:3:20"},"nodeType":"YulFunctionCall","src":"7112:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7136:7:20"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"7080:31:20"},"nodeType":"YulFunctionCall","src":"7080:64:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7070:6:20"}]}]},{"nodeType":"YulBlock","src":"7164:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7179:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7193:2:20","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7183:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7209:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7254:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7265:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7250:3:20"},"nodeType":"YulFunctionCall","src":"7250:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7274:7:20"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"7219:30:20"},"nodeType":"YulFunctionCall","src":"7219:63:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7209:6:20"}]}]},{"nodeType":"YulBlock","src":"7302:316:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7317:40:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7341:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7352:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7337:3:20"},"nodeType":"YulFunctionCall","src":"7337:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7331:5:20"},"nodeType":"YulFunctionCall","src":"7331:26:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7321:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"7404:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7406:77:20"},"nodeType":"YulFunctionCall","src":"7406:79:20"},"nodeType":"YulExpressionStatement","src":"7406:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7376:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7384:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7373:2:20"},"nodeType":"YulFunctionCall","src":"7373:30:20"},"nodeType":"YulIf","src":"7370:117:20"},{"nodeType":"YulAssignment","src":"7501:107:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7580:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7591:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7576:3:20"},"nodeType":"YulFunctionCall","src":"7576:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7600:7:20"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"7511:64:20"},"nodeType":"YulFunctionCall","src":"7511:97:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7501:6:20"}]}]},{"nodeType":"YulBlock","src":"7628:130:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7643:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7657:3:20","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7647:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7674:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7720:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7731:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7716:3:20"},"nodeType":"YulFunctionCall","src":"7716:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7740:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7684:31:20"},"nodeType":"YulFunctionCall","src":"7684:64:20"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7674:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6539:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6550:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6562:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6570:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6578:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6586:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6594:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6602:6:20","type":""}],"src":"6416:1349:20"},{"body":{"nodeType":"YulBlock","src":"7799:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7816:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7819:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7809:6:20"},"nodeType":"YulFunctionCall","src":"7809:88:20"},"nodeType":"YulExpressionStatement","src":"7809:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7913:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7916:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7906:6:20"},"nodeType":"YulFunctionCall","src":"7906:15:20"},"nodeType":"YulExpressionStatement","src":"7906:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7937:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7940:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7930:6:20"},"nodeType":"YulFunctionCall","src":"7930:15:20"},"nodeType":"YulExpressionStatement","src":"7930:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7771:180:20"},{"body":{"nodeType":"YulBlock","src":"8008:269:20","statements":[{"nodeType":"YulAssignment","src":"8018:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8032:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"8038:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8028:3:20"},"nodeType":"YulFunctionCall","src":"8028:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8018:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"8049:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8079:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"8085:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8075:3:20"},"nodeType":"YulFunctionCall","src":"8075:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8053:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"8126:51:20","statements":[{"nodeType":"YulAssignment","src":"8140:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8154:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8162:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8150:3:20"},"nodeType":"YulFunctionCall","src":"8150:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8140:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8106:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8099:6:20"},"nodeType":"YulFunctionCall","src":"8099:26:20"},"nodeType":"YulIf","src":"8096:81:20"},{"body":{"nodeType":"YulBlock","src":"8229:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8243:16:20"},"nodeType":"YulFunctionCall","src":"8243:18:20"},"nodeType":"YulExpressionStatement","src":"8243:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8193:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8216:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8224:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8213:2:20"},"nodeType":"YulFunctionCall","src":"8213:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8190:2:20"},"nodeType":"YulFunctionCall","src":"8190:38:20"},"nodeType":"YulIf","src":"8187:84:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7992:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8001:6:20","type":""}],"src":"7957:320:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // string[3]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr(length))\n        let dst := array\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[3]\n    function abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := 0x03\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x431C CODESIZE SUB DUP1 PUSH3 0x431C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x80B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52616E646F6D497066734E667400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52494E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP8 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xF5 SWAP3 SWAP2 SWAP1 PUSH3 0x29E JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10E SWAP3 SWAP2 SWAP1 PUSH3 0x29E JUMP JUMPDEST POP POP POP PUSH3 0x131 PUSH3 0x125 PUSH3 0x1D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1D8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 SHL DUP2 MSTORE POP POP DUP4 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP3 PUSH4 0xFFFFFFFF AND PUSH2 0x100 DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE POP POP DUP2 PUSH1 0xA SWAP1 PUSH1 0x3 PUSH3 0x1BA SWAP3 SWAP2 SWAP1 PUSH3 0x32F JUMP JUMPDEST POP DUP1 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH3 0x92B JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x2AC SWAP1 PUSH3 0x8F5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x2D0 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x31C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2EB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x31C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x31C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x31B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2FE JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x32B SWAP2 SWAP1 PUSH3 0x396 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x383 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x382 JUMPI DUP3 MLOAD DUP3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x371 SWAP3 SWAP2 SWAP1 PUSH3 0x29E JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x350 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x392 SWAP2 SWAP1 PUSH3 0x3B5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3B1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x397 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3D9 JUMPI PUSH1 0x0 DUP2 DUP2 PUSH3 0x3CF SWAP2 SWAP1 PUSH3 0x3DD JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH3 0x3B6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH3 0x3EB SWAP1 PUSH3 0x8F5 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH3 0x3FF JUMPI POP PUSH3 0x420 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH3 0x41F SWAP2 SWAP1 PUSH3 0x396 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x464 DUP3 PUSH3 0x437 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x476 DUP2 PUSH3 0x457 JUMP JUMPDEST DUP2 EQ PUSH3 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x496 DUP2 PUSH3 0x46B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4BB DUP2 PUSH3 0x49C JUMP JUMPDEST DUP2 EQ PUSH3 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4DB DUP2 PUSH3 0x4B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4F6 DUP2 PUSH3 0x4E1 JUMP JUMPDEST DUP2 EQ PUSH3 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x516 DUP2 PUSH3 0x4EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x537 DUP2 PUSH3 0x51C JUMP JUMPDEST DUP2 EQ PUSH3 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x557 DUP2 PUSH3 0x52C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x5AD DUP3 PUSH3 0x562 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x5CF JUMPI PUSH3 0x5CE PUSH3 0x573 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5E4 PUSH3 0x423 JUMP JUMPDEST SWAP1 POP PUSH3 0x5F2 DUP3 DUP3 PUSH3 0x5A2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x615 JUMPI PUSH3 0x614 PUSH3 0x573 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x648 JUMPI PUSH3 0x647 PUSH3 0x573 JUMP JUMPDEST JUMPDEST PUSH3 0x653 DUP3 PUSH3 0x562 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x680 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x663 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x690 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6AD PUSH3 0x6A7 DUP5 PUSH3 0x62A JUMP JUMPDEST PUSH3 0x5D8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x6CC JUMPI PUSH3 0x6CB PUSH3 0x625 JUMP JUMPDEST JUMPDEST PUSH3 0x6D9 DUP5 DUP3 DUP6 PUSH3 0x660 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x6F9 JUMPI PUSH3 0x6F8 PUSH3 0x55D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x70B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x696 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x72B PUSH3 0x725 DUP5 PUSH3 0x5F7 JUMP JUMPDEST PUSH3 0x5D8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x748 JUMPI PUSH3 0x747 PUSH3 0x620 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x796 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x771 JUMPI PUSH3 0x770 PUSH3 0x55D JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH3 0x780 DUP10 DUP3 PUSH3 0x6E1 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x74A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7B8 JUMPI PUSH3 0x7B7 PUSH3 0x55D JUMP JUMPDEST JUMPDEST PUSH1 0x3 PUSH3 0x7C7 DUP5 DUP3 DUP6 PUSH3 0x714 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7E5 DUP2 PUSH3 0x7D0 JUMP JUMPDEST DUP2 EQ PUSH3 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x805 DUP2 PUSH3 0x7DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x82B JUMPI PUSH3 0x82A PUSH3 0x42D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x83B DUP10 DUP3 DUP11 ADD PUSH3 0x485 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x84E DUP10 DUP3 DUP11 ADD PUSH3 0x4CA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x861 DUP10 DUP3 DUP11 ADD PUSH3 0x505 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x874 DUP10 DUP3 DUP11 ADD PUSH3 0x546 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x898 JUMPI PUSH3 0x897 PUSH3 0x432 JUMP JUMPDEST JUMPDEST PUSH3 0x8A6 DUP10 DUP3 DUP11 ADD PUSH3 0x7A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x8B9 DUP10 DUP3 DUP11 ADD PUSH3 0x7F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x90E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x925 JUMPI PUSH3 0x924 PUSH3 0x8C6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0xC0 SHR PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0xE0 SHR PUSH2 0x120 MLOAD PUSH2 0x3987 PUSH3 0x995 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xD76 ADD MSTORE PUSH2 0xF85 ADD MSTORE PUSH1 0x0 PUSH2 0x105F ADD MSTORE PUSH1 0x0 PUSH2 0x101B ADD MSTORE PUSH1 0x0 PUSH2 0x103C ADD MSTORE PUSH1 0x0 PUSH2 0xFDF ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x91D ADD MSTORE PUSH2 0x971 ADD MSTORE PUSH2 0x3987 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA36F573B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61A JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0xA36F573B EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0xA51CCCF3 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xAA152491 EQ PUSH2 0x559 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4B6 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x5DACF5F4 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x3B6 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x3AF25975 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x30E JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xB21A83B EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x294C JUMP JUMPDEST PUSH2 0x9DB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH2 0xAEB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x294C JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x363 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x2A4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH2 0xD5E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A0 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0xE56 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x506 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x543 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x2B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x561 PUSH2 0xF81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x1181 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x641 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x138A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x70E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x71E JUMPI POP PUSH2 0x71D DUP3 PUSH2 0x140E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x734 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x760 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x782 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x790 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C2 DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x808 DUP3 PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x870 SWAP1 PUSH2 0x2DDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x898 PUSH2 0x14C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x8C7 JUMPI POP PUSH2 0x8C6 DUP2 PUSH2 0x8C1 PUSH2 0x14C3 JUMP JUMPDEST PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST PUSH2 0x906 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x2E6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x910 DUP4 DUP4 PUSH2 0x14CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9CD JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D7 DUP3 DUP3 PUSH2 0x1584 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9EC PUSH2 0x9E6 PUSH2 0x14C3 JUMP JUMPDEST DUP3 PUSH2 0x1724 JUMP JUMPDEST PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA22 SWAP1 PUSH2 0x2F28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA36 DUP4 DUP4 DUP4 PUSH2 0x17B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA51 JUMPI PUSH2 0xA50 PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xA66 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA92 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xADF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAB4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xADF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAC2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF3 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xB1E SWAP1 PUSH2 0x2FA8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB9B JUMPI PUSH1 0x40 MLOAD PUSH32 0xCA7E25B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBBA DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1181 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBC7 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8A SWAP1 PUSH2 0x3009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0E SWAP1 PUSH2 0x309B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD66 PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0xD70 PUSH1 0x0 PUSH2 0x1A9E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xDD3 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDFF SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE68 PUSH2 0xE61 PUSH2 0x14C3 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1B64 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0xEB0 PUSH2 0xBBF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xF49 JUMPI DUP3 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0xEEF JUMPI POP DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xEDC JUMPI PUSH2 0xEDB PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xEEC SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0xF11 JUMPI DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF07 JUMPI PUSH2 0xF06 PUSH2 0x2AFE JUMP JUMPDEST JUMPDEST SWAP4 POP POP POP POP PUSH2 0xF7C JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xF24 JUMPI PUSH2 0xF23 PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xF34 SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0xF41 SWAP1 PUSH2 0x3140 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEB5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x69FBED1600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0xFDD JUMPI PUSH1 0x40 MLOAD PUSH32 0xB90F491000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3201 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x3269 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xF873236E6CC0ECC5BE1A9A35C95EE5B8D1AC4CC7BFEF0CC5060391D6CC98E26B CALLER PUSH1 0x40 MLOAD PUSH2 0x1176 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x1192 PUSH2 0x118C PUSH2 0x14C3 JUMP JUMPDEST DUP4 PUSH2 0x1724 JUMP JUMPDEST PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C8 SWAP1 PUSH2 0x2F28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11DD DUP5 DUP5 DUP5 DUP5 PUSH2 0x1CD1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11EE DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x120E SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x123A SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1287 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x125C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1287 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x126A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1298 PUSH2 0x1D2D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12AE JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x12E3 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12CB SWAP3 SWAP2 SWAP1 PUSH2 0x32D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x12F1 JUMP JUMPDEST PUSH2 0x12EC DUP5 PUSH2 0x1D44 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1392 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F9 SWAP1 PUSH2 0x3368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x140B DUP2 PUSH2 0x1A9E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1481 DUP2 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x14C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B7 SWAP1 PUSH2 0x3009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x153E DUP4 PUSH2 0xBEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x15DB JUMPI PUSH2 0x15DA PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x15ED SWAP2 SWAP1 PUSH2 0x33B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15FA DUP3 PUSH2 0xE9F JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1610 SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1621 DUP5 DUP5 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x16E3 DUP4 PUSH1 0xA DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x2AFE JUMP JUMPDEST JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x164B JUMPI PUSH2 0x164A PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x1660 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x168C SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x1E36 JUMP JUMPDEST PUSH32 0x8A269F26B688E110E9CBD887D163DAB35CAE678FA353A0292DE532C0CAC1ECDC DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1714 SWAP3 SWAP2 SWAP1 PUSH2 0x33E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1730 DUP4 PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1772 JUMPI POP PUSH2 0x1771 DUP2 DUP6 PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x17B0 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1798 DUP5 PUSH2 0x7B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D9 DUP3 PUSH2 0xBEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x182F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1826 SWAP1 PUSH2 0x3483 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x189F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1896 SWAP1 PUSH2 0x3515 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18AA DUP4 DUP4 DUP4 PUSH2 0x1EAA JUMP JUMPDEST PUSH2 0x18B5 PUSH1 0x0 DUP3 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1905 SWAP2 SWAP1 PUSH2 0x3535 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x195C SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A1B DUP4 DUP4 DUP4 PUSH2 0x1EAF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A28 PUSH2 0x14C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A46 PUSH2 0xD9A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A93 SWAP1 PUSH2 0x35B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BCA SWAP1 PUSH2 0x3621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CC4 SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1CDC DUP5 DUP5 DUP5 PUSH2 0x17B9 JUMP JUMPDEST PUSH2 0x1CE8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1EB4 JUMP JUMPDEST PUSH2 0x1D27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1E SWAP1 PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D4F DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D59 PUSH2 0x1D2D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1D79 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1DA4 JUMP JUMPDEST DUP1 PUSH2 0x1D83 DUP5 PUSH2 0x204B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D94 SWAP3 SWAP2 SWAP1 PUSH2 0x32D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E32 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x21AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E3F DUP3 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x1E7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E75 SWAP1 PUSH2 0x3745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1EA5 SWAP3 SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2207 JUMP JUMPDEST ISZERO PUSH2 0x203E JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1EFE PUSH2 0x14C3 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F20 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1F6B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F68 SWAP2 SWAP1 PUSH2 0x381B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1FEE JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F9B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1FE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FDD SWAP1 PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2043 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x2093 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x21A7 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x20C5 JUMPI DUP1 DUP1 PUSH2 0x20AE SWAP1 PUSH2 0x3140 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x20BE SWAP2 SWAP1 PUSH2 0x3848 JUMP JUMPDEST SWAP2 POP PUSH2 0x209B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E1 JUMPI PUSH2 0x20E0 PUSH2 0x27AD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2113 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x21A0 JUMPI PUSH1 0x1 DUP3 PUSH2 0x212C SWAP2 SWAP1 PUSH2 0x3535 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x213B SWAP2 SWAP1 PUSH2 0x33B7 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x2147 SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x215D JUMPI PUSH2 0x215C PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x2199 SWAP2 SWAP1 PUSH2 0x3848 JUMP JUMPDEST SWAP5 POP PUSH2 0x2117 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B6 DUP4 DUP4 PUSH2 0x222A JUMP JUMPDEST PUSH2 0x21C3 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1EB4 JUMP JUMPDEST PUSH2 0x2202 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21F9 SWAP1 PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x229A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2291 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22A3 DUP2 PUSH2 0x1DAC JUMP JUMPDEST ISZERO PUSH2 0x22E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22DA SWAP1 PUSH2 0x3931 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22EF PUSH1 0x0 DUP4 DUP4 PUSH2 0x1EAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x233F SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2400 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1EAF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2432 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2454 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x249B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x246D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x249B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x249B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x249A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x247F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x24A8 SWAP2 SWAP1 PUSH2 0x24AC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x24C5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x24AD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2512 DUP2 PUSH2 0x24DD JUMP JUMPDEST DUP2 EQ PUSH2 0x251D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x252F DUP2 PUSH2 0x2509 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x254B JUMPI PUSH2 0x254A PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2559 DUP5 DUP3 DUP6 ADD PUSH2 0x2520 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2577 DUP2 PUSH2 0x2562 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2592 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x256E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x25D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25B7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x25E1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2603 DUP3 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x260D DUP2 DUP6 PUSH2 0x25A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x261D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25B4 JUMP JUMPDEST PUSH2 0x2626 DUP2 PUSH2 0x25E7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x264B DUP2 DUP5 PUSH2 0x25F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2666 DUP2 PUSH2 0x2653 JUMP JUMPDEST DUP2 EQ PUSH2 0x2671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2683 DUP2 PUSH2 0x265D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x269F JUMPI PUSH2 0x269E PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26AD DUP5 DUP3 DUP6 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E1 DUP3 PUSH2 0x26B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F1 DUP2 PUSH2 0x26D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x270C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x271B DUP2 PUSH2 0x26D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2738 DUP2 PUSH2 0x2712 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2755 JUMPI PUSH2 0x2754 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2763 DUP6 DUP3 DUP7 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2774 DUP6 DUP3 DUP7 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2787 DUP2 PUSH2 0x2653 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x277E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x27E5 DUP3 PUSH2 0x25E7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2804 JUMPI PUSH2 0x2803 PUSH2 0x27AD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2817 PUSH2 0x24C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2823 DUP3 DUP3 PUSH2 0x27DC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2843 JUMPI PUSH2 0x2842 PUSH2 0x27AD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x286C PUSH2 0x2867 DUP5 PUSH2 0x2828 JUMP JUMPDEST PUSH2 0x280D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x288F JUMPI PUSH2 0x288E PUSH2 0x2854 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28B8 JUMPI DUP1 PUSH2 0x28A4 DUP9 DUP3 PUSH2 0x2674 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2891 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28D7 JUMPI PUSH2 0x28D6 PUSH2 0x27A8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x28E7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2859 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2907 JUMPI PUSH2 0x2906 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2915 DUP6 DUP3 DUP7 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2936 JUMPI PUSH2 0x2935 PUSH2 0x24D8 JUMP JUMPDEST JUMPDEST PUSH2 0x2942 DUP6 DUP3 DUP7 ADD PUSH2 0x28C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2965 JUMPI PUSH2 0x2964 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2973 DUP7 DUP3 DUP8 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2984 DUP7 DUP3 DUP8 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2995 DUP7 DUP3 DUP8 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29C8 DUP2 PUSH2 0x2653 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29DA DUP4 DUP4 PUSH2 0x29BF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29FC DUP2 PUSH2 0x299F JUMP JUMPDEST PUSH2 0x2A06 DUP2 DUP5 PUSH2 0x29AA JUMP JUMPDEST SWAP3 POP PUSH2 0x2A11 DUP3 PUSH2 0x29B5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A42 JUMPI DUP2 MLOAD PUSH2 0x2A29 DUP8 DUP3 PUSH2 0x29CE JUMP JUMPDEST SWAP7 POP PUSH2 0x2A34 DUP4 PUSH2 0x29E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2A15 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A7B JUMPI PUSH2 0x2A7A PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A89 DUP5 DUP3 DUP6 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A9B DUP2 PUSH2 0x2562 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AB8 DUP2 PUSH2 0x2A92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AD5 JUMPI PUSH2 0x2AD4 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AE3 DUP6 DUP3 DUP7 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AF4 DUP6 DUP3 DUP7 ADD PUSH2 0x2AA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2B3E JUMPI PUSH2 0x2B3D PUSH2 0x2AFE JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2B4F DUP3 PUSH2 0x2B2D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5F DUP3 PUSH2 0x2B41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B6F DUP2 PUSH2 0x2B54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BB0 JUMPI PUSH2 0x2BAF PUSH2 0x27AD JUMP JUMPDEST JUMPDEST PUSH2 0x2BB9 DUP3 PUSH2 0x25E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE8 PUSH2 0x2BE3 DUP5 PUSH2 0x2B95 JUMP JUMPDEST PUSH2 0x280D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2C04 JUMPI PUSH2 0x2C03 PUSH2 0x2B90 JUMP JUMPDEST JUMPDEST PUSH2 0x2C0F DUP5 DUP3 DUP6 PUSH2 0x2BC6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C2C JUMPI PUSH2 0x2C2B PUSH2 0x27A8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C3C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2BD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C5F JUMPI PUSH2 0x2C5E PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C6D DUP8 DUP3 DUP9 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2C7E DUP8 DUP3 DUP9 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2C8F DUP8 DUP3 DUP9 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CB0 JUMPI PUSH2 0x2CAF PUSH2 0x24D8 JUMP JUMPDEST JUMPDEST PUSH2 0x2CBC DUP8 DUP3 DUP9 ADD PUSH2 0x2C17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CDF JUMPI PUSH2 0x2CDE PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CED DUP6 DUP3 DUP7 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CFE DUP6 DUP3 DUP7 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2D4F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2D63 JUMPI PUSH2 0x2D62 PUSH2 0x2D08 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC5 PUSH1 0x21 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DD0 DUP3 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DF4 DUP2 PUSH2 0x2DB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E57 PUSH1 0x3E DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E62 DUP3 PUSH2 0x2DFB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E86 DUP2 PUSH2 0x2E4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EA2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26E8 JUMP JUMPDEST PUSH2 0x2EAF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F12 PUSH1 0x2E DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F1D DUP3 PUSH2 0x2EB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F41 DUP2 PUSH2 0x2F05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F92 PUSH1 0x0 DUP4 PUSH2 0x2F77 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F9D DUP3 PUSH2 0x2F82 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB3 DUP3 PUSH2 0x2F85 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FF3 PUSH1 0x18 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FFE DUP3 PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3022 DUP2 PUSH2 0x2FE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3085 PUSH1 0x29 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3090 DUP3 PUSH2 0x3029 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30B4 DUP2 PUSH2 0x3078 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30F5 DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH2 0x3100 DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3135 JUMPI PUSH2 0x3134 PUSH2 0x30BB JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x314B DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x317E JUMPI PUSH2 0x317D PUSH2 0x30BB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x319C DUP2 PUSH2 0x3189 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31BF DUP2 PUSH2 0x31A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31DC DUP2 PUSH2 0x31C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31FB DUP2 PUSH2 0x31E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3216 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3193 JUMP JUMPDEST PUSH2 0x3223 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x31B6 JUMP JUMPDEST PUSH2 0x3230 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x323D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x31F2 JUMP JUMPDEST PUSH2 0x324A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x31F2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3263 DUP2 PUSH2 0x265D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x327F JUMPI PUSH2 0x327E PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x328D DUP5 DUP3 DUP6 ADD PUSH2 0x3254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32AC DUP3 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x32B6 DUP2 DUP6 PUSH2 0x3296 JUMP JUMPDEST SWAP4 POP PUSH2 0x32C6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25B4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32DE DUP3 DUP6 PUSH2 0x32A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x32EA DUP3 DUP5 PUSH2 0x32A1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3352 PUSH1 0x26 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x335D DUP3 PUSH2 0x32F6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3381 DUP2 PUSH2 0x3345 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33C2 DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH2 0x33CD DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x33DD JUMPI PUSH2 0x33DC PUSH2 0x3388 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x33FD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2B66 JUMP JUMPDEST PUSH2 0x340A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346D PUSH1 0x25 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3478 DUP3 PUSH2 0x3411 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x349C DUP2 PUSH2 0x3460 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34FF PUSH1 0x24 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x350A DUP3 PUSH2 0x34A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x352E DUP2 PUSH2 0x34F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3540 DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH2 0x354B DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x355E JUMPI PUSH2 0x355D PUSH2 0x30BB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x359F PUSH1 0x20 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x35AA DUP3 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35CE DUP2 PUSH2 0x3592 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360B PUSH1 0x19 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3616 DUP3 PUSH2 0x35D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x363A DUP2 PUSH2 0x35FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x369D PUSH1 0x32 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x36A8 DUP3 PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36CC DUP2 PUSH2 0x3690 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372F PUSH1 0x2E DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x373A DUP3 PUSH2 0x36D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x375E DUP2 PUSH2 0x3722 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x378C DUP3 PUSH2 0x3765 JUMP JUMPDEST PUSH2 0x3796 DUP2 DUP6 PUSH2 0x3770 JUMP JUMPDEST SWAP4 POP PUSH2 0x37A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25B4 JUMP JUMPDEST PUSH2 0x37AF DUP2 PUSH2 0x25E7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x37CF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x26E8 JUMP JUMPDEST PUSH2 0x37DC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x26E8 JUMP JUMPDEST PUSH2 0x37E9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x277E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x37FB DUP2 DUP5 PUSH2 0x3781 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3815 DUP2 PUSH2 0x2509 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3831 JUMPI PUSH2 0x3830 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x383F DUP5 DUP3 DUP6 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3853 DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH2 0x385E DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x386E JUMPI PUSH2 0x386D PUSH2 0x3388 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38AF PUSH1 0x20 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x38BA DUP3 PUSH2 0x3879 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38DE DUP2 PUSH2 0x38A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391B PUSH1 0x1C DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3926 DUP3 PUSH2 0x38E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x394A DUP2 PUSH2 0x390E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0x2D 0x2B SSTORE 0x22 0xDF LT 0x1F 0xD9 POP PUSH16 0xBE97AB06789483D9120D5689A1E5C7C5 DUP8 GT 0xC8 0xCD CALLCODE PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"447:3678:18:-:0;;;1256:538;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1479:16:18;5616:15:0;5599:32;;;;;;;;;;;;5556:80;1464:5:6;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;936:32:5;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1583:16:18::2;1538:62;;;;;;;;;;::::0;::::2;1629:14;1610:33;;;;;;;;;;::::0;::::2;1665:7;1653:19;;;;::::0;::::2;1703:16;1682:37;;;;;;;;;;::::0;::::2;1746:12;1729:14;:29;;;;;;;:::i;:::-;;1780:7;1768:19;;;;::::0;::::2;1256:538:::0;;;;;;447:3678;;640:96:12;693:7;719:10;712:17;;640:96;:::o;2433:187:5:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;447:3678:18:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;7:75:20:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:101::-;881:7;921:18;914:5;910:30;899:41;;845:101;;;:::o;952:120::-;1024:23;1041:5;1024:23;:::i;:::-;1017:5;1014:34;1004:62;;1062:1;1059;1052:12;1004:62;952:120;:::o;1078:141::-;1134:5;1165:6;1159:13;1150:22;;1181:32;1207:5;1181:32;:::i;:::-;1078:141;;;;:::o;1225:77::-;1262:7;1291:5;1280:16;;1225:77;;;:::o;1308:122::-;1381:24;1399:5;1381:24;:::i;:::-;1374:5;1371:35;1361:63;;1420:1;1417;1410:12;1361:63;1308:122;:::o;1436:143::-;1493:5;1524:6;1518:13;1509:22;;1540:33;1567:5;1540:33;:::i;:::-;1436:143;;;;:::o;1585:93::-;1621:7;1661:10;1654:5;1650:22;1639:33;;1585:93;;;:::o;1684:120::-;1756:23;1773:5;1756:23;:::i;:::-;1749:5;1746:34;1736:62;;1794:1;1791;1784:12;1736:62;1684:120;:::o;1810:141::-;1866:5;1897:6;1891:13;1882:22;;1913:32;1939:5;1913:32;:::i;:::-;1810:141;;;;:::o;1957:117::-;2066:1;2063;2056:12;2080:102;2121:6;2172:2;2168:7;2163:2;2156:5;2152:14;2148:28;2138:38;;2080:102;;;:::o;2188:180::-;2236:77;2233:1;2226:88;2333:4;2330:1;2323:15;2357:4;2354:1;2347:15;2374:281;2457:27;2479:4;2457:27;:::i;:::-;2449:6;2445:40;2587:6;2575:10;2572:22;2551:18;2539:10;2536:34;2533:62;2530:88;;;2598:18;;:::i;:::-;2530:88;2638:10;2634:2;2627:22;2417:238;2374:281;;:::o;2661:129::-;2695:6;2722:20;;:::i;:::-;2712:30;;2751:33;2779:4;2771:6;2751:33;:::i;:::-;2661:129;;;:::o;2796:259::-;2881:4;2971:18;2963:6;2960:30;2957:56;;;2993:18;;:::i;:::-;2957:56;3043:4;3035:6;3031:17;3023:25;;2796:259;;;:::o;3061:117::-;3170:1;3167;3160:12;3184:117;3293:1;3290;3283:12;3307:308;3369:4;3459:18;3451:6;3448:30;3445:56;;;3481:18;;:::i;:::-;3445:56;3519:29;3541:6;3519:29;:::i;:::-;3511:37;;3603:4;3597;3593:15;3585:23;;3307:308;;;:::o;3621:307::-;3689:1;3699:113;3713:6;3710:1;3707:13;3699:113;;;3798:1;3793:3;3789:11;3783:18;3779:1;3774:3;3770:11;3763:39;3735:2;3732:1;3728:10;3723:15;;3699:113;;;3830:6;3827:1;3824:13;3821:101;;;3910:1;3901:6;3896:3;3892:16;3885:27;3821:101;3670:258;3621:307;;;:::o;3934:421::-;4023:5;4048:66;4064:49;4106:6;4064:49;:::i;:::-;4048:66;:::i;:::-;4039:75;;4137:6;4130:5;4123:21;4175:4;4168:5;4164:16;4213:3;4204:6;4199:3;4195:16;4192:25;4189:112;;;4220:79;;:::i;:::-;4189:112;4310:39;4342:6;4337:3;4332;4310:39;:::i;:::-;4029:326;3934:421;;;;;:::o;4375:355::-;4442:5;4491:3;4484:4;4476:6;4472:17;4468:27;4458:122;;4499:79;;:::i;:::-;4458:122;4609:6;4603:13;4634:90;4720:3;4712:6;4705:4;4697:6;4693:17;4634:90;:::i;:::-;4625:99;;4448:282;4375:355;;;;:::o;4753:893::-;4868:5;4893:89;4909:72;4974:6;4909:72;:::i;:::-;4893:89;:::i;:::-;4884:98;;5002:5;5055:4;5047:6;5043:17;5035:6;5031:30;5084:3;5076:6;5073:15;5070:122;;;5103:79;;:::i;:::-;5070:122;5218:6;5201:439;5235:6;5230:3;5227:15;5201:439;;;5317:3;5311:10;5353:18;5340:11;5337:35;5334:122;;;5375:79;;:::i;:::-;5334:122;5499:11;5491:6;5487:24;5537:58;5591:3;5579:10;5537:58;:::i;:::-;5532:3;5525:71;5625:4;5620:3;5616:14;5609:21;;5277:363;;5261:4;5256:3;5252:14;5245:21;;5201:439;;;5205:21;4874:772;;4753:893;;;;;:::o;5669:381::-;5759:5;5808:3;5801:4;5793:6;5789:17;5785:27;5775:122;;5816:79;;:::i;:::-;5775:122;5920:4;5942:102;6040:3;6032:6;6024;5942:102;:::i;:::-;5933:111;;5765:285;5669:381;;;;:::o;6056:77::-;6093:7;6122:5;6111:16;;6056:77;;;:::o;6139:122::-;6212:24;6230:5;6212:24;:::i;:::-;6205:5;6202:35;6192:63;;6251:1;6248;6241:12;6192:63;6139:122;:::o;6267:143::-;6324:5;6355:6;6349:13;6340:22;;6371:33;6398:5;6371:33;:::i;:::-;6267:143;;;;:::o;6416:1349::-;6562:6;6570;6578;6586;6594;6602;6651:3;6639:9;6630:7;6626:23;6622:33;6619:120;;;6658:79;;:::i;:::-;6619:120;6778:1;6803:64;6859:7;6850:6;6839:9;6835:22;6803:64;:::i;:::-;6793:74;;6749:128;6916:2;6942:63;6997:7;6988:6;6977:9;6973:22;6942:63;:::i;:::-;6932:73;;6887:128;7054:2;7080:64;7136:7;7127:6;7116:9;7112:22;7080:64;:::i;:::-;7070:74;;7025:129;7193:2;7219:63;7274:7;7265:6;7254:9;7250:22;7219:63;:::i;:::-;7209:73;;7164:128;7352:3;7341:9;7337:19;7331:26;7384:18;7376:6;7373:30;7370:117;;;7406:79;;:::i;:::-;7370:117;7511:97;7600:7;7591:6;7580:9;7576:22;7511:97;:::i;:::-;7501:107;;7302:316;7657:3;7684:64;7740:7;7731:6;7720:9;7716:22;7684:64;:::i;:::-;7674:74;;7628:130;6416:1349;;;;;;;;:::o;7771:180::-;7819:77;7816:1;7809:88;7916:4;7913:1;7906:15;7940:4;7937:1;7930:15;7957:320;8001:6;8038:1;8032:4;8028:12;8018:22;;8085:1;8079:4;8075:12;8106:18;8096:81;;8162:4;8154:6;8150:17;8140:27;;8096:81;8224:2;8216:6;8213:14;8193:18;8190:38;8187:84;;;8243:18;;:::i;:::-;8187:84;8008:269;7957:320;;;:::o;447:3678:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1845":{"entryPoint":7855,"id":1845,"parameterSlots":3,"returnSlots":0},"@_approve_1715":{"entryPoint":5323,"id":1715,"parameterSlots":2,"returnSlots":0},"@_baseURI_1193":{"entryPoint":7469,"id":1193,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_1834":{"entryPoint":7850,"id":1834,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_1823":{"entryPoint":7860,"id":1823,"parameterSlots":4,"returnSlots":1},"@_checkOwner_921":{"entryPoint":6688,"id":921,"parameterSlots":0,"returnSlots":0},"@_exists_1412":{"entryPoint":7596,"id":1412,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1446":{"entryPoint":5924,"id":1446,"parameterSlots":2,"returnSlots":1},"@_mint_1556":{"entryPoint":8746,"id":1556,"parameterSlots":2,"returnSlots":0},"@_msgSender_2439":{"entryPoint":5315,"id":2439,"parameterSlots":0,"returnSlots":1},"@_requireMinted_1761":{"entryPoint":5240,"id":1761,"parameterSlots":1,"returnSlots":0},"@_safeMint_1461":{"entryPoint":7704,"id":1461,"parameterSlots":2,"returnSlots":0},"@_safeMint_1490":{"entryPoint":8620,"id":1490,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_1394":{"entryPoint":7377,"id":1394,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1747":{"entryPoint":7012,"id":1747,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_2074":{"entryPoint":7734,"id":2074,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_978":{"entryPoint":6814,"id":978,"parameterSlots":1,"returnSlots":0},"@_transfer_1691":{"entryPoint":6073,"id":1691,"parameterSlots":3,"returnSlots":0},"@approve_1236":{"entryPoint":2045,"id":1236,"parameterSlots":2,"returnSlots":0},"@balanceOf_1097":{"entryPoint":3238,"id":1097,"parameterSlots":1,"returnSlots":1},"@fulfillRandomWords_3241":{"entryPoint":5508,"id":3241,"parameterSlots":2,"returnSlots":0},"@getApproved_1254":{"entryPoint":1975,"id":1254,"parameterSlots":1,"returnSlots":1},"@getBreedFromModdedRng_3336":{"entryPoint":3743,"id":3336,"parameterSlots":1,"returnSlots":1},"@getChanceArray_3349":{"entryPoint":3007,"id":3349,"parameterSlots":0,"returnSlots":1},"@getDogTokenUris_3369":{"entryPoint":2619,"id":3369,"parameterSlots":1,"returnSlots":1},"@getMintFee_3357":{"entryPoint":3442,"id":3357,"parameterSlots":0,"returnSlots":1},"@getTokenCounter_3377":{"entryPoint":3228,"id":3377,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_1289":{"entryPoint":4854,"id":1289,"parameterSlots":2,"returnSlots":1},"@isContract_2150":{"entryPoint":8711,"id":2150,"parameterSlots":1,"returnSlots":1},"@name_1135":{"entryPoint":1829,"id":1135,"parameterSlots":0,"returnSlots":1},"@ownerOf_1125":{"entryPoint":3050,"id":1125,"parameterSlots":1,"returnSlots":1},"@owner_907":{"entryPoint":3482,"id":907,"parameterSlots":0,"returnSlots":1},"@rawFulfillRandomWords_56":{"entryPoint":2331,"id":56,"parameterSlots":2,"returnSlots":0},"@renounceOwnership_935":{"entryPoint":3422,"id":935,"parameterSlots":0,"returnSlots":0},"@requestNft_3180":{"entryPoint":3969,"id":3180,"parameterSlots":0,"returnSlots":1},"@s_requestIdToSender_3066":{"entryPoint":3692,"id":3066,"parameterSlots":0,"returnSlots":0},"@s_tokenCounter_3068":{"entryPoint":2325,"id":3068,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1335":{"entryPoint":2975,"id":1335,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1365":{"entryPoint":4481,"id":1365,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1271":{"entryPoint":3670,"id":1271,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1073":{"entryPoint":1603,"id":1073,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2698":{"entryPoint":5134,"id":2698,"parameterSlots":1,"returnSlots":1},"@symbol_1145":{"entryPoint":3524,"id":1145,"parameterSlots":0,"returnSlots":1},"@toString_2537":{"entryPoint":8267,"id":2537,"parameterSlots":1,"returnSlots":1},"@tokenURI_1184":{"entryPoint":7492,"id":1184,"parameterSlots":1,"returnSlots":1},"@tokenURI_2052":{"entryPoint":4579,"id":2052,"parameterSlots":1,"returnSlots":1},"@transferFrom_1316":{"entryPoint":2523,"id":1316,"parameterSlots":3,"returnSlots":0},"@transferOwnership_958":{"entryPoint":5002,"id":958,"parameterSlots":1,"returnSlots":0},"@withdraw_3275":{"entryPoint":2795,"id":3275,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10329,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":11221,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":10025,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":10921,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":9504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":14342,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":11287,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9844,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":12884,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10853,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":11464,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":10572,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":11333,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":10942,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10046,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":9525,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":14363,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":9865,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":12905,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10480,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":10702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9960,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":10739,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9582,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":12691,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":14209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_Breed_$3062_to_t_uint8_fromStack":{"entryPoint":11110,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":9720,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12961,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":13968,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":13125,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":13408,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":14606,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":13554,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":13822,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":12408,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack":{"entryPoint":14114,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack":{"entryPoint":11850,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":14498,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":13714,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":12262,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":11704,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12165,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack":{"entryPoint":12037,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":12755,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":10687,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":10110,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":12786,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":12726,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13010,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12200,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9975,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":11917,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":14266,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed":{"entryPoint":10826,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":9597,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":12801,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_enum$_Breed_$3062__to_t_uint8__fromStack_reversed":{"entryPoint":11125,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_Breed_$3062_t_address__to_t_uint8_t_address__fromStack_reversed":{"entryPoint":13288,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9777,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14003,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13160,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13443,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14641,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13589,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13857,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12443,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14149,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11885,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14533,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13749,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12297,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11739,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12072,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":10125,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":10253,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":9417,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10280,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":11157,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":10677,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":10655,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":14181,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":9624,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":10726,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":10666,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":14192,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12151,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9635,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12950,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12522,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":14408,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":13621,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":9942,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9570,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":12681,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":9437,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Breed_$3062":{"entryPoint":11073,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":12741,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9910,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":9811,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":12770,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":12706,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Breed_$3062_to_t_uint8":{"entryPoint":11092,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":11206,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":9652,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":11575,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":10204,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":12608,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":13239,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":12475,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":13192,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":11006,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":11528,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12104,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10157,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":10152,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":10324,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":11152,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":9432,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9427,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9703,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":13889,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":13046,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":13329,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":14565,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":13475,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":13781,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":12329,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4":{"entryPoint":14035,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304":{"entryPoint":11771,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":14457,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":13673,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":12221,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":11625,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":12162,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b":{"entryPoint":11958,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Breed_$3062":{"entryPoint":11053,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10002,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":10898,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":9481,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9821,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:38526:20","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:20","statements":[{"nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:20"},"nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:20"},"nodeType":"YulFunctionCall","src":"187:12:20"},"nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:20"},"nodeType":"YulFunctionCall","src":"310:12:20"},"nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nodeType":"YulBlock","src":"378:105:20","statements":[{"nodeType":"YulAssignment","src":"388:89:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:20","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:20"},"nodeType":"YulFunctionCall","src":"399:78:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:20"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:20","type":""}],"src":"334:149:20"},{"body":{"nodeType":"YulBlock","src":"531:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:20"},"nodeType":"YulFunctionCall","src":"589:12:20"},"nodeType":"YulExpressionStatement","src":"589:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:20"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:20"},"nodeType":"YulFunctionCall","src":"561:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:20"},"nodeType":"YulFunctionCall","src":"551:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:20"},"nodeType":"YulFunctionCall","src":"544:42:20"},"nodeType":"YulIf","src":"541:62:20"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:20","type":""}],"src":"489:120:20"},{"body":{"nodeType":"YulBlock","src":"666:86:20","statements":[{"nodeType":"YulAssignment","src":"676:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:20"},"nodeType":"YulFunctionCall","src":"685:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:20"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:20"},"nodeType":"YulFunctionCall","src":"714:32:20"},"nodeType":"YulExpressionStatement","src":"714:32:20"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:20","type":""}],"src":"615:137:20"},{"body":{"nodeType":"YulBlock","src":"823:262:20","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:20"},"nodeType":"YulFunctionCall","src":"871:79:20"},"nodeType":"YulExpressionStatement","src":"871:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:20"},"nodeType":"YulFunctionCall","src":"840:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:20"},"nodeType":"YulFunctionCall","src":"836:32:20"},"nodeType":"YulIf","src":"833:119:20"},{"nodeType":"YulBlock","src":"962:116:20","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:20"},"nodeType":"YulFunctionCall","src":"1036:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:20"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:20"},"nodeType":"YulFunctionCall","src":"1016:52:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:20","type":""}],"src":"758:327:20"},{"body":{"nodeType":"YulBlock","src":"1133:48:20","statements":[{"nodeType":"YulAssignment","src":"1143:32:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:20"},"nodeType":"YulFunctionCall","src":"1161:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:20"},"nodeType":"YulFunctionCall","src":"1154:21:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:20"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:20","type":""}],"src":"1091:90:20"},{"body":{"nodeType":"YulBlock","src":"1246:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:20"},"nodeType":"YulFunctionCall","src":"1268:21:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:20"},"nodeType":"YulFunctionCall","src":"1256:34:20"},"nodeType":"YulExpressionStatement","src":"1256:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:20","type":""}],"src":"1187:109:20"},{"body":{"nodeType":"YulBlock","src":"1394:118:20","statements":[{"nodeType":"YulAssignment","src":"1404:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:20"},"nodeType":"YulFunctionCall","src":"1412:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:20"},"nodeType":"YulFunctionCall","src":"1487:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:20"},"nodeType":"YulFunctionCall","src":"1440:65:20"},"nodeType":"YulExpressionStatement","src":"1440:65:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:20","type":""}],"src":"1302:210:20"},{"body":{"nodeType":"YulBlock","src":"1577:40:20","statements":[{"nodeType":"YulAssignment","src":"1588:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:20"},"nodeType":"YulFunctionCall","src":"1598:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:20","type":""}],"src":"1518:99:20"},{"body":{"nodeType":"YulBlock","src":"1719:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:20"},"nodeType":"YulFunctionCall","src":"1729:19:20"},"nodeType":"YulExpressionStatement","src":"1729:19:20"},{"nodeType":"YulAssignment","src":"1757:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:20"},"nodeType":"YulFunctionCall","src":"1772:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:20","type":""}],"src":"1623:169:20"},{"body":{"nodeType":"YulBlock","src":"1847:258:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:20"},"nodeType":"YulFunctionCall","src":"1947:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:20"},"nodeType":"YulFunctionCall","src":"1966:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:20"},"nodeType":"YulFunctionCall","src":"1960:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:20"},"nodeType":"YulFunctionCall","src":"1940:39:20"},"nodeType":"YulExpressionStatement","src":"1940:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:20"},"nodeType":"YulFunctionCall","src":"1884:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:20","statements":[{"nodeType":"YulAssignment","src":"1900:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:20"},"nodeType":"YulFunctionCall","src":"1905:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:20","statements":[]},"src":"1876:113:20"},{"body":{"nodeType":"YulBlock","src":"2023:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:20"},"nodeType":"YulFunctionCall","src":"2069:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:20"},"nodeType":"YulFunctionCall","src":"2062:27:20"},"nodeType":"YulExpressionStatement","src":"2062:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:20"},"nodeType":"YulFunctionCall","src":"2001:13:20"},"nodeType":"YulIf","src":"1998:101:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:20","type":""}],"src":"1798:307:20"},{"body":{"nodeType":"YulBlock","src":"2159:54:20","statements":[{"nodeType":"YulAssignment","src":"2169:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:20"},"nodeType":"YulFunctionCall","src":"2183:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:20"},"nodeType":"YulFunctionCall","src":"2199:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:20"},"nodeType":"YulFunctionCall","src":"2179:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:20","type":""}],"src":"2111:102:20"},{"body":{"nodeType":"YulBlock","src":"2311:272:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:20"},"nodeType":"YulFunctionCall","src":"2335:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:20"},"nodeType":"YulFunctionCall","src":"2390:71:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:20"},"nodeType":"YulFunctionCall","src":"2492:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:20"},"nodeType":"YulFunctionCall","src":"2470:52:20"},"nodeType":"YulExpressionStatement","src":"2470:52:20"},{"nodeType":"YulAssignment","src":"2531:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:20"},"nodeType":"YulFunctionCall","src":"2547:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:20"},"nodeType":"YulFunctionCall","src":"2538:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:20","type":""}],"src":"2219:364:20"},{"body":{"nodeType":"YulBlock","src":"2707:195:20","statements":[{"nodeType":"YulAssignment","src":"2717:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:20"},"nodeType":"YulFunctionCall","src":"2725:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:20"},"nodeType":"YulFunctionCall","src":"2760:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:20"},"nodeType":"YulFunctionCall","src":"2779:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:20"},"nodeType":"YulFunctionCall","src":"2753:47:20"},"nodeType":"YulExpressionStatement","src":"2753:47:20"},{"nodeType":"YulAssignment","src":"2809:86:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:20"},"nodeType":"YulFunctionCall","src":"2817:78:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:20","type":""}],"src":"2589:313:20"},{"body":{"nodeType":"YulBlock","src":"2953:32:20","statements":[{"nodeType":"YulAssignment","src":"2963:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:20","type":""}],"src":"2908:77:20"},{"body":{"nodeType":"YulBlock","src":"3034:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:20"},"nodeType":"YulFunctionCall","src":"3093:12:20"},"nodeType":"YulExpressionStatement","src":"3093:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:20"},"nodeType":"YulFunctionCall","src":"3064:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:20"},"nodeType":"YulFunctionCall","src":"3054:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:20"},"nodeType":"YulFunctionCall","src":"3047:43:20"},"nodeType":"YulIf","src":"3044:63:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:20","type":""}],"src":"2991:122:20"},{"body":{"nodeType":"YulBlock","src":"3171:87:20","statements":[{"nodeType":"YulAssignment","src":"3181:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:20"},"nodeType":"YulFunctionCall","src":"3190:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:20"},"nodeType":"YulFunctionCall","src":"3219:33:20"},"nodeType":"YulExpressionStatement","src":"3219:33:20"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:20","type":""}],"src":"3119:139:20"},{"body":{"nodeType":"YulBlock","src":"3330:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:20"},"nodeType":"YulFunctionCall","src":"3378:79:20"},"nodeType":"YulExpressionStatement","src":"3378:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:20"},"nodeType":"YulFunctionCall","src":"3347:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:20"},"nodeType":"YulFunctionCall","src":"3343:32:20"},"nodeType":"YulIf","src":"3340:119:20"},{"nodeType":"YulBlock","src":"3469:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:20"},"nodeType":"YulFunctionCall","src":"3544:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:20"},"nodeType":"YulFunctionCall","src":"3523:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:20","type":""}],"src":"3264:329:20"},{"body":{"nodeType":"YulBlock","src":"3644:81:20","statements":[{"nodeType":"YulAssignment","src":"3654:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:20"},"nodeType":"YulFunctionCall","src":"3665:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:20","type":""}],"src":"3599:126:20"},{"body":{"nodeType":"YulBlock","src":"3776:51:20","statements":[{"nodeType":"YulAssignment","src":"3786:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:20"},"nodeType":"YulFunctionCall","src":"3797:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:20","type":""}],"src":"3731:96:20"},{"body":{"nodeType":"YulBlock","src":"3898:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:20"},"nodeType":"YulFunctionCall","src":"3920:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:20"},"nodeType":"YulFunctionCall","src":"3908:37:20"},"nodeType":"YulExpressionStatement","src":"3908:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:20","type":""}],"src":"3833:118:20"},{"body":{"nodeType":"YulBlock","src":"4055:124:20","statements":[{"nodeType":"YulAssignment","src":"4065:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:20"},"nodeType":"YulFunctionCall","src":"4073:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:20"},"nodeType":"YulFunctionCall","src":"4154:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:20"},"nodeType":"YulFunctionCall","src":"4101:71:20"},"nodeType":"YulExpressionStatement","src":"4101:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:20","type":""}],"src":"3957:222:20"},{"body":{"nodeType":"YulBlock","src":"4228:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:20"},"nodeType":"YulFunctionCall","src":"4287:12:20"},"nodeType":"YulExpressionStatement","src":"4287:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:20"},"nodeType":"YulFunctionCall","src":"4258:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:20"},"nodeType":"YulFunctionCall","src":"4248:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:20"},"nodeType":"YulFunctionCall","src":"4241:43:20"},"nodeType":"YulIf","src":"4238:63:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:20","type":""}],"src":"4185:122:20"},{"body":{"nodeType":"YulBlock","src":"4365:87:20","statements":[{"nodeType":"YulAssignment","src":"4375:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:20"},"nodeType":"YulFunctionCall","src":"4384:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:20"},"nodeType":"YulFunctionCall","src":"4413:33:20"},"nodeType":"YulExpressionStatement","src":"4413:33:20"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:20","type":""}],"src":"4313:139:20"},{"body":{"nodeType":"YulBlock","src":"4541:391:20","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:20"},"nodeType":"YulFunctionCall","src":"4589:79:20"},"nodeType":"YulExpressionStatement","src":"4589:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:20"},"nodeType":"YulFunctionCall","src":"4558:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:20"},"nodeType":"YulFunctionCall","src":"4554:32:20"},"nodeType":"YulIf","src":"4551:119:20"},{"nodeType":"YulBlock","src":"4680:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:20"},"nodeType":"YulFunctionCall","src":"4755:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:20"},"nodeType":"YulFunctionCall","src":"4734:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:20"}]}]},{"nodeType":"YulBlock","src":"4807:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:20"},"nodeType":"YulFunctionCall","src":"4883:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:20"},"nodeType":"YulFunctionCall","src":"4862:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:20","type":""}],"src":"4458:474:20"},{"body":{"nodeType":"YulBlock","src":"5003:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5020:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5043:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5025:17:20"},"nodeType":"YulFunctionCall","src":"5025:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5013:6:20"},"nodeType":"YulFunctionCall","src":"5013:37:20"},"nodeType":"YulExpressionStatement","src":"5013:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4991:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4998:3:20","type":""}],"src":"4938:118:20"},{"body":{"nodeType":"YulBlock","src":"5160:124:20","statements":[{"nodeType":"YulAssignment","src":"5170:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5182:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5193:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5178:3:20"},"nodeType":"YulFunctionCall","src":"5178:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5170:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5250:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5263:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5274:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5259:3:20"},"nodeType":"YulFunctionCall","src":"5259:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5206:43:20"},"nodeType":"YulFunctionCall","src":"5206:71:20"},"nodeType":"YulExpressionStatement","src":"5206:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5132:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5144:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5155:4:20","type":""}],"src":"5062:222:20"},{"body":{"nodeType":"YulBlock","src":"5379:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5396:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5399:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5389:6:20"},"nodeType":"YulFunctionCall","src":"5389:12:20"},"nodeType":"YulExpressionStatement","src":"5389:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5290:117:20"},{"body":{"nodeType":"YulBlock","src":"5441:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5458:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5461:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5451:6:20"},"nodeType":"YulFunctionCall","src":"5451:88:20"},"nodeType":"YulExpressionStatement","src":"5451:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5555:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5558:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5548:6:20"},"nodeType":"YulFunctionCall","src":"5548:15:20"},"nodeType":"YulExpressionStatement","src":"5548:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5579:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5582:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5572:6:20"},"nodeType":"YulFunctionCall","src":"5572:15:20"},"nodeType":"YulExpressionStatement","src":"5572:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5413:180:20"},{"body":{"nodeType":"YulBlock","src":"5642:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5652:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5674:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5704:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5682:21:20"},"nodeType":"YulFunctionCall","src":"5682:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5670:3:20"},"nodeType":"YulFunctionCall","src":"5670:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5656:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5821:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5823:16:20"},"nodeType":"YulFunctionCall","src":"5823:18:20"},"nodeType":"YulExpressionStatement","src":"5823:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5764:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"5776:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5761:2:20"},"nodeType":"YulFunctionCall","src":"5761:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5800:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5812:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5797:2:20"},"nodeType":"YulFunctionCall","src":"5797:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5758:2:20"},"nodeType":"YulFunctionCall","src":"5758:62:20"},"nodeType":"YulIf","src":"5755:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5859:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5863:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5852:6:20"},"nodeType":"YulFunctionCall","src":"5852:22:20"},"nodeType":"YulExpressionStatement","src":"5852:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5628:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"5636:4:20","type":""}],"src":"5599:281:20"},{"body":{"nodeType":"YulBlock","src":"5927:88:20","statements":[{"nodeType":"YulAssignment","src":"5937:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5947:18:20"},"nodeType":"YulFunctionCall","src":"5947:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5937:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5996:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"6004:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5976:19:20"},"nodeType":"YulFunctionCall","src":"5976:33:20"},"nodeType":"YulExpressionStatement","src":"5976:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5911:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5920:6:20","type":""}],"src":"5886:129:20"},{"body":{"nodeType":"YulBlock","src":"6103:229:20","statements":[{"body":{"nodeType":"YulBlock","src":"6208:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6210:16:20"},"nodeType":"YulFunctionCall","src":"6210:18:20"},"nodeType":"YulExpressionStatement","src":"6210:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6180:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6188:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6177:2:20"},"nodeType":"YulFunctionCall","src":"6177:30:20"},"nodeType":"YulIf","src":"6174:56:20"},{"nodeType":"YulAssignment","src":"6240:25:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6252:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6260:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6248:3:20"},"nodeType":"YulFunctionCall","src":"6248:17:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6240:4:20"}]},{"nodeType":"YulAssignment","src":"6302:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6314:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"6320:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6310:3:20"},"nodeType":"YulFunctionCall","src":"6310:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6302:4:20"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6087:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6098:4:20","type":""}],"src":"6021:311:20"},{"body":{"nodeType":"YulBlock","src":"6427:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6444:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6447:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6437:6:20"},"nodeType":"YulFunctionCall","src":"6437:12:20"},"nodeType":"YulExpressionStatement","src":"6437:12:20"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"6338:117:20"},{"body":{"nodeType":"YulBlock","src":"6580:608:20","statements":[{"nodeType":"YulAssignment","src":"6590:90:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6672:6:20"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6615:56:20"},"nodeType":"YulFunctionCall","src":"6615:64:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6599:15:20"},"nodeType":"YulFunctionCall","src":"6599:81:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6590:5:20"}]},{"nodeType":"YulVariableDeclaration","src":"6689:16:20","value":{"name":"array","nodeType":"YulIdentifier","src":"6700:5:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6693:3:20","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6722:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"6729:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6715:6:20"},"nodeType":"YulFunctionCall","src":"6715:21:20"},"nodeType":"YulExpressionStatement","src":"6715:21:20"},{"nodeType":"YulAssignment","src":"6745:23:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6756:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"6763:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6752:3:20"},"nodeType":"YulFunctionCall","src":"6752:16:20"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6745:3:20"}]},{"nodeType":"YulVariableDeclaration","src":"6778:44:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6796:6:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6808:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6816:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6804:3:20"},"nodeType":"YulFunctionCall","src":"6804:17:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6792:3:20"},"nodeType":"YulFunctionCall","src":"6792:30:20"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6782:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"6850:103:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6864:77:20"},"nodeType":"YulFunctionCall","src":"6864:79:20"},"nodeType":"YulExpressionStatement","src":"6864:79:20"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6837:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"6845:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6834:2:20"},"nodeType":"YulFunctionCall","src":"6834:15:20"},"nodeType":"YulIf","src":"6831:122:20"},{"body":{"nodeType":"YulBlock","src":"7038:144:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7053:21:20","value":{"name":"src","nodeType":"YulIdentifier","src":"7071:3:20"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7057:10:20","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7095:3:20"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"7121:10:20"},{"name":"end","nodeType":"YulIdentifier","src":"7133:3:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7100:20:20"},"nodeType":"YulFunctionCall","src":"7100:37:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7088:6:20"},"nodeType":"YulFunctionCall","src":"7088:50:20"},"nodeType":"YulExpressionStatement","src":"7088:50:20"},{"nodeType":"YulAssignment","src":"7151:21:20","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7162:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7167:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7158:3:20"},"nodeType":"YulFunctionCall","src":"7158:14:20"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7151:3:20"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6991:3:20"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6996:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6988:2:20"},"nodeType":"YulFunctionCall","src":"6988:15:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7004:25:20","statements":[{"nodeType":"YulAssignment","src":"7006:21:20","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7017:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7022:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7013:3:20"},"nodeType":"YulFunctionCall","src":"7013:14:20"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7006:3:20"}]}]},"pre":{"nodeType":"YulBlock","src":"6966:21:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6968:17:20","value":{"name":"offset","nodeType":"YulIdentifier","src":"6979:6:20"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6972:3:20","type":""}]}]},"src":"6962:220:20"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6550:6:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"6558:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"6566:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6574:5:20","type":""}],"src":"6478:710:20"},{"body":{"nodeType":"YulBlock","src":"7288:293:20","statements":[{"body":{"nodeType":"YulBlock","src":"7337:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7339:77:20"},"nodeType":"YulFunctionCall","src":"7339:79:20"},"nodeType":"YulExpressionStatement","src":"7339:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7316:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7324:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7312:3:20"},"nodeType":"YulFunctionCall","src":"7312:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"7331:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7308:3:20"},"nodeType":"YulFunctionCall","src":"7308:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7301:6:20"},"nodeType":"YulFunctionCall","src":"7301:35:20"},"nodeType":"YulIf","src":"7298:122:20"},{"nodeType":"YulVariableDeclaration","src":"7429:34:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7456:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7443:12:20"},"nodeType":"YulFunctionCall","src":"7443:20:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7433:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7472:103:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7548:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7556:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7544:3:20"},"nodeType":"YulFunctionCall","src":"7544:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"7563:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"7571:3:20"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7481:62:20"},"nodeType":"YulFunctionCall","src":"7481:94:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7472:5:20"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7266:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"7274:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7282:5:20","type":""}],"src":"7211:370:20"},{"body":{"nodeType":"YulBlock","src":"7695:576:20","statements":[{"body":{"nodeType":"YulBlock","src":"7741:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7743:77:20"},"nodeType":"YulFunctionCall","src":"7743:79:20"},"nodeType":"YulExpressionStatement","src":"7743:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7716:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"7725:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7712:3:20"},"nodeType":"YulFunctionCall","src":"7712:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"7737:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7708:3:20"},"nodeType":"YulFunctionCall","src":"7708:32:20"},"nodeType":"YulIf","src":"7705:119:20"},{"nodeType":"YulBlock","src":"7834:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7849:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7863:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7853:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7878:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7913:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"7924:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7909:3:20"},"nodeType":"YulFunctionCall","src":"7909:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7933:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7888:20:20"},"nodeType":"YulFunctionCall","src":"7888:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7878:6:20"}]}]},{"nodeType":"YulBlock","src":"7961:303:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7976:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8007:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8018:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8003:3:20"},"nodeType":"YulFunctionCall","src":"8003:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7990:12:20"},"nodeType":"YulFunctionCall","src":"7990:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7980:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"8069:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8071:77:20"},"nodeType":"YulFunctionCall","src":"8071:79:20"},"nodeType":"YulExpressionStatement","src":"8071:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8041:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8049:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8038:2:20"},"nodeType":"YulFunctionCall","src":"8038:30:20"},"nodeType":"YulIf","src":"8035:117:20"},{"nodeType":"YulAssignment","src":"8166:88:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8226:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"8237:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8222:3:20"},"nodeType":"YulFunctionCall","src":"8222:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8246:7:20"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8176:45:20"},"nodeType":"YulFunctionCall","src":"8176:78:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8166:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7657:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7668:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7680:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7688:6:20","type":""}],"src":"7587:684:20"},{"body":{"nodeType":"YulBlock","src":"8377:519:20","statements":[{"body":{"nodeType":"YulBlock","src":"8423:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8425:77:20"},"nodeType":"YulFunctionCall","src":"8425:79:20"},"nodeType":"YulExpressionStatement","src":"8425:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8398:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"8407:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8394:3:20"},"nodeType":"YulFunctionCall","src":"8394:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"8419:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8390:3:20"},"nodeType":"YulFunctionCall","src":"8390:32:20"},"nodeType":"YulIf","src":"8387:119:20"},{"nodeType":"YulBlock","src":"8516:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8531:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8545:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8535:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8560:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8595:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"8606:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8591:3:20"},"nodeType":"YulFunctionCall","src":"8591:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8615:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8570:20:20"},"nodeType":"YulFunctionCall","src":"8570:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8560:6:20"}]}]},{"nodeType":"YulBlock","src":"8643:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8658:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8672:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8662:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8688:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8723:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"8734:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8719:3:20"},"nodeType":"YulFunctionCall","src":"8719:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8743:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8698:20:20"},"nodeType":"YulFunctionCall","src":"8698:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8688:6:20"}]}]},{"nodeType":"YulBlock","src":"8771:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8786:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8800:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8790:6:20","type":""}]},{"nodeType":"YulAssignment","src":"8816:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8851:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"8862:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8847:3:20"},"nodeType":"YulFunctionCall","src":"8847:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8871:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8826:20:20"},"nodeType":"YulFunctionCall","src":"8826:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8816:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8331:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8342:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8354:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8362:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8370:6:20","type":""}],"src":"8277:619:20"},{"body":{"nodeType":"YulBlock","src":"8974:32:20","statements":[{"nodeType":"YulAssignment","src":"8985:14:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8995:4:20","type":"","value":"0x03"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8985:6:20"}]}]},"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8957:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8967:6:20","type":""}],"src":"8902:104:20"},{"body":{"nodeType":"YulBlock","src":"9121:34:20","statements":[{"nodeType":"YulAssignment","src":"9131:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"9146:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9131:11:20"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9093:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"9098:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9109:11:20","type":""}],"src":"9012:143:20"},{"body":{"nodeType":"YulBlock","src":"9231:28:20","statements":[{"nodeType":"YulAssignment","src":"9241:11:20","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9249:3:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9241:4:20"}]}]},"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9218:3:20","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9226:4:20","type":""}],"src":"9161:98:20"},{"body":{"nodeType":"YulBlock","src":"9320:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9337:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9360:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9342:17:20"},"nodeType":"YulFunctionCall","src":"9342:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9330:6:20"},"nodeType":"YulFunctionCall","src":"9330:37:20"},"nodeType":"YulExpressionStatement","src":"9330:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9308:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9315:3:20","type":""}],"src":"9265:108:20"},{"body":{"nodeType":"YulBlock","src":"9459:99:20","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9503:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"9511:3:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9469:33:20"},"nodeType":"YulFunctionCall","src":"9469:46:20"},"nodeType":"YulExpressionStatement","src":"9469:46:20"},{"nodeType":"YulAssignment","src":"9524:28:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9542:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9547:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9538:3:20"},"nodeType":"YulFunctionCall","src":"9538:14:20"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"9524:10:20"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"9432:6:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9440:3:20","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"9448:10:20","type":""}],"src":"9379:179:20"},{"body":{"nodeType":"YulBlock","src":"9637:38:20","statements":[{"nodeType":"YulAssignment","src":"9647:22:20","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9659:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9664:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9655:3:20"},"nodeType":"YulFunctionCall","src":"9655:14:20"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9647:4:20"}]}]},"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9624:3:20","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9632:4:20","type":""}],"src":"9564:111:20"},{"body":{"nodeType":"YulBlock","src":"9825:582:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9835:66:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9895:5:20"}],"functionName":{"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"9849:45:20"},"nodeType":"YulFunctionCall","src":"9849:52:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9839:6:20","type":""}]},{"nodeType":"YulAssignment","src":"9910:91:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9989:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9994:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9917:71:20"},"nodeType":"YulFunctionCall","src":"9917:84:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9910:3:20"}]},{"nodeType":"YulVariableDeclaration","src":"10010:69:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10073:5:20"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"10025:47:20"},"nodeType":"YulFunctionCall","src":"10025:54:20"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"10014:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10088:21:20","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"10102:7:20"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"10092:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"10178:222:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10192:34:20","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10219:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10213:5:20"},"nodeType":"YulFunctionCall","src":"10213:13:20"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"10196:13:20","type":""}]},{"nodeType":"YulAssignment","src":"10239:70:20","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"10290:13:20"},{"name":"pos","nodeType":"YulIdentifier","src":"10305:3:20"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10246:43:20"},"nodeType":"YulFunctionCall","src":"10246:63:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10239:3:20"}]},{"nodeType":"YulAssignment","src":"10322:68:20","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10383:6:20"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"10332:50:20"},"nodeType":"YulFunctionCall","src":"10332:58:20"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10322:6:20"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10140:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"10143:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10137:2:20"},"nodeType":"YulFunctionCall","src":"10137:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10151:18:20","statements":[{"nodeType":"YulAssignment","src":"10153:14:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10162:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"10165:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10158:3:20"},"nodeType":"YulFunctionCall","src":"10158:9:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10153:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"10122:14:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10124:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"10133:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10128:1:20","type":""}]}]},"src":"10118:282:20"}]},"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9812:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9819:3:20","type":""}],"src":"9713:694:20"},{"body":{"nodeType":"YulBlock","src":"10557:170:20","statements":[{"nodeType":"YulAssignment","src":"10567:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10579:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10590:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10575:3:20"},"nodeType":"YulFunctionCall","src":"10575:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10567:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10693:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10706:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10717:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10702:3:20"},"nodeType":"YulFunctionCall","src":"10702:17:20"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10603:89:20"},"nodeType":"YulFunctionCall","src":"10603:117:20"},"nodeType":"YulExpressionStatement","src":"10603:117:20"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10529:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10541:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10552:4:20","type":""}],"src":"10413:314:20"},{"body":{"nodeType":"YulBlock","src":"10799:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"10845:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10847:77:20"},"nodeType":"YulFunctionCall","src":"10847:79:20"},"nodeType":"YulExpressionStatement","src":"10847:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10820:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"10829:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10816:3:20"},"nodeType":"YulFunctionCall","src":"10816:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"10841:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10812:3:20"},"nodeType":"YulFunctionCall","src":"10812:32:20"},"nodeType":"YulIf","src":"10809:119:20"},{"nodeType":"YulBlock","src":"10938:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10953:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"10967:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10957:6:20","type":""}]},{"nodeType":"YulAssignment","src":"10982:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11017:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"11028:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11013:3:20"},"nodeType":"YulFunctionCall","src":"11013:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11037:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10992:20:20"},"nodeType":"YulFunctionCall","src":"10992:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10982:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10769:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10780:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10792:6:20","type":""}],"src":"10733:329:20"},{"body":{"nodeType":"YulBlock","src":"11108:76:20","statements":[{"body":{"nodeType":"YulBlock","src":"11162:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11171:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11174:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11164:6:20"},"nodeType":"YulFunctionCall","src":"11164:12:20"},"nodeType":"YulExpressionStatement","src":"11164:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11131:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11153:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"11138:14:20"},"nodeType":"YulFunctionCall","src":"11138:21:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11128:2:20"},"nodeType":"YulFunctionCall","src":"11128:32:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11121:6:20"},"nodeType":"YulFunctionCall","src":"11121:40:20"},"nodeType":"YulIf","src":"11118:60:20"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11101:5:20","type":""}],"src":"11068:116:20"},{"body":{"nodeType":"YulBlock","src":"11239:84:20","statements":[{"nodeType":"YulAssignment","src":"11249:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11271:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11258:12:20"},"nodeType":"YulFunctionCall","src":"11258:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11249:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11311:5:20"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"11287:23:20"},"nodeType":"YulFunctionCall","src":"11287:30:20"},"nodeType":"YulExpressionStatement","src":"11287:30:20"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11217:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"11225:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11233:5:20","type":""}],"src":"11190:133:20"},{"body":{"nodeType":"YulBlock","src":"11409:388:20","statements":[{"body":{"nodeType":"YulBlock","src":"11455:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11457:77:20"},"nodeType":"YulFunctionCall","src":"11457:79:20"},"nodeType":"YulExpressionStatement","src":"11457:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11430:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"11439:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11426:3:20"},"nodeType":"YulFunctionCall","src":"11426:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"11451:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11422:3:20"},"nodeType":"YulFunctionCall","src":"11422:32:20"},"nodeType":"YulIf","src":"11419:119:20"},{"nodeType":"YulBlock","src":"11548:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11563:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11577:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11567:6:20","type":""}]},{"nodeType":"YulAssignment","src":"11592:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11627:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"11638:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11623:3:20"},"nodeType":"YulFunctionCall","src":"11623:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11647:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11602:20:20"},"nodeType":"YulFunctionCall","src":"11602:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11592:6:20"}]}]},{"nodeType":"YulBlock","src":"11675:115:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11690:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11704:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11694:6:20","type":""}]},{"nodeType":"YulAssignment","src":"11720:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11752:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"11763:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11748:3:20"},"nodeType":"YulFunctionCall","src":"11748:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11772:7:20"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"11730:17:20"},"nodeType":"YulFunctionCall","src":"11730:50:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11720:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11371:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11382:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11394:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11402:6:20","type":""}],"src":"11329:468:20"},{"body":{"nodeType":"YulBlock","src":"11831:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11848:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11851:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11841:6:20"},"nodeType":"YulFunctionCall","src":"11841:88:20"},"nodeType":"YulExpressionStatement","src":"11841:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11945:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11948:4:20","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11938:6:20"},"nodeType":"YulFunctionCall","src":"11938:15:20"},"nodeType":"YulExpressionStatement","src":"11938:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11969:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11972:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11962:6:20"},"nodeType":"YulFunctionCall","src":"11962:15:20"},"nodeType":"YulExpressionStatement","src":"11962:15:20"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"11803:180:20"},{"body":{"nodeType":"YulBlock","src":"12042:62:20","statements":[{"body":{"nodeType":"YulBlock","src":"12076:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"12078:16:20"},"nodeType":"YulFunctionCall","src":"12078:18:20"},"nodeType":"YulExpressionStatement","src":"12078:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12065:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"12072:1:20","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12062:2:20"},"nodeType":"YulFunctionCall","src":"12062:12:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12055:6:20"},"nodeType":"YulFunctionCall","src":"12055:20:20"},"nodeType":"YulIf","src":"12052:46:20"}]},"name":"validator_assert_t_enum$_Breed_$3062","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12035:5:20","type":""}],"src":"11989:115:20"},{"body":{"nodeType":"YulBlock","src":"12165:76:20","statements":[{"nodeType":"YulAssignment","src":"12175:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"12186:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12175:7:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12229:5:20"}],"functionName":{"name":"validator_assert_t_enum$_Breed_$3062","nodeType":"YulIdentifier","src":"12192:36:20"},"nodeType":"YulFunctionCall","src":"12192:43:20"},"nodeType":"YulExpressionStatement","src":"12192:43:20"}]},"name":"cleanup_t_enum$_Breed_$3062","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12147:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12157:7:20","type":""}],"src":"12110:131:20"},{"body":{"nodeType":"YulBlock","src":"12315:63:20","statements":[{"nodeType":"YulAssignment","src":"12325:47:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12366:5:20"}],"functionName":{"name":"cleanup_t_enum$_Breed_$3062","nodeType":"YulIdentifier","src":"12338:27:20"},"nodeType":"YulFunctionCall","src":"12338:34:20"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12325:9:20"}]}]},"name":"convert_t_enum$_Breed_$3062_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12295:5:20","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12305:9:20","type":""}],"src":"12247:131:20"},{"body":{"nodeType":"YulBlock","src":"12457:74:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12474:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12518:5:20"}],"functionName":{"name":"convert_t_enum$_Breed_$3062_to_t_uint8","nodeType":"YulIdentifier","src":"12479:38:20"},"nodeType":"YulFunctionCall","src":"12479:45:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12467:6:20"},"nodeType":"YulFunctionCall","src":"12467:58:20"},"nodeType":"YulExpressionStatement","src":"12467:58:20"}]},"name":"abi_encode_t_enum$_Breed_$3062_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12445:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12452:3:20","type":""}],"src":"12384:147:20"},{"body":{"nodeType":"YulBlock","src":"12643:132:20","statements":[{"nodeType":"YulAssignment","src":"12653:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12665:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12676:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12661:3:20"},"nodeType":"YulFunctionCall","src":"12661:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12653:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12741:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12754:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12765:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12750:3:20"},"nodeType":"YulFunctionCall","src":"12750:17:20"}],"functionName":{"name":"abi_encode_t_enum$_Breed_$3062_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"12689:51:20"},"nodeType":"YulFunctionCall","src":"12689:79:20"},"nodeType":"YulExpressionStatement","src":"12689:79:20"}]},"name":"abi_encode_tuple_t_enum$_Breed_$3062__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12615:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12627:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12638:4:20","type":""}],"src":"12537:238:20"},{"body":{"nodeType":"YulBlock","src":"12870:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12887:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12890:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12880:6:20"},"nodeType":"YulFunctionCall","src":"12880:12:20"},"nodeType":"YulExpressionStatement","src":"12880:12:20"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"12781:117:20"},{"body":{"nodeType":"YulBlock","src":"12970:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"13075:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13077:16:20"},"nodeType":"YulFunctionCall","src":"13077:18:20"},"nodeType":"YulExpressionStatement","src":"13077:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13047:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13055:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13044:2:20"},"nodeType":"YulFunctionCall","src":"13044:30:20"},"nodeType":"YulIf","src":"13041:56:20"},{"nodeType":"YulAssignment","src":"13107:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13137:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13115:21:20"},"nodeType":"YulFunctionCall","src":"13115:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13107:4:20"}]},{"nodeType":"YulAssignment","src":"13181:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"13193:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"13199:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13189:3:20"},"nodeType":"YulFunctionCall","src":"13189:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13181:4:20"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"12954:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"12965:4:20","type":""}],"src":"12904:307:20"},{"body":{"nodeType":"YulBlock","src":"13268:103:20","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13291:3:20"},{"name":"src","nodeType":"YulIdentifier","src":"13296:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"13301:6:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"13278:12:20"},"nodeType":"YulFunctionCall","src":"13278:30:20"},"nodeType":"YulExpressionStatement","src":"13278:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13349:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"13354:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13345:3:20"},"nodeType":"YulFunctionCall","src":"13345:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"13363:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13338:6:20"},"nodeType":"YulFunctionCall","src":"13338:27:20"},"nodeType":"YulExpressionStatement","src":"13338:27:20"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13250:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"13255:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"13260:6:20","type":""}],"src":"13217:154:20"},{"body":{"nodeType":"YulBlock","src":"13460:327:20","statements":[{"nodeType":"YulAssignment","src":"13470:74:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13536:6:20"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13495:40:20"},"nodeType":"YulFunctionCall","src":"13495:48:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"13479:15:20"},"nodeType":"YulFunctionCall","src":"13479:65:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13470:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13560:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"13567:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13553:6:20"},"nodeType":"YulFunctionCall","src":"13553:21:20"},"nodeType":"YulExpressionStatement","src":"13553:21:20"},{"nodeType":"YulVariableDeclaration","src":"13583:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13598:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"13605:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13594:3:20"},"nodeType":"YulFunctionCall","src":"13594:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"13587:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"13648:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"13650:77:20"},"nodeType":"YulFunctionCall","src":"13650:79:20"},"nodeType":"YulExpressionStatement","src":"13650:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13629:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"13634:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13625:3:20"},"nodeType":"YulFunctionCall","src":"13625:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"13643:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13622:2:20"},"nodeType":"YulFunctionCall","src":"13622:25:20"},"nodeType":"YulIf","src":"13619:112:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13764:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"13769:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"13774:6:20"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"13740:23:20"},"nodeType":"YulFunctionCall","src":"13740:41:20"},"nodeType":"YulExpressionStatement","src":"13740:41:20"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13433:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"13438:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"13446:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13454:5:20","type":""}],"src":"13377:410:20"},{"body":{"nodeType":"YulBlock","src":"13867:277:20","statements":[{"body":{"nodeType":"YulBlock","src":"13916:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"13918:77:20"},"nodeType":"YulFunctionCall","src":"13918:79:20"},"nodeType":"YulExpressionStatement","src":"13918:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13895:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13903:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13891:3:20"},"nodeType":"YulFunctionCall","src":"13891:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"13910:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13887:3:20"},"nodeType":"YulFunctionCall","src":"13887:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13880:6:20"},"nodeType":"YulFunctionCall","src":"13880:35:20"},"nodeType":"YulIf","src":"13877:122:20"},{"nodeType":"YulVariableDeclaration","src":"14008:34:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14035:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14022:12:20"},"nodeType":"YulFunctionCall","src":"14022:20:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14012:6:20","type":""}]},{"nodeType":"YulAssignment","src":"14051:87:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14111:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"14119:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14107:3:20"},"nodeType":"YulFunctionCall","src":"14107:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"14126:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"14134:3:20"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14060:46:20"},"nodeType":"YulFunctionCall","src":"14060:78:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14051:5:20"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13845:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"13853:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13861:5:20","type":""}],"src":"13806:338:20"},{"body":{"nodeType":"YulBlock","src":"14276:817:20","statements":[{"body":{"nodeType":"YulBlock","src":"14323:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14325:77:20"},"nodeType":"YulFunctionCall","src":"14325:79:20"},"nodeType":"YulExpressionStatement","src":"14325:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14297:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"14306:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14293:3:20"},"nodeType":"YulFunctionCall","src":"14293:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"14318:3:20","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14289:3:20"},"nodeType":"YulFunctionCall","src":"14289:33:20"},"nodeType":"YulIf","src":"14286:120:20"},{"nodeType":"YulBlock","src":"14416:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"14431:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"14445:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14435:6:20","type":""}]},{"nodeType":"YulAssignment","src":"14460:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14495:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"14506:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14491:3:20"},"nodeType":"YulFunctionCall","src":"14491:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14515:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14470:20:20"},"nodeType":"YulFunctionCall","src":"14470:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14460:6:20"}]}]},{"nodeType":"YulBlock","src":"14543:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"14558:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"14572:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14562:6:20","type":""}]},{"nodeType":"YulAssignment","src":"14588:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14623:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"14634:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14619:3:20"},"nodeType":"YulFunctionCall","src":"14619:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14643:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14598:20:20"},"nodeType":"YulFunctionCall","src":"14598:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14588:6:20"}]}]},{"nodeType":"YulBlock","src":"14671:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"14686:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"14700:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14690:6:20","type":""}]},{"nodeType":"YulAssignment","src":"14716:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14751:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"14762:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14747:3:20"},"nodeType":"YulFunctionCall","src":"14747:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14771:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14726:20:20"},"nodeType":"YulFunctionCall","src":"14726:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14716:6:20"}]}]},{"nodeType":"YulBlock","src":"14799:287:20","statements":[{"nodeType":"YulVariableDeclaration","src":"14814:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14845:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14856:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14841:3:20"},"nodeType":"YulFunctionCall","src":"14841:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14828:12:20"},"nodeType":"YulFunctionCall","src":"14828:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14818:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"14907:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14909:77:20"},"nodeType":"YulFunctionCall","src":"14909:79:20"},"nodeType":"YulExpressionStatement","src":"14909:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14879:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"14887:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14876:2:20"},"nodeType":"YulFunctionCall","src":"14876:30:20"},"nodeType":"YulIf","src":"14873:117:20"},{"nodeType":"YulAssignment","src":"15004:72:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15048:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"15059:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15044:3:20"},"nodeType":"YulFunctionCall","src":"15044:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15068:7:20"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"15014:29:20"},"nodeType":"YulFunctionCall","src":"15014:62:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"15004:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14222:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14233:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14245:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14253:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14261:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14269:6:20","type":""}],"src":"14150:943:20"},{"body":{"nodeType":"YulBlock","src":"15182:391:20","statements":[{"body":{"nodeType":"YulBlock","src":"15228:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15230:77:20"},"nodeType":"YulFunctionCall","src":"15230:79:20"},"nodeType":"YulExpressionStatement","src":"15230:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15203:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"15212:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15199:3:20"},"nodeType":"YulFunctionCall","src":"15199:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"15224:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15195:3:20"},"nodeType":"YulFunctionCall","src":"15195:32:20"},"nodeType":"YulIf","src":"15192:119:20"},{"nodeType":"YulBlock","src":"15321:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"15336:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"15350:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15340:6:20","type":""}]},{"nodeType":"YulAssignment","src":"15365:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15400:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"15411:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15396:3:20"},"nodeType":"YulFunctionCall","src":"15396:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15420:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15375:20:20"},"nodeType":"YulFunctionCall","src":"15375:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15365:6:20"}]}]},{"nodeType":"YulBlock","src":"15448:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"15463:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"15477:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15467:6:20","type":""}]},{"nodeType":"YulAssignment","src":"15493:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15528:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"15539:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15524:3:20"},"nodeType":"YulFunctionCall","src":"15524:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15548:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15503:20:20"},"nodeType":"YulFunctionCall","src":"15503:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15493:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15144:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15155:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15167:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15175:6:20","type":""}],"src":"15099:474:20"},{"body":{"nodeType":"YulBlock","src":"15607:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15624:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15627:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15617:6:20"},"nodeType":"YulFunctionCall","src":"15617:88:20"},"nodeType":"YulExpressionStatement","src":"15617:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15721:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15724:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15714:6:20"},"nodeType":"YulFunctionCall","src":"15714:15:20"},"nodeType":"YulExpressionStatement","src":"15714:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15745:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15748:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15738:6:20"},"nodeType":"YulFunctionCall","src":"15738:15:20"},"nodeType":"YulExpressionStatement","src":"15738:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"15579:180:20"},{"body":{"nodeType":"YulBlock","src":"15816:269:20","statements":[{"nodeType":"YulAssignment","src":"15826:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15840:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"15846:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15836:3:20"},"nodeType":"YulFunctionCall","src":"15836:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15826:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"15857:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15887:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"15893:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15883:3:20"},"nodeType":"YulFunctionCall","src":"15883:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15861:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"15934:51:20","statements":[{"nodeType":"YulAssignment","src":"15948:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15962:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"15970:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15958:3:20"},"nodeType":"YulFunctionCall","src":"15958:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15948:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15914:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15907:6:20"},"nodeType":"YulFunctionCall","src":"15907:26:20"},"nodeType":"YulIf","src":"15904:81:20"},{"body":{"nodeType":"YulBlock","src":"16037:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"16051:16:20"},"nodeType":"YulFunctionCall","src":"16051:18:20"},"nodeType":"YulExpressionStatement","src":"16051:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16001:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16024:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"16032:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16021:2:20"},"nodeType":"YulFunctionCall","src":"16021:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15998:2:20"},"nodeType":"YulFunctionCall","src":"15998:38:20"},"nodeType":"YulIf","src":"15995:84:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15800:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15809:6:20","type":""}],"src":"15765:320:20"},{"body":{"nodeType":"YulBlock","src":"16197:114:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16219:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"16227:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16215:3:20"},"nodeType":"YulFunctionCall","src":"16215:14:20"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"16231:34:20","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16208:6:20"},"nodeType":"YulFunctionCall","src":"16208:58:20"},"nodeType":"YulExpressionStatement","src":"16208:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16287:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"16295:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16283:3:20"},"nodeType":"YulFunctionCall","src":"16283:15:20"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"16300:3:20","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16276:6:20"},"nodeType":"YulFunctionCall","src":"16276:28:20"},"nodeType":"YulExpressionStatement","src":"16276:28:20"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16189:6:20","type":""}],"src":"16091:220:20"},{"body":{"nodeType":"YulBlock","src":"16463:220:20","statements":[{"nodeType":"YulAssignment","src":"16473:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16539:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16544:2:20","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16480:58:20"},"nodeType":"YulFunctionCall","src":"16480:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16473:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16645:3:20"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"16556:88:20"},"nodeType":"YulFunctionCall","src":"16556:93:20"},"nodeType":"YulExpressionStatement","src":"16556:93:20"},{"nodeType":"YulAssignment","src":"16658:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16669:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16674:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16665:3:20"},"nodeType":"YulFunctionCall","src":"16665:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16658:3:20"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16451:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16459:3:20","type":""}],"src":"16317:366:20"},{"body":{"nodeType":"YulBlock","src":"16860:248:20","statements":[{"nodeType":"YulAssignment","src":"16870:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16882:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16893:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16878:3:20"},"nodeType":"YulFunctionCall","src":"16878:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16870:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16917:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16928:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16913:3:20"},"nodeType":"YulFunctionCall","src":"16913:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16936:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"16942:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16932:3:20"},"nodeType":"YulFunctionCall","src":"16932:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16906:6:20"},"nodeType":"YulFunctionCall","src":"16906:47:20"},"nodeType":"YulExpressionStatement","src":"16906:47:20"},{"nodeType":"YulAssignment","src":"16962:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17096:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16970:124:20"},"nodeType":"YulFunctionCall","src":"16970:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16962:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16840:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16855:4:20","type":""}],"src":"16689:419:20"},{"body":{"nodeType":"YulBlock","src":"17220:143:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17242:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"17250:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17238:3:20"},"nodeType":"YulFunctionCall","src":"17238:14:20"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"17254:34:20","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17231:6:20"},"nodeType":"YulFunctionCall","src":"17231:58:20"},"nodeType":"YulExpressionStatement","src":"17231:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17310:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"17318:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17306:3:20"},"nodeType":"YulFunctionCall","src":"17306:15:20"},{"hexValue":"6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"17323:32:20","type":"","value":"ken owner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17299:6:20"},"nodeType":"YulFunctionCall","src":"17299:57:20"},"nodeType":"YulExpressionStatement","src":"17299:57:20"}]},"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17212:6:20","type":""}],"src":"17114:249:20"},{"body":{"nodeType":"YulBlock","src":"17515:220:20","statements":[{"nodeType":"YulAssignment","src":"17525:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17591:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17596:2:20","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17532:58:20"},"nodeType":"YulFunctionCall","src":"17532:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17525:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17697:3:20"}],"functionName":{"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulIdentifier","src":"17608:88:20"},"nodeType":"YulFunctionCall","src":"17608:93:20"},"nodeType":"YulExpressionStatement","src":"17608:93:20"},{"nodeType":"YulAssignment","src":"17710:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17721:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"17726:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17717:3:20"},"nodeType":"YulFunctionCall","src":"17717:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17710:3:20"}]}]},"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17503:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17511:3:20","type":""}],"src":"17369:366:20"},{"body":{"nodeType":"YulBlock","src":"17912:248:20","statements":[{"nodeType":"YulAssignment","src":"17922:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17934:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17945:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17930:3:20"},"nodeType":"YulFunctionCall","src":"17930:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17922:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17969:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17980:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17965:3:20"},"nodeType":"YulFunctionCall","src":"17965:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17988:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"17994:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17984:3:20"},"nodeType":"YulFunctionCall","src":"17984:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17958:6:20"},"nodeType":"YulFunctionCall","src":"17958:47:20"},"nodeType":"YulExpressionStatement","src":"17958:47:20"},{"nodeType":"YulAssignment","src":"18014:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18148:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18022:124:20"},"nodeType":"YulFunctionCall","src":"18022:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18014:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17892:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17907:4:20","type":""}],"src":"17741:419:20"},{"body":{"nodeType":"YulBlock","src":"18292:206:20","statements":[{"nodeType":"YulAssignment","src":"18302:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18314:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18325:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18310:3:20"},"nodeType":"YulFunctionCall","src":"18310:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18302:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18382:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18395:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18406:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18391:3:20"},"nodeType":"YulFunctionCall","src":"18391:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18338:43:20"},"nodeType":"YulFunctionCall","src":"18338:71:20"},"nodeType":"YulExpressionStatement","src":"18338:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18463:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18476:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18487:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18472:3:20"},"nodeType":"YulFunctionCall","src":"18472:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18419:43:20"},"nodeType":"YulFunctionCall","src":"18419:72:20"},"nodeType":"YulExpressionStatement","src":"18419:72:20"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18256:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18268:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18276:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18287:4:20","type":""}],"src":"18166:332:20"},{"body":{"nodeType":"YulBlock","src":"18610:127:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18632:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"18640:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18628:3:20"},"nodeType":"YulFunctionCall","src":"18628:14:20"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"18644:34:20","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18621:6:20"},"nodeType":"YulFunctionCall","src":"18621:58:20"},"nodeType":"YulExpressionStatement","src":"18621:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18700:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"18708:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18696:3:20"},"nodeType":"YulFunctionCall","src":"18696:15:20"},{"hexValue":"72206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"18713:16:20","type":"","value":"r nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18689:6:20"},"nodeType":"YulFunctionCall","src":"18689:41:20"},"nodeType":"YulExpressionStatement","src":"18689:41:20"}]},"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18602:6:20","type":""}],"src":"18504:233:20"},{"body":{"nodeType":"YulBlock","src":"18889:220:20","statements":[{"nodeType":"YulAssignment","src":"18899:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18965:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18970:2:20","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18906:58:20"},"nodeType":"YulFunctionCall","src":"18906:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18899:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19071:3:20"}],"functionName":{"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulIdentifier","src":"18982:88:20"},"nodeType":"YulFunctionCall","src":"18982:93:20"},"nodeType":"YulExpressionStatement","src":"18982:93:20"},{"nodeType":"YulAssignment","src":"19084:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19095:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19100:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19091:3:20"},"nodeType":"YulFunctionCall","src":"19091:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19084:3:20"}]}]},"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18877:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18885:3:20","type":""}],"src":"18743:366:20"},{"body":{"nodeType":"YulBlock","src":"19286:248:20","statements":[{"nodeType":"YulAssignment","src":"19296:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19308:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"19319:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19304:3:20"},"nodeType":"YulFunctionCall","src":"19304:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19296:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19343:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"19354:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19339:3:20"},"nodeType":"YulFunctionCall","src":"19339:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19362:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"19368:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19358:3:20"},"nodeType":"YulFunctionCall","src":"19358:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19332:6:20"},"nodeType":"YulFunctionCall","src":"19332:47:20"},"nodeType":"YulExpressionStatement","src":"19332:47:20"},{"nodeType":"YulAssignment","src":"19388:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19522:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19396:124:20"},"nodeType":"YulFunctionCall","src":"19396:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19388:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19266:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19281:4:20","type":""}],"src":"19115:419:20"},{"body":{"nodeType":"YulBlock","src":"19568:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19585:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19588:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19578:6:20"},"nodeType":"YulFunctionCall","src":"19578:88:20"},"nodeType":"YulExpressionStatement","src":"19578:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19682:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19685:4:20","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19675:6:20"},"nodeType":"YulFunctionCall","src":"19675:15:20"},"nodeType":"YulExpressionStatement","src":"19675:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19706:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19709:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19699:6:20"},"nodeType":"YulFunctionCall","src":"19699:15:20"},"nodeType":"YulExpressionStatement","src":"19699:15:20"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"19540:180:20"},{"body":{"nodeType":"YulBlock","src":"19839:34:20","statements":[{"nodeType":"YulAssignment","src":"19849:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"19864:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19849:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19811:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"19816:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"19827:11:20","type":""}],"src":"19726:147:20"},{"body":{"nodeType":"YulBlock","src":"19985:8:20","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19977:6:20","type":""}],"src":"19879:114:20"},{"body":{"nodeType":"YulBlock","src":"20162:235:20","statements":[{"nodeType":"YulAssignment","src":"20172:90:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20255:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"20260:1:20","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20179:75:20"},"nodeType":"YulFunctionCall","src":"20179:83:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20172:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20360:3:20"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"20271:88:20"},"nodeType":"YulFunctionCall","src":"20271:93:20"},"nodeType":"YulExpressionStatement","src":"20271:93:20"},{"nodeType":"YulAssignment","src":"20373:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20384:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"20389:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20380:3:20"},"nodeType":"YulFunctionCall","src":"20380:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20373:3:20"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20150:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20158:3:20","type":""}],"src":"19999:398:20"},{"body":{"nodeType":"YulBlock","src":"20591:191:20","statements":[{"nodeType":"YulAssignment","src":"20602:154:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20752:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20609:141:20"},"nodeType":"YulFunctionCall","src":"20609:147:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20602:3:20"}]},{"nodeType":"YulAssignment","src":"20766:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"20773:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20766:3:20"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20578:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20587:3:20","type":""}],"src":"20403:379:20"},{"body":{"nodeType":"YulBlock","src":"20894:68:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20916:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"20924:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20912:3:20"},"nodeType":"YulFunctionCall","src":"20912:14:20"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"20928:26:20","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20905:6:20"},"nodeType":"YulFunctionCall","src":"20905:50:20"},"nodeType":"YulExpressionStatement","src":"20905:50:20"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20886:6:20","type":""}],"src":"20788:174:20"},{"body":{"nodeType":"YulBlock","src":"21114:220:20","statements":[{"nodeType":"YulAssignment","src":"21124:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21190:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"21195:2:20","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21131:58:20"},"nodeType":"YulFunctionCall","src":"21131:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21124:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21296:3:20"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"21207:88:20"},"nodeType":"YulFunctionCall","src":"21207:93:20"},"nodeType":"YulExpressionStatement","src":"21207:93:20"},{"nodeType":"YulAssignment","src":"21309:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21320:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"21325:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21316:3:20"},"nodeType":"YulFunctionCall","src":"21316:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21309:3:20"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21102:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21110:3:20","type":""}],"src":"20968:366:20"},{"body":{"nodeType":"YulBlock","src":"21511:248:20","statements":[{"nodeType":"YulAssignment","src":"21521:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21533:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21544:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21529:3:20"},"nodeType":"YulFunctionCall","src":"21529:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21521:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21568:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21579:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21564:3:20"},"nodeType":"YulFunctionCall","src":"21564:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21587:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"21593:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21583:3:20"},"nodeType":"YulFunctionCall","src":"21583:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21557:6:20"},"nodeType":"YulFunctionCall","src":"21557:47:20"},"nodeType":"YulExpressionStatement","src":"21557:47:20"},{"nodeType":"YulAssignment","src":"21613:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21747:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21621:124:20"},"nodeType":"YulFunctionCall","src":"21621:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21613:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21491:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21506:4:20","type":""}],"src":"21340:419:20"},{"body":{"nodeType":"YulBlock","src":"21871:122:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21893:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21901:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21889:3:20"},"nodeType":"YulFunctionCall","src":"21889:14:20"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"21905:34:20","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21882:6:20"},"nodeType":"YulFunctionCall","src":"21882:58:20"},"nodeType":"YulExpressionStatement","src":"21882:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21961:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21969:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21957:3:20"},"nodeType":"YulFunctionCall","src":"21957:15:20"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"21974:11:20","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21950:6:20"},"nodeType":"YulFunctionCall","src":"21950:36:20"},"nodeType":"YulExpressionStatement","src":"21950:36:20"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21863:6:20","type":""}],"src":"21765:228:20"},{"body":{"nodeType":"YulBlock","src":"22145:220:20","statements":[{"nodeType":"YulAssignment","src":"22155:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22221:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"22226:2:20","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22162:58:20"},"nodeType":"YulFunctionCall","src":"22162:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22155:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22327:3:20"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"22238:88:20"},"nodeType":"YulFunctionCall","src":"22238:93:20"},"nodeType":"YulExpressionStatement","src":"22238:93:20"},{"nodeType":"YulAssignment","src":"22340:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22351:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"22356:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22347:3:20"},"nodeType":"YulFunctionCall","src":"22347:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22340:3:20"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22133:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22141:3:20","type":""}],"src":"21999:366:20"},{"body":{"nodeType":"YulBlock","src":"22542:248:20","statements":[{"nodeType":"YulAssignment","src":"22552:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22564:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22575:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22560:3:20"},"nodeType":"YulFunctionCall","src":"22560:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22552:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22599:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22610:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22595:3:20"},"nodeType":"YulFunctionCall","src":"22595:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22618:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"22624:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22614:3:20"},"nodeType":"YulFunctionCall","src":"22614:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22588:6:20"},"nodeType":"YulFunctionCall","src":"22588:47:20"},"nodeType":"YulExpressionStatement","src":"22588:47:20"},{"nodeType":"YulAssignment","src":"22644:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22778:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22652:124:20"},"nodeType":"YulFunctionCall","src":"22652:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22644:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22522:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22537:4:20","type":""}],"src":"22371:419:20"},{"body":{"nodeType":"YulBlock","src":"22824:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22841:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22844:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22834:6:20"},"nodeType":"YulFunctionCall","src":"22834:88:20"},"nodeType":"YulExpressionStatement","src":"22834:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22938:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22941:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22931:6:20"},"nodeType":"YulFunctionCall","src":"22931:15:20"},"nodeType":"YulExpressionStatement","src":"22931:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22962:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22965:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22955:6:20"},"nodeType":"YulFunctionCall","src":"22955:15:20"},"nodeType":"YulExpressionStatement","src":"22955:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22796:180:20"},{"body":{"nodeType":"YulBlock","src":"23026:261:20","statements":[{"nodeType":"YulAssignment","src":"23036:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23059:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23041:17:20"},"nodeType":"YulFunctionCall","src":"23041:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23036:1:20"}]},{"nodeType":"YulAssignment","src":"23070:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23093:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23075:17:20"},"nodeType":"YulFunctionCall","src":"23075:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23070:1:20"}]},{"body":{"nodeType":"YulBlock","src":"23233:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23235:16:20"},"nodeType":"YulFunctionCall","src":"23235:18:20"},"nodeType":"YulExpressionStatement","src":"23235:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23154:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23161:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"23229:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23157:3:20"},"nodeType":"YulFunctionCall","src":"23157:74:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23151:2:20"},"nodeType":"YulFunctionCall","src":"23151:81:20"},"nodeType":"YulIf","src":"23148:107:20"},{"nodeType":"YulAssignment","src":"23265:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23276:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"23279:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23272:3:20"},"nodeType":"YulFunctionCall","src":"23272:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"23265:3:20"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23013:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"23016:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"23022:3:20","type":""}],"src":"22982:305:20"},{"body":{"nodeType":"YulBlock","src":"23336:190:20","statements":[{"nodeType":"YulAssignment","src":"23346:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23373:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23355:17:20"},"nodeType":"YulFunctionCall","src":"23355:24:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23346:5:20"}]},{"body":{"nodeType":"YulBlock","src":"23469:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23471:16:20"},"nodeType":"YulFunctionCall","src":"23471:18:20"},"nodeType":"YulExpressionStatement","src":"23471:18:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23394:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"23401:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23391:2:20"},"nodeType":"YulFunctionCall","src":"23391:77:20"},"nodeType":"YulIf","src":"23388:103:20"},{"nodeType":"YulAssignment","src":"23500:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23511:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"23518:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23507:3:20"},"nodeType":"YulFunctionCall","src":"23507:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23500:3:20"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23322:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23332:3:20","type":""}],"src":"23293:233:20"},{"body":{"nodeType":"YulBlock","src":"23577:32:20","statements":[{"nodeType":"YulAssignment","src":"23587:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"23598:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"23587:7:20"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23559:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"23569:7:20","type":""}],"src":"23532:77:20"},{"body":{"nodeType":"YulBlock","src":"23680:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23697:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23720:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"23702:17:20"},"nodeType":"YulFunctionCall","src":"23702:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23690:6:20"},"nodeType":"YulFunctionCall","src":"23690:37:20"},"nodeType":"YulExpressionStatement","src":"23690:37:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23668:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23675:3:20","type":""}],"src":"23615:118:20"},{"body":{"nodeType":"YulBlock","src":"23783:57:20","statements":[{"nodeType":"YulAssignment","src":"23793:41:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23808:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"23815:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23804:3:20"},"nodeType":"YulFunctionCall","src":"23804:30:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"23793:7:20"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23765:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"23775:7:20","type":""}],"src":"23739:101:20"},{"body":{"nodeType":"YulBlock","src":"23909:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23926:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23948:5:20"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"23931:16:20"},"nodeType":"YulFunctionCall","src":"23931:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23919:6:20"},"nodeType":"YulFunctionCall","src":"23919:36:20"},"nodeType":"YulExpressionStatement","src":"23919:36:20"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23897:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23904:3:20","type":""}],"src":"23846:115:20"},{"body":{"nodeType":"YulBlock","src":"24011:45:20","statements":[{"nodeType":"YulAssignment","src":"24021:29:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24036:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"24043:6:20","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24032:3:20"},"nodeType":"YulFunctionCall","src":"24032:18:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24021:7:20"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23993:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24003:7:20","type":""}],"src":"23967:89:20"},{"body":{"nodeType":"YulBlock","src":"24125:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24142:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24164:5:20"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"24147:16:20"},"nodeType":"YulFunctionCall","src":"24147:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24135:6:20"},"nodeType":"YulFunctionCall","src":"24135:36:20"},"nodeType":"YulExpressionStatement","src":"24135:36:20"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24113:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24120:3:20","type":""}],"src":"24062:115:20"},{"body":{"nodeType":"YulBlock","src":"24227:49:20","statements":[{"nodeType":"YulAssignment","src":"24237:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24252:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"24259:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24248:3:20"},"nodeType":"YulFunctionCall","src":"24248:22:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24237:7:20"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24209:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24219:7:20","type":""}],"src":"24183:93:20"},{"body":{"nodeType":"YulBlock","src":"24345:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24362:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24384:5:20"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"24367:16:20"},"nodeType":"YulFunctionCall","src":"24367:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24355:6:20"},"nodeType":"YulFunctionCall","src":"24355:36:20"},"nodeType":"YulExpressionStatement","src":"24355:36:20"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24333:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24340:3:20","type":""}],"src":"24282:115:20"},{"body":{"nodeType":"YulBlock","src":"24605:446:20","statements":[{"nodeType":"YulAssignment","src":"24615:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24627:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24638:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24623:3:20"},"nodeType":"YulFunctionCall","src":"24623:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24615:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24696:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24709:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24720:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24705:3:20"},"nodeType":"YulFunctionCall","src":"24705:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"24652:43:20"},"nodeType":"YulFunctionCall","src":"24652:71:20"},"nodeType":"YulExpressionStatement","src":"24652:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24775:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24788:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24799:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24784:3:20"},"nodeType":"YulFunctionCall","src":"24784:18:20"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"24733:41:20"},"nodeType":"YulFunctionCall","src":"24733:70:20"},"nodeType":"YulExpressionStatement","src":"24733:70:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24855:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24868:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24879:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24864:3:20"},"nodeType":"YulFunctionCall","src":"24864:18:20"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"24813:41:20"},"nodeType":"YulFunctionCall","src":"24813:70:20"},"nodeType":"YulExpressionStatement","src":"24813:70:20"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24935:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24948:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24959:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24944:3:20"},"nodeType":"YulFunctionCall","src":"24944:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"24893:41:20"},"nodeType":"YulFunctionCall","src":"24893:70:20"},"nodeType":"YulExpressionStatement","src":"24893:70:20"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"25015:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25028:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25039:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25024:3:20"},"nodeType":"YulFunctionCall","src":"25024:19:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"24973:41:20"},"nodeType":"YulFunctionCall","src":"24973:71:20"},"nodeType":"YulExpressionStatement","src":"24973:71:20"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24545:9:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24557:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24565:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24573:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24581:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24589:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24600:4:20","type":""}],"src":"24403:648:20"},{"body":{"nodeType":"YulBlock","src":"25120:80:20","statements":[{"nodeType":"YulAssignment","src":"25130:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25145:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25139:5:20"},"nodeType":"YulFunctionCall","src":"25139:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25130:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25188:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"25161:26:20"},"nodeType":"YulFunctionCall","src":"25161:33:20"},"nodeType":"YulExpressionStatement","src":"25161:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"25098:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"25106:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"25114:5:20","type":""}],"src":"25057:143:20"},{"body":{"nodeType":"YulBlock","src":"25283:274:20","statements":[{"body":{"nodeType":"YulBlock","src":"25329:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"25331:77:20"},"nodeType":"YulFunctionCall","src":"25331:79:20"},"nodeType":"YulExpressionStatement","src":"25331:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25304:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"25313:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25300:3:20"},"nodeType":"YulFunctionCall","src":"25300:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"25325:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25296:3:20"},"nodeType":"YulFunctionCall","src":"25296:32:20"},"nodeType":"YulIf","src":"25293:119:20"},{"nodeType":"YulBlock","src":"25422:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"25437:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"25451:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25441:6:20","type":""}]},{"nodeType":"YulAssignment","src":"25466:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25512:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"25523:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25508:3:20"},"nodeType":"YulFunctionCall","src":"25508:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25532:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"25476:31:20"},"nodeType":"YulFunctionCall","src":"25476:64:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25466:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25253:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25264:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25276:6:20","type":""}],"src":"25206:351:20"},{"body":{"nodeType":"YulBlock","src":"25677:34:20","statements":[{"nodeType":"YulAssignment","src":"25687:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"25702:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"25687:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25649:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"25654:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"25665:11:20","type":""}],"src":"25563:148:20"},{"body":{"nodeType":"YulBlock","src":"25827:267:20","statements":[{"nodeType":"YulVariableDeclaration","src":"25837:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25884:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25851:32:20"},"nodeType":"YulFunctionCall","src":"25851:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"25841:6:20","type":""}]},{"nodeType":"YulAssignment","src":"25899:96:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25983:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"25988:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25906:76:20"},"nodeType":"YulFunctionCall","src":"25906:89:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25899:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26030:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"26037:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26026:3:20"},"nodeType":"YulFunctionCall","src":"26026:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"26044:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"26049:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"26004:21:20"},"nodeType":"YulFunctionCall","src":"26004:52:20"},"nodeType":"YulExpressionStatement","src":"26004:52:20"},{"nodeType":"YulAssignment","src":"26065:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26076:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"26081:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26072:3:20"},"nodeType":"YulFunctionCall","src":"26072:16:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26065:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25808:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25815:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25823:3:20","type":""}],"src":"25717:377:20"},{"body":{"nodeType":"YulBlock","src":"26284:251:20","statements":[{"nodeType":"YulAssignment","src":"26295:102:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26384:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"26393:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26302:81:20"},"nodeType":"YulFunctionCall","src":"26302:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26295:3:20"}]},{"nodeType":"YulAssignment","src":"26407:102:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26496:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"26505:3:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26414:81:20"},"nodeType":"YulFunctionCall","src":"26414:95:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26407:3:20"}]},{"nodeType":"YulAssignment","src":"26519:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"26526:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26519:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26255:3:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26261:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26269:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26280:3:20","type":""}],"src":"26100:435:20"},{"body":{"nodeType":"YulBlock","src":"26647:119:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26669:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"26677:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26665:3:20"},"nodeType":"YulFunctionCall","src":"26665:14:20"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"26681:34:20","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26658:6:20"},"nodeType":"YulFunctionCall","src":"26658:58:20"},"nodeType":"YulExpressionStatement","src":"26658:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26737:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"26745:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26733:3:20"},"nodeType":"YulFunctionCall","src":"26733:15:20"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"26750:8:20","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26726:6:20"},"nodeType":"YulFunctionCall","src":"26726:33:20"},"nodeType":"YulExpressionStatement","src":"26726:33:20"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26639:6:20","type":""}],"src":"26541:225:20"},{"body":{"nodeType":"YulBlock","src":"26918:220:20","statements":[{"nodeType":"YulAssignment","src":"26928:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26994:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"26999:2:20","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26935:58:20"},"nodeType":"YulFunctionCall","src":"26935:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26928:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27100:3:20"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"27011:88:20"},"nodeType":"YulFunctionCall","src":"27011:93:20"},"nodeType":"YulExpressionStatement","src":"27011:93:20"},{"nodeType":"YulAssignment","src":"27113:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27124:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"27129:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27120:3:20"},"nodeType":"YulFunctionCall","src":"27120:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27113:3:20"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26906:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26914:3:20","type":""}],"src":"26772:366:20"},{"body":{"nodeType":"YulBlock","src":"27315:248:20","statements":[{"nodeType":"YulAssignment","src":"27325:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27337:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27348:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27333:3:20"},"nodeType":"YulFunctionCall","src":"27333:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27325:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27372:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27383:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27368:3:20"},"nodeType":"YulFunctionCall","src":"27368:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27391:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"27397:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27387:3:20"},"nodeType":"YulFunctionCall","src":"27387:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27361:6:20"},"nodeType":"YulFunctionCall","src":"27361:47:20"},"nodeType":"YulExpressionStatement","src":"27361:47:20"},{"nodeType":"YulAssignment","src":"27417:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27551:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27425:124:20"},"nodeType":"YulFunctionCall","src":"27425:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27417:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27295:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27310:4:20","type":""}],"src":"27144:419:20"},{"body":{"nodeType":"YulBlock","src":"27597:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27614:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27617:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27607:6:20"},"nodeType":"YulFunctionCall","src":"27607:88:20"},"nodeType":"YulExpressionStatement","src":"27607:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27711:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27714:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27704:6:20"},"nodeType":"YulFunctionCall","src":"27704:15:20"},"nodeType":"YulExpressionStatement","src":"27704:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27735:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27738:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27728:6:20"},"nodeType":"YulFunctionCall","src":"27728:15:20"},"nodeType":"YulExpressionStatement","src":"27728:15:20"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"27569:180:20"},{"body":{"nodeType":"YulBlock","src":"27789:142:20","statements":[{"nodeType":"YulAssignment","src":"27799:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27822:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27804:17:20"},"nodeType":"YulFunctionCall","src":"27804:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27799:1:20"}]},{"nodeType":"YulAssignment","src":"27833:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27856:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27838:17:20"},"nodeType":"YulFunctionCall","src":"27838:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27833:1:20"}]},{"body":{"nodeType":"YulBlock","src":"27880:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"27882:16:20"},"nodeType":"YulFunctionCall","src":"27882:18:20"},"nodeType":"YulExpressionStatement","src":"27882:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27877:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27870:6:20"},"nodeType":"YulFunctionCall","src":"27870:9:20"},"nodeType":"YulIf","src":"27867:35:20"},{"nodeType":"YulAssignment","src":"27911:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27920:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"27923:1:20"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"27916:3:20"},"nodeType":"YulFunctionCall","src":"27916:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"27911:1:20"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27778:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"27781:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"27787:1:20","type":""}],"src":"27755:176:20"},{"body":{"nodeType":"YulBlock","src":"28071:214:20","statements":[{"nodeType":"YulAssignment","src":"28081:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28093:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28104:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28089:3:20"},"nodeType":"YulFunctionCall","src":"28089:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28081:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28169:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28182:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28193:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28178:3:20"},"nodeType":"YulFunctionCall","src":"28178:17:20"}],"functionName":{"name":"abi_encode_t_enum$_Breed_$3062_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"28117:51:20"},"nodeType":"YulFunctionCall","src":"28117:79:20"},"nodeType":"YulExpressionStatement","src":"28117:79:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28250:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28263:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28274:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28259:3:20"},"nodeType":"YulFunctionCall","src":"28259:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28206:43:20"},"nodeType":"YulFunctionCall","src":"28206:72:20"},"nodeType":"YulExpressionStatement","src":"28206:72:20"}]},"name":"abi_encode_tuple_t_enum$_Breed_$3062_t_address__to_t_uint8_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28035:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28047:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28055:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28066:4:20","type":""}],"src":"27937:348:20"},{"body":{"nodeType":"YulBlock","src":"28397:118:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28419:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"28427:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28415:3:20"},"nodeType":"YulFunctionCall","src":"28415:14:20"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"28431:34:20","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28408:6:20"},"nodeType":"YulFunctionCall","src":"28408:58:20"},"nodeType":"YulExpressionStatement","src":"28408:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28487:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"28495:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28483:3:20"},"nodeType":"YulFunctionCall","src":"28483:15:20"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"28500:7:20","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28476:6:20"},"nodeType":"YulFunctionCall","src":"28476:32:20"},"nodeType":"YulExpressionStatement","src":"28476:32:20"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28389:6:20","type":""}],"src":"28291:224:20"},{"body":{"nodeType":"YulBlock","src":"28667:220:20","statements":[{"nodeType":"YulAssignment","src":"28677:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28743:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"28748:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28684:58:20"},"nodeType":"YulFunctionCall","src":"28684:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28677:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28849:3:20"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"28760:88:20"},"nodeType":"YulFunctionCall","src":"28760:93:20"},"nodeType":"YulExpressionStatement","src":"28760:93:20"},{"nodeType":"YulAssignment","src":"28862:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28873:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"28878:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28869:3:20"},"nodeType":"YulFunctionCall","src":"28869:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28862:3:20"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28655:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28663:3:20","type":""}],"src":"28521:366:20"},{"body":{"nodeType":"YulBlock","src":"29064:248:20","statements":[{"nodeType":"YulAssignment","src":"29074:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29086:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29097:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29082:3:20"},"nodeType":"YulFunctionCall","src":"29082:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29074:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29121:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29132:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29117:3:20"},"nodeType":"YulFunctionCall","src":"29117:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29140:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"29146:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29136:3:20"},"nodeType":"YulFunctionCall","src":"29136:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29110:6:20"},"nodeType":"YulFunctionCall","src":"29110:47:20"},"nodeType":"YulExpressionStatement","src":"29110:47:20"},{"nodeType":"YulAssignment","src":"29166:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29300:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29174:124:20"},"nodeType":"YulFunctionCall","src":"29174:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29166:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29044:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29059:4:20","type":""}],"src":"28893:419:20"},{"body":{"nodeType":"YulBlock","src":"29424:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29446:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"29454:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29442:3:20"},"nodeType":"YulFunctionCall","src":"29442:14:20"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"29458:34:20","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29435:6:20"},"nodeType":"YulFunctionCall","src":"29435:58:20"},"nodeType":"YulExpressionStatement","src":"29435:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29514:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"29522:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29510:3:20"},"nodeType":"YulFunctionCall","src":"29510:15:20"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"29527:6:20","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29503:6:20"},"nodeType":"YulFunctionCall","src":"29503:31:20"},"nodeType":"YulExpressionStatement","src":"29503:31:20"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29416:6:20","type":""}],"src":"29318:223:20"},{"body":{"nodeType":"YulBlock","src":"29693:220:20","statements":[{"nodeType":"YulAssignment","src":"29703:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29769:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"29774:2:20","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29710:58:20"},"nodeType":"YulFunctionCall","src":"29710:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29703:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29875:3:20"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"29786:88:20"},"nodeType":"YulFunctionCall","src":"29786:93:20"},"nodeType":"YulExpressionStatement","src":"29786:93:20"},{"nodeType":"YulAssignment","src":"29888:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29899:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"29904:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29895:3:20"},"nodeType":"YulFunctionCall","src":"29895:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29888:3:20"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29681:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29689:3:20","type":""}],"src":"29547:366:20"},{"body":{"nodeType":"YulBlock","src":"30090:248:20","statements":[{"nodeType":"YulAssignment","src":"30100:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30112:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30123:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30108:3:20"},"nodeType":"YulFunctionCall","src":"30108:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30100:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30147:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30158:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30143:3:20"},"nodeType":"YulFunctionCall","src":"30143:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30166:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"30172:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30162:3:20"},"nodeType":"YulFunctionCall","src":"30162:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30136:6:20"},"nodeType":"YulFunctionCall","src":"30136:47:20"},"nodeType":"YulExpressionStatement","src":"30136:47:20"},{"nodeType":"YulAssignment","src":"30192:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30326:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30200:124:20"},"nodeType":"YulFunctionCall","src":"30200:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30192:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30070:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30085:4:20","type":""}],"src":"29919:419:20"},{"body":{"nodeType":"YulBlock","src":"30389:146:20","statements":[{"nodeType":"YulAssignment","src":"30399:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30422:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30404:17:20"},"nodeType":"YulFunctionCall","src":"30404:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"30399:1:20"}]},{"nodeType":"YulAssignment","src":"30433:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"30456:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30438:17:20"},"nodeType":"YulFunctionCall","src":"30438:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"30433:1:20"}]},{"body":{"nodeType":"YulBlock","src":"30480:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30482:16:20"},"nodeType":"YulFunctionCall","src":"30482:18:20"},"nodeType":"YulExpressionStatement","src":"30482:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30474:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"30477:1:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30471:2:20"},"nodeType":"YulFunctionCall","src":"30471:8:20"},"nodeType":"YulIf","src":"30468:34:20"},{"nodeType":"YulAssignment","src":"30512:17:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30524:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"30527:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30520:3:20"},"nodeType":"YulFunctionCall","src":"30520:9:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"30512:4:20"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"30375:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"30378:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"30384:4:20","type":""}],"src":"30344:191:20"},{"body":{"nodeType":"YulBlock","src":"30647:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30669:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"30677:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30665:3:20"},"nodeType":"YulFunctionCall","src":"30665:14:20"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"30681:34:20","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30658:6:20"},"nodeType":"YulFunctionCall","src":"30658:58:20"},"nodeType":"YulExpressionStatement","src":"30658:58:20"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30639:6:20","type":""}],"src":"30541:182:20"},{"body":{"nodeType":"YulBlock","src":"30875:220:20","statements":[{"nodeType":"YulAssignment","src":"30885:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30951:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"30956:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30892:58:20"},"nodeType":"YulFunctionCall","src":"30892:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30885:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31057:3:20"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"30968:88:20"},"nodeType":"YulFunctionCall","src":"30968:93:20"},"nodeType":"YulExpressionStatement","src":"30968:93:20"},{"nodeType":"YulAssignment","src":"31070:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31081:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"31086:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31077:3:20"},"nodeType":"YulFunctionCall","src":"31077:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31070:3:20"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30863:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30871:3:20","type":""}],"src":"30729:366:20"},{"body":{"nodeType":"YulBlock","src":"31272:248:20","statements":[{"nodeType":"YulAssignment","src":"31282:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31294:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31305:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31290:3:20"},"nodeType":"YulFunctionCall","src":"31290:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31282:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31329:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31340:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31325:3:20"},"nodeType":"YulFunctionCall","src":"31325:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31348:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"31354:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31344:3:20"},"nodeType":"YulFunctionCall","src":"31344:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31318:6:20"},"nodeType":"YulFunctionCall","src":"31318:47:20"},"nodeType":"YulExpressionStatement","src":"31318:47:20"},{"nodeType":"YulAssignment","src":"31374:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31508:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31382:124:20"},"nodeType":"YulFunctionCall","src":"31382:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31374:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31252:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31267:4:20","type":""}],"src":"31101:419:20"},{"body":{"nodeType":"YulBlock","src":"31632:69:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31654:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"31662:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31650:3:20"},"nodeType":"YulFunctionCall","src":"31650:14:20"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"31666:27:20","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31643:6:20"},"nodeType":"YulFunctionCall","src":"31643:51:20"},"nodeType":"YulExpressionStatement","src":"31643:51:20"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31624:6:20","type":""}],"src":"31526:175:20"},{"body":{"nodeType":"YulBlock","src":"31853:220:20","statements":[{"nodeType":"YulAssignment","src":"31863:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31929:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"31934:2:20","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31870:58:20"},"nodeType":"YulFunctionCall","src":"31870:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31863:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32035:3:20"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"31946:88:20"},"nodeType":"YulFunctionCall","src":"31946:93:20"},"nodeType":"YulExpressionStatement","src":"31946:93:20"},{"nodeType":"YulAssignment","src":"32048:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32059:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"32064:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32055:3:20"},"nodeType":"YulFunctionCall","src":"32055:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32048:3:20"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31841:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31849:3:20","type":""}],"src":"31707:366:20"},{"body":{"nodeType":"YulBlock","src":"32250:248:20","statements":[{"nodeType":"YulAssignment","src":"32260:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32272:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32283:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32268:3:20"},"nodeType":"YulFunctionCall","src":"32268:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32260:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32307:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32318:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32303:3:20"},"nodeType":"YulFunctionCall","src":"32303:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32326:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"32332:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32322:3:20"},"nodeType":"YulFunctionCall","src":"32322:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32296:6:20"},"nodeType":"YulFunctionCall","src":"32296:47:20"},"nodeType":"YulExpressionStatement","src":"32296:47:20"},{"nodeType":"YulAssignment","src":"32352:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32486:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32360:124:20"},"nodeType":"YulFunctionCall","src":"32360:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32352:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32230:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32245:4:20","type":""}],"src":"32079:419:20"},{"body":{"nodeType":"YulBlock","src":"32610:131:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32632:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"32640:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32628:3:20"},"nodeType":"YulFunctionCall","src":"32628:14:20"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"32644:34:20","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32621:6:20"},"nodeType":"YulFunctionCall","src":"32621:58:20"},"nodeType":"YulExpressionStatement","src":"32621:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32700:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"32708:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32696:3:20"},"nodeType":"YulFunctionCall","src":"32696:15:20"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"32713:20:20","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32689:6:20"},"nodeType":"YulFunctionCall","src":"32689:45:20"},"nodeType":"YulExpressionStatement","src":"32689:45:20"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32602:6:20","type":""}],"src":"32504:237:20"},{"body":{"nodeType":"YulBlock","src":"32893:220:20","statements":[{"nodeType":"YulAssignment","src":"32903:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32969:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"32974:2:20","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32910:58:20"},"nodeType":"YulFunctionCall","src":"32910:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32903:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33075:3:20"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"32986:88:20"},"nodeType":"YulFunctionCall","src":"32986:93:20"},"nodeType":"YulExpressionStatement","src":"32986:93:20"},{"nodeType":"YulAssignment","src":"33088:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33099:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"33104:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33095:3:20"},"nodeType":"YulFunctionCall","src":"33095:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33088:3:20"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32881:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32889:3:20","type":""}],"src":"32747:366:20"},{"body":{"nodeType":"YulBlock","src":"33290:248:20","statements":[{"nodeType":"YulAssignment","src":"33300:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33312:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33323:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33308:3:20"},"nodeType":"YulFunctionCall","src":"33308:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33300:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33347:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33358:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33343:3:20"},"nodeType":"YulFunctionCall","src":"33343:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33366:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"33372:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33362:3:20"},"nodeType":"YulFunctionCall","src":"33362:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33336:6:20"},"nodeType":"YulFunctionCall","src":"33336:47:20"},"nodeType":"YulExpressionStatement","src":"33336:47:20"},{"nodeType":"YulAssignment","src":"33392:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33526:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33400:124:20"},"nodeType":"YulFunctionCall","src":"33400:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33392:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33270:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33285:4:20","type":""}],"src":"33119:419:20"},{"body":{"nodeType":"YulBlock","src":"33650:127:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33672:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"33680:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33668:3:20"},"nodeType":"YulFunctionCall","src":"33668:14:20"},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e","kind":"string","nodeType":"YulLiteral","src":"33684:34:20","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33661:6:20"},"nodeType":"YulFunctionCall","src":"33661:58:20"},"nodeType":"YulExpressionStatement","src":"33661:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33740:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"33748:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33736:3:20"},"nodeType":"YulFunctionCall","src":"33736:15:20"},{"hexValue":"6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"33753:16:20","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33729:6:20"},"nodeType":"YulFunctionCall","src":"33729:41:20"},"nodeType":"YulExpressionStatement","src":"33729:41:20"}]},"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33642:6:20","type":""}],"src":"33544:233:20"},{"body":{"nodeType":"YulBlock","src":"33929:220:20","statements":[{"nodeType":"YulAssignment","src":"33939:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34005:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"34010:2:20","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33946:58:20"},"nodeType":"YulFunctionCall","src":"33946:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33939:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34111:3:20"}],"functionName":{"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulIdentifier","src":"34022:88:20"},"nodeType":"YulFunctionCall","src":"34022:93:20"},"nodeType":"YulExpressionStatement","src":"34022:93:20"},{"nodeType":"YulAssignment","src":"34124:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34135:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"34140:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34131:3:20"},"nodeType":"YulFunctionCall","src":"34131:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34124:3:20"}]}]},"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33917:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33925:3:20","type":""}],"src":"33783:366:20"},{"body":{"nodeType":"YulBlock","src":"34326:248:20","statements":[{"nodeType":"YulAssignment","src":"34336:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34348:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34359:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34344:3:20"},"nodeType":"YulFunctionCall","src":"34344:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34336:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34383:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34394:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34379:3:20"},"nodeType":"YulFunctionCall","src":"34379:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34402:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"34408:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34398:3:20"},"nodeType":"YulFunctionCall","src":"34398:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34372:6:20"},"nodeType":"YulFunctionCall","src":"34372:47:20"},"nodeType":"YulExpressionStatement","src":"34372:47:20"},{"nodeType":"YulAssignment","src":"34428:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34562:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34436:124:20"},"nodeType":"YulFunctionCall","src":"34436:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34428:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34306:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34321:4:20","type":""}],"src":"34155:419:20"},{"body":{"nodeType":"YulBlock","src":"34638:40:20","statements":[{"nodeType":"YulAssignment","src":"34649:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34665:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34659:5:20"},"nodeType":"YulFunctionCall","src":"34659:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"34649:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34621:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"34631:6:20","type":""}],"src":"34580:98:20"},{"body":{"nodeType":"YulBlock","src":"34779:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34796:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"34801:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34789:6:20"},"nodeType":"YulFunctionCall","src":"34789:19:20"},"nodeType":"YulExpressionStatement","src":"34789:19:20"},{"nodeType":"YulAssignment","src":"34817:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34836:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"34841:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34832:3:20"},"nodeType":"YulFunctionCall","src":"34832:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34817:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34751:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"34756:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34767:11:20","type":""}],"src":"34684:168:20"},{"body":{"nodeType":"YulBlock","src":"34948:270:20","statements":[{"nodeType":"YulVariableDeclaration","src":"34958:52:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35004:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"34972:31:20"},"nodeType":"YulFunctionCall","src":"34972:38:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"34962:6:20","type":""}]},{"nodeType":"YulAssignment","src":"35019:77:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35084:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"35089:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35026:57:20"},"nodeType":"YulFunctionCall","src":"35026:70:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35019:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35131:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"35138:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35127:3:20"},"nodeType":"YulFunctionCall","src":"35127:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"35145:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"35150:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"35105:21:20"},"nodeType":"YulFunctionCall","src":"35105:52:20"},"nodeType":"YulExpressionStatement","src":"35105:52:20"},{"nodeType":"YulAssignment","src":"35166:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35177:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35204:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"35182:21:20"},"nodeType":"YulFunctionCall","src":"35182:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35173:3:20"},"nodeType":"YulFunctionCall","src":"35173:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35166:3:20"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34929:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34936:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34944:3:20","type":""}],"src":"34858:360:20"},{"body":{"nodeType":"YulBlock","src":"35424:440:20","statements":[{"nodeType":"YulAssignment","src":"35434:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35446:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35457:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35442:3:20"},"nodeType":"YulFunctionCall","src":"35442:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35434:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35515:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35528:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35539:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35524:3:20"},"nodeType":"YulFunctionCall","src":"35524:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35471:43:20"},"nodeType":"YulFunctionCall","src":"35471:71:20"},"nodeType":"YulExpressionStatement","src":"35471:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35596:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35609:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35620:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35605:3:20"},"nodeType":"YulFunctionCall","src":"35605:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35552:43:20"},"nodeType":"YulFunctionCall","src":"35552:72:20"},"nodeType":"YulExpressionStatement","src":"35552:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"35678:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35691:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35702:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35687:3:20"},"nodeType":"YulFunctionCall","src":"35687:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"35634:43:20"},"nodeType":"YulFunctionCall","src":"35634:72:20"},"nodeType":"YulExpressionStatement","src":"35634:72:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35727:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35738:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35723:3:20"},"nodeType":"YulFunctionCall","src":"35723:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35747:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"35753:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35743:3:20"},"nodeType":"YulFunctionCall","src":"35743:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35716:6:20"},"nodeType":"YulFunctionCall","src":"35716:48:20"},"nodeType":"YulExpressionStatement","src":"35716:48:20"},{"nodeType":"YulAssignment","src":"35773:84:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"35843:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"35852:4:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35781:61:20"},"nodeType":"YulFunctionCall","src":"35781:76:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35773:4:20"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35372:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"35384:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35392:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35400:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35408:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35419:4:20","type":""}],"src":"35224:640:20"},{"body":{"nodeType":"YulBlock","src":"35932:79:20","statements":[{"nodeType":"YulAssignment","src":"35942:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"35957:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35951:5:20"},"nodeType":"YulFunctionCall","src":"35951:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"35942:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35999:5:20"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"35973:25:20"},"nodeType":"YulFunctionCall","src":"35973:32:20"},"nodeType":"YulExpressionStatement","src":"35973:32:20"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"35910:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"35918:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"35926:5:20","type":""}],"src":"35870:141:20"},{"body":{"nodeType":"YulBlock","src":"36093:273:20","statements":[{"body":{"nodeType":"YulBlock","src":"36139:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"36141:77:20"},"nodeType":"YulFunctionCall","src":"36141:79:20"},"nodeType":"YulExpressionStatement","src":"36141:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"36114:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"36123:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36110:3:20"},"nodeType":"YulFunctionCall","src":"36110:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"36135:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"36106:3:20"},"nodeType":"YulFunctionCall","src":"36106:32:20"},"nodeType":"YulIf","src":"36103:119:20"},{"nodeType":"YulBlock","src":"36232:127:20","statements":[{"nodeType":"YulVariableDeclaration","src":"36247:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"36261:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"36251:6:20","type":""}]},{"nodeType":"YulAssignment","src":"36276:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36321:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"36332:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36317:3:20"},"nodeType":"YulFunctionCall","src":"36317:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"36341:7:20"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"36286:30:20"},"nodeType":"YulFunctionCall","src":"36286:63:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"36276:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36063:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"36074:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"36086:6:20","type":""}],"src":"36017:349:20"},{"body":{"nodeType":"YulBlock","src":"36414:143:20","statements":[{"nodeType":"YulAssignment","src":"36424:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"36447:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"36429:17:20"},"nodeType":"YulFunctionCall","src":"36429:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"36424:1:20"}]},{"nodeType":"YulAssignment","src":"36458:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"36481:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"36463:17:20"},"nodeType":"YulFunctionCall","src":"36463:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"36458:1:20"}]},{"body":{"nodeType":"YulBlock","src":"36505:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"36507:16:20"},"nodeType":"YulFunctionCall","src":"36507:18:20"},"nodeType":"YulExpressionStatement","src":"36507:18:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"36502:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36495:6:20"},"nodeType":"YulFunctionCall","src":"36495:9:20"},"nodeType":"YulIf","src":"36492:35:20"},{"nodeType":"YulAssignment","src":"36537:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"36546:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"36549:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"36542:3:20"},"nodeType":"YulFunctionCall","src":"36542:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"36537:1:20"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"36403:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"36406:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"36412:1:20","type":""}],"src":"36372:185:20"},{"body":{"nodeType":"YulBlock","src":"36669:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36691:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"36699:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36687:3:20"},"nodeType":"YulFunctionCall","src":"36687:14:20"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"36703:34:20","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36680:6:20"},"nodeType":"YulFunctionCall","src":"36680:58:20"},"nodeType":"YulExpressionStatement","src":"36680:58:20"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36661:6:20","type":""}],"src":"36563:182:20"},{"body":{"nodeType":"YulBlock","src":"36897:220:20","statements":[{"nodeType":"YulAssignment","src":"36907:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36973:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"36978:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36914:58:20"},"nodeType":"YulFunctionCall","src":"36914:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36907:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37079:3:20"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"36990:88:20"},"nodeType":"YulFunctionCall","src":"36990:93:20"},"nodeType":"YulExpressionStatement","src":"36990:93:20"},{"nodeType":"YulAssignment","src":"37092:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37103:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"37108:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37099:3:20"},"nodeType":"YulFunctionCall","src":"37099:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37092:3:20"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36885:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36893:3:20","type":""}],"src":"36751:366:20"},{"body":{"nodeType":"YulBlock","src":"37294:248:20","statements":[{"nodeType":"YulAssignment","src":"37304:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37316:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37327:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37312:3:20"},"nodeType":"YulFunctionCall","src":"37312:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37304:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37351:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37362:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37347:3:20"},"nodeType":"YulFunctionCall","src":"37347:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37370:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"37376:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37366:3:20"},"nodeType":"YulFunctionCall","src":"37366:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37340:6:20"},"nodeType":"YulFunctionCall","src":"37340:47:20"},"nodeType":"YulExpressionStatement","src":"37340:47:20"},{"nodeType":"YulAssignment","src":"37396:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37530:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37404:124:20"},"nodeType":"YulFunctionCall","src":"37404:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37396:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37274:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37289:4:20","type":""}],"src":"37123:419:20"},{"body":{"nodeType":"YulBlock","src":"37654:72:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37676:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"37684:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37672:3:20"},"nodeType":"YulFunctionCall","src":"37672:14:20"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"37688:30:20","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37665:6:20"},"nodeType":"YulFunctionCall","src":"37665:54:20"},"nodeType":"YulExpressionStatement","src":"37665:54:20"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37646:6:20","type":""}],"src":"37548:178:20"},{"body":{"nodeType":"YulBlock","src":"37878:220:20","statements":[{"nodeType":"YulAssignment","src":"37888:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37954:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"37959:2:20","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37895:58:20"},"nodeType":"YulFunctionCall","src":"37895:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37888:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38060:3:20"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"37971:88:20"},"nodeType":"YulFunctionCall","src":"37971:93:20"},"nodeType":"YulExpressionStatement","src":"37971:93:20"},{"nodeType":"YulAssignment","src":"38073:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38084:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"38089:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38080:3:20"},"nodeType":"YulFunctionCall","src":"38080:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38073:3:20"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37866:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37874:3:20","type":""}],"src":"37732:366:20"},{"body":{"nodeType":"YulBlock","src":"38275:248:20","statements":[{"nodeType":"YulAssignment","src":"38285:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38297:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"38308:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38293:3:20"},"nodeType":"YulFunctionCall","src":"38293:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38285:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38332:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"38343:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38328:3:20"},"nodeType":"YulFunctionCall","src":"38328:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38351:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"38357:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38347:3:20"},"nodeType":"YulFunctionCall","src":"38347:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38321:6:20"},"nodeType":"YulFunctionCall","src":"38321:47:20"},"nodeType":"YulExpressionStatement","src":"38321:47:20"},{"nodeType":"YulAssignment","src":"38377:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38511:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38385:124:20"},"nodeType":"YulFunctionCall","src":"38385:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38377:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38255:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38270:4:20","type":""}],"src":"38104:419:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$3_memory_ptr(value) -> length {\n\n        length := 0x03\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$3_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$3_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[3] -> uint256[3]\n    function abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$3_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$3_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$3_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Breed_$3062(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Breed_$3062(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Breed_$3062(value)\n    }\n\n    function convert_t_enum$_Breed_$3062_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Breed_$3062(value)\n    }\n\n    function abi_encode_t_enum$_Breed_$3062_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Breed_$3062_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Breed_$3062__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Breed_$3062_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_enum$_Breed_$3062_t_address__to_t_uint8_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_enum$_Breed_$3062_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721URIStorage: URI set of non\")\n\n        mstore(add(memPtr, 32), \"existent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"10":[{"length":32,"start":2333},{"length":32,"start":2417}],"3046":[{"length":32,"start":4063}],"3048":[{"length":32,"start":4156}],"3050":[{"length":32,"start":4123}],"3052":[{"length":32,"start":4191}],"3076":[{"length":32,"start":3446},{"length":32,"start":3973}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA36F573B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61A JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0xA36F573B EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0xA51CCCF3 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xAA152491 EQ PUSH2 0x559 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4B6 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x5DACF5F4 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x3B6 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x3AF25975 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x30E JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xB21A83B EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x294C JUMP JUMPDEST PUSH2 0x9DB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH2 0xAEB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x294C JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x363 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x2A4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH2 0xD5E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A0 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0xE56 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x506 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x543 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x2B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x561 PUSH2 0xF81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x1181 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x641 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x138A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x70E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x71E JUMPI POP PUSH2 0x71D DUP3 PUSH2 0x140E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x734 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x760 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x782 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x790 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C2 DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x808 DUP3 PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x870 SWAP1 PUSH2 0x2DDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x898 PUSH2 0x14C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x8C7 JUMPI POP PUSH2 0x8C6 DUP2 PUSH2 0x8C1 PUSH2 0x14C3 JUMP JUMPDEST PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST PUSH2 0x906 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x2E6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x910 DUP4 DUP4 PUSH2 0x14CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9CD JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D7 DUP3 DUP3 PUSH2 0x1584 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9EC PUSH2 0x9E6 PUSH2 0x14C3 JUMP JUMPDEST DUP3 PUSH2 0x1724 JUMP JUMPDEST PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA22 SWAP1 PUSH2 0x2F28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA36 DUP4 DUP4 DUP4 PUSH2 0x17B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA51 JUMPI PUSH2 0xA50 PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xA66 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA92 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xADF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAB4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xADF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAC2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF3 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xB1E SWAP1 PUSH2 0x2FA8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB9B JUMPI PUSH1 0x40 MLOAD PUSH32 0xCA7E25B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBBA DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1181 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBC7 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8A SWAP1 PUSH2 0x3009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0E SWAP1 PUSH2 0x309B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD66 PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0xD70 PUSH1 0x0 PUSH2 0x1A9E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xDD3 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDFF SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE68 PUSH2 0xE61 PUSH2 0x14C3 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1B64 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0xEB0 PUSH2 0xBBF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xF49 JUMPI DUP3 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0xEEF JUMPI POP DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xEDC JUMPI PUSH2 0xEDB PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xEEC SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0xF11 JUMPI DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF07 JUMPI PUSH2 0xF06 PUSH2 0x2AFE JUMP JUMPDEST JUMPDEST SWAP4 POP POP POP POP PUSH2 0xF7C JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xF24 JUMPI PUSH2 0xF23 PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xF34 SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0xF41 SWAP1 PUSH2 0x3140 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEB5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x69FBED1600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0xFDD JUMPI PUSH1 0x40 MLOAD PUSH32 0xB90F491000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3201 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x3269 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xF873236E6CC0ECC5BE1A9A35C95EE5B8D1AC4CC7BFEF0CC5060391D6CC98E26B CALLER PUSH1 0x40 MLOAD PUSH2 0x1176 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x1192 PUSH2 0x118C PUSH2 0x14C3 JUMP JUMPDEST DUP4 PUSH2 0x1724 JUMP JUMPDEST PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C8 SWAP1 PUSH2 0x2F28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11DD DUP5 DUP5 DUP5 DUP5 PUSH2 0x1CD1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11EE DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x120E SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x123A SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1287 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x125C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1287 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x126A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1298 PUSH2 0x1D2D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12AE JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x12E3 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12CB SWAP3 SWAP2 SWAP1 PUSH2 0x32D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x12F1 JUMP JUMPDEST PUSH2 0x12EC DUP5 PUSH2 0x1D44 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1392 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F9 SWAP1 PUSH2 0x3368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x140B DUP2 PUSH2 0x1A9E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1481 DUP2 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x14C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B7 SWAP1 PUSH2 0x3009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x153E DUP4 PUSH2 0xBEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x15DB JUMPI PUSH2 0x15DA PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x15ED SWAP2 SWAP1 PUSH2 0x33B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15FA DUP3 PUSH2 0xE9F JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1610 SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1621 DUP5 DUP5 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x16E3 DUP4 PUSH1 0xA DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x2AFE JUMP JUMPDEST JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x164B JUMPI PUSH2 0x164A PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x1660 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x168C SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x1E36 JUMP JUMPDEST PUSH32 0x8A269F26B688E110E9CBD887D163DAB35CAE678FA353A0292DE532C0CAC1ECDC DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1714 SWAP3 SWAP2 SWAP1 PUSH2 0x33E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1730 DUP4 PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1772 JUMPI POP PUSH2 0x1771 DUP2 DUP6 PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x17B0 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1798 DUP5 PUSH2 0x7B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D9 DUP3 PUSH2 0xBEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x182F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1826 SWAP1 PUSH2 0x3483 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x189F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1896 SWAP1 PUSH2 0x3515 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18AA DUP4 DUP4 DUP4 PUSH2 0x1EAA JUMP JUMPDEST PUSH2 0x18B5 PUSH1 0x0 DUP3 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1905 SWAP2 SWAP1 PUSH2 0x3535 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x195C SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A1B DUP4 DUP4 DUP4 PUSH2 0x1EAF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A28 PUSH2 0x14C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A46 PUSH2 0xD9A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A93 SWAP1 PUSH2 0x35B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BCA SWAP1 PUSH2 0x3621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CC4 SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1CDC DUP5 DUP5 DUP5 PUSH2 0x17B9 JUMP JUMPDEST PUSH2 0x1CE8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1EB4 JUMP JUMPDEST PUSH2 0x1D27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1E SWAP1 PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D4F DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D59 PUSH2 0x1D2D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1D79 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1DA4 JUMP JUMPDEST DUP1 PUSH2 0x1D83 DUP5 PUSH2 0x204B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D94 SWAP3 SWAP2 SWAP1 PUSH2 0x32D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E32 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x21AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E3F DUP3 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x1E7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E75 SWAP1 PUSH2 0x3745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1EA5 SWAP3 SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2207 JUMP JUMPDEST ISZERO PUSH2 0x203E JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1EFE PUSH2 0x14C3 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F20 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1F6B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F68 SWAP2 SWAP1 PUSH2 0x381B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1FEE JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F9B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1FE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FDD SWAP1 PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2043 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x2093 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x21A7 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x20C5 JUMPI DUP1 DUP1 PUSH2 0x20AE SWAP1 PUSH2 0x3140 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x20BE SWAP2 SWAP1 PUSH2 0x3848 JUMP JUMPDEST SWAP2 POP PUSH2 0x209B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E1 JUMPI PUSH2 0x20E0 PUSH2 0x27AD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2113 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x21A0 JUMPI PUSH1 0x1 DUP3 PUSH2 0x212C SWAP2 SWAP1 PUSH2 0x3535 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x213B SWAP2 SWAP1 PUSH2 0x33B7 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x2147 SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x215D JUMPI PUSH2 0x215C PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x2199 SWAP2 SWAP1 PUSH2 0x3848 JUMP JUMPDEST SWAP5 POP PUSH2 0x2117 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B6 DUP4 DUP4 PUSH2 0x222A JUMP JUMPDEST PUSH2 0x21C3 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1EB4 JUMP JUMPDEST PUSH2 0x2202 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21F9 SWAP1 PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x229A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2291 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22A3 DUP2 PUSH2 0x1DAC JUMP JUMPDEST ISZERO PUSH2 0x22E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22DA SWAP1 PUSH2 0x3931 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22EF PUSH1 0x0 DUP4 DUP4 PUSH2 0x1EAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x233F SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2400 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1EAF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2432 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2454 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x249B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x246D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x249B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x249B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x249A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x247F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x24A8 SWAP2 SWAP1 PUSH2 0x24AC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x24C5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x24AD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2512 DUP2 PUSH2 0x24DD JUMP JUMPDEST DUP2 EQ PUSH2 0x251D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x252F DUP2 PUSH2 0x2509 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x254B JUMPI PUSH2 0x254A PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2559 DUP5 DUP3 DUP6 ADD PUSH2 0x2520 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2577 DUP2 PUSH2 0x2562 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2592 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x256E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x25D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25B7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x25E1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2603 DUP3 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x260D DUP2 DUP6 PUSH2 0x25A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x261D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25B4 JUMP JUMPDEST PUSH2 0x2626 DUP2 PUSH2 0x25E7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x264B DUP2 DUP5 PUSH2 0x25F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2666 DUP2 PUSH2 0x2653 JUMP JUMPDEST DUP2 EQ PUSH2 0x2671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2683 DUP2 PUSH2 0x265D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x269F JUMPI PUSH2 0x269E PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26AD DUP5 DUP3 DUP6 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E1 DUP3 PUSH2 0x26B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F1 DUP2 PUSH2 0x26D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x270C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x271B DUP2 PUSH2 0x26D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2738 DUP2 PUSH2 0x2712 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2755 JUMPI PUSH2 0x2754 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2763 DUP6 DUP3 DUP7 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2774 DUP6 DUP3 DUP7 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2787 DUP2 PUSH2 0x2653 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x277E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x27E5 DUP3 PUSH2 0x25E7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2804 JUMPI PUSH2 0x2803 PUSH2 0x27AD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2817 PUSH2 0x24C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2823 DUP3 DUP3 PUSH2 0x27DC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2843 JUMPI PUSH2 0x2842 PUSH2 0x27AD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x286C PUSH2 0x2867 DUP5 PUSH2 0x2828 JUMP JUMPDEST PUSH2 0x280D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x288F JUMPI PUSH2 0x288E PUSH2 0x2854 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28B8 JUMPI DUP1 PUSH2 0x28A4 DUP9 DUP3 PUSH2 0x2674 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2891 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28D7 JUMPI PUSH2 0x28D6 PUSH2 0x27A8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x28E7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2859 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2907 JUMPI PUSH2 0x2906 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2915 DUP6 DUP3 DUP7 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2936 JUMPI PUSH2 0x2935 PUSH2 0x24D8 JUMP JUMPDEST JUMPDEST PUSH2 0x2942 DUP6 DUP3 DUP7 ADD PUSH2 0x28C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2965 JUMPI PUSH2 0x2964 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2973 DUP7 DUP3 DUP8 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2984 DUP7 DUP3 DUP8 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2995 DUP7 DUP3 DUP8 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29C8 DUP2 PUSH2 0x2653 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29DA DUP4 DUP4 PUSH2 0x29BF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29FC DUP2 PUSH2 0x299F JUMP JUMPDEST PUSH2 0x2A06 DUP2 DUP5 PUSH2 0x29AA JUMP JUMPDEST SWAP3 POP PUSH2 0x2A11 DUP3 PUSH2 0x29B5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A42 JUMPI DUP2 MLOAD PUSH2 0x2A29 DUP8 DUP3 PUSH2 0x29CE JUMP JUMPDEST SWAP7 POP PUSH2 0x2A34 DUP4 PUSH2 0x29E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2A15 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A7B JUMPI PUSH2 0x2A7A PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A89 DUP5 DUP3 DUP6 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A9B DUP2 PUSH2 0x2562 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AB8 DUP2 PUSH2 0x2A92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AD5 JUMPI PUSH2 0x2AD4 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AE3 DUP6 DUP3 DUP7 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AF4 DUP6 DUP3 DUP7 ADD PUSH2 0x2AA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2B3E JUMPI PUSH2 0x2B3D PUSH2 0x2AFE JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2B4F DUP3 PUSH2 0x2B2D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5F DUP3 PUSH2 0x2B41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B6F DUP2 PUSH2 0x2B54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BB0 JUMPI PUSH2 0x2BAF PUSH2 0x27AD JUMP JUMPDEST JUMPDEST PUSH2 0x2BB9 DUP3 PUSH2 0x25E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE8 PUSH2 0x2BE3 DUP5 PUSH2 0x2B95 JUMP JUMPDEST PUSH2 0x280D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2C04 JUMPI PUSH2 0x2C03 PUSH2 0x2B90 JUMP JUMPDEST JUMPDEST PUSH2 0x2C0F DUP5 DUP3 DUP6 PUSH2 0x2BC6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C2C JUMPI PUSH2 0x2C2B PUSH2 0x27A8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C3C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2BD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C5F JUMPI PUSH2 0x2C5E PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C6D DUP8 DUP3 DUP9 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2C7E DUP8 DUP3 DUP9 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2C8F DUP8 DUP3 DUP9 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CB0 JUMPI PUSH2 0x2CAF PUSH2 0x24D8 JUMP JUMPDEST JUMPDEST PUSH2 0x2CBC DUP8 DUP3 DUP9 ADD PUSH2 0x2C17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CDF JUMPI PUSH2 0x2CDE PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CED DUP6 DUP3 DUP7 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CFE DUP6 DUP3 DUP7 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2D4F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2D63 JUMPI PUSH2 0x2D62 PUSH2 0x2D08 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC5 PUSH1 0x21 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DD0 DUP3 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DF4 DUP2 PUSH2 0x2DB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E57 PUSH1 0x3E DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E62 DUP3 PUSH2 0x2DFB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E86 DUP2 PUSH2 0x2E4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EA2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26E8 JUMP JUMPDEST PUSH2 0x2EAF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F12 PUSH1 0x2E DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F1D DUP3 PUSH2 0x2EB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F41 DUP2 PUSH2 0x2F05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F92 PUSH1 0x0 DUP4 PUSH2 0x2F77 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F9D DUP3 PUSH2 0x2F82 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB3 DUP3 PUSH2 0x2F85 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FF3 PUSH1 0x18 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FFE DUP3 PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3022 DUP2 PUSH2 0x2FE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3085 PUSH1 0x29 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3090 DUP3 PUSH2 0x3029 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30B4 DUP2 PUSH2 0x3078 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30F5 DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH2 0x3100 DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3135 JUMPI PUSH2 0x3134 PUSH2 0x30BB JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x314B DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x317E JUMPI PUSH2 0x317D PUSH2 0x30BB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x319C DUP2 PUSH2 0x3189 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31BF DUP2 PUSH2 0x31A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31DC DUP2 PUSH2 0x31C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31FB DUP2 PUSH2 0x31E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3216 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3193 JUMP JUMPDEST PUSH2 0x3223 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x31B6 JUMP JUMPDEST PUSH2 0x3230 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x323D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x31F2 JUMP JUMPDEST PUSH2 0x324A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x31F2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3263 DUP2 PUSH2 0x265D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x327F JUMPI PUSH2 0x327E PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x328D DUP5 DUP3 DUP6 ADD PUSH2 0x3254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32AC DUP3 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x32B6 DUP2 DUP6 PUSH2 0x3296 JUMP JUMPDEST SWAP4 POP PUSH2 0x32C6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25B4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32DE DUP3 DUP6 PUSH2 0x32A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x32EA DUP3 DUP5 PUSH2 0x32A1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3352 PUSH1 0x26 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x335D DUP3 PUSH2 0x32F6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3381 DUP2 PUSH2 0x3345 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33C2 DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH2 0x33CD DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x33DD JUMPI PUSH2 0x33DC PUSH2 0x3388 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x33FD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2B66 JUMP JUMPDEST PUSH2 0x340A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346D PUSH1 0x25 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3478 DUP3 PUSH2 0x3411 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x349C DUP2 PUSH2 0x3460 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34FF PUSH1 0x24 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x350A DUP3 PUSH2 0x34A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x352E DUP2 PUSH2 0x34F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3540 DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH2 0x354B DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x355E JUMPI PUSH2 0x355D PUSH2 0x30BB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x359F PUSH1 0x20 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x35AA DUP3 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35CE DUP2 PUSH2 0x3592 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360B PUSH1 0x19 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3616 DUP3 PUSH2 0x35D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x363A DUP2 PUSH2 0x35FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x369D PUSH1 0x32 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x36A8 DUP3 PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36CC DUP2 PUSH2 0x3690 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372F PUSH1 0x2E DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x373A DUP3 PUSH2 0x36D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x375E DUP2 PUSH2 0x3722 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x378C DUP3 PUSH2 0x3765 JUMP JUMPDEST PUSH2 0x3796 DUP2 DUP6 PUSH2 0x3770 JUMP JUMPDEST SWAP4 POP PUSH2 0x37A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25B4 JUMP JUMPDEST PUSH2 0x37AF DUP2 PUSH2 0x25E7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x37CF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x26E8 JUMP JUMPDEST PUSH2 0x37DC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x26E8 JUMP JUMPDEST PUSH2 0x37E9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x277E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x37FB DUP2 DUP5 PUSH2 0x3781 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3815 DUP2 PUSH2 0x2509 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3831 JUMPI PUSH2 0x3830 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x383F DUP5 DUP3 DUP6 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3853 DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH2 0x385E DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x386E JUMPI PUSH2 0x386D PUSH2 0x3388 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38AF PUSH1 0x20 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x38BA DUP3 PUSH2 0x3879 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38DE DUP2 PUSH2 0x38A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391B PUSH1 0x1C DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3926 DUP3 PUSH2 0x38E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x394A DUP2 PUSH2 0x390E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0x2D 0x2B SSTORE 0x22 0xDF LT 0x1F 0xD9 POP PUSH16 0xBE97AB06789483D9120D5689A1E5C7C5 DUP8 GT 0xC8 0xCD CALLCODE PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"447:3678:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2470:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3467:407;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;962:29:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6618:256:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:327:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3873:149:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2848:250;;;;;;;;;;;;;:::i;:::-;;5005:179:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3660:116:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2190:218:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4028:95:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:5;;;;;;;;;;;;;:::i;:::-;;3782:85:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201::5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2632:102:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;901:54:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:550;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1800:487;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5250:315:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;482:608:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1570:300:6;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2470:98::-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;3604:11;;:2;:11;;;;3596:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3701:5;3685:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3710:37;3727:5;3734:12;:10;:12::i;:::-;3710:16;:37::i;:::-;3685:62;3664:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;962:29:18:-;;;;:::o;6618:256:0:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;4612:327:6:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;:::-;4612:327;;;:::o;3873:149:18:-;3958:13;3994:14;4009:5;3994:21;;;;;;;;:::i;:::-;;;;;;;;;3987:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3873:149;;;:::o;2848:250::-;1094:13:5;:11;:13::i;:::-;2895:14:18::1;2912:21;2895:38;;2944:12;2970:10;2962:24;;2994:6;2962:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2943:62;;;3020:7;3015:77;;3050:31;;;;;;;;;;;;;;3015:77;2885:213;;2848:250::o:0;5005:179:6:-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;:::-;5005:179;;;:::o;3660:116:18:-;3707:17;;:::i;:::-;3736:33;;;;;;;;3744:2;3736:33;;;;3748:2;3736:33;;;;1042:3;3736:33;;;;;3660:116;:::o;2190:218:6:-;2262:7;2281:13;2297:7;:16;2305:7;2297:16;;;;;;;;;;;;;;;;;;;;;2281:32;;2348:1;2331:19;;:5;:19;;;;2323:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:5;2389:12;;;2190:218;;;:::o;4028:95:18:-;4076:7;4102:14;;4095:21;;4028:95;:::o;1929:204:6:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;1831:101:5:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3782:85:18:-;3825:7;3851:9;3844:16;;3782:85;:::o;1201::5:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2632:102:6:-;2688:13;2720:7;2713:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;901:54:18:-;;;;;;;;;;;;;;;;;;;;;;:::o;3104:550::-;3199:5;3220:21;3244:1;3220:25;;3255:29;3287:16;:14;:16::i;:::-;3255:48;;3318:9;3313:290;3337:18;3333:1;:22;3313:290;;;3410:13;3397:9;:26;;:88;;;;;3471:11;3483:1;3471:14;;;;;;;:::i;:::-;;;;;;3455:13;:30;;;;:::i;:::-;3443:9;:42;3397:88;3376:172;;;3531:1;3525:8;;;;;;;;:::i;:::-;;3518:15;;;;;;;3376:172;3578:11;3590:1;3578:14;;;;;;;:::i;:::-;;;;;;3561:31;;;;;:::i;:::-;;;3357:3;;;;;:::i;:::-;;;;3313:290;;;;3619:28;;;;;;;;;;;;;;3104:550;;;;:::o;1800:487::-;1846:17;1891:9;1879;:21;1875:91;;;1923:32;;;;;;;;;;;;;;1875:91;1987:16;:35;;;2036:9;2059:16;775:1;2124:18;818:1;1987:188;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1975:200;;2218:10;2185:19;:30;2205:9;2185:30;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;2257:9;2243:37;2269:10;2243:37;;;;;;:::i;:::-;;;;;;;;1800:487;:::o;5250:315:6:-;5418:41;5437:12;:10;:12::i;:::-;5451:7;5418:18;:41::i;:::-;5410:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;482:608:9:-;555:13;580:23;595:7;580:14;:23::i;:::-;614;640:10;:19;651:7;640:19;;;;;;;;;;;614:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:18;690:10;:8;:10::i;:::-;669:31;;795:1;779:4;773:18;:23;769:70;;;819:9;812:16;;;;;;769:70;967:1;947:9;941:23;:27;937:106;;;1015:4;1021:9;998:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;984:48;;;;;;937:106;1060:23;1075:7;1060:14;:23::i;:::-;1053:30;;;;482:608;;;;:::o;4388:162:6:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;2081:198:5:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;829:155:14:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;11657:133:6:-;11738:16;11746:7;11738;:16::i;:::-;11730:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;11657:133;:::o;640:96:12:-;693:7;719:10;712:17;;640:96;:::o;10959:171:6:-;11060:2;11033:15;:24;11049:7;11033:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11115:7;11111:2;11077:46;;11086:23;11101:7;11086:14;:23::i;:::-;11077:46;;;;;;;;;;;;10959:171;;:::o;2293:549:18:-;2418:16;2437:19;:30;2457:9;2437:30;;;;;;;;;;;;;;;;;;;;;2418:49;;2477:18;2498:14;;2477:35;;2523:17;1042:3;2543:11;2555:1;2543:14;;;;;;;;:::i;:::-;;;;;;;;:33;;;;:::i;:::-;2523:53;;2586:14;2603:32;2625:9;2603:21;:32::i;:::-;2586:49;;2663:14;;2645;;:32;;;;;;;:::i;:::-;;;;;;;;2687:31;2697:8;2707:10;2687:9;:31::i;:::-;2728:61;2742:10;2755:14;2778:8;2770:17;;;;;;;;:::i;:::-;;2755:33;;;;;;;;:::i;:::-;;;;;;;;;2728:61;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:61::i;:::-;2804:31;2815:8;2826;2804:31;;;;;;;:::i;:::-;;;;;;;;2408:434;;;;2293:549;;:::o;7317:261:6:-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;7483:16;;:7;:16;;;:52;;;;7503:32;7520:5;7527:7;7503:16;:32::i;:::-;7483:52;:87;;;;7563:7;7539:31;;:20;7551:7;7539:11;:20::i;:::-;:31;;;7483:87;7475:96;;;7317:261;;;;:::o;10242:605::-;10396:4;10369:31;;:23;10384:7;10369:14;:23::i;:::-;:31;;;10361:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10474:1;10460:16;;:2;:16;;;;10452:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;10688:1;10669:9;:15;10679:4;10669:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10716:1;10699:9;:13;10709:2;10699:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10746:2;10727:7;:16;10735:7;10727:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10783:7;10779:2;10764:27;;10773:4;10764:27;;;;;;;;;;;;10802:38;10822:4;10828:2;10832:7;10802:19;:38::i;:::-;10242:605;;;:::o;1359:130:5:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;11266:307:6:-;11416:8;11407:17;;:5;:17;;;;11399:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11502:8;11464:18;:25;11483:5;11464:25;;;;;;;;;;;;;;;:35;11490:8;11464:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11547:8;11525:41;;11540:5;11525:41;;;11557:8;11525:41;;;;;;:::i;:::-;;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6426:305;;;;:::o;3318:92::-;3369:13;3394:9;;;;;;;;;;;;;;3318:92;:::o;2800:276::-;2873:13;2898:23;2913:7;2898:14;:23::i;:::-;2932:21;2956:10;:8;:10::i;:::-;2932:34;;3007:1;2989:7;2983:21;:25;:86;;;;;;;;;;;;;;;;;3035:7;3044:18;:7;:16;:18::i;:::-;3018:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2983:86;2976:93;;;2800:276;;;:::o;7034:125::-;7099:4;7150:1;7122:30;;:7;:16;7130:7;7122:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7115:37;;7034:125;;;:::o;7908:108::-;7983:26;7993:2;7997:7;7983:26;;;;;;;;;;;;:9;:26::i;:::-;7908:108;;:::o;1237:214:9:-;1336:16;1344:7;1336;:16::i;:::-;1328:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1435:9;1413:10;:19;1424:7;1413:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;1237:214;;:::o;13729:122:6:-;;;;:::o;14223:121::-;;;;:::o;12342:831::-;12491:4;12511:15;:2;:13;;;:15::i;:::-;12507:660;;;12562:2;12546:36;;;12583:12;:10;:12::i;:::-;12597:4;12603:7;12612:4;12546:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12801:1;12784:6;:13;:18;12780:321;;;12826:60;;;;;;;;;;:::i;:::-;;;;;;;;12780:321;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;12677:41;;;12667:51;;;:6;:51;;;;12660:58;;;;;12507:660;13152:4;13145:11;;12342:831;;;;;;;:::o;392:703:13:-;448:13;674:1;665:5;:10;661:51;;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;8237:309:6:-;8361:18;8367:2;8371:7;8361:5;:18::i;:::-;8410:53;8441:1;8445:2;8449:7;8458:4;8410:22;:53::i;:::-;8389:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8237:309;;;:::o;1175:320:11:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8868:427:6:-;8961:1;8947:16;;:2;:16;;;;8939:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9019:16;9027:7;9019;:16::i;:::-;9018:17;9010:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9079:45;9108:1;9112:2;9116:7;9079:20;:45::i;:::-;9152:1;9135:9;:13;9145:2;9135:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;9182:2;9163:7;:16;9171:7;9163:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9225:7;9221:2;9200:33;;9217:1;9200:33;;;;;;;;;;;;9244:44;9272:1;9276:2;9280:7;9244:19;:44::i;:::-;8868:427;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:20:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:118::-;5025:24;5043:5;5025:24;:::i;:::-;5020:3;5013:37;4938:118;;:::o;5062:222::-;5155:4;5193:2;5182:9;5178:18;5170:26;;5206:71;5274:1;5263:9;5259:17;5250:6;5206:71;:::i;:::-;5062:222;;;;:::o;5290:117::-;5399:1;5396;5389:12;5413:180;5461:77;5458:1;5451:88;5558:4;5555:1;5548:15;5582:4;5579:1;5572:15;5599:281;5682:27;5704:4;5682:27;:::i;:::-;5674:6;5670:40;5812:6;5800:10;5797:22;5776:18;5764:10;5761:34;5758:62;5755:88;;;5823:18;;:::i;:::-;5755:88;5863:10;5859:2;5852:22;5642:238;5599:281;;:::o;5886:129::-;5920:6;5947:20;;:::i;:::-;5937:30;;5976:33;6004:4;5996:6;5976:33;:::i;:::-;5886:129;;;:::o;6021:311::-;6098:4;6188:18;6180:6;6177:30;6174:56;;;6210:18;;:::i;:::-;6174:56;6260:4;6252:6;6248:17;6240:25;;6320:4;6314;6310:15;6302:23;;6021:311;;;:::o;6338:117::-;6447:1;6444;6437:12;6478:710;6574:5;6599:81;6615:64;6672:6;6615:64;:::i;:::-;6599:81;:::i;:::-;6590:90;;6700:5;6729:6;6722:5;6715:21;6763:4;6756:5;6752:16;6745:23;;6816:4;6808:6;6804:17;6796:6;6792:30;6845:3;6837:6;6834:15;6831:122;;;6864:79;;:::i;:::-;6831:122;6979:6;6962:220;6996:6;6991:3;6988:15;6962:220;;;7071:3;7100:37;7133:3;7121:10;7100:37;:::i;:::-;7095:3;7088:50;7167:4;7162:3;7158:14;7151:21;;7038:144;7022:4;7017:3;7013:14;7006:21;;6962:220;;;6966:21;6580:608;;6478:710;;;;;:::o;7211:370::-;7282:5;7331:3;7324:4;7316:6;7312:17;7308:27;7298:122;;7339:79;;:::i;:::-;7298:122;7456:6;7443:20;7481:94;7571:3;7563:6;7556:4;7548:6;7544:17;7481:94;:::i;:::-;7472:103;;7288:293;7211:370;;;;:::o;7587:684::-;7680:6;7688;7737:2;7725:9;7716:7;7712:23;7708:32;7705:119;;;7743:79;;:::i;:::-;7705:119;7863:1;7888:53;7933:7;7924:6;7913:9;7909:22;7888:53;:::i;:::-;7878:63;;7834:117;8018:2;8007:9;8003:18;7990:32;8049:18;8041:6;8038:30;8035:117;;;8071:79;;:::i;:::-;8035:117;8176:78;8246:7;8237:6;8226:9;8222:22;8176:78;:::i;:::-;8166:88;;7961:303;7587:684;;;;;:::o;8277:619::-;8354:6;8362;8370;8419:2;8407:9;8398:7;8394:23;8390:32;8387:119;;;8425:79;;:::i;:::-;8387:119;8545:1;8570:53;8615:7;8606:6;8595:9;8591:22;8570:53;:::i;:::-;8560:63;;8516:117;8672:2;8698:53;8743:7;8734:6;8723:9;8719:22;8698:53;:::i;:::-;8688:63;;8643:118;8800:2;8826:53;8871:7;8862:6;8851:9;8847:22;8826:53;:::i;:::-;8816:63;;8771:118;8277:619;;;;;:::o;8902:104::-;8967:6;8995:4;8985:14;;8902:104;;;:::o;9012:143::-;9109:11;9146:3;9131:18;;9012:143;;;;:::o;9161:98::-;9226:4;9249:3;9241:11;;9161:98;;;:::o;9265:108::-;9342:24;9360:5;9342:24;:::i;:::-;9337:3;9330:37;9265:108;;:::o;9379:179::-;9448:10;9469:46;9511:3;9503:6;9469:46;:::i;:::-;9547:4;9542:3;9538:14;9524:28;;9379:179;;;;:::o;9564:111::-;9632:4;9664;9659:3;9655:14;9647:22;;9564:111;;;:::o;9713:694::-;9849:52;9895:5;9849:52;:::i;:::-;9917:84;9994:6;9989:3;9917:84;:::i;:::-;9910:91;;10025:54;10073:5;10025:54;:::i;:::-;10102:7;10133:1;10118:282;10143:6;10140:1;10137:13;10118:282;;;10219:6;10213:13;10246:63;10305:3;10290:13;10246:63;:::i;:::-;10239:70;;10332:58;10383:6;10332:58;:::i;:::-;10322:68;;10178:222;10165:1;10162;10158:9;10153:14;;10118:282;;;10122:14;9825:582;;;9713:694;;:::o;10413:314::-;10552:4;10590:2;10579:9;10575:18;10567:26;;10603:117;10717:1;10706:9;10702:17;10693:6;10603:117;:::i;:::-;10413:314;;;;:::o;10733:329::-;10792:6;10841:2;10829:9;10820:7;10816:23;10812:32;10809:119;;;10847:79;;:::i;:::-;10809:119;10967:1;10992:53;11037:7;11028:6;11017:9;11013:22;10992:53;:::i;:::-;10982:63;;10938:117;10733:329;;;;:::o;11068:116::-;11138:21;11153:5;11138:21;:::i;:::-;11131:5;11128:32;11118:60;;11174:1;11171;11164:12;11118:60;11068:116;:::o;11190:133::-;11233:5;11271:6;11258:20;11249:29;;11287:30;11311:5;11287:30;:::i;:::-;11190:133;;;;:::o;11329:468::-;11394:6;11402;11451:2;11439:9;11430:7;11426:23;11422:32;11419:119;;;11457:79;;:::i;:::-;11419:119;11577:1;11602:53;11647:7;11638:6;11627:9;11623:22;11602:53;:::i;:::-;11592:63;;11548:117;11704:2;11730:50;11772:7;11763:6;11752:9;11748:22;11730:50;:::i;:::-;11720:60;;11675:115;11329:468;;;;;:::o;11803:180::-;11851:77;11848:1;11841:88;11948:4;11945:1;11938:15;11972:4;11969:1;11962:15;11989:115;12072:1;12065:5;12062:12;12052:46;;12078:18;;:::i;:::-;12052:46;11989:115;:::o;12110:131::-;12157:7;12186:5;12175:16;;12192:43;12229:5;12192:43;:::i;:::-;12110:131;;;:::o;12247:::-;12305:9;12338:34;12366:5;12338:34;:::i;:::-;12325:47;;12247:131;;;:::o;12384:147::-;12479:45;12518:5;12479:45;:::i;:::-;12474:3;12467:58;12384:147;;:::o;12537:238::-;12638:4;12676:2;12665:9;12661:18;12653:26;;12689:79;12765:1;12754:9;12750:17;12741:6;12689:79;:::i;:::-;12537:238;;;;:::o;12781:117::-;12890:1;12887;12880:12;12904:307;12965:4;13055:18;13047:6;13044:30;13041:56;;;13077:18;;:::i;:::-;13041:56;13115:29;13137:6;13115:29;:::i;:::-;13107:37;;13199:4;13193;13189:15;13181:23;;12904:307;;;:::o;13217:154::-;13301:6;13296:3;13291;13278:30;13363:1;13354:6;13349:3;13345:16;13338:27;13217:154;;;:::o;13377:410::-;13454:5;13479:65;13495:48;13536:6;13495:48;:::i;:::-;13479:65;:::i;:::-;13470:74;;13567:6;13560:5;13553:21;13605:4;13598:5;13594:16;13643:3;13634:6;13629:3;13625:16;13622:25;13619:112;;;13650:79;;:::i;:::-;13619:112;13740:41;13774:6;13769:3;13764;13740:41;:::i;:::-;13460:327;13377:410;;;;;:::o;13806:338::-;13861:5;13910:3;13903:4;13895:6;13891:17;13887:27;13877:122;;13918:79;;:::i;:::-;13877:122;14035:6;14022:20;14060:78;14134:3;14126:6;14119:4;14111:6;14107:17;14060:78;:::i;:::-;14051:87;;13867:277;13806:338;;;;:::o;14150:943::-;14245:6;14253;14261;14269;14318:3;14306:9;14297:7;14293:23;14289:33;14286:120;;;14325:79;;:::i;:::-;14286:120;14445:1;14470:53;14515:7;14506:6;14495:9;14491:22;14470:53;:::i;:::-;14460:63;;14416:117;14572:2;14598:53;14643:7;14634:6;14623:9;14619:22;14598:53;:::i;:::-;14588:63;;14543:118;14700:2;14726:53;14771:7;14762:6;14751:9;14747:22;14726:53;:::i;:::-;14716:63;;14671:118;14856:2;14845:9;14841:18;14828:32;14887:18;14879:6;14876:30;14873:117;;;14909:79;;:::i;:::-;14873:117;15014:62;15068:7;15059:6;15048:9;15044:22;15014:62;:::i;:::-;15004:72;;14799:287;14150:943;;;;;;;:::o;15099:474::-;15167:6;15175;15224:2;15212:9;15203:7;15199:23;15195:32;15192:119;;;15230:79;;:::i;:::-;15192:119;15350:1;15375:53;15420:7;15411:6;15400:9;15396:22;15375:53;:::i;:::-;15365:63;;15321:117;15477:2;15503:53;15548:7;15539:6;15528:9;15524:22;15503:53;:::i;:::-;15493:63;;15448:118;15099:474;;;;;:::o;15579:180::-;15627:77;15624:1;15617:88;15724:4;15721:1;15714:15;15748:4;15745:1;15738:15;15765:320;15809:6;15846:1;15840:4;15836:12;15826:22;;15893:1;15887:4;15883:12;15914:18;15904:81;;15970:4;15962:6;15958:17;15948:27;;15904:81;16032:2;16024:6;16021:14;16001:18;15998:38;15995:84;;;16051:18;;:::i;:::-;15995:84;15816:269;15765:320;;;:::o;16091:220::-;16231:34;16227:1;16219:6;16215:14;16208:58;16300:3;16295:2;16287:6;16283:15;16276:28;16091:220;:::o;16317:366::-;16459:3;16480:67;16544:2;16539:3;16480:67;:::i;:::-;16473:74;;16556:93;16645:3;16556:93;:::i;:::-;16674:2;16669:3;16665:12;16658:19;;16317:366;;;:::o;16689:419::-;16855:4;16893:2;16882:9;16878:18;16870:26;;16942:9;16936:4;16932:20;16928:1;16917:9;16913:17;16906:47;16970:131;17096:4;16970:131;:::i;:::-;16962:139;;16689:419;;;:::o;17114:249::-;17254:34;17250:1;17242:6;17238:14;17231:58;17323:32;17318:2;17310:6;17306:15;17299:57;17114:249;:::o;17369:366::-;17511:3;17532:67;17596:2;17591:3;17532:67;:::i;:::-;17525:74;;17608:93;17697:3;17608:93;:::i;:::-;17726:2;17721:3;17717:12;17710:19;;17369:366;;;:::o;17741:419::-;17907:4;17945:2;17934:9;17930:18;17922:26;;17994:9;17988:4;17984:20;17980:1;17969:9;17965:17;17958:47;18022:131;18148:4;18022:131;:::i;:::-;18014:139;;17741:419;;;:::o;18166:332::-;18287:4;18325:2;18314:9;18310:18;18302:26;;18338:71;18406:1;18395:9;18391:17;18382:6;18338:71;:::i;:::-;18419:72;18487:2;18476:9;18472:18;18463:6;18419:72;:::i;:::-;18166:332;;;;;:::o;18504:233::-;18644:34;18640:1;18632:6;18628:14;18621:58;18713:16;18708:2;18700:6;18696:15;18689:41;18504:233;:::o;18743:366::-;18885:3;18906:67;18970:2;18965:3;18906:67;:::i;:::-;18899:74;;18982:93;19071:3;18982:93;:::i;:::-;19100:2;19095:3;19091:12;19084:19;;18743:366;;;:::o;19115:419::-;19281:4;19319:2;19308:9;19304:18;19296:26;;19368:9;19362:4;19358:20;19354:1;19343:9;19339:17;19332:47;19396:131;19522:4;19396:131;:::i;:::-;19388:139;;19115:419;;;:::o;19540:180::-;19588:77;19585:1;19578:88;19685:4;19682:1;19675:15;19709:4;19706:1;19699:15;19726:147;19827:11;19864:3;19849:18;;19726:147;;;;:::o;19879:114::-;;:::o;19999:398::-;20158:3;20179:83;20260:1;20255:3;20179:83;:::i;:::-;20172:90;;20271:93;20360:3;20271:93;:::i;:::-;20389:1;20384:3;20380:11;20373:18;;19999:398;;;:::o;20403:379::-;20587:3;20609:147;20752:3;20609:147;:::i;:::-;20602:154;;20773:3;20766:10;;20403:379;;;:::o;20788:174::-;20928:26;20924:1;20916:6;20912:14;20905:50;20788:174;:::o;20968:366::-;21110:3;21131:67;21195:2;21190:3;21131:67;:::i;:::-;21124:74;;21207:93;21296:3;21207:93;:::i;:::-;21325:2;21320:3;21316:12;21309:19;;20968:366;;;:::o;21340:419::-;21506:4;21544:2;21533:9;21529:18;21521:26;;21593:9;21587:4;21583:20;21579:1;21568:9;21564:17;21557:47;21621:131;21747:4;21621:131;:::i;:::-;21613:139;;21340:419;;;:::o;21765:228::-;21905:34;21901:1;21893:6;21889:14;21882:58;21974:11;21969:2;21961:6;21957:15;21950:36;21765:228;:::o;21999:366::-;22141:3;22162:67;22226:2;22221:3;22162:67;:::i;:::-;22155:74;;22238:93;22327:3;22238:93;:::i;:::-;22356:2;22351:3;22347:12;22340:19;;21999:366;;;:::o;22371:419::-;22537:4;22575:2;22564:9;22560:18;22552:26;;22624:9;22618:4;22614:20;22610:1;22599:9;22595:17;22588:47;22652:131;22778:4;22652:131;:::i;:::-;22644:139;;22371:419;;;:::o;22796:180::-;22844:77;22841:1;22834:88;22941:4;22938:1;22931:15;22965:4;22962:1;22955:15;22982:305;23022:3;23041:20;23059:1;23041:20;:::i;:::-;23036:25;;23075:20;23093:1;23075:20;:::i;:::-;23070:25;;23229:1;23161:66;23157:74;23154:1;23151:81;23148:107;;;23235:18;;:::i;:::-;23148:107;23279:1;23276;23272:9;23265:16;;22982:305;;;;:::o;23293:233::-;23332:3;23355:24;23373:5;23355:24;:::i;:::-;23346:33;;23401:66;23394:5;23391:77;23388:103;;;23471:18;;:::i;:::-;23388:103;23518:1;23511:5;23507:13;23500:20;;23293:233;;;:::o;23532:77::-;23569:7;23598:5;23587:16;;23532:77;;;:::o;23615:118::-;23702:24;23720:5;23702:24;:::i;:::-;23697:3;23690:37;23615:118;;:::o;23739:101::-;23775:7;23815:18;23808:5;23804:30;23793:41;;23739:101;;;:::o;23846:115::-;23931:23;23948:5;23931:23;:::i;:::-;23926:3;23919:36;23846:115;;:::o;23967:89::-;24003:7;24043:6;24036:5;24032:18;24021:29;;23967:89;;;:::o;24062:115::-;24147:23;24164:5;24147:23;:::i;:::-;24142:3;24135:36;24062:115;;:::o;24183:93::-;24219:7;24259:10;24252:5;24248:22;24237:33;;24183:93;;;:::o;24282:115::-;24367:23;24384:5;24367:23;:::i;:::-;24362:3;24355:36;24282:115;;:::o;24403:648::-;24600:4;24638:3;24627:9;24623:19;24615:27;;24652:71;24720:1;24709:9;24705:17;24696:6;24652:71;:::i;:::-;24733:70;24799:2;24788:9;24784:18;24775:6;24733:70;:::i;:::-;24813;24879:2;24868:9;24864:18;24855:6;24813:70;:::i;:::-;24893;24959:2;24948:9;24944:18;24935:6;24893:70;:::i;:::-;24973:71;25039:3;25028:9;25024:19;25015:6;24973:71;:::i;:::-;24403:648;;;;;;;;:::o;25057:143::-;25114:5;25145:6;25139:13;25130:22;;25161:33;25188:5;25161:33;:::i;:::-;25057:143;;;;:::o;25206:351::-;25276:6;25325:2;25313:9;25304:7;25300:23;25296:32;25293:119;;;25331:79;;:::i;:::-;25293:119;25451:1;25476:64;25532:7;25523:6;25512:9;25508:22;25476:64;:::i;:::-;25466:74;;25422:128;25206:351;;;;:::o;25563:148::-;25665:11;25702:3;25687:18;;25563:148;;;;:::o;25717:377::-;25823:3;25851:39;25884:5;25851:39;:::i;:::-;25906:89;25988:6;25983:3;25906:89;:::i;:::-;25899:96;;26004:52;26049:6;26044:3;26037:4;26030:5;26026:16;26004:52;:::i;:::-;26081:6;26076:3;26072:16;26065:23;;25827:267;25717:377;;;;:::o;26100:435::-;26280:3;26302:95;26393:3;26384:6;26302:95;:::i;:::-;26295:102;;26414:95;26505:3;26496:6;26414:95;:::i;:::-;26407:102;;26526:3;26519:10;;26100:435;;;;;:::o;26541:225::-;26681:34;26677:1;26669:6;26665:14;26658:58;26750:8;26745:2;26737:6;26733:15;26726:33;26541:225;:::o;26772:366::-;26914:3;26935:67;26999:2;26994:3;26935:67;:::i;:::-;26928:74;;27011:93;27100:3;27011:93;:::i;:::-;27129:2;27124:3;27120:12;27113:19;;26772:366;;;:::o;27144:419::-;27310:4;27348:2;27337:9;27333:18;27325:26;;27397:9;27391:4;27387:20;27383:1;27372:9;27368:17;27361:47;27425:131;27551:4;27425:131;:::i;:::-;27417:139;;27144:419;;;:::o;27569:180::-;27617:77;27614:1;27607:88;27714:4;27711:1;27704:15;27738:4;27735:1;27728:15;27755:176;27787:1;27804:20;27822:1;27804:20;:::i;:::-;27799:25;;27838:20;27856:1;27838:20;:::i;:::-;27833:25;;27877:1;27867:35;;27882:18;;:::i;:::-;27867:35;27923:1;27920;27916:9;27911:14;;27755:176;;;;:::o;27937:348::-;28066:4;28104:2;28093:9;28089:18;28081:26;;28117:79;28193:1;28182:9;28178:17;28169:6;28117:79;:::i;:::-;28206:72;28274:2;28263:9;28259:18;28250:6;28206:72;:::i;:::-;27937:348;;;;;:::o;28291:224::-;28431:34;28427:1;28419:6;28415:14;28408:58;28500:7;28495:2;28487:6;28483:15;28476:32;28291:224;:::o;28521:366::-;28663:3;28684:67;28748:2;28743:3;28684:67;:::i;:::-;28677:74;;28760:93;28849:3;28760:93;:::i;:::-;28878:2;28873:3;28869:12;28862:19;;28521:366;;;:::o;28893:419::-;29059:4;29097:2;29086:9;29082:18;29074:26;;29146:9;29140:4;29136:20;29132:1;29121:9;29117:17;29110:47;29174:131;29300:4;29174:131;:::i;:::-;29166:139;;28893:419;;;:::o;29318:223::-;29458:34;29454:1;29446:6;29442:14;29435:58;29527:6;29522:2;29514:6;29510:15;29503:31;29318:223;:::o;29547:366::-;29689:3;29710:67;29774:2;29769:3;29710:67;:::i;:::-;29703:74;;29786:93;29875:3;29786:93;:::i;:::-;29904:2;29899:3;29895:12;29888:19;;29547:366;;;:::o;29919:419::-;30085:4;30123:2;30112:9;30108:18;30100:26;;30172:9;30166:4;30162:20;30158:1;30147:9;30143:17;30136:47;30200:131;30326:4;30200:131;:::i;:::-;30192:139;;29919:419;;;:::o;30344:191::-;30384:4;30404:20;30422:1;30404:20;:::i;:::-;30399:25;;30438:20;30456:1;30438:20;:::i;:::-;30433:25;;30477:1;30474;30471:8;30468:34;;;30482:18;;:::i;:::-;30468:34;30527:1;30524;30520:9;30512:17;;30344:191;;;;:::o;30541:182::-;30681:34;30677:1;30669:6;30665:14;30658:58;30541:182;:::o;30729:366::-;30871:3;30892:67;30956:2;30951:3;30892:67;:::i;:::-;30885:74;;30968:93;31057:3;30968:93;:::i;:::-;31086:2;31081:3;31077:12;31070:19;;30729:366;;;:::o;31101:419::-;31267:4;31305:2;31294:9;31290:18;31282:26;;31354:9;31348:4;31344:20;31340:1;31329:9;31325:17;31318:47;31382:131;31508:4;31382:131;:::i;:::-;31374:139;;31101:419;;;:::o;31526:175::-;31666:27;31662:1;31654:6;31650:14;31643:51;31526:175;:::o;31707:366::-;31849:3;31870:67;31934:2;31929:3;31870:67;:::i;:::-;31863:74;;31946:93;32035:3;31946:93;:::i;:::-;32064:2;32059:3;32055:12;32048:19;;31707:366;;;:::o;32079:419::-;32245:4;32283:2;32272:9;32268:18;32260:26;;32332:9;32326:4;32322:20;32318:1;32307:9;32303:17;32296:47;32360:131;32486:4;32360:131;:::i;:::-;32352:139;;32079:419;;;:::o;32504:237::-;32644:34;32640:1;32632:6;32628:14;32621:58;32713:20;32708:2;32700:6;32696:15;32689:45;32504:237;:::o;32747:366::-;32889:3;32910:67;32974:2;32969:3;32910:67;:::i;:::-;32903:74;;32986:93;33075:3;32986:93;:::i;:::-;33104:2;33099:3;33095:12;33088:19;;32747:366;;;:::o;33119:419::-;33285:4;33323:2;33312:9;33308:18;33300:26;;33372:9;33366:4;33362:20;33358:1;33347:9;33343:17;33336:47;33400:131;33526:4;33400:131;:::i;:::-;33392:139;;33119:419;;;:::o;33544:233::-;33684:34;33680:1;33672:6;33668:14;33661:58;33753:16;33748:2;33740:6;33736:15;33729:41;33544:233;:::o;33783:366::-;33925:3;33946:67;34010:2;34005:3;33946:67;:::i;:::-;33939:74;;34022:93;34111:3;34022:93;:::i;:::-;34140:2;34135:3;34131:12;34124:19;;33783:366;;;:::o;34155:419::-;34321:4;34359:2;34348:9;34344:18;34336:26;;34408:9;34402:4;34398:20;34394:1;34383:9;34379:17;34372:47;34436:131;34562:4;34436:131;:::i;:::-;34428:139;;34155:419;;;:::o;34580:98::-;34631:6;34665:5;34659:12;34649:22;;34580:98;;;:::o;34684:168::-;34767:11;34801:6;34796:3;34789:19;34841:4;34836:3;34832:14;34817:29;;34684:168;;;;:::o;34858:360::-;34944:3;34972:38;35004:5;34972:38;:::i;:::-;35026:70;35089:6;35084:3;35026:70;:::i;:::-;35019:77;;35105:52;35150:6;35145:3;35138:4;35131:5;35127:16;35105:52;:::i;:::-;35182:29;35204:6;35182:29;:::i;:::-;35177:3;35173:39;35166:46;;34948:270;34858:360;;;;:::o;35224:640::-;35419:4;35457:3;35446:9;35442:19;35434:27;;35471:71;35539:1;35528:9;35524:17;35515:6;35471:71;:::i;:::-;35552:72;35620:2;35609:9;35605:18;35596:6;35552:72;:::i;:::-;35634;35702:2;35691:9;35687:18;35678:6;35634:72;:::i;:::-;35753:9;35747:4;35743:20;35738:2;35727:9;35723:18;35716:48;35781:76;35852:4;35843:6;35781:76;:::i;:::-;35773:84;;35224:640;;;;;;;:::o;35870:141::-;35926:5;35957:6;35951:13;35942:22;;35973:32;35999:5;35973:32;:::i;:::-;35870:141;;;;:::o;36017:349::-;36086:6;36135:2;36123:9;36114:7;36110:23;36106:32;36103:119;;;36141:79;;:::i;:::-;36103:119;36261:1;36286:63;36341:7;36332:6;36321:9;36317:22;36286:63;:::i;:::-;36276:73;;36232:127;36017:349;;;;:::o;36372:185::-;36412:1;36429:20;36447:1;36429:20;:::i;:::-;36424:25;;36463:20;36481:1;36463:20;:::i;:::-;36458:25;;36502:1;36492:35;;36507:18;;:::i;:::-;36492:35;36549:1;36546;36542:9;36537:14;;36372:185;;;;:::o;36563:182::-;36703:34;36699:1;36691:6;36687:14;36680:58;36563:182;:::o;36751:366::-;36893:3;36914:67;36978:2;36973:3;36914:67;:::i;:::-;36907:74;;36990:93;37079:3;36990:93;:::i;:::-;37108:2;37103:3;37099:12;37092:19;;36751:366;;;:::o;37123:419::-;37289:4;37327:2;37316:9;37312:18;37304:26;;37376:9;37370:4;37366:20;37362:1;37351:9;37347:17;37340:47;37404:131;37530:4;37404:131;:::i;:::-;37396:139;;37123:419;;;:::o;37548:178::-;37688:30;37684:1;37676:6;37672:14;37665:54;37548:178;:::o;37732:366::-;37874:3;37895:67;37959:2;37954:3;37895:67;:::i;:::-;37888:74;;37971:93;38060:3;37971:93;:::i;:::-;38089:2;38084:3;38080:12;38073:19;;37732:366;;;:::o;38104:419::-;38270:4;38308:2;38297:9;38293:18;38285:26;;38357:9;38351:4;38347:20;38343:1;38332:9;38328:17;38321:47;38385:131;38511:4;38385:131;:::i;:::-;38377:139;;38104:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2945400","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2902","getApproved(uint256)":"5257","getBreedFromModdedRng(uint256)":"infinite","getChanceArray()":"infinite","getDogTokenUris(uint256)":"infinite","getMintFee()":"infinite","getTokenCounter()":"2548","isApprovedForAll(address,address)":"infinite","name()":"infinite","owner()":"2611","ownerOf(uint256)":"3048","rawFulfillRandomWords(uint256,uint256[])":"infinite","renounceOwnership()":"30443","requestNft()":"infinite","s_requestIdToSender(uint256)":"2884","s_tokenCounter()":"2541","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"30857","withdraw()":"infinite"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getBreedFromModdedRng(uint256)":"a51cccf3","getChanceArray()":"5dacf5f4","getDogTokenUris(uint256)":"3af25975","getMintFee()":"7a5caab3","getTokenCounter()":"6e02007d","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","renounceOwnership()":"715018a6","requestNft()":"aa152491","s_requestIdToSender(uint256)":"a36f573b","s_tokenCounter()":"0b21a83b","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"string[3]\",\"name\":\"dogTokenUris\",\"type\":\"string[3]\"},{\"internalType\":\"uint256\",\"name\":\"mintFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RandomIpfsNft__NeedMoreETHSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RandomIpfsNft__OutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RandomIpfsNft__TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum RandomIpfsNft.Breed\",\"name\":\"dogBreed\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"NftMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"NftRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moddedRng\",\"type\":\"uint256\"}],\"name\":\"getBreedFromModdedRng\",\"outputs\":[{\"internalType\":\"enum RandomIpfsNft.Breed\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChanceArray\",\"outputs\":[{\"internalType\":\"uint256[3]\",\"name\":\"\",\"type\":\"uint256[3]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDogTokenUris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestNft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_requestIdToSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_tokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RandomIpfsNft.sol\":\"RandomIpfsNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/RandomIpfsNft.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\npragma solidity ^0.8.8;\\n\\nerror RandomIpfsNft__OutOfBounds();\\nerror RandomIpfsNft__NeedMoreETHSent();\\nerror RandomIpfsNft__TransferFailed();\\n\\ncontract RandomIpfsNft is VRFConsumerBaseV2, ERC721URIStorage, Ownable {\\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\\n    uint64 private immutable i_subscriptionId;\\n    bytes32 private immutable i_gasLane;\\n    uint32 private immutable i_callbackGasLimit;\\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\\n    uint32 private constant NUM_WORDS = 1;\\n\\n    enum Breed {\\n        PUG,\\n        SHIBA_INU,\\n        ST_BERNARD\\n    }\\n\\n    mapping(uint256 => address) public s_requestIdToSender;\\n\\n    uint256 public s_tokenCounter;\\n    uint256 internal constant MAX_CHANCE_VALUE = 100;\\n    string[] internal i_dogTokenUris;\\n    uint256 internal immutable i_mintFee;\\n\\n    event NftRequested(uint256 indexed requestId, address requester);\\n    event NftMinted(Breed dogBreed, address minter);\\n\\n    constructor(\\n        address vrfCoordinatorV2,\\n        uint64 subscriptionId,\\n        bytes32 gasLane,\\n        uint32 callbackGasLimit,\\n        string[3] memory dogTokenUris,\\n        uint256 mintFee\\n    ) VRFConsumerBaseV2(vrfCoordinatorV2) ERC721(\\\"RandomIpfsNft\\\", \\\"RIN\\\") {\\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\\n        i_subscriptionId = subscriptionId;\\n        i_gasLane = gasLane;\\n        i_callbackGasLimit = callbackGasLimit;\\n        i_dogTokenUris = dogTokenUris;\\n        i_mintFee = mintFee;\\n    }\\n\\n    function requestNft() public payable returns (uint256 requestId) {\\n        if (msg.value < i_mintFee) {\\n            revert RandomIpfsNft__NeedMoreETHSent();\\n        }\\n        requestId = i_vrfCoordinator.requestRandomWords(\\n            i_gasLane,\\n            i_subscriptionId,\\n            REQUEST_CONFIRMATIONS,\\n            i_callbackGasLimit,\\n            NUM_WORDS\\n        );\\n        s_requestIdToSender[requestId] = msg.sender;\\n        emit NftRequested((requestId), msg.sender);\\n    }\\n\\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords)\\n        internal\\n        override\\n    {\\n        address dogOwner = s_requestIdToSender[requestId];\\n        uint256 newTokenId = s_tokenCounter;\\n\\n        uint256 moddedRng = randomWords[0] % MAX_CHANCE_VALUE;\\n        Breed dogBreed = getBreedFromModdedRng(moddedRng);\\n        s_tokenCounter += s_tokenCounter;\\n        _safeMint(dogOwner, newTokenId);\\n        _setTokenURI((newTokenId), i_dogTokenUris[uint256(dogBreed)]);\\n        emit NftMinted((dogBreed), dogOwner);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        uint256 amount = address(this).balance;\\n        (bool success, ) = payable(msg.sender).call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert RandomIpfsNft__TransferFailed();\\n        }\\n    }\\n\\n    function getBreedFromModdedRng(uint256 moddedRng)\\n        public\\n        pure\\n        returns (Breed)\\n    {\\n        uint256 cumulativeSum = 0;\\n        uint256[3] memory chanceArray = getChanceArray();\\n        for (uint256 i = 0; i < chanceArray.length; i++) {\\n            if (\\n                moddedRng >= cumulativeSum &&\\n                moddedRng < cumulativeSum + chanceArray[i]\\n            ) {\\n                return Breed(i);\\n            }\\n            cumulativeSum += chanceArray[i];\\n        }\\n        revert RandomIpfsNft__OutOfBounds();\\n    }\\n\\n    function getChanceArray() public pure returns (uint256[3] memory) {\\n        return [10, 30, MAX_CHANCE_VALUE];\\n    }\\n\\n    function getMintFee() public view returns (uint256) {\\n        return i_mintFee;\\n    }\\n\\n    function getDogTokenUris(uint256 index)\\n        public\\n        view\\n        returns (string memory)\\n    {\\n        return i_dogTokenUris[index];\\n    }\\n\\n    function getTokenCounter() public view returns (uint256) {\\n        return s_tokenCounter;\\n    }\\n}\\n\",\"keccak256\":\"0x219a35f42bb91f686c716c471fca63b5511bf08f955f306db79cc8fbb3fa8b2b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1005,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1007,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1011,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1015,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1019,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1025,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1993,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":874,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_owner","offset":0,"slot":"7","type":"t_address"},{"astId":3066,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_requestIdToSender","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_address)"},{"astId":3068,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_tokenCounter","offset":0,"slot":"9","type":"t_uint256"},{"astId":3074,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"i_dogTokenUris","offset":0,"slot":"10","type":"t_array(t_string_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}