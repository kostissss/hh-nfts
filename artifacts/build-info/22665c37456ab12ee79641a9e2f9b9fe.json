{"id":"22665c37456ab12ee79641a9e2f9b9fe","_format":"hh-sol-build-info-1","solcVersion":"0.8.8","solcLongVersion":"0.8.8+commit.dddeac2f","input":{"language":"Solidity","sources":{"contracts/DynamicSvgNft.sol":{"content":"//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"base64-sol/base64.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nerror ERC721Metadata__URI_QueryFor_NonExistentToken();\n\ncontract DynamicSvgNft is ERC721 {\n    uint256 private s_tokenCounter;\n    string private i_lowImageURI;\n    string private i_highImageURI;\n    string private constant base64EncodedSvgPrefix =\n        \"data:image/svg+xml;base64,\";\n\n    AggregatorV3Interface internal immutable i_priceFeed;\n    mapping(uint256 => int256) public s_tokenIdToHighValue;\n\n    event CreatedNFT(uint256 indexed tokenId, int256 highValue);\n\n    constructor(\n        address priceFeedAddress,\n        string memory lowSvg,\n        string memory highSvg\n    ) ERC721(\"DynamicSvgNft\", \"DSN\") {\n        s_tokenCounter = 0;\n        i_priceFeed = AggregatorV3Interface(priceFeedAddress);\n        i_lowImageURI = svgToImageURI(lowSvg);\n        i_highImageURI = svgToImageURI(highSvg);\n    }\n\n    function mintNft(int256 highValue) public {\n        s_tokenIdToHighValue[s_tokenCounter] = highValue;\n        _safeMint(msg.sender, s_tokenCounter);\n        s_tokenCounter = s_tokenCounter + 1;\n        emit CreatedNFT(s_tokenCounter, highValue);\n    }\n\n    function svgToImageURI(string memory svg)\n        public\n        pure\n        returns (string memory)\n    {\n        string memory svgBase64Encoded = Base64.encode(\n            bytes(string(abi.encodePacked(svg)))\n        );\n        return\n            string(abi.encodePacked(base64EncodedSvgPrefix, svgBase64Encoded));\n    }\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override\n        returns (string memory)\n    {\n        require(_exists(tokenId), \"URI Query for non existent token\");\n\n        (, int256 price, , , ) = i_priceFeed.latestRoundData();\n        string memory imageURI = i_lowImageURI;\n        if (price >= s_tokenIdToHighValue[tokenId]) {\n            imageURI = i_highImageURI;\n        }\n        return\n            string(\n                abi.encodePacked(\n                    _baseURI(),\n                    Base64.encode(\n                        bytes(\n                            abi.encodePacked(\n                                ('{\"name:\"'),\n                                name(),\n                                '\"',\n                                '\"description\":\"An NFT that changes based on chainlink price Feed!!\"',\n                                '\"attributes\":[{\"trait_type\": \"coolness\",:value:100}],\"image\":\"',\n                                imageURI,\n                                '\"}'\n                            )\n                        )\n                    )\n                )\n            );\n    }\n\n    function _baseURI() internal pure override returns (string memory) {\n        return \"data:application/json;base64,\";\n    }\n\n    function getLowSVG() public view returns (string memory) {\n        return i_lowImageURI;\n    }\n\n    function getHighSVG() public view returns (string memory) {\n        return i_highImageURI;\n    }\n\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\n        return i_priceFeed;\n    }\n\n    function getTokenCounter() public view returns (uint256) {\n        return s_tokenCounter;\n    }\n}\n"},"base64-sol/base64.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0;\n\n/// @title Base64\n/// @author Brecht Devos - <brecht@loopring.org>\n/// @notice Provides functions for encoding/decoding base64\nlibrary Base64 {\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    bytes  internal constant TABLE_DECODE = hex\"0000000000000000000000000000000000000000000000000000000000000000\"\n                                            hex\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\"\n                                            hex\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\"\n                                            hex\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\";\n\n    function encode(bytes memory data) internal pure returns (string memory) {\n        if (data.length == 0) return '';\n\n        // load the table into memory\n        string memory table = TABLE_ENCODE;\n\n        // multiply by 4/3 rounded up\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\n\n        // add some extra buffer at the end required for the writing\n        string memory result = new string(encodedLen + 32);\n\n        assembly {\n            // set the actual output length\n            mstore(result, encodedLen)\n\n            // prepare the lookup table\n            let tablePtr := add(table, 1)\n\n            // input ptr\n            let dataPtr := data\n            let endPtr := add(dataPtr, mload(data))\n\n            // result ptr, jump over length\n            let resultPtr := add(result, 32)\n\n            // run over the input, 3 bytes at a time\n            for {} lt(dataPtr, endPtr) {}\n            {\n                // read 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // write 4 characters\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1)\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1)\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1)\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\n                resultPtr := add(resultPtr, 1)\n            }\n\n            // padding with '='\n            switch mod(mload(data), 3)\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\n        }\n\n        return result;\n    }\n\n    function decode(string memory _data) internal pure returns (bytes memory) {\n        bytes memory data = bytes(_data);\n\n        if (data.length == 0) return new bytes(0);\n        require(data.length % 4 == 0, \"invalid base64 decoder input\");\n\n        // load the table into memory\n        bytes memory table = TABLE_DECODE;\n\n        // every 4 characters represent 3 bytes\n        uint256 decodedLen = (data.length / 4) * 3;\n\n        // add some extra buffer at the end required for the writing\n        bytes memory result = new bytes(decodedLen + 32);\n\n        assembly {\n            // padding with '='\n            let lastBytes := mload(add(data, mload(data)))\n            if eq(and(lastBytes, 0xFF), 0x3d) {\n                decodedLen := sub(decodedLen, 1)\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\n                    decodedLen := sub(decodedLen, 1)\n                }\n            }\n\n            // set the actual output length\n            mstore(result, decodedLen)\n\n            // prepare the lookup table\n            let tablePtr := add(table, 1)\n\n            // input ptr\n            let dataPtr := data\n            let endPtr := add(dataPtr, mload(data))\n\n            // result ptr, jump over length\n            let resultPtr := add(result, 32)\n\n            // run over the input, 4 characters at a time\n            for {} lt(dataPtr, endPtr) {}\n            {\n               // read 4 characters\n               dataPtr := add(dataPtr, 4)\n               let input := mload(dataPtr)\n\n               // write 3 bytes\n               let output := add(\n                   add(\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\n                   add(\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\n                    )\n                )\n                mstore(resultPtr, shl(232, output))\n                resultPtr := add(resultPtr, 3)\n            }\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[45]},"id":46,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":45,"linearizedBaseContracts":[45],"name":"AggregatorV3Interface","nameLocation":"67:21:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":6,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:0","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"110:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6,"src":"136:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:0"},"scope":45,"src":"93:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:0","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"167:2:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11,"src":"193:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:0"},"scope":45,"src":"147:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"228:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16,"src":"254:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:0"},"scope":45,"src":"212:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"487:12:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"_roundId","nameLocation":"507:8:0","nodeType":"VariableDeclaration","scope":31,"src":"500:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":17,"name":"uint80","nodeType":"ElementaryTypeName","src":"500:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"499:17:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"roundId","nameLocation":"566:7:0","nodeType":"VariableDeclaration","scope":31,"src":"559:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":20,"name":"uint80","nodeType":"ElementaryTypeName","src":"559:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"answer","nameLocation":"588:6:0","nodeType":"VariableDeclaration","scope":31,"src":"581:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":22,"name":"int256","nodeType":"ElementaryTypeName","src":"581:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"startedAt","nameLocation":"610:9:0","nodeType":"VariableDeclaration","scope":31,"src":"602:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"updatedAt","nameLocation":"635:9:0","nodeType":"VariableDeclaration","scope":31,"src":"627:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"answeredInRound","nameLocation":"659:15:0","nodeType":"VariableDeclaration","scope":31,"src":"652:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":28,"name":"uint80","nodeType":"ElementaryTypeName","src":"652:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"551:129:0"},"scope":45,"src":"478:203:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"694:15:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"709:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"roundId","nameLocation":"761:7:0","nodeType":"VariableDeclaration","scope":44,"src":"754:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":33,"name":"uint80","nodeType":"ElementaryTypeName","src":"754:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"answer","nameLocation":"783:6:0","nodeType":"VariableDeclaration","scope":44,"src":"776:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35,"name":"int256","nodeType":"ElementaryTypeName","src":"776:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"startedAt","nameLocation":"805:9:0","nodeType":"VariableDeclaration","scope":44,"src":"797:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"updatedAt","nameLocation":"830:9:0","nodeType":"VariableDeclaration","scope":44,"src":"822:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"answeredInRound","nameLocation":"854:15:0","nodeType":"VariableDeclaration","scope":44,"src":"847:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":41,"name":"uint80","nodeType":"ElementaryTypeName","src":"847:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"746:129:0"},"scope":45,"src":"685:191:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":46,"src":"57:821:0","usedErrors":[]}],"src":"32:847:0"},"id":0},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[1368],"Context":[1390],"ERC165":[1640],"ERC721":[912],"IERC165":[1652],"IERC721":[1028],"IERC721Metadata":[1073],"IERC721Receiver":[1046],"Strings":[1616]},"id":913,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":47,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":48,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":913,"sourceUnit":1029,"src":"132:23:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":49,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":913,"sourceUnit":1047,"src":"156:31:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":50,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":913,"sourceUnit":1074,"src":"188:42:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":51,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":913,"sourceUnit":1369,"src":"231:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":52,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":913,"sourceUnit":1391,"src":"265:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":53,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":913,"sourceUnit":1617,"src":"299:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":54,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":913,"sourceUnit":1641,"src":"333:46:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":56,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1390,"src":"647:7:1"},"id":57,"nodeType":"InheritanceSpecifier","src":"647:7:1"},{"baseName":{"id":58,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":1640,"src":"656:6:1"},"id":59,"nodeType":"InheritanceSpecifier","src":"656:6:1"},{"baseName":{"id":60,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1028,"src":"664:7:1"},"id":61,"nodeType":"InheritanceSpecifier","src":"664:7:1"},{"baseName":{"id":62,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":1073,"src":"673:15:1"},"id":63,"nodeType":"InheritanceSpecifier","src":"673:15:1"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"381:246:1","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":912,"linearizedBaseContracts":[912,1073,1028,1640,1652,1390],"name":"ERC721","nameLocation":"637:6:1","nodeType":"ContractDefinition","nodes":[{"id":66,"libraryName":{"id":64,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1368,"src":"701:7:1"},"nodeType":"UsingForDirective","src":"695:26:1","typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":69,"libraryName":{"id":67,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":1616,"src":"732:7:1"},"nodeType":"UsingForDirective","src":"726:26:1","typeName":{"id":68,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":71,"mutability":"mutable","name":"_name","nameLocation":"791:5:1","nodeType":"VariableDeclaration","scope":912,"src":"776:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":70,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":73,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:1","nodeType":"VariableDeclaration","scope":912,"src":"823:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":72,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":77,"mutability":"mutable","name":"_owners","nameLocation":"934:7:1","nodeType":"VariableDeclaration","scope":912,"src":"898:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":76,"keyType":{"id":74,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":81,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:1","nodeType":"VariableDeclaration","scope":912,"src":"992:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":80,"keyType":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":79,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":85,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:1","nodeType":"VariableDeclaration","scope":912,"src":"1093:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":84,"keyType":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":83,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":91,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:1","nodeType":"VariableDeclaration","scope":912,"src":"1199:71:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":90,"keyType":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":89,"keyType":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":88,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":107,"nodeType":"Block","src":"1446:57:1","statements":[{"expression":{"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":99,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"1456:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":100,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"1464:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":102,"nodeType":"ExpressionStatement","src":"1456:13:1"},{"expression":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":103,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"1479:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":104,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"1489:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":106,"nodeType":"ExpressionStatement","src":"1479:17:1"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"1277:108:1","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":108,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"name_","nameLocation":"1416:5:1","nodeType":"VariableDeclaration","scope":108,"src":"1402:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":93,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:1","nodeType":"VariableDeclaration","scope":108,"src":"1423:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":95,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:1"},"returnParameters":{"id":98,"nodeType":"ParameterList","parameters":[],"src":"1446:0:1"},"scope":912,"src":"1390:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1639,1651],"body":{"id":138,"nodeType":"Block","src":"1678:192:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":119,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1707:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":121,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"1727:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1028_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1028_$","typeString":"type(contract IERC721)"}],"id":120,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1028","typeString":"type(contract IERC721)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":125,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1763:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":127,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"1783:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1073_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1073_$","typeString":"type(contract IERC721Metadata)"}],"id":126,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1073","typeString":"type(contract IERC721Metadata)"}},"id":129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":134,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1851:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":132,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$912_$","typeString":"type(contract super ERC721)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1639,"src":"1827:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":118,"id":137,"nodeType":"Return","src":"1688:175:1"}]},"documentation":{"id":109,"nodeType":"StructuredDocumentation","src":"1509:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":139,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:1","nodeType":"FunctionDefinition","overrides":{"id":115,"nodeType":"OverrideSpecifier","overrides":[{"id":113,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":1640,"src":"1646:6:1"},{"id":114,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1652,"src":"1654:7:1"}],"src":"1637:25:1"},"parameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:1","nodeType":"VariableDeclaration","scope":139,"src":"1597:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":110,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:1"},"returnParameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":139,"src":"1672:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":116,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:1"},"scope":912,"src":"1570:300:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[953],"body":{"id":162,"nodeType":"Block","src":"2010:123:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":149,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2028:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:1","typeDescriptions":{}}},"id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":157,"nodeType":"ExpressionStatement","src":"2020:73:1"},{"expression":{"baseExpression":{"id":158,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"2110:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":160,"indexExpression":{"id":159,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2120:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":147,"id":161,"nodeType":"Return","src":"2103:23:1"}]},"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"1876:48:1","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":163,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:1","nodeType":"FunctionDefinition","overrides":{"id":144,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:1"},"parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"owner","nameLocation":"1956:5:1","nodeType":"VariableDeclaration","scope":163,"src":"1948:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:1"},"returnParameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":163,"src":"2001:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:1"},"scope":912,"src":"1929:204:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[961],"body":{"id":190,"nodeType":"Block","src":"2271:137:1","statements":[{"assignments":[173],"declarations":[{"constant":false,"id":173,"mutability":"mutable","name":"owner","nameLocation":"2289:5:1","nodeType":"VariableDeclaration","scope":190,"src":"2281:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":177,"initialValue":{"baseExpression":{"id":174,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"2297:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":176,"indexExpression":{"id":175,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"2305:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2297:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:32:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":179,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"2331:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2348:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2340:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"2340:7:1","typeDescriptions":{}}},"id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2340:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2331:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2352:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2323:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2323:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":187,"nodeType":"ExpressionStatement","src":"2323:56:1"},{"expression":{"id":188,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"2396:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":171,"id":189,"nodeType":"Return","src":"2389:12:1"}]},"documentation":{"id":164,"nodeType":"StructuredDocumentation","src":"2139:46:1","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":191,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:1","nodeType":"FunctionDefinition","overrides":{"id":168,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:1"},"parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:1","nodeType":"VariableDeclaration","scope":191,"src":"2207:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:1"},"returnParameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":191,"src":"2262:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:1"},"scope":912,"src":"2190:218:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1058],"body":{"id":200,"nodeType":"Block","src":"2539:29:1","statements":[{"expression":{"id":198,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2556:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":197,"id":199,"nodeType":"Return","src":"2549:12:1"}]},"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"2414:51:1","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":201,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2479:4:1","nodeType":"FunctionDefinition","overrides":{"id":194,"nodeType":"OverrideSpecifier","overrides":[],"src":"2506:8:1"},"parameters":{"id":193,"nodeType":"ParameterList","parameters":[],"src":"2483:2:1"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":201,"src":"2524:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":195,"name":"string","nodeType":"ElementaryTypeName","src":"2524:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2523:15:1"},"scope":912,"src":"2470:98:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1064],"body":{"id":210,"nodeType":"Block","src":"2703:31:1","statements":[{"expression":{"id":208,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"2720:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":207,"id":209,"nodeType":"Return","src":"2713:14:1"}]},"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"2574:53:1","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":211,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2641:6:1","nodeType":"FunctionDefinition","overrides":{"id":204,"nodeType":"OverrideSpecifier","overrides":[],"src":"2670:8:1"},"parameters":{"id":203,"nodeType":"ParameterList","parameters":[],"src":"2647:2:1"},"returnParameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"2688:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":205,"name":"string","nodeType":"ElementaryTypeName","src":"2688:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2687:15:1"},"scope":912,"src":"2632:102:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1072],"body":{"id":249,"nodeType":"Block","src":"2888:188:1","statements":[{"expression":{"arguments":[{"id":221,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"2913:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":220,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"2898:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2898:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":223,"nodeType":"ExpressionStatement","src":"2898:23:1"},{"assignments":[225],"declarations":[{"constant":false,"id":225,"mutability":"mutable","name":"baseURI","nameLocation":"2946:7:1","nodeType":"VariableDeclaration","scope":249,"src":"2932:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":224,"name":"string","nodeType":"ElementaryTypeName","src":"2932:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":228,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":226,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"2956:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2956:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2932:34:1"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":231,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"2989:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2983:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":229,"name":"bytes","nodeType":"ElementaryTypeName","src":"2983:5:1","typeDescriptions":{}}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2983:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2983:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3007:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2983:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3067:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2983:86:1","trueExpression":{"arguments":[{"arguments":[{"id":240,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"3035:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":241,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"3044:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1478,"src":"3044:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3044:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":238,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3018:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3018:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3018:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3011:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":236,"name":"string","nodeType":"ElementaryTypeName","src":"3011:6:1","typeDescriptions":{}}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3011:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":219,"id":248,"nodeType":"Return","src":"2976:93:1"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"2740:55:1","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":250,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2809:8:1","nodeType":"FunctionDefinition","overrides":{"id":216,"nodeType":"OverrideSpecifier","overrides":[],"src":"2855:8:1"},"parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"tokenId","nameLocation":"2826:7:1","nodeType":"VariableDeclaration","scope":250,"src":"2818:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"2818:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2817:17:1"},"returnParameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":250,"src":"2873:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":217,"name":"string","nodeType":"ElementaryTypeName","src":"2873:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2872:15:1"},"scope":912,"src":"2800:276:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":258,"nodeType":"Block","src":"3384:26:1","statements":[{"expression":{"hexValue":"","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3401:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":255,"id":257,"nodeType":"Return","src":"3394:9:1"}]},"documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"3082:231:1","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":259,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3327:8:1","nodeType":"FunctionDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[],"src":"3335:2:1"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":259,"src":"3369:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":253,"name":"string","nodeType":"ElementaryTypeName","src":"3369:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3368:15:1"},"scope":912,"src":"3318:92:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1001],"body":{"id":301,"nodeType":"Block","src":"3537:337:1","statements":[{"assignments":[269],"declarations":[{"constant":false,"id":269,"mutability":"mutable","name":"owner","nameLocation":"3555:5:1","nodeType":"VariableDeclaration","scope":301,"src":"3547:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"3547:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":274,"initialValue":{"arguments":[{"id":272,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3578:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":270,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"3563:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$912_$","typeString":"type(contract ERC721)"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":191,"src":"3563:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3563:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3547:39:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":276,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"3604:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":277,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"3610:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3604:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3617:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":275,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3596:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3596:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":281,"nodeType":"ExpressionStatement","src":"3596:57:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"3685:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3685:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":285,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"3701:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3685:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":288,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"3727:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":289,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"3734:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3734:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":287,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"3710:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3710:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3685:62:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3761:64:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""},"value":"ERC721: approve caller is not token owner nor approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""}],"id":282,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3664:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3664:171:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":295,"nodeType":"ExpressionStatement","src":"3664:171:1"},{"expression":{"arguments":[{"id":297,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"3855:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":298,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3859:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":296,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"3846:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":300,"nodeType":"ExpressionStatement","src":"3846:21:1"}]},"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"3416:46:1","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3476:7:1","nodeType":"FunctionDefinition","overrides":{"id":266,"nodeType":"OverrideSpecifier","overrides":[],"src":"3528:8:1"},"parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"to","nameLocation":"3492:2:1","nodeType":"VariableDeclaration","scope":302,"src":"3484:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"3484:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"tokenId","nameLocation":"3504:7:1","nodeType":"VariableDeclaration","scope":302,"src":"3496:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"3496:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3483:29:1"},"returnParameters":{"id":267,"nodeType":"ParameterList","parameters":[],"src":"3537:0:1"},"scope":912,"src":"3467:407:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1017],"body":{"id":319,"nodeType":"Block","src":"4020:82:1","statements":[{"expression":{"arguments":[{"id":312,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4045:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":311,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"4030:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"ExpressionStatement","src":"4030:23:1"},{"expression":{"baseExpression":{"id":315,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"4071:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":317,"indexExpression":{"id":316,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4087:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":310,"id":318,"nodeType":"Return","src":"4064:31:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"3880:50:1","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":320,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:1","nodeType":"FunctionDefinition","overrides":{"id":307,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:1"},"parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:1","nodeType":"VariableDeclaration","scope":320,"src":"3956:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":304,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:1"},"returnParameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":320,"src":"4011:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:1"},"scope":912,"src":"3935:167:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1009],"body":{"id":336,"nodeType":"Block","src":"4253:69:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":330,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"4282:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":332,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"4296:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":333,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"4306:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":329,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"4263:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":335,"nodeType":"ExpressionStatement","src":"4263:52:1"}]},"documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"4108:56:1","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":337,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:1","nodeType":"FunctionDefinition","overrides":{"id":327,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:1"},"parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"operator","nameLocation":"4204:8:1","nodeType":"VariableDeclaration","scope":337,"src":"4196:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":325,"mutability":"mutable","name":"approved","nameLocation":"4219:8:1","nodeType":"VariableDeclaration","scope":337,"src":"4214:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":324,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:1"},"returnParameters":{"id":328,"nodeType":"ParameterList","parameters":[],"src":"4253:0:1"},"scope":912,"src":"4169:153:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1027],"body":{"id":354,"nodeType":"Block","src":"4491:59:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":348,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"4508:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":350,"indexExpression":{"id":349,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"4527:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":352,"indexExpression":{"id":351,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"4534:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":347,"id":353,"nodeType":"Return","src":"4501:42:1"}]},"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"4328:55:1","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":355,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:1","nodeType":"FunctionDefinition","overrides":{"id":344,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:1"},"parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"owner","nameLocation":"4422:5:1","nodeType":"VariableDeclaration","scope":355,"src":"4414:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"operator","nameLocation":"4437:8:1","nodeType":"VariableDeclaration","scope":355,"src":"4429:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:1"},"returnParameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"4485:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":345,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:1"},"scope":912,"src":"4388:162:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[993],"body":{"id":381,"nodeType":"Block","src":"4731:208:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":368,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"4820:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4820:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":370,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"4834:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":367,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"4801:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4801:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":366,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4793:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4793:100:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":374,"nodeType":"ExpressionStatement","src":"4793:100:1"},{"expression":{"arguments":[{"id":376,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"4914:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"4920:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":378,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"4924:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":375,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"4904:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4904:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":380,"nodeType":"ExpressionStatement","src":"4904:28:1"}]},"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"4556:51:1","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":382,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:1","nodeType":"FunctionDefinition","overrides":{"id":364,"nodeType":"OverrideSpecifier","overrides":[],"src":"4722:8:1"},"parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"from","nameLocation":"4651:4:1","nodeType":"VariableDeclaration","scope":382,"src":"4643:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"4643:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"to","nameLocation":"4673:2:1","nodeType":"VariableDeclaration","scope":382,"src":"4665:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"4665:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"tokenId","nameLocation":"4693:7:1","nodeType":"VariableDeclaration","scope":382,"src":"4685:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:73:1"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"4731:0:1"},"scope":912,"src":"4612:327:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[983],"body":{"id":400,"nodeType":"Block","src":"5128:56:1","statements":[{"expression":{"arguments":[{"id":394,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"5155:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":395,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"5161:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":396,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"5165:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5174:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":393,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[401,431],"referencedDeclaration":431,"src":"5138:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5138:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":399,"nodeType":"ExpressionStatement","src":"5138:39:1"}]},"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"4945:55:1","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":401,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5014:16:1","nodeType":"FunctionDefinition","overrides":{"id":391,"nodeType":"OverrideSpecifier","overrides":[],"src":"5119:8:1"},"parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"from","nameLocation":"5048:4:1","nodeType":"VariableDeclaration","scope":401,"src":"5040:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"5040:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"to","nameLocation":"5070:2:1","nodeType":"VariableDeclaration","scope":401,"src":"5062:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"5062:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"tokenId","nameLocation":"5090:7:1","nodeType":"VariableDeclaration","scope":401,"src":"5082:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"5082:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5030:73:1"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[],"src":"5128:0:1"},"scope":912,"src":"5005:179:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[973],"body":{"id":430,"nodeType":"Block","src":"5400:165:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":416,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"5437:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5437:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":418,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5451:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":415,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5418:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5418:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5461:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":414,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5410:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5410:100:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"5410:100:1"},{"expression":{"arguments":[{"id":424,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"5534:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":425,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5540:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":426,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5544:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":427,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5553:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":423,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"5520:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5520:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"5520:38:1"}]},"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"5190:55:1","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":431,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5259:16:1","nodeType":"FunctionDefinition","overrides":{"id":412,"nodeType":"OverrideSpecifier","overrides":[],"src":"5391:8:1"},"parameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"from","nameLocation":"5293:4:1","nodeType":"VariableDeclaration","scope":431,"src":"5285:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"5285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":406,"mutability":"mutable","name":"to","nameLocation":"5315:2:1","nodeType":"VariableDeclaration","scope":431,"src":"5307:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"5307:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"tokenId","nameLocation":"5335:7:1","nodeType":"VariableDeclaration","scope":431,"src":"5327:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"5327:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":410,"mutability":"mutable","name":"data","nameLocation":"5365:4:1","nodeType":"VariableDeclaration","scope":431,"src":"5352:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":409,"name":"bytes","nodeType":"ElementaryTypeName","src":"5352:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5275:100:1"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[],"src":"5400:0:1"},"scope":912,"src":"5250:315:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":459,"nodeType":"Block","src":"6566:165:1","statements":[{"expression":{"arguments":[{"id":444,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"6586:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":445,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"6592:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":446,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"6596:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":443,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6576:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6576:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":448,"nodeType":"ExpressionStatement","src":"6576:28:1"},{"expression":{"arguments":[{"arguments":[{"id":451,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"6645:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":452,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"6651:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"6655:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":454,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"6664:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":450,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"6622:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6622:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6671:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":449,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6614:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6614:110:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":458,"nodeType":"ExpressionStatement","src":"6614:110:1"}]},"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"5571:850:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":460,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6435:13:1","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"from","nameLocation":"6466:4:1","nodeType":"VariableDeclaration","scope":460,"src":"6458:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":433,"name":"address","nodeType":"ElementaryTypeName","src":"6458:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"to","nameLocation":"6488:2:1","nodeType":"VariableDeclaration","scope":460,"src":"6480:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"6480:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"tokenId","nameLocation":"6508:7:1","nodeType":"VariableDeclaration","scope":460,"src":"6500:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"6500:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"data","nameLocation":"6538:4:1","nodeType":"VariableDeclaration","scope":460,"src":"6525:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":439,"name":"bytes","nodeType":"ElementaryTypeName","src":"6525:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6448:100:1"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[],"src":"6566:0:1"},"scope":912,"src":"6426:305:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":477,"nodeType":"Block","src":"7105:54:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":468,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"7122:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":470,"indexExpression":{"id":469,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7130:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7122:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7150:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7142:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"7142:7:1","typeDescriptions":{}}},"id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7142:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7122:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":467,"id":476,"nodeType":"Return","src":"7115:37:1"}]},"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"6737:292:1","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":478,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7043:7:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"tokenId","nameLocation":"7059:7:1","nodeType":"VariableDeclaration","scope":478,"src":"7051:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7051:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7050:17:1"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":478,"src":"7099:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":465,"name":"bool","nodeType":"ElementaryTypeName","src":"7099:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7098:6:1"},"scope":912,"src":"7034:125:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":511,"nodeType":"Block","src":"7416:162:1","statements":[{"assignments":[489],"declarations":[{"constant":false,"id":489,"mutability":"mutable","name":"owner","nameLocation":"7434:5:1","nodeType":"VariableDeclaration","scope":511,"src":"7426:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"7426:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":494,"initialValue":{"arguments":[{"id":492,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"7457:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":490,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7442:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$912_$","typeString":"type(contract ERC721)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":191,"src":"7442:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7442:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7426:39:1"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":495,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"7483:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":496,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7494:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7483:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":499,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7520:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"7527:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"7503:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7503:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7483:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":504,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"7551:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":503,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"7539:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7539:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":506,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"7563:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7539:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7483:87:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7482:89:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":487,"id":510,"nodeType":"Return","src":"7475:96:1"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"7165:147:1","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":512,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7326:18:1","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"spender","nameLocation":"7353:7:1","nodeType":"VariableDeclaration","scope":512,"src":"7345:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"7345:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"tokenId","nameLocation":"7370:7:1","nodeType":"VariableDeclaration","scope":512,"src":"7362:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":482,"name":"uint256","nodeType":"ElementaryTypeName","src":"7362:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7344:34:1"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":512,"src":"7410:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":485,"name":"bool","nodeType":"ElementaryTypeName","src":"7410:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7409:6:1"},"scope":912,"src":"7317:261:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":526,"nodeType":"Block","src":"7973:43:1","statements":[{"expression":{"arguments":[{"id":521,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"7993:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":522,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"7997:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8006:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":520,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[527,556],"referencedDeclaration":556,"src":"7983:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7983:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":525,"nodeType":"ExpressionStatement","src":"7983:26:1"}]},"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"7584:319:1","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":527,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"7917:9:1","nodeType":"FunctionDefinition","parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"mutability":"mutable","name":"to","nameLocation":"7935:2:1","nodeType":"VariableDeclaration","scope":527,"src":"7927:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"7927:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":517,"mutability":"mutable","name":"tokenId","nameLocation":"7947:7:1","nodeType":"VariableDeclaration","scope":527,"src":"7939:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7926:29:1"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"7973:0:1"},"scope":912,"src":"7908:108:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":555,"nodeType":"Block","src":"8351:195:1","statements":[{"expression":{"arguments":[{"id":538,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"8367:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":539,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"8371:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":537,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"8361:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8361:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":541,"nodeType":"ExpressionStatement","src":"8361:18:1"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8441:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8433:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"8433:7:1","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8433:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":548,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"8445:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":549,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"8449:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":550,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"8458:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":543,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"8410:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8410:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8477:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":542,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8389:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8389:150:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"ExpressionStatement","src":"8389:150:1"}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"8022:210:1","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":556,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8246:9:1","nodeType":"FunctionDefinition","parameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"to","nameLocation":"8273:2:1","nodeType":"VariableDeclaration","scope":556,"src":"8265:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"8265:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"tokenId","nameLocation":"8293:7:1","nodeType":"VariableDeclaration","scope":556,"src":"8285:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"8285:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"data","nameLocation":"8323:4:1","nodeType":"VariableDeclaration","scope":556,"src":"8310:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":533,"name":"bytes","nodeType":"ElementaryTypeName","src":"8310:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8255:78:1"},"returnParameters":{"id":536,"nodeType":"ParameterList","parameters":[],"src":"8351:0:1"},"scope":912,"src":"8237:309:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":621,"nodeType":"Block","src":"8929:366:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"8947:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8961:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8953:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"8953:7:1","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8953:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8947:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8965:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":564,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8939:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8939:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":573,"nodeType":"ExpressionStatement","src":"8939:61:1"},{"expression":{"arguments":[{"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9018:17:1","subExpression":{"arguments":[{"id":576,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"9027:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":575,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"9019:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9019:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9037:30:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9010:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9010:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"9010:58:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9108:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9100:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"9100:7:1","typeDescriptions":{}}},"id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9100:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":587,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"9112:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":588,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"9116:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":582,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"9079:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9079:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"ExpressionStatement","src":"9079:45:1"},{"expression":{"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":591,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"9135:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":593,"indexExpression":{"id":592,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"9145:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9135:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9152:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9135:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":596,"nodeType":"ExpressionStatement","src":"9135:18:1"},{"expression":{"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":597,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"9163:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":599,"indexExpression":{"id":598,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"9171:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9163:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":600,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"9182:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9163:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":602,"nodeType":"ExpressionStatement","src":"9163:21:1"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9217:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9209:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"9209:7:1","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9209:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":608,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"9221:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":609,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"9225:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":603,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"9200:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9200:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":611,"nodeType":"EmitStatement","src":"9195:38:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9264:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"9264:7:1","typeDescriptions":{}}},"id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9264:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":617,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"9276:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":618,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"9280:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":612,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"9244:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9244:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":620,"nodeType":"ExpressionStatement","src":"9244:44:1"}]},"documentation":{"id":557,"nodeType":"StructuredDocumentation","src":"8552:311:1","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":622,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8877:5:1","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"mutability":"mutable","name":"to","nameLocation":"8891:2:1","nodeType":"VariableDeclaration","scope":622,"src":"8883:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"8883:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"tokenId","nameLocation":"8903:7:1","nodeType":"VariableDeclaration","scope":622,"src":"8895:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"8895:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8882:29:1"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[],"src":"8929:0:1"},"scope":912,"src":"8868:427:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":681,"nodeType":"Block","src":"9561:357:1","statements":[{"assignments":[629],"declarations":[{"constant":false,"id":629,"mutability":"mutable","name":"owner","nameLocation":"9579:5:1","nodeType":"VariableDeclaration","scope":681,"src":"9571:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"9571:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":634,"initialValue":{"arguments":[{"id":632,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"9602:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":630,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"9587:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$912_$","typeString":"type(contract ERC721)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":191,"src":"9587:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9587:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9571:39:1"},{"expression":{"arguments":[{"id":636,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"9642:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9657:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9649:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"9649:7:1","typeDescriptions":{}}},"id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9649:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":641,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"9661:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":635,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"9621:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9621:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":643,"nodeType":"ExpressionStatement","src":"9621:48:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9724:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9716:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"9716:7:1","typeDescriptions":{}}},"id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9716:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":649,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"9728:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":644,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"9707:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9707:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":651,"nodeType":"ExpressionStatement","src":"9707:29:1"},{"expression":{"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":652,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"9747:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":654,"indexExpression":{"id":653,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"9757:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9747:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9767:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9747:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":657,"nodeType":"ExpressionStatement","src":"9747:21:1"},{"expression":{"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9778:23:1","subExpression":{"baseExpression":{"id":658,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"9785:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":660,"indexExpression":{"id":659,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"9793:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9785:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"9778:23:1"},{"eventCall":{"arguments":[{"id":664,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"9826:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9841:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9833:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"9833:7:1","typeDescriptions":{}}},"id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9833:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":669,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"9845:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":663,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"9817:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9817:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"EmitStatement","src":"9812:41:1"},{"expression":{"arguments":[{"id":673,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"9884:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9899:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9891:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"9891:7:1","typeDescriptions":{}}},"id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9891:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":678,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"9903:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":672,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"9864:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9864:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":680,"nodeType":"ExpressionStatement","src":"9864:47:1"}]},"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"9301:206:1","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":682,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9521:5:1","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"tokenId","nameLocation":"9535:7:1","nodeType":"VariableDeclaration","scope":682,"src":"9527:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint256","nodeType":"ElementaryTypeName","src":"9527:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9526:17:1"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[],"src":"9561:0:1"},"scope":912,"src":"9512:406:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":756,"nodeType":"Block","src":"10351:496:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":695,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"10384:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":693,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"10369:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$912_$","typeString":"type(contract ERC721)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":191,"src":"10369:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10369:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":697,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"10396:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10369:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10402:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":692,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10361:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10361:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"ExpressionStatement","src":"10361:81:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":703,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"10460:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10474:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10466:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"10466:7:1","typeDescriptions":{}}},"id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10466:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10460:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10478:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10452:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10452:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":711,"nodeType":"ExpressionStatement","src":"10452:65:1"},{"expression":{"arguments":[{"id":713,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"10549:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":714,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"10555:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":715,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"10559:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":712,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"10528:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10528:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":717,"nodeType":"ExpressionStatement","src":"10528:39:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10646:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10638:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"10638:7:1","typeDescriptions":{}}},"id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10638:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":723,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"10650:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":718,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"10629:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10629:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":725,"nodeType":"ExpressionStatement","src":"10629:29:1"},{"expression":{"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":726,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"10669:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":728,"indexExpression":{"id":727,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"10679:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10669:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10688:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10669:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":731,"nodeType":"ExpressionStatement","src":"10669:20:1"},{"expression":{"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":732,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"10699:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":734,"indexExpression":{"id":733,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"10709:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10699:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10716:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10699:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":737,"nodeType":"ExpressionStatement","src":"10699:18:1"},{"expression":{"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":738,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"10727:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":740,"indexExpression":{"id":739,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"10735:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10727:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":741,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"10746:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10727:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":743,"nodeType":"ExpressionStatement","src":"10727:21:1"},{"eventCall":{"arguments":[{"id":745,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"10773:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":746,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"10779:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":747,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"10783:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":744,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"10764:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10764:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":749,"nodeType":"EmitStatement","src":"10759:32:1"},{"expression":{"arguments":[{"id":751,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"10822:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":752,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"10828:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":753,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"10832:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":750,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"10802:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10802:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"ExpressionStatement","src":"10802:38:1"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"9924:313:1","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":757,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"10251:9:1","nodeType":"FunctionDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"from","nameLocation":"10278:4:1","nodeType":"VariableDeclaration","scope":757,"src":"10270:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"10270:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"to","nameLocation":"10300:2:1","nodeType":"VariableDeclaration","scope":757,"src":"10292:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"10292:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":689,"mutability":"mutable","name":"tokenId","nameLocation":"10320:7:1","nodeType":"VariableDeclaration","scope":757,"src":"10312:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":688,"name":"uint256","nodeType":"ElementaryTypeName","src":"10312:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10260:73:1"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[],"src":"10351:0:1"},"scope":912,"src":"10242:605:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":780,"nodeType":"Block","src":"11023:107:1","statements":[{"expression":{"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":765,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"11033:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":767,"indexExpression":{"id":766,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"11049:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11033:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":768,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"11060:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11033:29:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":770,"nodeType":"ExpressionStatement","src":"11033:29:1"},{"eventCall":{"arguments":[{"arguments":[{"id":774,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"11101:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":772,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"11086:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$912_$","typeString":"type(contract ERC721)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":191,"src":"11086:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11086:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":776,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"11111:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":777,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"11115:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":771,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"11077:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11077:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":779,"nodeType":"EmitStatement","src":"11072:51:1"}]},"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"10853:101:1","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":781,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10968:8:1","nodeType":"FunctionDefinition","parameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"to","nameLocation":"10985:2:1","nodeType":"VariableDeclaration","scope":781,"src":"10977:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"10977:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"tokenId","nameLocation":"10997:7:1","nodeType":"VariableDeclaration","scope":781,"src":"10989:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":761,"name":"uint256","nodeType":"ElementaryTypeName","src":"10989:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10976:29:1"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"11023:0:1"},"scope":912,"src":"10959:171:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":812,"nodeType":"Block","src":"11389:184:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"11407:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":793,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"11416:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11407:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11426:27:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11399:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11399:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"ExpressionStatement","src":"11399:55:1"},{"expression":{"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":798,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"11464:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":801,"indexExpression":{"id":799,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"11483:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11464:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":802,"indexExpression":{"id":800,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"11490:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11464:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":803,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"11502:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11464:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":805,"nodeType":"ExpressionStatement","src":"11464:46:1"},{"eventCall":{"arguments":[{"id":807,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"11540:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":808,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"11547:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":809,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"11557:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":806,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"11525:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11525:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":811,"nodeType":"EmitStatement","src":"11520:46:1"}]},"documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"11136:125:1","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":813,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"11275:18:1","nodeType":"FunctionDefinition","parameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"owner","nameLocation":"11311:5:1","nodeType":"VariableDeclaration","scope":813,"src":"11303:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"11303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"operator","nameLocation":"11334:8:1","nodeType":"VariableDeclaration","scope":813,"src":"11326:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"11326:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"approved","nameLocation":"11357:8:1","nodeType":"VariableDeclaration","scope":813,"src":"11352:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":787,"name":"bool","nodeType":"ElementaryTypeName","src":"11352:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11293:78:1"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[],"src":"11389:0:1"},"scope":912,"src":"11266:307:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":826,"nodeType":"Block","src":"11720:70:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":821,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"11746:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":820,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"11738:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11738:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11756:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":819,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11730:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11730:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":825,"nodeType":"ExpressionStatement","src":"11730:53:1"}]},"documentation":{"id":814,"nodeType":"StructuredDocumentation","src":"11579:73:1","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":827,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"11666:14:1","nodeType":"FunctionDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"tokenId","nameLocation":"11689:7:1","nodeType":"VariableDeclaration","scope":827,"src":"11681:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"11681:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11680:17:1"},"returnParameters":{"id":818,"nodeType":"ParameterList","parameters":[],"src":"11720:0:1"},"scope":912,"src":"11657:133:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":888,"nodeType":"Block","src":"12497:676:1","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":841,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"12511:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"12511:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12511:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":886,"nodeType":"Block","src":"13131:36:1","statements":[{"expression":{"hexValue":"74727565","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13152:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":840,"id":885,"nodeType":"Return","src":"13145:11:1"}]},"id":887,"nodeType":"IfStatement","src":"12507:660:1","trueBody":{"id":883,"nodeType":"Block","src":"12528:597:1","statements":[{"clauses":[{"block":{"id":863,"nodeType":"Block","src":"12642:91:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":857,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"12667:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":858,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"12677:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1046_$","typeString":"type(contract IERC721Receiver)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"12677:32:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"12677:41:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"12667:51:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":840,"id":862,"nodeType":"Return","src":"12660:58:1"}]},"errorName":"","id":864,"nodeType":"TryCatchClause","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"retval","nameLocation":"12634:6:1","nodeType":"VariableDeclaration","scope":864,"src":"12627:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":854,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12627:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"12626:15:1"},"src":"12618:115:1"},{"block":{"id":880,"nodeType":"Block","src":"12762:353:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":868,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"12784:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12784:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12801:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12784:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":878,"nodeType":"Block","src":"12911:190:1","statements":[{"AST":{"nodeType":"YulBlock","src":"12997:86:1","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13034:2:1","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"13038:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13030:3:1"},"nodeType":"YulFunctionCall","src":"13030:15:1"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"13053:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13047:5:1"},"nodeType":"YulFunctionCall","src":"13047:13:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13023:6:1"},"nodeType":"YulFunctionCall","src":"13023:38:1"},"nodeType":"YulExpressionStatement","src":"13023:38:1"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":866,"isOffset":false,"isSlot":false,"src":"13038:6:1","valueSize":1},{"declaration":866,"isOffset":false,"isSlot":false,"src":"13053:6:1","valueSize":1}],"id":877,"nodeType":"InlineAssembly","src":"12988:95:1"}]},"id":879,"nodeType":"IfStatement","src":"12780:321:1","trueBody":{"id":876,"nodeType":"Block","src":"12804:101:1","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12833:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":872,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"12826:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12826:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":875,"nodeType":"ExpressionStatement","src":"12826:60:1"}]}}]},"errorName":"","id":881,"nodeType":"TryCatchClause","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"reason","nameLocation":"12754:6:1","nodeType":"VariableDeclaration","scope":881,"src":"12741:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":865,"name":"bytes","nodeType":"ElementaryTypeName","src":"12741:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12740:21:1"},"src":"12734:381:1"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":848,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"12583:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12583:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":850,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12597:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":851,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"12603:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":852,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"12612:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":845,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"12562:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":844,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"12546:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1046_$","typeString":"type(contract IERC721Receiver)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12546:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1046","typeString":"contract IERC721Receiver"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1045,"src":"12546:36:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12546:71:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":882,"nodeType":"TryStatement","src":"12542:573:1"}]}}]},"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"11796:541:1","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":889,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"12351:22:1","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"from","nameLocation":"12391:4:1","nodeType":"VariableDeclaration","scope":889,"src":"12383:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"12383:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"to","nameLocation":"12413:2:1","nodeType":"VariableDeclaration","scope":889,"src":"12405:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"12405:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"tokenId","nameLocation":"12433:7:1","nodeType":"VariableDeclaration","scope":889,"src":"12425:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"12425:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"data","nameLocation":"12463:4:1","nodeType":"VariableDeclaration","scope":889,"src":"12450:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":835,"name":"bytes","nodeType":"ElementaryTypeName","src":"12450:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12373:100:1"},"returnParameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"12491:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":838,"name":"bool","nodeType":"ElementaryTypeName","src":"12491:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12490:6:1"},"scope":912,"src":"12342:831:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":899,"nodeType":"Block","src":"13849:2:1","statements":[]},"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"13179:545:1","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":900,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"13738:20:1","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"from","nameLocation":"13776:4:1","nodeType":"VariableDeclaration","scope":900,"src":"13768:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"13768:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"to","nameLocation":"13798:2:1","nodeType":"VariableDeclaration","scope":900,"src":"13790:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"13790:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"tokenId","nameLocation":"13818:7:1","nodeType":"VariableDeclaration","scope":900,"src":"13810:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"13810:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:73:1"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"13849:0:1"},"scope":912,"src":"13729:122:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"14342:2:1","statements":[]},"documentation":{"id":901,"nodeType":"StructuredDocumentation","src":"13857:361:1","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"14232:19:1","nodeType":"FunctionDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"from","nameLocation":"14269:4:1","nodeType":"VariableDeclaration","scope":911,"src":"14261:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":902,"name":"address","nodeType":"ElementaryTypeName","src":"14261:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":905,"mutability":"mutable","name":"to","nameLocation":"14291:2:1","nodeType":"VariableDeclaration","scope":911,"src":"14283:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"14283:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"tokenId","nameLocation":"14311:7:1","nodeType":"VariableDeclaration","scope":911,"src":"14303:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":906,"name":"uint256","nodeType":"ElementaryTypeName","src":"14303:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14251:73:1"},"returnParameters":{"id":909,"nodeType":"ParameterList","parameters":[],"src":"14342:0:1"},"scope":912,"src":"14223:121:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":913,"src":"628:13718:1","usedErrors":[]}],"src":"107:14240:1"},"id":1},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1652],"IERC721":[1028]},"id":1029,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":914,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":915,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1029,"sourceUnit":1653,"src":"133:47:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":917,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1652,"src":"271:7:2"},"id":918,"nodeType":"InheritanceSpecifier","src":"271:7:2"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"182:67:2","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1028,"linearizedBaseContracts":[1028,1652],"name":"IERC721","nameLocation":"260:7:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":919,"nodeType":"StructuredDocumentation","src":"285:88:2","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":927,"name":"Transfer","nameLocation":"384:8:2","nodeType":"EventDefinition","parameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:2","nodeType":"VariableDeclaration","scope":927,"src":"393:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":923,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:2","nodeType":"VariableDeclaration","scope":927,"src":"415:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":925,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:2","nodeType":"VariableDeclaration","scope":927,"src":"435:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:2"},"src":"378:82:2"},{"anonymous":false,"documentation":{"id":928,"nodeType":"StructuredDocumentation","src":"466:94:2","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":936,"name":"Approval","nameLocation":"571:8:2","nodeType":"EventDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:2","nodeType":"VariableDeclaration","scope":936,"src":"580:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":932,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:2","nodeType":"VariableDeclaration","scope":936,"src":"603:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":934,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:2","nodeType":"VariableDeclaration","scope":936,"src":"629:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:2"},"src":"565:89:2"},{"anonymous":false,"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"660:117:2","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":945,"name":"ApprovalForAll","nameLocation":"788:14:2","nodeType":"EventDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:2","nodeType":"VariableDeclaration","scope":945,"src":"803:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":941,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:2","nodeType":"VariableDeclaration","scope":945,"src":"826:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":943,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:2","nodeType":"VariableDeclaration","scope":945,"src":"852:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":942,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:2"},"src":"782:85:2"},{"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"873:76:2","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":953,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:2","nodeType":"FunctionDefinition","parameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"owner","nameLocation":"981:5:2","nodeType":"VariableDeclaration","scope":953,"src":"973:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:2"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"balance","nameLocation":"1019:7:2","nodeType":"VariableDeclaration","scope":953,"src":"1011:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:2"},"scope":1028,"src":"954:74:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"1034:131:2","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":961,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:2","nodeType":"FunctionDefinition","parameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:2","nodeType":"VariableDeclaration","scope":961,"src":"1187:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:2"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"owner","nameLocation":"1235:5:2","nodeType":"VariableDeclaration","scope":961,"src":"1227:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:2"},"scope":1028,"src":"1170:72:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":962,"nodeType":"StructuredDocumentation","src":"1248:556:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":973,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:2","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"from","nameLocation":"1852:4:2","nodeType":"VariableDeclaration","scope":973,"src":"1844:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"to","nameLocation":"1874:2:2","nodeType":"VariableDeclaration","scope":973,"src":"1866:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:2","nodeType":"VariableDeclaration","scope":973,"src":"1886:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"data","nameLocation":"1926:4:2","nodeType":"VariableDeclaration","scope":973,"src":"1911:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":969,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:2"},"returnParameters":{"id":972,"nodeType":"ParameterList","parameters":[],"src":"1945:0:2"},"scope":1028,"src":"1809:137:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"1952:687:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":983,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:2","nodeType":"FunctionDefinition","parameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"from","nameLocation":"2687:4:2","nodeType":"VariableDeclaration","scope":983,"src":"2679:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"to","nameLocation":"2709:2:2","nodeType":"VariableDeclaration","scope":983,"src":"2701:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":977,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:2","nodeType":"VariableDeclaration","scope":983,"src":"2721:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:2"},"returnParameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"2751:0:2"},"scope":1028,"src":"2644:108:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":984,"nodeType":"StructuredDocumentation","src":"2758:504:2","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":993,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3276:12:2","nodeType":"FunctionDefinition","parameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"mutability":"mutable","name":"from","nameLocation":"3306:4:2","nodeType":"VariableDeclaration","scope":993,"src":"3298:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"3298:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"to","nameLocation":"3328:2:2","nodeType":"VariableDeclaration","scope":993,"src":"3320:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"3320:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"tokenId","nameLocation":"3348:7:2","nodeType":"VariableDeclaration","scope":993,"src":"3340:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3288:73:2"},"returnParameters":{"id":992,"nodeType":"ParameterList","parameters":[],"src":"3370:0:2"},"scope":1028,"src":"3267:104:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"3377:452:2","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1001,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3843:7:2","nodeType":"FunctionDefinition","parameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"to","nameLocation":"3859:2:2","nodeType":"VariableDeclaration","scope":1001,"src":"3851:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"3851:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"tokenId","nameLocation":"3871:7:2","nodeType":"VariableDeclaration","scope":1001,"src":"3863:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":997,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3850:29:2"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"3888:0:2"},"scope":1028,"src":"3834:55:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"3895:309:2","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1009,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4218:17:2","nodeType":"FunctionDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"operator","nameLocation":"4244:8:2","nodeType":"VariableDeclaration","scope":1009,"src":"4236:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"_approved","nameLocation":"4259:9:2","nodeType":"VariableDeclaration","scope":1009,"src":"4254:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1005,"name":"bool","nodeType":"ElementaryTypeName","src":"4254:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:34:2"},"returnParameters":{"id":1008,"nodeType":"ParameterList","parameters":[],"src":"4278:0:2"},"scope":1028,"src":"4209:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"4285:139:2","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1017,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4438:11:2","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"tokenId","nameLocation":"4458:7:2","nodeType":"VariableDeclaration","scope":1017,"src":"4450:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"4450:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:17:2"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"operator","nameLocation":"4498:8:2","nodeType":"VariableDeclaration","scope":1017,"src":"4490:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4489:18:2"},"scope":1028,"src":"4429:79:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1018,"nodeType":"StructuredDocumentation","src":"4514:138:2","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1027,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4666:16:2","nodeType":"FunctionDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1020,"mutability":"mutable","name":"owner","nameLocation":"4691:5:2","nodeType":"VariableDeclaration","scope":1027,"src":"4683:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"4683:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1022,"mutability":"mutable","name":"operator","nameLocation":"4706:8:2","nodeType":"VariableDeclaration","scope":1027,"src":"4698:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"4698:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4682:33:2"},"returnParameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1027,"src":"4739:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1024,"name":"bool","nodeType":"ElementaryTypeName","src":"4739:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4738:6:2"},"scope":1028,"src":"4657:88:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1029,"src":"250:4497:2","usedErrors":[]}],"src":"108:4640:2"},"id":2},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1046]},"id":1047,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1030,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"141:152:3","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1046,"linearizedBaseContracts":[1046],"name":"IERC721Receiver","nameLocation":"304:15:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"326:493:3","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1045,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:3","nodeType":"FunctionDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"operator","nameLocation":"867:8:3","nodeType":"VariableDeclaration","scope":1045,"src":"859:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"from","nameLocation":"893:4:3","nodeType":"VariableDeclaration","scope":1045,"src":"885:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:3","nodeType":"VariableDeclaration","scope":1045,"src":"907:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1037,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"data","nameLocation":"947:4:3","nodeType":"VariableDeclaration","scope":1045,"src":"932:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1039,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:3"},"returnParameters":{"id":1044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1045,"src":"976:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1042,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:3"},"scope":1046,"src":"824:160:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1047,"src":"294:692:3","usedErrors":[]}],"src":"116:871:3"},"id":3},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[1652],"IERC721":[1028],"IERC721Metadata":[1073]},"id":1074,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1048,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1049,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1074,"sourceUnit":1029,"src":"137:24:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1051,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1028,"src":"326:7:4"},"id":1052,"nodeType":"InheritanceSpecifier","src":"326:7:4"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"163:133:4","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1073,"linearizedBaseContracts":[1073,1028,1652],"name":"IERC721Metadata","nameLocation":"307:15:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"340:58:4","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1058,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:4","nodeType":"FunctionDefinition","parameters":{"id":1054,"nodeType":"ParameterList","parameters":[],"src":"416:2:4"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1058,"src":"442:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1055,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:4"},"scope":1073,"src":"403:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"463:60:4","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1064,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:4","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[],"src":"543:2:4"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1064,"src":"569:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1061,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:4"},"scope":1073,"src":"528:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"590:90:4","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1072,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:4","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:4","nodeType":"VariableDeclaration","scope":1072,"src":"703:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:4"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1072,"src":"743:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1069,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:4"},"scope":1073,"src":"685:73:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1074,"src":"297:463:4","usedErrors":[]}],"src":"112:649:4"},"id":4},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1368]},"id":1369,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1075,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"126:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1368,"linearizedBaseContracts":[1368],"name":"Address","nameLocation":"202:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1090,"nodeType":"Block","src":"1241:254:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1084,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"1465:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1083,"id":1089,"nodeType":"Return","src":"1458:30:5"}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"216:954:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:5","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"account","nameLocation":"1203:7:5","nodeType":"VariableDeclaration","scope":1091,"src":"1195:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:5"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"1235:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1081,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:5"},"scope":1368,"src":"1175:320:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"2483:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1102,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1368","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1368","typeString":"library Address"}],"id":1101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:5","typeDescriptions":{}}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1105,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"2526:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1099,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1109,"nodeType":"ExpressionStatement","src":"2493:73:5"},{"assignments":[1111,null],"declarations":[{"constant":false,"id":1111,"mutability":"mutable","name":"success","nameLocation":"2583:7:5","nodeType":"VariableDeclaration","scope":1124,"src":"2578:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1110,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1118,"initialValue":{"arguments":[{"hexValue":"","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1112,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"2596:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1114,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"2618:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:5"},{"expression":{"arguments":[{"id":1120,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"2647:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1123,"nodeType":"ExpressionStatement","src":"2639:78:5"}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"1501:906:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:5","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:5","nodeType":"VariableDeclaration","scope":1125,"src":"2431:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"amount","nameLocation":"2466:6:5","nodeType":"VariableDeclaration","scope":1125,"src":"2458:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:5"},"returnParameters":{"id":1098,"nodeType":"ParameterList","parameters":[],"src":"2483:0:5"},"scope":1368,"src":"2412:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1141,"nodeType":"Block","src":"3555:84:5","statements":[{"expression":{"arguments":[{"id":1136,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"3585:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1137,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3593:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1135,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1142,1162],"referencedDeclaration":1162,"src":"3572:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1134,"id":1140,"nodeType":"Return","src":"3565:67:5"}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"2730:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1142,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:5","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"target","nameLocation":"3496:6:5","nodeType":"VariableDeclaration","scope":1142,"src":"3488:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"data","nameLocation":"3517:4:5","nodeType":"VariableDeclaration","scope":1142,"src":"3504:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1129,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:5"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1142,"src":"3541:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1132,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:5"},"scope":1368,"src":"3466:173:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1161,"nodeType":"Block","src":"4008:76:5","statements":[{"expression":{"arguments":[{"id":1155,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"4047:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1156,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"4055:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1158,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4064:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1154,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1182,1232],"referencedDeclaration":1232,"src":"4025:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4025:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1153,"id":1160,"nodeType":"Return","src":"4018:59:5"}]},"documentation":{"id":1143,"nodeType":"StructuredDocumentation","src":"3645:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1162,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:5","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"target","nameLocation":"3900:6:5","nodeType":"VariableDeclaration","scope":1162,"src":"3892:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"data","nameLocation":"3929:4:5","nodeType":"VariableDeclaration","scope":1162,"src":"3916:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1146,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:5","nodeType":"VariableDeclaration","scope":1162,"src":"3943:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1148,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:5"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1162,"src":"3994:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1151,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:5"},"scope":1368,"src":"3861:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1181,"nodeType":"Block","src":"4589:111:5","statements":[{"expression":{"arguments":[{"id":1175,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"4628:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1176,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"4636:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"4642:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1174,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1182,1232],"referencedDeclaration":1232,"src":"4606:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1173,"id":1180,"nodeType":"Return","src":"4599:94:5"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"4090:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1182,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:5","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"target","nameLocation":"4494:6:5","nodeType":"VariableDeclaration","scope":1182,"src":"4486:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"data","nameLocation":"4523:4:5","nodeType":"VariableDeclaration","scope":1182,"src":"4510:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1166,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"value","nameLocation":"4545:5:5","nodeType":"VariableDeclaration","scope":1182,"src":"4537:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:5"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1182,"src":"4575:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1171,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:5"},"scope":1368,"src":"4446:254:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1231,"nodeType":"Block","src":"5127:320:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1199,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1368","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1368","typeString":"library Address"}],"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:5","typeDescriptions":{}}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5145:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"5170:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1196,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1206,"nodeType":"ExpressionStatement","src":"5137:81:5"},{"expression":{"arguments":[{"arguments":[{"id":1209,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"5247:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1208,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"5236:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5228:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1213,"nodeType":"ExpressionStatement","src":"5228:60:5"},{"assignments":[1215,1217],"declarations":[{"constant":false,"id":1215,"mutability":"mutable","name":"success","nameLocation":"5305:7:5","nodeType":"VariableDeclaration","scope":1231,"src":"5300:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1214,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:5","nodeType":"VariableDeclaration","scope":1231,"src":"5314:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1216,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1224,"initialValue":{"arguments":[{"id":1222,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"5367:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1218,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"5341:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5341:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"5360:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:5"},{"expression":{"arguments":[{"id":1226,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"5406:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1227,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"5415:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1228,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"5427:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1225,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"5389:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1195,"id":1230,"nodeType":"Return","src":"5382:58:5"}]},"documentation":{"id":1183,"nodeType":"StructuredDocumentation","src":"4706:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1232,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:5","nodeType":"FunctionDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"target","nameLocation":"4996:6:5","nodeType":"VariableDeclaration","scope":1232,"src":"4988:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"data","nameLocation":"5025:4:5","nodeType":"VariableDeclaration","scope":1232,"src":"5012:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1186,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"value","nameLocation":"5047:5:5","nodeType":"VariableDeclaration","scope":1232,"src":"5039:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:5","nodeType":"VariableDeclaration","scope":1232,"src":"5062:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1190,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:5"},"returnParameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1232,"src":"5113:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1193,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:5"},"scope":1368,"src":"4948:499:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1248,"nodeType":"Block","src":"5724:97:5","statements":[{"expression":{"arguments":[{"id":1243,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"5760:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1244,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"5768:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1242,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1249,1284],"referencedDeclaration":1284,"src":"5741:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5741:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1241,"id":1247,"nodeType":"Return","src":"5734:80:5"}]},"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"5453:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1249,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:5","nodeType":"FunctionDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"target","nameLocation":"5660:6:5","nodeType":"VariableDeclaration","scope":1249,"src":"5652:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"data","nameLocation":"5681:4:5","nodeType":"VariableDeclaration","scope":1249,"src":"5668:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1236,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:5"},"returnParameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1249,"src":"5710:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1239,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:5"},"scope":1368,"src":"5624:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"6163:228:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1263,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"6192:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1262,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"6181:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1267,"nodeType":"ExpressionStatement","src":"6173:67:5"},{"assignments":[1269,1271],"declarations":[{"constant":false,"id":1269,"mutability":"mutable","name":"success","nameLocation":"6257:7:5","nodeType":"VariableDeclaration","scope":1283,"src":"6252:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1268,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:5","nodeType":"VariableDeclaration","scope":1283,"src":"6266:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1270,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1276,"initialValue":{"arguments":[{"id":1274,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"6311:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1272,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"6293:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6293:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:5"},{"expression":{"arguments":[{"id":1278,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"6350:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1279,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"6359:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1280,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"6371:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1277,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"6333:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1260,"id":1282,"nodeType":"Return","src":"6326:58:5"}]},"documentation":{"id":1250,"nodeType":"StructuredDocumentation","src":"5827:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:5","nodeType":"FunctionDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"target","nameLocation":"6050:6:5","nodeType":"VariableDeclaration","scope":1284,"src":"6042:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1254,"mutability":"mutable","name":"data","nameLocation":"6079:4:5","nodeType":"VariableDeclaration","scope":1284,"src":"6066:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1253,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:5","nodeType":"VariableDeclaration","scope":1284,"src":"6093:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1255,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:5"},"returnParameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1284,"src":"6149:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1258,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:5"},"scope":1368,"src":"6005:386:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1300,"nodeType":"Block","src":"6667:101:5","statements":[{"expression":{"arguments":[{"id":1295,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"6705:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1296,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"6713:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1294,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1301,1336],"referencedDeclaration":1336,"src":"6684:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6684:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1293,"id":1299,"nodeType":"Return","src":"6677:84:5"}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"6397:168:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1301,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:5","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"target","nameLocation":"6608:6:5","nodeType":"VariableDeclaration","scope":1301,"src":"6600:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"data","nameLocation":"6629:4:5","nodeType":"VariableDeclaration","scope":1301,"src":"6616:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1288,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:5"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1301,"src":"6653:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1291,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:5"},"scope":1368,"src":"6570:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1335,"nodeType":"Block","src":"7109:232:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1315,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"7138:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1314,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"7127:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7127:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1313,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1319,"nodeType":"ExpressionStatement","src":"7119:69:5"},{"assignments":[1321,1323],"declarations":[{"constant":false,"id":1321,"mutability":"mutable","name":"success","nameLocation":"7205:7:5","nodeType":"VariableDeclaration","scope":1335,"src":"7200:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1320,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:5","nodeType":"VariableDeclaration","scope":1335,"src":"7214:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1322,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1328,"initialValue":{"arguments":[{"id":1326,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"7261:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1324,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"7241:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:5","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:5"},{"expression":{"arguments":[{"id":1330,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"7300:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1331,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"7309:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1332,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"7321:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1329,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"7283:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1312,"id":1334,"nodeType":"Return","src":"7276:58:5"}]},"documentation":{"id":1302,"nodeType":"StructuredDocumentation","src":"6774:175:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1336,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:5","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"target","nameLocation":"7001:6:5","nodeType":"VariableDeclaration","scope":1336,"src":"6993:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1306,"mutability":"mutable","name":"data","nameLocation":"7030:4:5","nodeType":"VariableDeclaration","scope":1336,"src":"7017:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1305,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:5","nodeType":"VariableDeclaration","scope":1336,"src":"7044:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1307,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:5"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1336,"src":"7095:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1310,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:5"},"scope":1368,"src":"6954:387:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1366,"nodeType":"Block","src":"7721:582:5","statements":[{"condition":{"id":1348,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"7735:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1364,"nodeType":"Block","src":"7792:505:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1352,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"7876:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7876:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1362,"nodeType":"Block","src":"8234:53:5","statements":[{"expression":{"arguments":[{"id":1359,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"8259:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1358,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8252:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1361,"nodeType":"ExpressionStatement","src":"8252:20:5"}]},"id":1363,"nodeType":"IfStatement","src":"7872:415:5","trueBody":{"id":1357,"nodeType":"Block","src":"7899:329:5","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:5"},"nodeType":"YulFunctionCall","src":"8114:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:5"},"nodeType":"YulFunctionCall","src":"8159:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:5"},"nodeType":"YulFunctionCall","src":"8152:44:5"},"nodeType":"YulExpressionStatement","src":"8152:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1341,"isOffset":false,"isSlot":false,"src":"8120:10:5","valueSize":1},{"declaration":1341,"isOffset":false,"isSlot":false,"src":"8167:10:5","valueSize":1}],"id":1356,"nodeType":"InlineAssembly","src":"8060:154:5"}]}}]},"id":1365,"nodeType":"IfStatement","src":"7731:566:5","trueBody":{"id":1351,"nodeType":"Block","src":"7744:42:5","statements":[{"expression":{"id":1349,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"7765:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1347,"id":1350,"nodeType":"Return","src":"7758:17:5"}]}}]},"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"7347:209:5","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":1367,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:5","nodeType":"FunctionDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"success","nameLocation":"7601:7:5","nodeType":"VariableDeclaration","scope":1367,"src":"7596:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1338,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:5","nodeType":"VariableDeclaration","scope":1367,"src":"7618:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1340,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:5","nodeType":"VariableDeclaration","scope":1367,"src":"7651:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1342,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:5"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1367,"src":"7707:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1345,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:5"},"scope":1368,"src":"7561:742:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1369,"src":"194:8111:5","usedErrors":[]}],"src":"101:8205:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1390]},"id":1391,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1370,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:6"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"111:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1390,"linearizedBaseContracts":[1390],"name":"Context","nameLocation":"626:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1379,"nodeType":"Block","src":"702:34:6","statements":[{"expression":{"expression":{"id":1376,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1375,"id":1378,"nodeType":"Return","src":"712:17:6"}]},"id":1380,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:6","nodeType":"FunctionDefinition","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[],"src":"659:2:6"},"returnParameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1380,"src":"693:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:6"},"scope":1390,"src":"640:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1388,"nodeType":"Block","src":"809:32:6","statements":[{"expression":{"expression":{"id":1385,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1384,"id":1387,"nodeType":"Return","src":"819:15:6"}]},"id":1389,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:6","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[],"src":"759:2:6"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"793:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1382,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:6"},"scope":1390,"src":"742:99:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1391,"src":"608:235:6","usedErrors":[]}],"src":"86:758:6"},"id":6},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[1616]},"id":1617,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1392,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:7"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"126:34:7","text":" @dev String operations."},"fullyImplemented":true,"id":1616,"linearizedBaseContracts":[1616],"name":"Strings","nameLocation":"169:7:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1396,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"208:12:7","nodeType":"VariableDeclaration","scope":1616,"src":"183:58:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1394,"name":"bytes16","nodeType":"ElementaryTypeName","src":"183:7:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"223:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1399,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"270:15:7","nodeType":"VariableDeclaration","scope":1616,"src":"247:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1397,"name":"uint8","nodeType":"ElementaryTypeName","src":"247:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1477,"nodeType":"Block","src":"463:632:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"665:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"665:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1413,"nodeType":"IfStatement","src":"661:51:7","trueBody":{"id":1412,"nodeType":"Block","src":"677:35:7","statements":[{"expression":{"hexValue":"30","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"698:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":1406,"id":1411,"nodeType":"Return","src":"691:10:7"}]}},{"assignments":[1415],"declarations":[{"constant":false,"id":1415,"mutability":"mutable","name":"temp","nameLocation":"729:4:7","nodeType":"VariableDeclaration","scope":1477,"src":"721:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1414,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1417,"initialValue":{"id":1416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"736:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"721:20:7"},{"assignments":[1419],"declarations":[{"constant":false,"id":1419,"mutability":"mutable","name":"digits","nameLocation":"759:6:7","nodeType":"VariableDeclaration","scope":1477,"src":"751:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1420,"nodeType":"VariableDeclarationStatement","src":"751:14:7"},{"body":{"id":1431,"nodeType":"Block","src":"793:57:7","statements":[{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"807:8:7","subExpression":{"id":1424,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"807:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1426,"nodeType":"ExpressionStatement","src":"807:8:7"},{"expression":{"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1427,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"829:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"829:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1430,"nodeType":"ExpressionStatement","src":"829:10:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1421,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"782:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"782:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1432,"nodeType":"WhileStatement","src":"775:75:7"},{"assignments":[1434],"declarations":[{"constant":false,"id":1434,"mutability":"mutable","name":"buffer","nameLocation":"872:6:7","nodeType":"VariableDeclaration","scope":1477,"src":"859:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1433,"name":"bytes","nodeType":"ElementaryTypeName","src":"859:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1439,"initialValue":{"arguments":[{"id":1437,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"891:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"881:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1435,"name":"bytes","nodeType":"ElementaryTypeName","src":"885:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"859:39:7"},{"body":{"id":1470,"nodeType":"Block","src":"927:131:7","statements":[{"expression":{"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1443,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"941:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"941:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1446,"nodeType":"ExpressionStatement","src":"941:11:7"},{"expression":{"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1447,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"966:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1449,"indexExpression":{"id":1448,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"973:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"966:14:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:2:7","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"1009:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1009:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1001:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:7","typeDescriptions":{}}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1001:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"996:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"990:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1452,"name":"uint8","nodeType":"ElementaryTypeName","src":"990:5:7","typeDescriptions":{}}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"990:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"983:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1450,"name":"bytes1","nodeType":"ElementaryTypeName","src":"983:6:7","typeDescriptions":{}}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"983:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"966:56:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1465,"nodeType":"ExpressionStatement","src":"966:56:7"},{"expression":{"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"1036:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1469,"nodeType":"ExpressionStatement","src":"1036:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"915:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"915:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1471,"nodeType":"WhileStatement","src":"908:150:7"},{"expression":{"arguments":[{"id":1474,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"1081:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1074:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1472,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:7","typeDescriptions":{}}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1406,"id":1476,"nodeType":"Return","src":"1067:21:7"}]},"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"297:90:7","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1478,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"401:8:7","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"value","nameLocation":"418:5:7","nodeType":"VariableDeclaration","scope":1478,"src":"410:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:15:7"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1478,"src":"448:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1404,"name":"string","nodeType":"ElementaryTypeName","src":"448:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"447:15:7"},"scope":1616,"src":"392:703:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1518,"nodeType":"Block","src":"1274:255:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"1288:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1288:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1492,"nodeType":"IfStatement","src":"1284:54:7","trueBody":{"id":1491,"nodeType":"Block","src":"1300:38:7","statements":[{"expression":{"hexValue":"30783030","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1321:6:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":1485,"id":1490,"nodeType":"Return","src":"1314:13:7"}]}},{"assignments":[1494],"declarations":[{"constant":false,"id":1494,"mutability":"mutable","name":"temp","nameLocation":"1355:4:7","nodeType":"VariableDeclaration","scope":1518,"src":"1347:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1496,"initialValue":{"id":1495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"1362:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1347:20:7"},{"assignments":[1498],"declarations":[{"constant":false,"id":1498,"mutability":"mutable","name":"length","nameLocation":"1385:6:7","nodeType":"VariableDeclaration","scope":1518,"src":"1377:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1500,"initialValue":{"hexValue":"30","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1377:18:7"},{"body":{"id":1511,"nodeType":"Block","src":"1423:57:7","statements":[{"expression":{"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1437:8:7","subExpression":{"id":1504,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"1437:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1506,"nodeType":"ExpressionStatement","src":"1437:8:7"},{"expression":{"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1507,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"1459:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1459:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1510,"nodeType":"ExpressionStatement","src":"1459:10:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1501,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"1412:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1412:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1512,"nodeType":"WhileStatement","src":"1405:75:7"},{"expression":{"arguments":[{"id":1514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"1508:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1515,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"1515:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1513,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1519,1595,1615],"referencedDeclaration":1595,"src":"1496:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1496:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1485,"id":1517,"nodeType":"Return","src":"1489:33:7"}]},"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"1101:94:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1519,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1209:11:7","nodeType":"FunctionDefinition","parameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"value","nameLocation":"1229:5:7","nodeType":"VariableDeclaration","scope":1519,"src":"1221:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:15:7"},"returnParameters":{"id":1485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1519,"src":"1259:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1483,"name":"string","nodeType":"ElementaryTypeName","src":"1259:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:15:7"},"scope":1616,"src":"1200:329:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1594,"nodeType":"Block","src":"1742:351:7","statements":[{"assignments":[1530],"declarations":[{"constant":false,"id":1530,"mutability":"mutable","name":"buffer","nameLocation":"1765:6:7","nodeType":"VariableDeclaration","scope":1594,"src":"1752:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1529,"name":"bytes","nodeType":"ElementaryTypeName","src":"1752:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1539,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1784:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1534,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"1788:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1784:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1784:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1774:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1531,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1774:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1752:47:7"},{"expression":{"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1540,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1809:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1542,"indexExpression":{"hexValue":"30","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1816:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1809:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1809:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1545,"nodeType":"ExpressionStatement","src":"1809:15:7"},{"expression":{"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1546,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1834:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1548,"indexExpression":{"hexValue":"31","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1834:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1846:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1834:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1551,"nodeType":"ExpressionStatement","src":"1834:15:7"},{"body":{"id":1580,"nodeType":"Block","src":"1904:87:7","statements":[{"expression":{"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1566,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1918:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1568,"indexExpression":{"id":1567,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"1925:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1918:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1569,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1930:12:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1573,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"1943:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1943:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1930:25:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1918:37:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1575,"nodeType":"ExpressionStatement","src":"1918:37:7"},{"expression":{"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"1969:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1979:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1969:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1579,"nodeType":"ExpressionStatement","src":"1969:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1560,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"1892:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1892:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1581,"initializationExpression":{"assignments":[1553],"declarations":[{"constant":false,"id":1553,"mutability":"mutable","name":"i","nameLocation":"1872:1:7","nodeType":"VariableDeclaration","scope":1581,"src":"1864:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1559,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1555,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"1880:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1876:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1864:26:7"},"loopExpression":{"expression":{"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1899:3:7","subExpression":{"id":1563,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"1901:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1565,"nodeType":"ExpressionStatement","src":"1899:3:7"},"nodeType":"ForStatement","src":"1859:132:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"2008:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2017:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2008:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1582,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2000:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2000:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1588,"nodeType":"ExpressionStatement","src":"2000:55:7"},{"expression":{"arguments":[{"id":1591,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"2079:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1589,"name":"string","nodeType":"ElementaryTypeName","src":"2072:6:7","typeDescriptions":{}}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2072:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1528,"id":1593,"nodeType":"Return","src":"2065:21:7"}]},"documentation":{"id":1520,"nodeType":"StructuredDocumentation","src":"1535:112:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1661:11:7","nodeType":"FunctionDefinition","parameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"value","nameLocation":"1681:5:7","nodeType":"VariableDeclaration","scope":1595,"src":"1673:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1524,"mutability":"mutable","name":"length","nameLocation":"1696:6:7","nodeType":"VariableDeclaration","scope":1595,"src":"1688:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1523,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1672:31:7"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1595,"src":"1727:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1526,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:15:7"},"scope":1616,"src":"1652:441:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1614,"nodeType":"Block","src":"2318:76:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1608,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"2363:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2355:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1606,"name":"uint160","nodeType":"ElementaryTypeName","src":"2355:7:7","typeDescriptions":{}}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2355:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2347:7:7","typeDescriptions":{}}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2347:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1611,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"2371:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1603,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1519,1595,1615],"referencedDeclaration":1595,"src":"2335:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1602,"id":1613,"nodeType":"Return","src":"2328:59:7"}]},"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"2099:141:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1615,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2254:11:7","nodeType":"FunctionDefinition","parameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"addr","nameLocation":"2274:4:7","nodeType":"VariableDeclaration","scope":1615,"src":"2266:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:14:7"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1615,"src":"2303:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1600,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:15:7"},"scope":1616,"src":"2245:149:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1617,"src":"161:2235:7","usedErrors":[]}],"src":"101:2296:7"},"id":7},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1640],"IERC165":[1652]},"id":1641,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1618,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1619,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1641,"sourceUnit":1653,"src":"124:23:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1621,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1652,"src":"754:7:8"},"id":1622,"nodeType":"InheritanceSpecifier","src":"754:7:8"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1620,"nodeType":"StructuredDocumentation","src":"149:576:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1640,"linearizedBaseContracts":[1640,1652],"name":"ERC165","nameLocation":"744:6:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1651],"body":{"id":1638,"nodeType":"Block","src":"920:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1631,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"937:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1633,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"957:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1652_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1652_$","typeString":"type(contract IERC165)"}],"id":1632,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1652","typeString":"type(contract IERC165)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1630,"id":1637,"nodeType":"Return","src":"930:47:8"}]},"documentation":{"id":1623,"nodeType":"StructuredDocumentation","src":"768:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1639,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:8","nodeType":"FunctionDefinition","overrides":{"id":1627,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:8"},"parameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:8","nodeType":"VariableDeclaration","scope":1639,"src":"856:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1624,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:8"},"returnParameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1639,"src":"914:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1628,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:8"},"scope":1640,"src":"829:155:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1641,"src":"726:260:8","usedErrors":[]}],"src":"99:888:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1652]},"id":1653,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1642,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1643,"nodeType":"StructuredDocumentation","src":"125:279:9","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1652,"linearizedBaseContracts":[1652],"name":"IERC165","nameLocation":"415:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"429:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1651,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:9","nodeType":"FunctionDefinition","parameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:9","nodeType":"VariableDeclaration","scope":1651,"src":"801:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1645,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:9"},"returnParameters":{"id":1650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1651,"src":"844:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1648,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:9"},"scope":1652,"src":"774:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1653,"src":"405:447:9","usedErrors":[]}],"src":"100:753:9"},"id":9},"base64-sol/base64.sol":{"ast":{"absolutePath":"base64-sol/base64.sol","exportedSymbols":{"Base64":[1767]},"id":1768,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1654,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"33:24:10"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"59:127:10","text":"@title Base64\n @author Brecht Devos - <brecht@loopring.org>\n @notice Provides functions for encoding/decoding base64"},"fullyImplemented":true,"id":1767,"linearizedBaseContracts":[1767],"name":"Base64","nameLocation":"194:6:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1658,"mutability":"constant","name":"TABLE_ENCODE","nameLocation":"232:12:10","nodeType":"VariableDeclaration","scope":1767,"src":"207:106:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1656,"name":"string","nodeType":"ElementaryTypeName","src":"207:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"247:66:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},"visibility":"internal"},{"constant":true,"id":1661,"mutability":"constant","name":"TABLE_DECODE","nameLocation":"344:12:10","nodeType":"VariableDeclaration","scope":1767,"src":"319:451:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1659,"name":"bytes","nodeType":"ElementaryTypeName","src":"319:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"hexValue":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e0000003f3435363738393a3b3c3d00000000000000000102030405060708090a0b0c0d0e0f101112131415161718190000000000001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"359:411:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbed483d4f9f83dd52b06773fd58dd8723113252a85374752ef109e22dfa50f9","typeString":"literal_string hex\"000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e0000003f3435363738393a3b3c3d00000000000000000102030405060708090a0b0c0d0e0f101112131415161718190000000000001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\""},"value":"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0000\u0000\u0000?456789:;<=\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123\u0000\u0000\u0000\u0000\u0000"},"visibility":"internal"},{"body":{"id":1704,"nodeType":"Block","src":"850:1788:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1668,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"864:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"864:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"879:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"864:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1674,"nodeType":"IfStatement","src":"860:31:10","trueBody":{"expression":{"hexValue":"","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"889:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1667,"id":1673,"nodeType":"Return","src":"882:9:10"}},{"assignments":[1676],"declarations":[{"constant":false,"id":1676,"mutability":"mutable","name":"table","nameLocation":"954:5:10","nodeType":"VariableDeclaration","scope":1704,"src":"940:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1675,"name":"string","nodeType":"ElementaryTypeName","src":"940:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1678,"initialValue":{"id":1677,"name":"TABLE_ENCODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"962:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"940:34:10"},{"assignments":[1680],"declarations":[{"constant":false,"id":1680,"mutability":"mutable","name":"encodedLen","nameLocation":"1031:10:10","nodeType":"VariableDeclaration","scope":1704,"src":"1023:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1691,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1682,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"1050:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1050:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1064:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1050:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1049:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1069:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1049:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1689,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1048:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1044:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1023:48:10"},{"assignments":[1693],"declarations":[{"constant":false,"id":1693,"mutability":"mutable","name":"result","nameLocation":"1165:6:10","nodeType":"VariableDeclaration","scope":1704,"src":"1151:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1692,"name":"string","nodeType":"ElementaryTypeName","src":"1151:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1700,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1696,"name":"encodedLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"1185:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1198:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1185:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1174:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1694,"name":"string","nodeType":"ElementaryTypeName","src":"1178:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1174:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1151:50:10"},{"AST":{"nodeType":"YulBlock","src":"1221:1387:10","statements":[{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1286:6:10"},{"name":"encodedLen","nodeType":"YulIdentifier","src":"1294:10:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1279:6:10"},"nodeType":"YulFunctionCall","src":"1279:26:10"},"nodeType":"YulExpressionStatement","src":"1279:26:10"},{"nodeType":"YulVariableDeclaration","src":"1359:29:10","value":{"arguments":[{"name":"table","nodeType":"YulIdentifier","src":"1379:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"1386:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1375:3:10"},"nodeType":"YulFunctionCall","src":"1375:13:10"},"variables":[{"name":"tablePtr","nodeType":"YulTypedName","src":"1363:8:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1427:19:10","value":{"name":"data","nodeType":"YulIdentifier","src":"1442:4:10"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"1431:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1459:39:10","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1477:7:10"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1492:4:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1486:5:10"},"nodeType":"YulFunctionCall","src":"1486:11:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:10"},"nodeType":"YulFunctionCall","src":"1473:25:10"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"1463:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1556:32:10","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1577:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1585:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1573:3:10"},"nodeType":"YulFunctionCall","src":"1573:15:10"},"variables":[{"name":"resultPtr","nodeType":"YulTypedName","src":"1560:9:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"1697:697:10","statements":[{"nodeType":"YulAssignment","src":"1747:26:10","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1762:7:10"},{"kind":"number","nodeType":"YulLiteral","src":"1771:1:10","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1758:3:10"},"nodeType":"YulFunctionCall","src":"1758:15:10"},"variableNames":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1747:7:10"}]},{"nodeType":"YulVariableDeclaration","src":"1790:27:10","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1809:7:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1803:5:10"},"nodeType":"YulFunctionCall","src":"1803:14:10"},"variables":[{"name":"input","nodeType":"YulTypedName","src":"1794:5:10","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1881:9:10"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"1902:8:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1920:2:10","type":"","value":"18"},{"name":"input","nodeType":"YulIdentifier","src":"1924:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1916:3:10"},"nodeType":"YulFunctionCall","src":"1916:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"1932:4:10","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1912:3:10"},"nodeType":"YulFunctionCall","src":"1912:25:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1898:3:10"},"nodeType":"YulFunctionCall","src":"1898:40:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1892:5:10"},"nodeType":"YulFunctionCall","src":"1892:47:10"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1873:7:10"},"nodeType":"YulFunctionCall","src":"1873:67:10"},"nodeType":"YulExpressionStatement","src":"1873:67:10"},{"nodeType":"YulAssignment","src":"1957:30:10","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1974:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1985:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1970:3:10"},"nodeType":"YulFunctionCall","src":"1970:17:10"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1957:9:10"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2012:9:10"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2033:8:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2051:2:10","type":"","value":"12"},{"name":"input","nodeType":"YulIdentifier","src":"2055:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2047:3:10"},"nodeType":"YulFunctionCall","src":"2047:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"2063:4:10","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2043:3:10"},"nodeType":"YulFunctionCall","src":"2043:25:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2029:3:10"},"nodeType":"YulFunctionCall","src":"2029:40:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2023:5:10"},"nodeType":"YulFunctionCall","src":"2023:47:10"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2004:7:10"},"nodeType":"YulFunctionCall","src":"2004:67:10"},"nodeType":"YulExpressionStatement","src":"2004:67:10"},{"nodeType":"YulAssignment","src":"2088:30:10","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2105:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2116:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2101:3:10"},"nodeType":"YulFunctionCall","src":"2101:17:10"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2088:9:10"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2143:9:10"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2164:8:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2183:1:10","type":"","value":"6"},{"name":"input","nodeType":"YulIdentifier","src":"2186:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2178:3:10"},"nodeType":"YulFunctionCall","src":"2178:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"2194:4:10","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2174:3:10"},"nodeType":"YulFunctionCall","src":"2174:25:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2160:3:10"},"nodeType":"YulFunctionCall","src":"2160:40:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2154:5:10"},"nodeType":"YulFunctionCall","src":"2154:47:10"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2135:7:10"},"nodeType":"YulFunctionCall","src":"2135:67:10"},"nodeType":"YulExpressionStatement","src":"2135:67:10"},{"nodeType":"YulAssignment","src":"2219:30:10","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2236:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2247:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2232:3:10"},"nodeType":"YulFunctionCall","src":"2232:17:10"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2219:9:10"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2274:9:10"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2295:8:10"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"2317:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"2325:4:10","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2305:3:10"},"nodeType":"YulFunctionCall","src":"2305:25:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2291:3:10"},"nodeType":"YulFunctionCall","src":"2291:40:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2285:5:10"},"nodeType":"YulFunctionCall","src":"2285:47:10"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2266:7:10"},"nodeType":"YulFunctionCall","src":"2266:67:10"},"nodeType":"YulExpressionStatement","src":"2266:67:10"},{"nodeType":"YulAssignment","src":"2350:30:10","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2367:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2363:3:10"},"nodeType":"YulFunctionCall","src":"2363:17:10"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2350:9:10"}]}]},"condition":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1665:7:10"},{"name":"endPtr","nodeType":"YulIdentifier","src":"1674:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1662:2:10"},"nodeType":"YulFunctionCall","src":"1662:19:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1682:2:10","statements":[]},"pre":{"nodeType":"YulBlock","src":"1659:2:10","statements":[]},"src":"1655:739:10"},{"cases":[{"body":{"nodeType":"YulBlock","src":"2486:47:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2499:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2510:1:10","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2495:3:10"},"nodeType":"YulFunctionCall","src":"2495:17:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2518:3:10","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"2523:6:10","type":"","value":"0x3d3d"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2514:3:10"},"nodeType":"YulFunctionCall","src":"2514:16:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2488:6:10"},"nodeType":"YulFunctionCall","src":"2488:43:10"},"nodeType":"YulExpressionStatement","src":"2488:43:10"}]},"nodeType":"YulCase","src":"2479:54:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2484:1:10","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2553:45:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2566:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2577:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2562:3:10"},"nodeType":"YulFunctionCall","src":"2562:17:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2585:3:10","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"2590:4:10","type":"","value":"0x3d"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2581:3:10"},"nodeType":"YulFunctionCall","src":"2581:14:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2555:6:10"},"nodeType":"YulFunctionCall","src":"2555:41:10"},"nodeType":"YulExpressionStatement","src":"2555:41:10"}]},"nodeType":"YulCase","src":"2546:52:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2551:1:10","type":"","value":"2"}}],"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2457:4:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2451:5:10"},"nodeType":"YulFunctionCall","src":"2451:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"2464:1:10","type":"","value":"3"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"2447:3:10"},"nodeType":"YulFunctionCall","src":"2447:19:10"},"nodeType":"YulSwitch","src":"2440:158:10"}]},"evmVersion":"london","externalReferences":[{"declaration":1663,"isOffset":false,"isSlot":false,"src":"1442:4:10","valueSize":1},{"declaration":1663,"isOffset":false,"isSlot":false,"src":"1492:4:10","valueSize":1},{"declaration":1663,"isOffset":false,"isSlot":false,"src":"2457:4:10","valueSize":1},{"declaration":1680,"isOffset":false,"isSlot":false,"src":"1294:10:10","valueSize":1},{"declaration":1693,"isOffset":false,"isSlot":false,"src":"1286:6:10","valueSize":1},{"declaration":1693,"isOffset":false,"isSlot":false,"src":"1577:6:10","valueSize":1},{"declaration":1676,"isOffset":false,"isSlot":false,"src":"1379:5:10","valueSize":1}],"id":1701,"nodeType":"InlineAssembly","src":"1212:1396:10"},{"expression":{"id":1702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"2625:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1667,"id":1703,"nodeType":"Return","src":"2618:13:10"}]},"id":1705,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"786:6:10","nodeType":"FunctionDefinition","parameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"data","nameLocation":"806:4:10","nodeType":"VariableDeclaration","scope":1705,"src":"793:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1662,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:19:10"},"returnParameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1705,"src":"835:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1665,"name":"string","nodeType":"ElementaryTypeName","src":"835:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"834:15:10"},"scope":1767,"src":"777:1861:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1765,"nodeType":"Block","src":"2718:2104:10","statements":[{"assignments":[1713],"declarations":[{"constant":false,"id":1713,"mutability":"mutable","name":"data","nameLocation":"2741:4:10","nodeType":"VariableDeclaration","scope":1765,"src":"2728:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1712,"name":"bytes","nodeType":"ElementaryTypeName","src":"2728:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1718,"initialValue":{"arguments":[{"id":1716,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"2754:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2748:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1714,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:10","typeDescriptions":{}}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2748:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2728:32:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1719,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"2775:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2775:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2790:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2775:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1728,"nodeType":"IfStatement","src":"2771:41:10","trueBody":{"expression":{"arguments":[{"hexValue":"30","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2800:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1723,"name":"bytes","nodeType":"ElementaryTypeName","src":"2804:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2800:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1711,"id":1727,"nodeType":"Return","src":"2793:19:10"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1730,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"2830:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2830:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"34","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2844:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2830:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2849:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2830:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420626173653634206465636f64657220696e707574","id":1736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2852:30:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b899645e29043a8d30000fb8ed0252b5c4f6f5f09672aefa374ee368d324bb89","typeString":"literal_string \"invalid base64 decoder input\""},"value":"invalid base64 decoder input"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b899645e29043a8d30000fb8ed0252b5c4f6f5f09672aefa374ee368d324bb89","typeString":"literal_string \"invalid base64 decoder input\""}],"id":1729,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2822:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2822:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1738,"nodeType":"ExpressionStatement","src":"2822:61:10"},{"assignments":[1740],"declarations":[{"constant":false,"id":1740,"mutability":"mutable","name":"table","nameLocation":"2945:5:10","nodeType":"VariableDeclaration","scope":1765,"src":"2932:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1739,"name":"bytes","nodeType":"ElementaryTypeName","src":"2932:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1742,"initialValue":{"id":1741,"name":"TABLE_DECODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"2953:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2932:33:10"},{"assignments":[1744],"declarations":[{"constant":false,"id":1744,"mutability":"mutable","name":"decodedLen","nameLocation":"3032:10:10","nodeType":"VariableDeclaration","scope":1765,"src":"3024:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"3024:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1752,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1745,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"3046:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3046:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"34","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3060:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3046:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3045:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3065:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"3045:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3024:42:10"},{"assignments":[1754],"declarations":[{"constant":false,"id":1754,"mutability":"mutable","name":"result","nameLocation":"3159:6:10","nodeType":"VariableDeclaration","scope":1765,"src":"3146:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1753,"name":"bytes","nodeType":"ElementaryTypeName","src":"3146:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1761,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1757,"name":"decodedLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"3178:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3191:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3178:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3168:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1755,"name":"bytes","nodeType":"ElementaryTypeName","src":"3172:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3168:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3146:48:10"},{"AST":{"nodeType":"YulBlock","src":"3214:1578:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3260:46:10","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3287:4:10"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3299:4:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3293:5:10"},"nodeType":"YulFunctionCall","src":"3293:11:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3283:3:10"},"nodeType":"YulFunctionCall","src":"3283:22:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3277:5:10"},"nodeType":"YulFunctionCall","src":"3277:29:10"},"variables":[{"name":"lastBytes","nodeType":"YulTypedName","src":"3264:9:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"3353:191:10","statements":[{"nodeType":"YulAssignment","src":"3371:32:10","value":{"arguments":[{"name":"decodedLen","nodeType":"YulIdentifier","src":"3389:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"3401:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3385:3:10"},"nodeType":"YulFunctionCall","src":"3385:18:10"},"variableNames":[{"name":"decodedLen","nodeType":"YulIdentifier","src":"3371:10:10"}]},{"body":{"nodeType":"YulBlock","src":"3458:72:10","statements":[{"nodeType":"YulAssignment","src":"3480:32:10","value":{"arguments":[{"name":"decodedLen","nodeType":"YulIdentifier","src":"3498:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"3510:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3494:3:10"},"nodeType":"YulFunctionCall","src":"3494:18:10"},"variableNames":[{"name":"decodedLen","nodeType":"YulIdentifier","src":"3480:10:10"}]}]},"condition":{"arguments":[{"arguments":[{"name":"lastBytes","nodeType":"YulIdentifier","src":"3430:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3441:6:10","type":"","value":"0xFFFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3426:3:10"},"nodeType":"YulFunctionCall","src":"3426:22:10"},{"kind":"number","nodeType":"YulLiteral","src":"3450:6:10","type":"","value":"0x3d3d"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3423:2:10"},"nodeType":"YulFunctionCall","src":"3423:34:10"},"nodeType":"YulIf","src":"3420:110:10"}]},"condition":{"arguments":[{"arguments":[{"name":"lastBytes","nodeType":"YulIdentifier","src":"3329:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3340:4:10","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3325:3:10"},"nodeType":"YulFunctionCall","src":"3325:20:10"},{"kind":"number","nodeType":"YulLiteral","src":"3347:4:10","type":"","value":"0x3d"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3322:2:10"},"nodeType":"YulFunctionCall","src":"3322:30:10"},"nodeType":"YulIf","src":"3319:225:10"},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"3609:6:10"},{"name":"decodedLen","nodeType":"YulIdentifier","src":"3617:10:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3602:6:10"},"nodeType":"YulFunctionCall","src":"3602:26:10"},"nodeType":"YulExpressionStatement","src":"3602:26:10"},{"nodeType":"YulVariableDeclaration","src":"3682:29:10","value":{"arguments":[{"name":"table","nodeType":"YulIdentifier","src":"3702:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"3709:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3698:3:10"},"nodeType":"YulFunctionCall","src":"3698:13:10"},"variables":[{"name":"tablePtr","nodeType":"YulTypedName","src":"3686:8:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3750:19:10","value":{"name":"data","nodeType":"YulIdentifier","src":"3765:4:10"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"3754:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3782:39:10","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"3800:7:10"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3815:4:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3809:5:10"},"nodeType":"YulFunctionCall","src":"3809:11:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3796:3:10"},"nodeType":"YulFunctionCall","src":"3796:25:10"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"3786:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3879:32:10","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"3900:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"3908:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3896:3:10"},"nodeType":"YulFunctionCall","src":"3896:15:10"},"variables":[{"name":"resultPtr","nodeType":"YulTypedName","src":"3883:9:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4025:757:10","statements":[{"nodeType":"YulAssignment","src":"4078:26:10","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"4093:7:10"},{"kind":"number","nodeType":"YulLiteral","src":"4102:1:10","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4089:3:10"},"nodeType":"YulFunctionCall","src":"4089:15:10"},"variableNames":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"4078:7:10"}]},{"nodeType":"YulVariableDeclaration","src":"4120:27:10","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"4139:7:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4133:5:10"},"nodeType":"YulFunctionCall","src":"4133:14:10"},"variables":[{"name":"input","nodeType":"YulTypedName","src":"4124:5:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4196:473:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4266:2:10","type":"","value":"18"},{"arguments":[{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4284:8:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4302:2:10","type":"","value":"24"},{"name":"input","nodeType":"YulIdentifier","src":"4306:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4298:3:10"},"nodeType":"YulFunctionCall","src":"4298:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"4314:4:10","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4294:3:10"},"nodeType":"YulFunctionCall","src":"4294:25:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4280:3:10"},"nodeType":"YulFunctionCall","src":"4280:40:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4274:5:10"},"nodeType":"YulFunctionCall","src":"4274:47:10"},{"kind":"number","nodeType":"YulLiteral","src":"4323:4:10","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4270:3:10"},"nodeType":"YulFunctionCall","src":"4270:58:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4262:3:10"},"nodeType":"YulFunctionCall","src":"4262:67:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4358:2:10","type":"","value":"12"},{"arguments":[{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4376:8:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4394:2:10","type":"","value":"16"},{"name":"input","nodeType":"YulIdentifier","src":"4398:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4390:3:10"},"nodeType":"YulFunctionCall","src":"4390:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"4406:4:10","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4386:3:10"},"nodeType":"YulFunctionCall","src":"4386:25:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4372:3:10"},"nodeType":"YulFunctionCall","src":"4372:40:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4366:5:10"},"nodeType":"YulFunctionCall","src":"4366:47:10"},{"kind":"number","nodeType":"YulLiteral","src":"4415:4:10","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4362:3:10"},"nodeType":"YulFunctionCall","src":"4362:58:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4354:3:10"},"nodeType":"YulFunctionCall","src":"4354:67:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4234:3:10"},"nodeType":"YulFunctionCall","src":"4234:188:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4476:1:10","type":"","value":"6"},{"arguments":[{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4493:8:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4512:1:10","type":"","value":"8"},{"name":"input","nodeType":"YulIdentifier","src":"4515:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4507:3:10"},"nodeType":"YulFunctionCall","src":"4507:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"4523:4:10","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4503:3:10"},"nodeType":"YulFunctionCall","src":"4503:25:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4489:3:10"},"nodeType":"YulFunctionCall","src":"4489:40:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4483:5:10"},"nodeType":"YulFunctionCall","src":"4483:47:10"},{"kind":"number","nodeType":"YulLiteral","src":"4532:4:10","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4479:3:10"},"nodeType":"YulFunctionCall","src":"4479:58:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4471:3:10"},"nodeType":"YulFunctionCall","src":"4471:67:10"},{"arguments":[{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4585:8:10"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"4607:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4615:4:10","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4595:3:10"},"nodeType":"YulFunctionCall","src":"4595:25:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4581:3:10"},"nodeType":"YulFunctionCall","src":"4581:40:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4575:5:10"},"nodeType":"YulFunctionCall","src":"4575:47:10"},{"kind":"number","nodeType":"YulLiteral","src":"4624:4:10","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4571:3:10"},"nodeType":"YulFunctionCall","src":"4571:58:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4443:3:10"},"nodeType":"YulFunctionCall","src":"4443:208:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4210:3:10"},"nodeType":"YulFunctionCall","src":"4210:459:10"},"variables":[{"name":"output","nodeType":"YulTypedName","src":"4200:6:10","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4693:9:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4708:3:10","type":"","value":"232"},{"name":"output","nodeType":"YulIdentifier","src":"4713:6:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4704:3:10"},"nodeType":"YulFunctionCall","src":"4704:16:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4686:6:10"},"nodeType":"YulFunctionCall","src":"4686:35:10"},"nodeType":"YulExpressionStatement","src":"4686:35:10"},{"nodeType":"YulAssignment","src":"4738:30:10","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4755:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4766:1:10","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4751:3:10"},"nodeType":"YulFunctionCall","src":"4751:17:10"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4738:9:10"}]}]},"condition":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"3993:7:10"},{"name":"endPtr","nodeType":"YulIdentifier","src":"4002:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3990:2:10"},"nodeType":"YulFunctionCall","src":"3990:19:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4010:2:10","statements":[]},"pre":{"nodeType":"YulBlock","src":"3987:2:10","statements":[]},"src":"3983:799:10"}]},"evmVersion":"london","externalReferences":[{"declaration":1713,"isOffset":false,"isSlot":false,"src":"3287:4:10","valueSize":1},{"declaration":1713,"isOffset":false,"isSlot":false,"src":"3299:4:10","valueSize":1},{"declaration":1713,"isOffset":false,"isSlot":false,"src":"3765:4:10","valueSize":1},{"declaration":1713,"isOffset":false,"isSlot":false,"src":"3815:4:10","valueSize":1},{"declaration":1744,"isOffset":false,"isSlot":false,"src":"3371:10:10","valueSize":1},{"declaration":1744,"isOffset":false,"isSlot":false,"src":"3389:10:10","valueSize":1},{"declaration":1744,"isOffset":false,"isSlot":false,"src":"3480:10:10","valueSize":1},{"declaration":1744,"isOffset":false,"isSlot":false,"src":"3498:10:10","valueSize":1},{"declaration":1744,"isOffset":false,"isSlot":false,"src":"3617:10:10","valueSize":1},{"declaration":1754,"isOffset":false,"isSlot":false,"src":"3609:6:10","valueSize":1},{"declaration":1754,"isOffset":false,"isSlot":false,"src":"3900:6:10","valueSize":1},{"declaration":1740,"isOffset":false,"isSlot":false,"src":"3702:5:10","valueSize":1}],"id":1762,"nodeType":"InlineAssembly","src":"3205:1587:10"},{"expression":{"id":1763,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"4809:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1711,"id":1764,"nodeType":"Return","src":"4802:13:10"}]},"id":1766,"implemented":true,"kind":"function","modifiers":[],"name":"decode","nameLocation":"2653:6:10","nodeType":"FunctionDefinition","parameters":{"id":1708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"_data","nameLocation":"2674:5:10","nodeType":"VariableDeclaration","scope":1766,"src":"2660:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1706,"name":"string","nodeType":"ElementaryTypeName","src":"2660:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2659:21:10"},"returnParameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1766,"src":"2704:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1709,"name":"bytes","nodeType":"ElementaryTypeName","src":"2704:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2703:14:10"},"scope":1767,"src":"2644:2178:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1768,"src":"186:4638:10","usedErrors":[]}],"src":"33:4792:10"},"id":10},"contracts/DynamicSvgNft.sol":{"ast":{"absolutePath":"contracts/DynamicSvgNft.sol","exportedSymbols":{"Address":[1368],"AggregatorV3Interface":[45],"Base64":[1767],"Context":[1390],"DynamicSvgNft":[2003],"ERC165":[1640],"ERC721":[912],"ERC721Metadata__URI_QueryFor_NonExistentToken":[1774],"IERC165":[1652],"IERC721":[1028],"IERC721Metadata":[1073],"IERC721Receiver":[1046],"Strings":[1616]},"id":2004,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1769,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":1770,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2004,"sourceUnit":913,"src":"56:57:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"base64-sol/base64.sol","file":"base64-sol/base64.sol","id":1771,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2004,"sourceUnit":1768,"src":"114:31:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":1772,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2004,"sourceUnit":46,"src":"146:76:11","symbolAliases":[],"unitAlias":""},{"id":1774,"name":"ERC721Metadata__URI_QueryFor_NonExistentToken","nameLocation":"229:45:11","nodeType":"ErrorDefinition","parameters":{"id":1773,"nodeType":"ParameterList","parameters":[],"src":"274:2:11"},"src":"223:54:11"},{"abstract":false,"baseContracts":[{"baseName":{"id":1775,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":912,"src":"305:6:11"},"id":1776,"nodeType":"InheritanceSpecifier","src":"305:6:11"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2003,"linearizedBaseContracts":[2003,912,1073,1028,1640,1652,1390],"name":"DynamicSvgNft","nameLocation":"288:13:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1778,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"334:14:11","nodeType":"VariableDeclaration","scope":2003,"src":"318:30:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"318:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1780,"mutability":"mutable","name":"i_lowImageURI","nameLocation":"369:13:11","nodeType":"VariableDeclaration","scope":2003,"src":"354:28:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1779,"name":"string","nodeType":"ElementaryTypeName","src":"354:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1782,"mutability":"mutable","name":"i_highImageURI","nameLocation":"403:14:11","nodeType":"VariableDeclaration","scope":2003,"src":"388:29:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1781,"name":"string","nodeType":"ElementaryTypeName","src":"388:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":true,"id":1785,"mutability":"constant","name":"base64EncodedSvgPrefix","nameLocation":"447:22:11","nodeType":"VariableDeclaration","scope":2003,"src":"423:85:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1783,"name":"string","nodeType":"ElementaryTypeName","src":"423:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"646174613a696d6167652f7376672b786d6c3b6261736536342c","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"480:28:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f90ae014c41cb48231e1f02c314087ff9c479133697911d25c5fe231e237dd14","typeString":"literal_string \"data:image/svg+xml;base64,\""},"value":"data:image/svg+xml;base64,"},"visibility":"private"},{"constant":false,"id":1788,"mutability":"immutable","name":"i_priceFeed","nameLocation":"556:11:11","nodeType":"VariableDeclaration","scope":2003,"src":"515:52:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":1787,"nodeType":"UserDefinedTypeName","pathNode":{"id":1786,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"515:21:11"},"referencedDeclaration":45,"src":"515:21:11","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"},{"constant":false,"functionSelector":"e425aded","id":1792,"mutability":"mutable","name":"s_tokenIdToHighValue","nameLocation":"607:20:11","nodeType":"VariableDeclaration","scope":2003,"src":"573:54:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"},"typeName":{"id":1791,"keyType":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"581:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"573:26:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"},"valueType":{"id":1790,"name":"int256","nodeType":"ElementaryTypeName","src":"592:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}},"visibility":"public"},{"anonymous":false,"id":1798,"name":"CreatedNFT","nameLocation":"640:10:11","nodeType":"EventDefinition","parameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"667:7:11","nodeType":"VariableDeclaration","scope":1798,"src":"651:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"651:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1796,"indexed":false,"mutability":"mutable","name":"highValue","nameLocation":"683:9:11","nodeType":"VariableDeclaration","scope":1798,"src":"676:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1795,"name":"int256","nodeType":"ElementaryTypeName","src":"676:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"650:43:11"},"src":"634:60:11"},{"body":{"id":1833,"nodeType":"Block","src":"844:194:11","statements":[{"expression":{"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1811,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"854:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"871:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"854:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1814,"nodeType":"ExpressionStatement","src":"854:18:11"},{"expression":{"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1815,"name":"i_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"882:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1817,"name":"priceFeedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"918:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1816,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"896:21:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$45_$","typeString":"type(contract AggregatorV3Interface)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"896:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"src":"882:53:11","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":1820,"nodeType":"ExpressionStatement","src":"882:53:11"},{"expression":{"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1821,"name":"i_lowImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"945:13:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1823,"name":"lowSvg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"975:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1822,"name":"svgToImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"961:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"961:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"945:37:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1826,"nodeType":"ExpressionStatement","src":"945:37:11"},{"expression":{"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1827,"name":"i_highImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"992:14:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1829,"name":"highSvg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"1023:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1828,"name":"svgToImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"1009:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1009:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"992:39:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1832,"nodeType":"ExpressionStatement","src":"992:39:11"}]},"id":1834,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"44796e616d69635376674e6674","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"820:15:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d9bd455d25f1ec5132126832e824d9b8c736ba4feb463eb5cb18a9cd011f6a1","typeString":"literal_string \"DynamicSvgNft\""},"value":"DynamicSvgNft"},{"hexValue":"44534e","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"837:5:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_275f2341ff18e41e04cc32c20974ed0046a9cb9bd1a1fcf968aafc5924b80a4d","typeString":"literal_string \"DSN\""},"value":"DSN"}],"id":1809,"kind":"baseConstructorSpecifier","modifierName":{"id":1806,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":912,"src":"813:6:11"},"nodeType":"ModifierInvocation","src":"813:30:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"priceFeedAddress","nameLocation":"729:16:11","nodeType":"VariableDeclaration","scope":1834,"src":"721:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"721:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"lowSvg","nameLocation":"769:6:11","nodeType":"VariableDeclaration","scope":1834,"src":"755:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1801,"name":"string","nodeType":"ElementaryTypeName","src":"755:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1804,"mutability":"mutable","name":"highSvg","nameLocation":"799:7:11","nodeType":"VariableDeclaration","scope":1834,"src":"785:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1803,"name":"string","nodeType":"ElementaryTypeName","src":"785:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"711:101:11"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[],"src":"844:0:11"},"scope":2003,"src":"700:338:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1862,"nodeType":"Block","src":"1086:209:11","statements":[{"expression":{"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1839,"name":"s_tokenIdToHighValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"1096:20:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"}},"id":1841,"indexExpression":{"id":1840,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"1117:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1096:36:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1842,"name":"highValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"1135:9:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1096:48:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1844,"nodeType":"ExpressionStatement","src":"1096:48:11"},{"expression":{"arguments":[{"expression":{"id":1846,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1164:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1164:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1848,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"1176:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1845,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[527,556],"referencedDeclaration":527,"src":"1154:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1154:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1850,"nodeType":"ExpressionStatement","src":"1154:37:11"},{"expression":{"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1851,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"1201:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1852,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"1218:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1235:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1218:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1201:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1856,"nodeType":"ExpressionStatement","src":"1201:35:11"},{"eventCall":{"arguments":[{"id":1858,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"1262:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1859,"name":"highValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"1278:9:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1857,"name":"CreatedNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"1251:10:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_int256_$returns$__$","typeString":"function (uint256,int256)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1251:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1861,"nodeType":"EmitStatement","src":"1246:42:11"}]},"functionSelector":"1e930812","id":1863,"implemented":true,"kind":"function","modifiers":[],"name":"mintNft","nameLocation":"1053:7:11","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"highValue","nameLocation":"1068:9:11","nodeType":"VariableDeclaration","scope":1863,"src":"1061:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1835,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:18:11"},"returnParameters":{"id":1838,"nodeType":"ParameterList","parameters":[],"src":"1086:0:11"},"scope":2003,"src":"1044:251:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1895,"nodeType":"Block","src":"1407:218:11","statements":[{"assignments":[1871],"declarations":[{"constant":false,"id":1871,"mutability":"mutable","name":"svgBase64Encoded","nameLocation":"1431:16:11","nodeType":"VariableDeclaration","scope":1895,"src":"1417:30:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1870,"name":"string","nodeType":"ElementaryTypeName","src":"1417:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1885,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1880,"name":"svg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"1507:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1878,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1490:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1490:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1490:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1483:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1876,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:11","typeDescriptions":{}}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1483:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1477:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1874,"name":"bytes","nodeType":"ElementaryTypeName","src":"1477:5:11","typeDescriptions":{}}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1477:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1872,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"1450:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$1767_$","typeString":"type(library Base64)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":1705,"src":"1450:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1450:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1417:106:11"},{"expression":{"arguments":[{"arguments":[{"id":1890,"name":"base64EncodedSvgPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"1576:22:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1891,"name":"svgBase64Encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"1600:16:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1888,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1559:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1559:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1559:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1552:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1886,"name":"string","nodeType":"ElementaryTypeName","src":"1552:6:11","typeDescriptions":{}}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1552:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1869,"id":1894,"nodeType":"Return","src":"1533:85:11"}]},"functionSelector":"30d871c6","id":1896,"implemented":true,"kind":"function","modifiers":[],"name":"svgToImageURI","nameLocation":"1310:13:11","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"svg","nameLocation":"1338:3:11","nodeType":"VariableDeclaration","scope":1896,"src":"1324:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1864,"name":"string","nodeType":"ElementaryTypeName","src":"1324:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1323:19:11"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1896,"src":"1388:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1867,"name":"string","nodeType":"ElementaryTypeName","src":"1388:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1387:15:11"},"scope":2003,"src":"1301:324:11","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[250],"body":{"id":1959,"nodeType":"Block","src":"1747:1021:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":1906,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"1773:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1905,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"1765:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1765:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55524920517565727920666f72206e6f6e206578697374656e7420746f6b656e","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1783:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf","typeString":"literal_string \"URI Query for non existent token\""},"value":"URI Query for non existent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf","typeString":"literal_string \"URI Query for non existent token\""}],"id":1904,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1757:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1757:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1910,"nodeType":"ExpressionStatement","src":"1757:61:11"},{"assignments":[null,1912,null,null,null],"declarations":[null,{"constant":false,"id":1912,"mutability":"mutable","name":"price","nameLocation":"1839:5:11","nodeType":"VariableDeclaration","scope":1959,"src":"1832:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1911,"name":"int256","nodeType":"ElementaryTypeName","src":"1832:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":1916,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1913,"name":"i_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"1854:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1854:27:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1854:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"1829:54:11"},{"assignments":[1918],"declarations":[{"constant":false,"id":1918,"mutability":"mutable","name":"imageURI","nameLocation":"1907:8:11","nodeType":"VariableDeclaration","scope":1959,"src":"1893:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1917,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1920,"initialValue":{"id":1919,"name":"i_lowImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"1918:13:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1893:38:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1921,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"1945:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"baseExpression":{"id":1922,"name":"s_tokenIdToHighValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"1954:20:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"}},"id":1924,"indexExpression":{"id":1923,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"1975:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1954:29:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1945:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1931,"nodeType":"IfStatement","src":"1941:94:11","trueBody":{"id":1930,"nodeType":"Block","src":"1985:50:11","statements":[{"expression":{"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1926,"name":"imageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"1999:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1927,"name":"i_highImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"2010:14:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"1999:25:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1929,"nodeType":"ExpressionStatement","src":"1999:25:11"}]}},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1936,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[1969],"referencedDeclaration":1969,"src":"2125:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2125:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"arguments":[{"components":[{"hexValue":"7b226e616d653a22","id":1944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2282:10:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d","typeString":"literal_string \"{\"name:\"\""},"value":"{\"name:\""}],"id":1945,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2281:12:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d","typeString":"literal_string \"{\"name:\"\""}},{"arguments":[],"expression":{"argumentTypes":[],"id":1946,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"2327:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2327:6:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"22","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2367:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},{"hexValue":"226465736372697074696f6e223a22416e204e46542074686174206368616e676573206261736564206f6e20636861696e6c696e6b2070726963652046656564212122","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2404:69:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735","typeString":"literal_string \"\"description\":\"An NFT that changes based on chainlink price Feed!!\"\""},"value":"\"description\":\"An NFT that changes based on chainlink price Feed!!\""},{"hexValue":"2261747472696275746573223a5b7b2274726169745f74797065223a2022636f6f6c6e657373222c3a76616c75653a3130307d5d2c22696d616765223a22","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2507:64:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24","typeString":"literal_string \"\"attributes\":[{\"trait_type\": \"coolness\",:value:100}],\"image\":\"\""},"value":"\"attributes\":[{\"trait_type\": \"coolness\",:value:100}],\"image\":\""},{"id":1951,"name":"imageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"2605:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2647:4:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","typeString":"literal_string \"\"}\""},"value":"\"}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d","typeString":"literal_string \"{\"name:\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},{"typeIdentifier":"t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735","typeString":"literal_string \"\"description\":\"An NFT that changes based on chainlink price Feed!!\"\""},{"typeIdentifier":"t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24","typeString":"literal_string \"\"attributes\":[{\"trait_type\": \"coolness\",:value:100}],\"image\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","typeString":"literal_string \"\"}\""}],"expression":{"id":1942,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2231:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"2231:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2231:450:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2196:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1940,"name":"bytes","nodeType":"ElementaryTypeName","src":"2196:5:11","typeDescriptions":{}}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2196:511:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1938,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2157:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$1767_$","typeString":"type(library Base64)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":1705,"src":"2157:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2157:572:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1934,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2087:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"2087:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2087:660:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2063:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1932,"name":"string","nodeType":"ElementaryTypeName","src":"2063:6:11","typeDescriptions":{}}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2063:698:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1903,"id":1958,"nodeType":"Return","src":"2044:717:11"}]},"functionSelector":"c87b56dd","id":1960,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1640:8:11","nodeType":"FunctionDefinition","overrides":{"id":1900,"nodeType":"OverrideSpecifier","overrides":[],"src":"1702:8:11"},"parameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"tokenId","nameLocation":"1657:7:11","nodeType":"VariableDeclaration","scope":1960,"src":"1649:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"1649:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1648:17:11"},"returnParameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1960,"src":"1728:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1901,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:15:11"},"scope":2003,"src":"1631:1137:11","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[259],"body":{"id":1968,"nodeType":"Block","src":"2841:55:11","statements":[{"expression":{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2858:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},"functionReturnParameters":1965,"id":1967,"nodeType":"Return","src":"2851:38:11"}]},"id":1969,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"2783:8:11","nodeType":"FunctionDefinition","overrides":{"id":1962,"nodeType":"OverrideSpecifier","overrides":[],"src":"2808:8:11"},"parameters":{"id":1961,"nodeType":"ParameterList","parameters":[],"src":"2791:2:11"},"returnParameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1969,"src":"2826:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1963,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2825:15:11"},"scope":2003,"src":"2774:122:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1976,"nodeType":"Block","src":"2959:37:11","statements":[{"expression":{"id":1974,"name":"i_lowImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"2976:13:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1973,"id":1975,"nodeType":"Return","src":"2969:20:11"}]},"functionSelector":"ed28a122","id":1977,"implemented":true,"kind":"function","modifiers":[],"name":"getLowSVG","nameLocation":"2911:9:11","nodeType":"FunctionDefinition","parameters":{"id":1970,"nodeType":"ParameterList","parameters":[],"src":"2920:2:11"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1977,"src":"2944:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1971,"name":"string","nodeType":"ElementaryTypeName","src":"2944:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2943:15:11"},"scope":2003,"src":"2902:94:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1984,"nodeType":"Block","src":"3060:38:11","statements":[{"expression":{"id":1982,"name":"i_highImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"3077:14:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1981,"id":1983,"nodeType":"Return","src":"3070:21:11"}]},"functionSelector":"76f6056b","id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"getHighSVG","nameLocation":"3011:10:11","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[],"src":"3021:2:11"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1985,"src":"3045:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1979,"name":"string","nodeType":"ElementaryTypeName","src":"3045:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3044:15:11"},"scope":2003,"src":"3002:96:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1993,"nodeType":"Block","src":"3172:35:11","statements":[{"expression":{"id":1991,"name":"i_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"3189:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"functionReturnParameters":1990,"id":1992,"nodeType":"Return","src":"3182:18:11"}]},"functionSelector":"9e87a5cd","id":1994,"implemented":true,"kind":"function","modifiers":[],"name":"getPriceFeed","nameLocation":"3113:12:11","nodeType":"FunctionDefinition","parameters":{"id":1986,"nodeType":"ParameterList","parameters":[],"src":"3125:2:11"},"returnParameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1994,"src":"3149:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":1988,"nodeType":"UserDefinedTypeName","pathNode":{"id":1987,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"3149:21:11"},"referencedDeclaration":45,"src":"3149:21:11","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"src":"3148:23:11"},"scope":2003,"src":"3104:103:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2001,"nodeType":"Block","src":"3270:38:11","statements":[{"expression":{"id":1999,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"3287:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1998,"id":2000,"nodeType":"Return","src":"3280:21:11"}]},"functionSelector":"6e02007d","id":2002,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"3222:15:11","nodeType":"FunctionDefinition","parameters":{"id":1995,"nodeType":"ParameterList","parameters":[],"src":"3237:2:11"},"returnParameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2002,"src":"3261:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3260:9:11"},"scope":2003,"src":"3213:95:11","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2004,"src":"279:3031:11","usedErrors":[]}],"src":"32:3279:11"},"id":11}},"contracts":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_108":{"entryPoint":null,"id":108,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":576,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":437,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":468,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":835,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":336,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":309,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":304,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":299,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:12","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:12","statements":[{"nodeType":"YulAssignment","src":"57:19:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:12"},"nodeType":"YulFunctionCall","src":"67:9:12"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:12"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:12","type":""}],"src":"7:75:12"},{"body":{"nodeType":"YulBlock","src":"177:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:12"},"nodeType":"YulFunctionCall","src":"187:12:12"},"nodeType":"YulExpressionStatement","src":"187:12:12"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:12"},{"body":{"nodeType":"YulBlock","src":"300:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:12"},"nodeType":"YulFunctionCall","src":"310:12:12"},"nodeType":"YulExpressionStatement","src":"310:12:12"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:12"},{"body":{"nodeType":"YulBlock","src":"423:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:12"},"nodeType":"YulFunctionCall","src":"433:12:12"},"nodeType":"YulExpressionStatement","src":"433:12:12"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:12"},{"body":{"nodeType":"YulBlock","src":"546:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:12"},"nodeType":"YulFunctionCall","src":"556:12:12"},"nodeType":"YulExpressionStatement","src":"556:12:12"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:12"},{"body":{"nodeType":"YulBlock","src":"628:54:12","statements":[{"nodeType":"YulAssignment","src":"638:38:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:12"},"nodeType":"YulFunctionCall","src":"652:14:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:12"},"nodeType":"YulFunctionCall","src":"668:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:12"},"nodeType":"YulFunctionCall","src":"648:28:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:12"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:12","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:12","type":""}],"src":"580:102:12"},{"body":{"nodeType":"YulBlock","src":"716:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:12"},"nodeType":"YulFunctionCall","src":"726:88:12"},"nodeType":"YulExpressionStatement","src":"726:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:12"},"nodeType":"YulFunctionCall","src":"823:15:12"},"nodeType":"YulExpressionStatement","src":"823:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:12"},"nodeType":"YulFunctionCall","src":"847:15:12"},"nodeType":"YulExpressionStatement","src":"847:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:12"},{"body":{"nodeType":"YulBlock","src":"917:238:12","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:12"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:12"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:12"},"nodeType":"YulFunctionCall","src":"957:27:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:12"},"nodeType":"YulFunctionCall","src":"945:40:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:12"},"nodeType":"YulFunctionCall","src":"1098:18:12"},"nodeType":"YulExpressionStatement","src":"1098:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:12"},"nodeType":"YulFunctionCall","src":"1036:34:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:12"},"nodeType":"YulFunctionCall","src":"1072:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:12"},"nodeType":"YulFunctionCall","src":"1033:62:12"},"nodeType":"YulIf","src":"1030:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:12"},"nodeType":"YulFunctionCall","src":"1127:22:12"},"nodeType":"YulExpressionStatement","src":"1127:22:12"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:12","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:12","type":""}],"src":"874:281:12"},{"body":{"nodeType":"YulBlock","src":"1202:88:12","statements":[{"nodeType":"YulAssignment","src":"1212:30:12","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:12"},"nodeType":"YulFunctionCall","src":"1222:20:12"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:12"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:12"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:12"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:12"},"nodeType":"YulFunctionCall","src":"1251:33:12"},"nodeType":"YulExpressionStatement","src":"1251:33:12"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:12","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:12","type":""}],"src":"1161:129:12"},{"body":{"nodeType":"YulBlock","src":"1363:241:12","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:12"},"nodeType":"YulFunctionCall","src":"1470:18:12"},"nodeType":"YulExpressionStatement","src":"1470:18:12"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:12"},"nodeType":"YulFunctionCall","src":"1437:30:12"},"nodeType":"YulIf","src":"1434:56:12"},{"nodeType":"YulAssignment","src":"1500:37:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:12"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:12"},"nodeType":"YulFunctionCall","src":"1508:29:12"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:12"}]},{"nodeType":"YulAssignment","src":"1574:23:12","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:12"},"nodeType":"YulFunctionCall","src":"1582:15:12"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:12"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:12","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:12","type":""}],"src":"1296:308:12"},{"body":{"nodeType":"YulBlock","src":"1659:258:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:12"},"nodeType":"YulFunctionCall","src":"1759:11:12"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:12"},"nodeType":"YulFunctionCall","src":"1778:11:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:12"},"nodeType":"YulFunctionCall","src":"1772:18:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:12"},"nodeType":"YulFunctionCall","src":"1752:39:12"},"nodeType":"YulExpressionStatement","src":"1752:39:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:12"},"nodeType":"YulFunctionCall","src":"1696:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:12","statements":[{"nodeType":"YulAssignment","src":"1712:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:12"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:12"},"nodeType":"YulFunctionCall","src":"1717:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:12","statements":[]},"src":"1688:113:12"},{"body":{"nodeType":"YulBlock","src":"1835:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:12"},"nodeType":"YulFunctionCall","src":"1881:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:12"},"nodeType":"YulFunctionCall","src":"1874:27:12"},"nodeType":"YulExpressionStatement","src":"1874:27:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:12"},"nodeType":"YulFunctionCall","src":"1813:13:12"},"nodeType":"YulIf","src":"1810:101:12"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:12","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:12","type":""}],"src":"1610:307:12"},{"body":{"nodeType":"YulBlock","src":"2018:326:12","statements":[{"nodeType":"YulAssignment","src":"2028:75:12","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:12"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:12"},"nodeType":"YulFunctionCall","src":"2053:49:12"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:12"},"nodeType":"YulFunctionCall","src":"2037:66:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:12"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:12"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:12"},"nodeType":"YulFunctionCall","src":"2112:21:12"},"nodeType":"YulExpressionStatement","src":"2112:21:12"},{"nodeType":"YulVariableDeclaration","src":"2142:27:12","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:12"},"nodeType":"YulFunctionCall","src":"2153:16:12"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:12"},"nodeType":"YulFunctionCall","src":"2209:79:12"},"nodeType":"YulExpressionStatement","src":"2209:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:12"},"nodeType":"YulFunctionCall","src":"2184:16:12"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:12"},"nodeType":"YulFunctionCall","src":"2181:25:12"},"nodeType":"YulIf","src":"2178:112:12"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:12"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:12"},"nodeType":"YulFunctionCall","src":"2299:39:12"},"nodeType":"YulExpressionStatement","src":"2299:39:12"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:12","type":""}],"src":"1923:421:12"},{"body":{"nodeType":"YulBlock","src":"2437:282:12","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:12"},"nodeType":"YulFunctionCall","src":"2488:79:12"},"nodeType":"YulExpressionStatement","src":"2488:79:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:12"},"nodeType":"YulFunctionCall","src":"2461:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:12"},"nodeType":"YulFunctionCall","src":"2457:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:12"},"nodeType":"YulFunctionCall","src":"2450:35:12"},"nodeType":"YulIf","src":"2447:122:12"},{"nodeType":"YulVariableDeclaration","src":"2578:27:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:12"},"nodeType":"YulFunctionCall","src":"2592:13:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:12","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:12"},"nodeType":"YulFunctionCall","src":"2682:17:12"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:12"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:12"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:12"},"nodeType":"YulFunctionCall","src":"2623:90:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:12"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:12","type":""}],"src":"2364:355:12"},{"body":{"nodeType":"YulBlock","src":"2839:739:12","statements":[{"body":{"nodeType":"YulBlock","src":"2885:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2887:77:12"},"nodeType":"YulFunctionCall","src":"2887:79:12"},"nodeType":"YulExpressionStatement","src":"2887:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2856:3:12"},"nodeType":"YulFunctionCall","src":"2856:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2881:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2852:3:12"},"nodeType":"YulFunctionCall","src":"2852:32:12"},"nodeType":"YulIf","src":"2849:119:12"},{"nodeType":"YulBlock","src":"2978:291:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2993:38:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:12"},"nodeType":"YulFunctionCall","src":"3013:17:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3007:5:12"},"nodeType":"YulFunctionCall","src":"3007:24:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2997:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3078:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3080:77:12"},"nodeType":"YulFunctionCall","src":"3080:79:12"},"nodeType":"YulExpressionStatement","src":"3080:79:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3050:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3058:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3047:2:12"},"nodeType":"YulFunctionCall","src":"3047:30:12"},"nodeType":"YulIf","src":"3044:117:12"},{"nodeType":"YulAssignment","src":"3175:84:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3242:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3227:3:12"},"nodeType":"YulFunctionCall","src":"3227:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3251:7:12"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3185:41:12"},"nodeType":"YulFunctionCall","src":"3185:74:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3175:6:12"}]}]},{"nodeType":"YulBlock","src":"3279:292:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3294:39:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3318:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3329:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:12"},"nodeType":"YulFunctionCall","src":"3314:18:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3308:5:12"},"nodeType":"YulFunctionCall","src":"3308:25:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3298:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3380:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3382:77:12"},"nodeType":"YulFunctionCall","src":"3382:79:12"},"nodeType":"YulExpressionStatement","src":"3382:79:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3352:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3360:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:12"},"nodeType":"YulFunctionCall","src":"3349:30:12"},"nodeType":"YulIf","src":"3346:117:12"},{"nodeType":"YulAssignment","src":"3477:84:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3544:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:12"},"nodeType":"YulFunctionCall","src":"3529:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3553:7:12"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3487:41:12"},"nodeType":"YulFunctionCall","src":"3487:74:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3477:6:12"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2801:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2812:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2824:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2832:6:12","type":""}],"src":"2725:853:12"},{"body":{"nodeType":"YulBlock","src":"3612:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3629:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3632:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:12"},"nodeType":"YulFunctionCall","src":"3622:88:12"},"nodeType":"YulExpressionStatement","src":"3622:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3726:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3729:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3719:6:12"},"nodeType":"YulFunctionCall","src":"3719:15:12"},"nodeType":"YulExpressionStatement","src":"3719:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:12"},"nodeType":"YulFunctionCall","src":"3743:15:12"},"nodeType":"YulExpressionStatement","src":"3743:15:12"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3584:180:12"},{"body":{"nodeType":"YulBlock","src":"3821:269:12","statements":[{"nodeType":"YulAssignment","src":"3831:22:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3845:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:12","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3841:3:12"},"nodeType":"YulFunctionCall","src":"3841:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3831:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"3862:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3892:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"3898:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3888:3:12"},"nodeType":"YulFunctionCall","src":"3888:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3866:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3939:51:12","statements":[{"nodeType":"YulAssignment","src":"3953:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3967:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3975:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3963:3:12"},"nodeType":"YulFunctionCall","src":"3963:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3953:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3919:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3912:6:12"},"nodeType":"YulFunctionCall","src":"3912:26:12"},"nodeType":"YulIf","src":"3909:81:12"},{"body":{"nodeType":"YulBlock","src":"4042:42:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4056:16:12"},"nodeType":"YulFunctionCall","src":"4056:18:12"},"nodeType":"YulExpressionStatement","src":"4056:18:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4006:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4029:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"4037:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4026:2:12"},"nodeType":"YulFunctionCall","src":"4026:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4003:2:12"},"nodeType":"YulFunctionCall","src":"4003:38:12"},"nodeType":"YulIf","src":"4000:84:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3805:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3814:6:12","type":""}],"src":"3770:320:12"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":12,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200254e3803806200254e8339818101604052810190620000379190620002be565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b61219680620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906113cd565b6102bc565b6040516100fb9190611415565b60405180910390f35b61010c61039e565b60405161011991906114c9565b60405180910390f35b61013c60048036038101906101379190611521565b610430565b604051610149919061158f565b60405180910390f35b61016c600480360381019061016791906115d6565b610476565b005b61018860048036038101906101839190611616565b61058e565b005b6101a4600480360381019061019f9190611616565b6105ee565b005b6101c060048036038101906101bb9190611521565b61060e565b6040516101cd919061158f565b60405180910390f35b6101f060048036038101906101eb9190611669565b6106c0565b6040516101fd91906116a5565b60405180910390f35b61020e610778565b60405161021b91906114c9565b60405180910390f35b61023e600480360381019061023991906116ec565b61080a565b005b61025a60048036038101906102559190611861565b610820565b005b61027660048036038101906102719190611521565b610882565b60405161028391906114c9565b60405180910390f35b6102a660048036038101906102a191906118e4565b6108ea565b6040516102b39190611415565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061039757506103968261097e565b5b9050919050565b6060600080546103ad90611953565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611953565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109e8565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e9906119f7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a33565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a33565b6108ea565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611a89565b60405180910390fd5b6105898383610a3b565b505050565b61059f610599610a33565b82610af4565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611b1b565b60405180910390fd5b6105e9838383610b89565b505050565b61060983838360405180602001604052806000815250610820565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae90611b87565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072890611c19565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461078790611953565b80601f01602080910402602001604051908101604052809291908181526020018280546107b390611953565b80156108005780601f106107d557610100808354040283529160200191610800565b820191906000526020600020905b8154815290600101906020018083116107e357829003601f168201915b5050505050905090565b61081c610815610a33565b8383610df0565b5050565b61083161082b610a33565b83610af4565b610870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086790611b1b565b60405180910390fd5b61087c84848484610f5d565b50505050565b606061088d826109e8565b6000610897610fb9565b905060008151116108b757604051806020016040528060008152506108e2565b806108c184610fd0565b6040516020016108d2929190611c75565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109f181611131565b610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2790611b87565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610aae8361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b008361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b425750610b4181856108ea565b5b80610b8057508373ffffffffffffffffffffffffffffffffffffffff16610b6884610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ba98261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf690611d0b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6690611d9d565b60405180910390fd5b610c7a83838361119d565b610c85600082610a3b565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cd59190611dec565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d2c9190611e20565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610deb8383836111a2565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5690611ec2565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f509190611415565b60405180910390a3505050565b610f68848484610b89565b610f74848484846111a7565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa90611f54565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000821415611018576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061112c565b600082905060005b6000821461104a57808061103390611f74565b915050600a826110439190611fec565b9150611020565b60008167ffffffffffffffff81111561106657611065611736565b5b6040519080825280601f01601f1916602001820160405280156110985781602001600182028036833780820191505090505b5090505b60008514611125576001826110b19190611dec565b9150600a856110c0919061201d565b60306110cc9190611e20565b60f81b8183815181106110e2576110e161204e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561111e9190611fec565b945061109c565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b60006111c88473ffffffffffffffffffffffffffffffffffffffff1661133e565b15611331578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111f1610a33565b8786866040518563ffffffff1660e01b815260040161121394939291906120d2565b602060405180830381600087803b15801561122d57600080fd5b505af192505050801561125e57506040513d601f19601f8201168201806040525081019061125b9190612133565b60015b6112e1573d806000811461128e576040519150601f19603f3d011682016040523d82523d6000602084013e611293565b606091505b506000815114156112d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d090611f54565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611336565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113aa81611375565b81146113b557600080fd5b50565b6000813590506113c7816113a1565b92915050565b6000602082840312156113e3576113e261136b565b5b60006113f1848285016113b8565b91505092915050565b60008115159050919050565b61140f816113fa565b82525050565b600060208201905061142a6000830184611406565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561146a57808201518184015260208101905061144f565b83811115611479576000848401525b50505050565b6000601f19601f8301169050919050565b600061149b82611430565b6114a5818561143b565b93506114b581856020860161144c565b6114be8161147f565b840191505092915050565b600060208201905081810360008301526114e38184611490565b905092915050565b6000819050919050565b6114fe816114eb565b811461150957600080fd5b50565b60008135905061151b816114f5565b92915050565b6000602082840312156115375761153661136b565b5b60006115458482850161150c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115798261154e565b9050919050565b6115898161156e565b82525050565b60006020820190506115a46000830184611580565b92915050565b6115b38161156e565b81146115be57600080fd5b50565b6000813590506115d0816115aa565b92915050565b600080604083850312156115ed576115ec61136b565b5b60006115fb858286016115c1565b925050602061160c8582860161150c565b9150509250929050565b60008060006060848603121561162f5761162e61136b565b5b600061163d868287016115c1565b935050602061164e868287016115c1565b925050604061165f8682870161150c565b9150509250925092565b60006020828403121561167f5761167e61136b565b5b600061168d848285016115c1565b91505092915050565b61169f816114eb565b82525050565b60006020820190506116ba6000830184611696565b92915050565b6116c9816113fa565b81146116d457600080fd5b50565b6000813590506116e6816116c0565b92915050565b600080604083850312156117035761170261136b565b5b6000611711858286016115c1565b9250506020611722858286016116d7565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61176e8261147f565b810181811067ffffffffffffffff8211171561178d5761178c611736565b5b80604052505050565b60006117a0611361565b90506117ac8282611765565b919050565b600067ffffffffffffffff8211156117cc576117cb611736565b5b6117d58261147f565b9050602081019050919050565b82818337600083830152505050565b60006118046117ff846117b1565b611796565b9050828152602081018484840111156118205761181f611731565b5b61182b8482856117e2565b509392505050565b600082601f8301126118485761184761172c565b5b81356118588482602086016117f1565b91505092915050565b6000806000806080858703121561187b5761187a61136b565b5b6000611889878288016115c1565b945050602061189a878288016115c1565b93505060406118ab8782880161150c565b925050606085013567ffffffffffffffff8111156118cc576118cb611370565b5b6118d887828801611833565b91505092959194509250565b600080604083850312156118fb576118fa61136b565b5b6000611909858286016115c1565b925050602061191a858286016115c1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061196b57607f821691505b6020821081141561197f5761197e611924565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006119e160218361143b565b91506119ec82611985565b604082019050919050565b60006020820190508181036000830152611a10816119d4565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b6000611a73603e8361143b565b9150611a7e82611a17565b604082019050919050565b60006020820190508181036000830152611aa281611a66565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6000611b05602e8361143b565b9150611b1082611aa9565b604082019050919050565b60006020820190508181036000830152611b3481611af8565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611b7160188361143b565b9150611b7c82611b3b565b602082019050919050565b60006020820190508181036000830152611ba081611b64565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611c0360298361143b565b9150611c0e82611ba7565b604082019050919050565b60006020820190508181036000830152611c3281611bf6565b9050919050565b600081905092915050565b6000611c4f82611430565b611c598185611c39565b9350611c6981856020860161144c565b80840191505092915050565b6000611c818285611c44565b9150611c8d8284611c44565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611cf560258361143b565b9150611d0082611c99565b604082019050919050565b60006020820190508181036000830152611d2481611ce8565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611d8760248361143b565b9150611d9282611d2b565b604082019050919050565b60006020820190508181036000830152611db681611d7a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611df7826114eb565b9150611e02836114eb565b925082821015611e1557611e14611dbd565b5b828203905092915050565b6000611e2b826114eb565b9150611e36836114eb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e6b57611e6a611dbd565b5b828201905092915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611eac60198361143b565b9150611eb782611e76565b602082019050919050565b60006020820190508181036000830152611edb81611e9f565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611f3e60328361143b565b9150611f4982611ee2565b604082019050919050565b60006020820190508181036000830152611f6d81611f31565b9050919050565b6000611f7f826114eb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611fb257611fb1611dbd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ff7826114eb565b9150612002836114eb565b92508261201257612011611fbd565b5b828204905092915050565b6000612028826114eb565b9150612033836114eb565b92508261204357612042611fbd565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006120a48261207d565b6120ae8185612088565b93506120be81856020860161144c565b6120c78161147f565b840191505092915050565b60006080820190506120e76000830187611580565b6120f46020830186611580565b6121016040830185611696565b81810360608301526121138184612099565b905095945050505050565b60008151905061212d816113a1565b92915050565b6000602082840312156121495761214861136b565b5b60006121578482850161211e565b9150509291505056fea26469706673582212201f83597e48ca2aee1c4e2adaf64efb166a65c18eda93205b9b4336d6069741e764736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x254E CODESIZE SUB DUP1 PUSH3 0x254E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A2 JUMPI PUSH3 0x3A1 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2196 DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1669 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x16EC JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x97E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA33 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA3B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA33 JUMP JUMPDEST DUP3 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x820 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x787 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B3 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x800 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x800 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x81C PUSH2 0x815 PUSH2 0xA33 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDF0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x831 PUSH2 0x82B PUSH2 0xA33 JUMP JUMPDEST DUP4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87C DUP5 DUP5 DUP5 DUP5 PUSH2 0xF5D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x88D DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x897 PUSH2 0xFB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8E2 JUMP JUMPDEST DUP1 PUSH2 0x8C1 DUP5 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D2 SWAP3 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F1 DUP2 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP1 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAAE DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB00 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB42 JUMPI POP PUSH2 0xB41 DUP2 DUP6 PUSH2 0x8EA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB80 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB68 DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBA9 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF6 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC66 SWAP1 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7A DUP4 DUP4 DUP4 PUSH2 0x119D JUMP JUMPDEST PUSH2 0xC85 PUSH1 0x0 DUP3 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDEB DUP4 DUP4 DUP4 PUSH2 0x11A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE56 SWAP1 PUSH2 0x1EC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF50 SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xF68 DUP5 DUP5 DUP5 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xF74 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x112C JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x104A JUMPI DUP1 DUP1 PUSH2 0x1033 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1066 JUMPI PUSH2 0x1065 PUSH2 0x1736 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1098 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1125 JUMPI PUSH1 0x1 DUP3 PUSH2 0x10B1 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x10C0 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x30 PUSH2 0x10CC SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10E2 JUMPI PUSH2 0x10E1 PUSH2 0x204E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x111E SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST SWAP5 POP PUSH2 0x109C JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C8 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x133E JUMP JUMPDEST ISZERO PUSH2 0x1331 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11F1 PUSH2 0xA33 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1213 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x122D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x125E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x125B SWAP2 SWAP1 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12E1 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x128E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D0 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1336 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13AA DUP2 PUSH2 0x1375 JUMP JUMPDEST DUP2 EQ PUSH2 0x13B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13C7 DUP2 PUSH2 0x13A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E3 JUMPI PUSH2 0x13E2 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13F1 DUP5 DUP3 DUP6 ADD PUSH2 0x13B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140F DUP2 PUSH2 0x13FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x142A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1406 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x146A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x144F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149B DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x14A5 DUP2 DUP6 PUSH2 0x143B JUMP JUMPDEST SWAP4 POP PUSH2 0x14B5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST PUSH2 0x14BE DUP2 PUSH2 0x147F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14E3 DUP2 DUP5 PUSH2 0x1490 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14FE DUP2 PUSH2 0x14EB JUMP JUMPDEST DUP2 EQ PUSH2 0x1509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x151B DUP2 PUSH2 0x14F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1537 JUMPI PUSH2 0x1536 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1545 DUP5 DUP3 DUP6 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1579 DUP3 PUSH2 0x154E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1589 DUP2 PUSH2 0x156E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1580 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B3 DUP2 PUSH2 0x156E JUMP JUMPDEST DUP2 EQ PUSH2 0x15BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D0 DUP2 PUSH2 0x15AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15ED JUMPI PUSH2 0x15EC PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15FB DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x160C DUP6 DUP3 DUP7 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x162F JUMPI PUSH2 0x162E PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x163D DUP7 DUP3 DUP8 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x164E DUP7 DUP3 DUP8 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x165F DUP7 DUP3 DUP8 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167F JUMPI PUSH2 0x167E PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x168D DUP5 DUP3 DUP6 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x169F DUP2 PUSH2 0x14EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16C9 DUP2 PUSH2 0x13FA JUMP JUMPDEST DUP2 EQ PUSH2 0x16D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16E6 DUP2 PUSH2 0x16C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1703 JUMPI PUSH2 0x1702 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1711 DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1722 DUP6 DUP3 DUP7 ADD PUSH2 0x16D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x176E DUP3 PUSH2 0x147F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x178D JUMPI PUSH2 0x178C PUSH2 0x1736 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A0 PUSH2 0x1361 JUMP JUMPDEST SWAP1 POP PUSH2 0x17AC DUP3 DUP3 PUSH2 0x1765 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17CC JUMPI PUSH2 0x17CB PUSH2 0x1736 JUMP JUMPDEST JUMPDEST PUSH2 0x17D5 DUP3 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1804 PUSH2 0x17FF DUP5 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0x1796 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1820 JUMPI PUSH2 0x181F PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH2 0x182B DUP5 DUP3 DUP6 PUSH2 0x17E2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1848 JUMPI PUSH2 0x1847 PUSH2 0x172C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1858 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x187B JUMPI PUSH2 0x187A PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1889 DUP8 DUP3 DUP9 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x189A DUP8 DUP3 DUP9 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18AB DUP8 DUP3 DUP9 ADD PUSH2 0x150C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18CC JUMPI PUSH2 0x18CB PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH2 0x18D8 DUP8 DUP3 DUP9 ADD PUSH2 0x1833 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18FB JUMPI PUSH2 0x18FA PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1909 DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x191A DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x196B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x197F JUMPI PUSH2 0x197E PUSH2 0x1924 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E1 PUSH1 0x21 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x19EC DUP3 PUSH2 0x1985 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A10 DUP2 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A73 PUSH1 0x3E DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A7E DUP3 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AA2 DUP2 PUSH2 0x1A66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B05 PUSH1 0x2E DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B10 DUP3 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B34 DUP2 PUSH2 0x1AF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B71 PUSH1 0x18 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7C DUP3 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BA0 DUP2 PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C03 PUSH1 0x29 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0E DUP3 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C32 DUP2 PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4F DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x1C59 DUP2 DUP6 PUSH2 0x1C39 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C69 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C81 DUP3 DUP6 PUSH2 0x1C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8D DUP3 DUP5 PUSH2 0x1C44 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF5 PUSH1 0x25 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D00 DUP3 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D24 DUP2 PUSH2 0x1CE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D87 PUSH1 0x24 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D92 DUP3 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB6 DUP2 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DF7 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1E02 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1E15 JUMPI PUSH2 0x1E14 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2B DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1E36 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E6B JUMPI PUSH2 0x1E6A PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAC PUSH1 0x19 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB7 DUP3 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EDB DUP2 PUSH2 0x1E9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3E PUSH1 0x32 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1F49 DUP3 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F6D DUP2 PUSH2 0x1F31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7F DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1FB2 JUMPI PUSH2 0x1FB1 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FF7 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2002 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2012 JUMPI PUSH2 0x2011 PUSH2 0x1FBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2028 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2033 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2043 JUMPI PUSH2 0x2042 PUSH2 0x1FBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A4 DUP3 PUSH2 0x207D JUMP JUMPDEST PUSH2 0x20AE DUP2 DUP6 PUSH2 0x2088 JUMP JUMPDEST SWAP4 POP PUSH2 0x20BE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST PUSH2 0x20C7 DUP2 PUSH2 0x147F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x20E7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x20F4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x2101 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1696 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2113 DUP2 DUP5 PUSH2 0x2099 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x212D DUP2 PUSH2 0x13A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2149 JUMPI PUSH2 0x2148 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2157 DUP5 DUP3 DUP6 ADD PUSH2 0x211E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F DUP4 MSIZE PUSH31 0x48CA2AEE1C4E2ADAF64EFB166A65C18EDA93205B9B4336D6069741E764736F PUSH13 0x63430008080033000000000000 ","sourceMap":"628:13718:1:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;628:13718;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;628:13718:1:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_911":{"entryPoint":4514,"id":911,"parameterSlots":3,"returnSlots":0},"@_approve_781":{"entryPoint":2619,"id":781,"parameterSlots":2,"returnSlots":0},"@_baseURI_259":{"entryPoint":4025,"id":259,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_900":{"entryPoint":4509,"id":900,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_889":{"entryPoint":4519,"id":889,"parameterSlots":4,"returnSlots":1},"@_exists_478":{"entryPoint":4401,"id":478,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_512":{"entryPoint":2804,"id":512,"parameterSlots":2,"returnSlots":1},"@_msgSender_1380":{"entryPoint":2611,"id":1380,"parameterSlots":0,"returnSlots":1},"@_requireMinted_827":{"entryPoint":2536,"id":827,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_460":{"entryPoint":3933,"id":460,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_813":{"entryPoint":3568,"id":813,"parameterSlots":3,"returnSlots":0},"@_transfer_757":{"entryPoint":2953,"id":757,"parameterSlots":3,"returnSlots":0},"@approve_302":{"entryPoint":1142,"id":302,"parameterSlots":2,"returnSlots":0},"@balanceOf_163":{"entryPoint":1728,"id":163,"parameterSlots":1,"returnSlots":1},"@getApproved_320":{"entryPoint":1072,"id":320,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_355":{"entryPoint":2282,"id":355,"parameterSlots":2,"returnSlots":1},"@isContract_1091":{"entryPoint":4926,"id":1091,"parameterSlots":1,"returnSlots":1},"@name_201":{"entryPoint":926,"id":201,"parameterSlots":0,"returnSlots":1},"@ownerOf_191":{"entryPoint":1550,"id":191,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_401":{"entryPoint":1518,"id":401,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_431":{"entryPoint":2080,"id":431,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_337":{"entryPoint":2058,"id":337,"parameterSlots":2,"returnSlots":0},"@supportsInterface_139":{"entryPoint":700,"id":139,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1639":{"entryPoint":2430,"id":1639,"parameterSlots":1,"returnSlots":1},"@symbol_211":{"entryPoint":1912,"id":211,"parameterSlots":0,"returnSlots":1},"@toString_1478":{"entryPoint":4048,"id":1478,"parameterSlots":1,"returnSlots":1},"@tokenURI_250":{"entryPoint":2178,"id":250,"parameterSlots":1,"returnSlots":1},"@transferFrom_382":{"entryPoint":1422,"id":382,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6129,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5569,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5847,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5048,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8478,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6195,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5388,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6372,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5654,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6241,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":5868,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5590,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5069,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8499,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5409,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5504,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5126,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8345,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5264,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7236,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":7985,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":7400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":7546,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":7839,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7158,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack":{"entryPoint":6758,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7012,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6612,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack":{"entryPoint":6904,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5782,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7285,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8402,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5141,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5321,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8020,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7581,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7874,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7193,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6793,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7047,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6647,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6939,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5797,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6038,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4961,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6065,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8317,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5168,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8328,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5179,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7225,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7712,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8172,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7660,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5486,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5114,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":4981,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5454,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5355,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":6114,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":5196,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6483,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5989,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":8052,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":8221,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":7613,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8125,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6436,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8270,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5942,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5932,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5937,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4976,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4971,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5247,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":7906,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":7321,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":7467,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":7798,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":7079,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304":{"entryPoint":6679,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":6971,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":6533,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b":{"entryPoint":6825,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5546,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":5824,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5025,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5365,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24661:12","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:12","statements":[{"nodeType":"YulAssignment","src":"57:19:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:12"},"nodeType":"YulFunctionCall","src":"67:9:12"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:12"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:12","type":""}],"src":"7:75:12"},{"body":{"nodeType":"YulBlock","src":"177:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:12"},"nodeType":"YulFunctionCall","src":"187:12:12"},"nodeType":"YulExpressionStatement","src":"187:12:12"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:12"},{"body":{"nodeType":"YulBlock","src":"300:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:12"},"nodeType":"YulFunctionCall","src":"310:12:12"},"nodeType":"YulExpressionStatement","src":"310:12:12"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:12"},{"body":{"nodeType":"YulBlock","src":"378:105:12","statements":[{"nodeType":"YulAssignment","src":"388:89:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:12","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:12"},"nodeType":"YulFunctionCall","src":"399:78:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:12"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:12","type":""}],"src":"334:149:12"},{"body":{"nodeType":"YulBlock","src":"531:78:12","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:12"},"nodeType":"YulFunctionCall","src":"589:12:12"},"nodeType":"YulExpressionStatement","src":"589:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:12"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:12"},"nodeType":"YulFunctionCall","src":"561:23:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:12"},"nodeType":"YulFunctionCall","src":"551:34:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:12"},"nodeType":"YulFunctionCall","src":"544:42:12"},"nodeType":"YulIf","src":"541:62:12"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:12","type":""}],"src":"489:120:12"},{"body":{"nodeType":"YulBlock","src":"666:86:12","statements":[{"nodeType":"YulAssignment","src":"676:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:12"},"nodeType":"YulFunctionCall","src":"685:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:12"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:12"},"nodeType":"YulFunctionCall","src":"714:32:12"},"nodeType":"YulExpressionStatement","src":"714:32:12"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:12","type":""}],"src":"615:137:12"},{"body":{"nodeType":"YulBlock","src":"823:262:12","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:12"},"nodeType":"YulFunctionCall","src":"871:79:12"},"nodeType":"YulExpressionStatement","src":"871:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:12"},"nodeType":"YulFunctionCall","src":"840:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:12"},"nodeType":"YulFunctionCall","src":"836:32:12"},"nodeType":"YulIf","src":"833:119:12"},{"nodeType":"YulBlock","src":"962:116:12","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:12","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:12"},"nodeType":"YulFunctionCall","src":"1036:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:12"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:12"},"nodeType":"YulFunctionCall","src":"1016:52:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:12"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:12","type":""}],"src":"758:327:12"},{"body":{"nodeType":"YulBlock","src":"1133:48:12","statements":[{"nodeType":"YulAssignment","src":"1143:32:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:12"},"nodeType":"YulFunctionCall","src":"1161:13:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:12"},"nodeType":"YulFunctionCall","src":"1154:21:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:12"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:12","type":""}],"src":"1091:90:12"},{"body":{"nodeType":"YulBlock","src":"1246:50:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:12"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:12"},"nodeType":"YulFunctionCall","src":"1268:21:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:12"},"nodeType":"YulFunctionCall","src":"1256:34:12"},"nodeType":"YulExpressionStatement","src":"1256:34:12"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:12","type":""}],"src":"1187:109:12"},{"body":{"nodeType":"YulBlock","src":"1394:118:12","statements":[{"nodeType":"YulAssignment","src":"1404:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:12"},"nodeType":"YulFunctionCall","src":"1412:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:12"},"nodeType":"YulFunctionCall","src":"1487:17:12"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:12"},"nodeType":"YulFunctionCall","src":"1440:65:12"},"nodeType":"YulExpressionStatement","src":"1440:65:12"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:12","type":""}],"src":"1302:210:12"},{"body":{"nodeType":"YulBlock","src":"1577:40:12","statements":[{"nodeType":"YulAssignment","src":"1588:22:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:12"},"nodeType":"YulFunctionCall","src":"1598:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:12"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:12","type":""}],"src":"1518:99:12"},{"body":{"nodeType":"YulBlock","src":"1719:73:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:12"},"nodeType":"YulFunctionCall","src":"1729:19:12"},"nodeType":"YulExpressionStatement","src":"1729:19:12"},{"nodeType":"YulAssignment","src":"1757:29:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:12"},"nodeType":"YulFunctionCall","src":"1772:14:12"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:12"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:12","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:12","type":""}],"src":"1623:169:12"},{"body":{"nodeType":"YulBlock","src":"1847:258:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:12"},"nodeType":"YulFunctionCall","src":"1947:11:12"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:12"},"nodeType":"YulFunctionCall","src":"1966:11:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:12"},"nodeType":"YulFunctionCall","src":"1960:18:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:12"},"nodeType":"YulFunctionCall","src":"1940:39:12"},"nodeType":"YulExpressionStatement","src":"1940:39:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:12"},"nodeType":"YulFunctionCall","src":"1884:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:12","statements":[{"nodeType":"YulAssignment","src":"1900:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:12"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:12"},"nodeType":"YulFunctionCall","src":"1905:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:12","statements":[]},"src":"1876:113:12"},{"body":{"nodeType":"YulBlock","src":"2023:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:12"},"nodeType":"YulFunctionCall","src":"2069:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:12"},"nodeType":"YulFunctionCall","src":"2062:27:12"},"nodeType":"YulExpressionStatement","src":"2062:27:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:12"},"nodeType":"YulFunctionCall","src":"2001:13:12"},"nodeType":"YulIf","src":"1998:101:12"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:12","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:12","type":""}],"src":"1798:307:12"},{"body":{"nodeType":"YulBlock","src":"2159:54:12","statements":[{"nodeType":"YulAssignment","src":"2169:38:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:12"},"nodeType":"YulFunctionCall","src":"2183:14:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:12"},"nodeType":"YulFunctionCall","src":"2199:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:12"},"nodeType":"YulFunctionCall","src":"2179:28:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:12"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:12","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:12","type":""}],"src":"2111:102:12"},{"body":{"nodeType":"YulBlock","src":"2311:272:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:12"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:12"},"nodeType":"YulFunctionCall","src":"2335:39:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:12"},"nodeType":"YulFunctionCall","src":"2390:71:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:12"},"nodeType":"YulFunctionCall","src":"2492:16:12"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:12"},"nodeType":"YulFunctionCall","src":"2470:52:12"},"nodeType":"YulExpressionStatement","src":"2470:52:12"},{"nodeType":"YulAssignment","src":"2531:46:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:12"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:12"},"nodeType":"YulFunctionCall","src":"2547:29:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:12"},"nodeType":"YulFunctionCall","src":"2538:39:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:12"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:12","type":""}],"src":"2219:364:12"},{"body":{"nodeType":"YulBlock","src":"2707:195:12","statements":[{"nodeType":"YulAssignment","src":"2717:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:12"},"nodeType":"YulFunctionCall","src":"2725:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:12"},"nodeType":"YulFunctionCall","src":"2760:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:12"},"nodeType":"YulFunctionCall","src":"2779:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:12"},"nodeType":"YulFunctionCall","src":"2753:47:12"},"nodeType":"YulExpressionStatement","src":"2753:47:12"},{"nodeType":"YulAssignment","src":"2809:86:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:12"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:12"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:12"},"nodeType":"YulFunctionCall","src":"2817:78:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:12"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:12","type":""}],"src":"2589:313:12"},{"body":{"nodeType":"YulBlock","src":"2953:32:12","statements":[{"nodeType":"YulAssignment","src":"2963:16:12","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:12"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:12","type":""}],"src":"2908:77:12"},{"body":{"nodeType":"YulBlock","src":"3034:79:12","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:12"},"nodeType":"YulFunctionCall","src":"3093:12:12"},"nodeType":"YulExpressionStatement","src":"3093:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:12"},"nodeType":"YulFunctionCall","src":"3064:24:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:12"},"nodeType":"YulFunctionCall","src":"3054:35:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:12"},"nodeType":"YulFunctionCall","src":"3047:43:12"},"nodeType":"YulIf","src":"3044:63:12"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:12","type":""}],"src":"2991:122:12"},{"body":{"nodeType":"YulBlock","src":"3171:87:12","statements":[{"nodeType":"YulAssignment","src":"3181:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:12"},"nodeType":"YulFunctionCall","src":"3190:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:12"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:12"},"nodeType":"YulFunctionCall","src":"3219:33:12"},"nodeType":"YulExpressionStatement","src":"3219:33:12"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:12","type":""}],"src":"3119:139:12"},{"body":{"nodeType":"YulBlock","src":"3330:263:12","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:12"},"nodeType":"YulFunctionCall","src":"3378:79:12"},"nodeType":"YulExpressionStatement","src":"3378:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:12"},"nodeType":"YulFunctionCall","src":"3347:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:12"},"nodeType":"YulFunctionCall","src":"3343:32:12"},"nodeType":"YulIf","src":"3340:119:12"},{"nodeType":"YulBlock","src":"3469:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:12","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:12"},"nodeType":"YulFunctionCall","src":"3544:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:12"},"nodeType":"YulFunctionCall","src":"3523:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:12"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:12","type":""}],"src":"3264:329:12"},{"body":{"nodeType":"YulBlock","src":"3644:81:12","statements":[{"nodeType":"YulAssignment","src":"3654:65:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:12"},"nodeType":"YulFunctionCall","src":"3665:54:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:12"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:12","type":""}],"src":"3599:126:12"},{"body":{"nodeType":"YulBlock","src":"3776:51:12","statements":[{"nodeType":"YulAssignment","src":"3786:35:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:12"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:12"},"nodeType":"YulFunctionCall","src":"3797:24:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:12"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:12","type":""}],"src":"3731:96:12"},{"body":{"nodeType":"YulBlock","src":"3898:53:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:12"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:12"},"nodeType":"YulFunctionCall","src":"3920:24:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:12"},"nodeType":"YulFunctionCall","src":"3908:37:12"},"nodeType":"YulExpressionStatement","src":"3908:37:12"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:12","type":""}],"src":"3833:118:12"},{"body":{"nodeType":"YulBlock","src":"4055:124:12","statements":[{"nodeType":"YulAssignment","src":"4065:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:12"},"nodeType":"YulFunctionCall","src":"4073:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:12"},"nodeType":"YulFunctionCall","src":"4154:17:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:12"},"nodeType":"YulFunctionCall","src":"4101:71:12"},"nodeType":"YulExpressionStatement","src":"4101:71:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:12","type":""}],"src":"3957:222:12"},{"body":{"nodeType":"YulBlock","src":"4228:79:12","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:12"},"nodeType":"YulFunctionCall","src":"4287:12:12"},"nodeType":"YulExpressionStatement","src":"4287:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:12"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:12"},"nodeType":"YulFunctionCall","src":"4258:24:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:12"},"nodeType":"YulFunctionCall","src":"4248:35:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:12"},"nodeType":"YulFunctionCall","src":"4241:43:12"},"nodeType":"YulIf","src":"4238:63:12"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:12","type":""}],"src":"4185:122:12"},{"body":{"nodeType":"YulBlock","src":"4365:87:12","statements":[{"nodeType":"YulAssignment","src":"4375:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:12"},"nodeType":"YulFunctionCall","src":"4384:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:12"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:12"},"nodeType":"YulFunctionCall","src":"4413:33:12"},"nodeType":"YulExpressionStatement","src":"4413:33:12"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:12","type":""}],"src":"4313:139:12"},{"body":{"nodeType":"YulBlock","src":"4541:391:12","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:12"},"nodeType":"YulFunctionCall","src":"4589:79:12"},"nodeType":"YulExpressionStatement","src":"4589:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:12"},"nodeType":"YulFunctionCall","src":"4558:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:12"},"nodeType":"YulFunctionCall","src":"4554:32:12"},"nodeType":"YulIf","src":"4551:119:12"},{"nodeType":"YulBlock","src":"4680:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:12","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:12"},"nodeType":"YulFunctionCall","src":"4755:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:12"},"nodeType":"YulFunctionCall","src":"4734:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:12"}]}]},{"nodeType":"YulBlock","src":"4807:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:12","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:12"},"nodeType":"YulFunctionCall","src":"4883:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:12"},"nodeType":"YulFunctionCall","src":"4862:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:12","type":""}],"src":"4458:474:12"},{"body":{"nodeType":"YulBlock","src":"5038:519:12","statements":[{"body":{"nodeType":"YulBlock","src":"5084:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5086:77:12"},"nodeType":"YulFunctionCall","src":"5086:79:12"},"nodeType":"YulExpressionStatement","src":"5086:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5059:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"5068:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5055:3:12"},"nodeType":"YulFunctionCall","src":"5055:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"5080:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5051:3:12"},"nodeType":"YulFunctionCall","src":"5051:32:12"},"nodeType":"YulIf","src":"5048:119:12"},{"nodeType":"YulBlock","src":"5177:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"5192:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5206:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5196:6:12","type":""}]},{"nodeType":"YulAssignment","src":"5221:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5256:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"5267:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:12"},"nodeType":"YulFunctionCall","src":"5252:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5276:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5231:20:12"},"nodeType":"YulFunctionCall","src":"5231:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5221:6:12"}]}]},{"nodeType":"YulBlock","src":"5304:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"5319:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5333:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5323:6:12","type":""}]},{"nodeType":"YulAssignment","src":"5349:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"5395:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:12"},"nodeType":"YulFunctionCall","src":"5380:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5404:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5359:20:12"},"nodeType":"YulFunctionCall","src":"5359:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5349:6:12"}]}]},{"nodeType":"YulBlock","src":"5432:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"5447:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5461:2:12","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5451:6:12","type":""}]},{"nodeType":"YulAssignment","src":"5477:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5512:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"5523:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5508:3:12"},"nodeType":"YulFunctionCall","src":"5508:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5532:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5487:20:12"},"nodeType":"YulFunctionCall","src":"5487:53:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5477:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4992:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5003:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5015:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5023:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5031:6:12","type":""}],"src":"4938:619:12"},{"body":{"nodeType":"YulBlock","src":"5629:263:12","statements":[{"body":{"nodeType":"YulBlock","src":"5675:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5677:77:12"},"nodeType":"YulFunctionCall","src":"5677:79:12"},"nodeType":"YulExpressionStatement","src":"5677:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5650:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"5659:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5646:3:12"},"nodeType":"YulFunctionCall","src":"5646:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"5671:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5642:3:12"},"nodeType":"YulFunctionCall","src":"5642:32:12"},"nodeType":"YulIf","src":"5639:119:12"},{"nodeType":"YulBlock","src":"5768:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"5783:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5797:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5787:6:12","type":""}]},{"nodeType":"YulAssignment","src":"5812:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5847:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"5858:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5843:3:12"},"nodeType":"YulFunctionCall","src":"5843:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5867:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5822:20:12"},"nodeType":"YulFunctionCall","src":"5822:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5812:6:12"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5599:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5610:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5622:6:12","type":""}],"src":"5563:329:12"},{"body":{"nodeType":"YulBlock","src":"5963:53:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5980:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6003:5:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5985:17:12"},"nodeType":"YulFunctionCall","src":"5985:24:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5973:6:12"},"nodeType":"YulFunctionCall","src":"5973:37:12"},"nodeType":"YulExpressionStatement","src":"5973:37:12"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5951:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5958:3:12","type":""}],"src":"5898:118:12"},{"body":{"nodeType":"YulBlock","src":"6120:124:12","statements":[{"nodeType":"YulAssignment","src":"6130:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6142:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6153:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6138:3:12"},"nodeType":"YulFunctionCall","src":"6138:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6130:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6210:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6223:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6234:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6219:3:12"},"nodeType":"YulFunctionCall","src":"6219:17:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6166:43:12"},"nodeType":"YulFunctionCall","src":"6166:71:12"},"nodeType":"YulExpressionStatement","src":"6166:71:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6092:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6104:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6115:4:12","type":""}],"src":"6022:222:12"},{"body":{"nodeType":"YulBlock","src":"6290:76:12","statements":[{"body":{"nodeType":"YulBlock","src":"6344:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:12"},"nodeType":"YulFunctionCall","src":"6346:12:12"},"nodeType":"YulExpressionStatement","src":"6346:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6313:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6335:5:12"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6320:14:12"},"nodeType":"YulFunctionCall","src":"6320:21:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6310:2:12"},"nodeType":"YulFunctionCall","src":"6310:32:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6303:6:12"},"nodeType":"YulFunctionCall","src":"6303:40:12"},"nodeType":"YulIf","src":"6300:60:12"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6283:5:12","type":""}],"src":"6250:116:12"},{"body":{"nodeType":"YulBlock","src":"6421:84:12","statements":[{"nodeType":"YulAssignment","src":"6431:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6453:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6440:12:12"},"nodeType":"YulFunctionCall","src":"6440:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6431:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6493:5:12"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6469:23:12"},"nodeType":"YulFunctionCall","src":"6469:30:12"},"nodeType":"YulExpressionStatement","src":"6469:30:12"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6399:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"6407:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6415:5:12","type":""}],"src":"6372:133:12"},{"body":{"nodeType":"YulBlock","src":"6591:388:12","statements":[{"body":{"nodeType":"YulBlock","src":"6637:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6639:77:12"},"nodeType":"YulFunctionCall","src":"6639:79:12"},"nodeType":"YulExpressionStatement","src":"6639:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6612:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6608:3:12"},"nodeType":"YulFunctionCall","src":"6608:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"6633:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6604:3:12"},"nodeType":"YulFunctionCall","src":"6604:32:12"},"nodeType":"YulIf","src":"6601:119:12"},{"nodeType":"YulBlock","src":"6730:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"6745:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"6759:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6749:6:12","type":""}]},{"nodeType":"YulAssignment","src":"6774:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6809:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"6820:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6805:3:12"},"nodeType":"YulFunctionCall","src":"6805:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6829:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6784:20:12"},"nodeType":"YulFunctionCall","src":"6784:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6774:6:12"}]}]},{"nodeType":"YulBlock","src":"6857:115:12","statements":[{"nodeType":"YulVariableDeclaration","src":"6872:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"6886:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6876:6:12","type":""}]},{"nodeType":"YulAssignment","src":"6902:60:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6934:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"6945:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:12"},"nodeType":"YulFunctionCall","src":"6930:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6954:7:12"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6912:17:12"},"nodeType":"YulFunctionCall","src":"6912:50:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6902:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6553:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6564:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6576:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6584:6:12","type":""}],"src":"6511:468:12"},{"body":{"nodeType":"YulBlock","src":"7074:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7091:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7094:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7084:6:12"},"nodeType":"YulFunctionCall","src":"7084:12:12"},"nodeType":"YulExpressionStatement","src":"7084:12:12"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6985:117:12"},{"body":{"nodeType":"YulBlock","src":"7197:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7214:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7217:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7207:6:12"},"nodeType":"YulFunctionCall","src":"7207:12:12"},"nodeType":"YulExpressionStatement","src":"7207:12:12"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7108:117:12"},{"body":{"nodeType":"YulBlock","src":"7259:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7276:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7279:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7269:6:12"},"nodeType":"YulFunctionCall","src":"7269:88:12"},"nodeType":"YulExpressionStatement","src":"7269:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7376:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7366:6:12"},"nodeType":"YulFunctionCall","src":"7366:15:12"},"nodeType":"YulExpressionStatement","src":"7366:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7397:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7400:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7390:6:12"},"nodeType":"YulFunctionCall","src":"7390:15:12"},"nodeType":"YulExpressionStatement","src":"7390:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7231:180:12"},{"body":{"nodeType":"YulBlock","src":"7460:238:12","statements":[{"nodeType":"YulVariableDeclaration","src":"7470:58:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7492:6:12"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7522:4:12"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7500:21:12"},"nodeType":"YulFunctionCall","src":"7500:27:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:12"},"nodeType":"YulFunctionCall","src":"7488:40:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7474:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"7639:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7641:16:12"},"nodeType":"YulFunctionCall","src":"7641:18:12"},"nodeType":"YulExpressionStatement","src":"7641:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7582:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"7594:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7579:2:12"},"nodeType":"YulFunctionCall","src":"7579:34:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7618:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7630:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7615:2:12"},"nodeType":"YulFunctionCall","src":"7615:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7576:2:12"},"nodeType":"YulFunctionCall","src":"7576:62:12"},"nodeType":"YulIf","src":"7573:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7677:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7681:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7670:6:12"},"nodeType":"YulFunctionCall","src":"7670:22:12"},"nodeType":"YulExpressionStatement","src":"7670:22:12"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7446:6:12","type":""},{"name":"size","nodeType":"YulTypedName","src":"7454:4:12","type":""}],"src":"7417:281:12"},{"body":{"nodeType":"YulBlock","src":"7745:88:12","statements":[{"nodeType":"YulAssignment","src":"7755:30:12","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7765:18:12"},"nodeType":"YulFunctionCall","src":"7765:20:12"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7755:6:12"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7814:6:12"},{"name":"size","nodeType":"YulIdentifier","src":"7822:4:12"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7794:19:12"},"nodeType":"YulFunctionCall","src":"7794:33:12"},"nodeType":"YulExpressionStatement","src":"7794:33:12"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7729:4:12","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7738:6:12","type":""}],"src":"7704:129:12"},{"body":{"nodeType":"YulBlock","src":"7905:241:12","statements":[{"body":{"nodeType":"YulBlock","src":"8010:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8012:16:12"},"nodeType":"YulFunctionCall","src":"8012:18:12"},"nodeType":"YulExpressionStatement","src":"8012:18:12"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7982:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"7990:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7979:2:12"},"nodeType":"YulFunctionCall","src":"7979:30:12"},"nodeType":"YulIf","src":"7976:56:12"},{"nodeType":"YulAssignment","src":"8042:37:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8072:6:12"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8050:21:12"},"nodeType":"YulFunctionCall","src":"8050:29:12"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8042:4:12"}]},{"nodeType":"YulAssignment","src":"8116:23:12","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8128:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"8134:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8124:3:12"},"nodeType":"YulFunctionCall","src":"8124:15:12"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8116:4:12"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7889:6:12","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7900:4:12","type":""}],"src":"7839:307:12"},{"body":{"nodeType":"YulBlock","src":"8203:103:12","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8226:3:12"},{"name":"src","nodeType":"YulIdentifier","src":"8231:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"8236:6:12"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8213:12:12"},"nodeType":"YulFunctionCall","src":"8213:30:12"},"nodeType":"YulExpressionStatement","src":"8213:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8284:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"8289:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8280:3:12"},"nodeType":"YulFunctionCall","src":"8280:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"8298:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8273:6:12"},"nodeType":"YulFunctionCall","src":"8273:27:12"},"nodeType":"YulExpressionStatement","src":"8273:27:12"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8185:3:12","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8190:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"8195:6:12","type":""}],"src":"8152:154:12"},{"body":{"nodeType":"YulBlock","src":"8395:327:12","statements":[{"nodeType":"YulAssignment","src":"8405:74:12","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8471:6:12"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8430:40:12"},"nodeType":"YulFunctionCall","src":"8430:48:12"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8414:15:12"},"nodeType":"YulFunctionCall","src":"8414:65:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8405:5:12"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8495:5:12"},{"name":"length","nodeType":"YulIdentifier","src":"8502:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8488:6:12"},"nodeType":"YulFunctionCall","src":"8488:21:12"},"nodeType":"YulExpressionStatement","src":"8488:21:12"},{"nodeType":"YulVariableDeclaration","src":"8518:27:12","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8533:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"8540:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8529:3:12"},"nodeType":"YulFunctionCall","src":"8529:16:12"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8522:3:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"8583:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8585:77:12"},"nodeType":"YulFunctionCall","src":"8585:79:12"},"nodeType":"YulExpressionStatement","src":"8585:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8564:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"8569:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8560:3:12"},"nodeType":"YulFunctionCall","src":"8560:16:12"},{"name":"end","nodeType":"YulIdentifier","src":"8578:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8557:2:12"},"nodeType":"YulFunctionCall","src":"8557:25:12"},"nodeType":"YulIf","src":"8554:112:12"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8699:3:12"},{"name":"dst","nodeType":"YulIdentifier","src":"8704:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"8709:6:12"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"8675:23:12"},"nodeType":"YulFunctionCall","src":"8675:41:12"},"nodeType":"YulExpressionStatement","src":"8675:41:12"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8368:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"8373:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"8381:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8389:5:12","type":""}],"src":"8312:410:12"},{"body":{"nodeType":"YulBlock","src":"8802:277:12","statements":[{"body":{"nodeType":"YulBlock","src":"8851:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8853:77:12"},"nodeType":"YulFunctionCall","src":"8853:79:12"},"nodeType":"YulExpressionStatement","src":"8853:79:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8830:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"8838:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8826:3:12"},"nodeType":"YulFunctionCall","src":"8826:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"8845:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8822:3:12"},"nodeType":"YulFunctionCall","src":"8822:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8815:6:12"},"nodeType":"YulFunctionCall","src":"8815:35:12"},"nodeType":"YulIf","src":"8812:122:12"},{"nodeType":"YulVariableDeclaration","src":"8943:34:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8970:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8957:12:12"},"nodeType":"YulFunctionCall","src":"8957:20:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8947:6:12","type":""}]},{"nodeType":"YulAssignment","src":"8986:87:12","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9046:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"9054:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9042:3:12"},"nodeType":"YulFunctionCall","src":"9042:17:12"},{"name":"length","nodeType":"YulIdentifier","src":"9061:6:12"},{"name":"end","nodeType":"YulIdentifier","src":"9069:3:12"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8995:46:12"},"nodeType":"YulFunctionCall","src":"8995:78:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8986:5:12"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8780:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"8788:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8796:5:12","type":""}],"src":"8741:338:12"},{"body":{"nodeType":"YulBlock","src":"9211:817:12","statements":[{"body":{"nodeType":"YulBlock","src":"9258:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9260:77:12"},"nodeType":"YulFunctionCall","src":"9260:79:12"},"nodeType":"YulExpressionStatement","src":"9260:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9232:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"9241:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9228:3:12"},"nodeType":"YulFunctionCall","src":"9228:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"9253:3:12","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9224:3:12"},"nodeType":"YulFunctionCall","src":"9224:33:12"},"nodeType":"YulIf","src":"9221:120:12"},{"nodeType":"YulBlock","src":"9351:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"9366:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"9380:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9370:6:12","type":""}]},{"nodeType":"YulAssignment","src":"9395:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9430:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"9441:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9426:3:12"},"nodeType":"YulFunctionCall","src":"9426:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9450:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9405:20:12"},"nodeType":"YulFunctionCall","src":"9405:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9395:6:12"}]}]},{"nodeType":"YulBlock","src":"9478:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"9493:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"9507:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9497:6:12","type":""}]},{"nodeType":"YulAssignment","src":"9523:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9558:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"9569:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9554:3:12"},"nodeType":"YulFunctionCall","src":"9554:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9578:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9533:20:12"},"nodeType":"YulFunctionCall","src":"9533:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9523:6:12"}]}]},{"nodeType":"YulBlock","src":"9606:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"9621:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"9635:2:12","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9625:6:12","type":""}]},{"nodeType":"YulAssignment","src":"9651:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9686:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"9697:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9682:3:12"},"nodeType":"YulFunctionCall","src":"9682:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9706:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9661:20:12"},"nodeType":"YulFunctionCall","src":"9661:53:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9651:6:12"}]}]},{"nodeType":"YulBlock","src":"9734:287:12","statements":[{"nodeType":"YulVariableDeclaration","src":"9749:46:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9780:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9791:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9776:3:12"},"nodeType":"YulFunctionCall","src":"9776:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9763:12:12"},"nodeType":"YulFunctionCall","src":"9763:32:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9753:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"9842:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9844:77:12"},"nodeType":"YulFunctionCall","src":"9844:79:12"},"nodeType":"YulExpressionStatement","src":"9844:79:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9814:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"9822:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9811:2:12"},"nodeType":"YulFunctionCall","src":"9811:30:12"},"nodeType":"YulIf","src":"9808:117:12"},{"nodeType":"YulAssignment","src":"9939:72:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9983:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"9994:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9979:3:12"},"nodeType":"YulFunctionCall","src":"9979:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10003:7:12"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9949:29:12"},"nodeType":"YulFunctionCall","src":"9949:62:12"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9939:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9157:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9168:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9180:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9188:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9196:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9204:6:12","type":""}],"src":"9085:943:12"},{"body":{"nodeType":"YulBlock","src":"10117:391:12","statements":[{"body":{"nodeType":"YulBlock","src":"10163:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10165:77:12"},"nodeType":"YulFunctionCall","src":"10165:79:12"},"nodeType":"YulExpressionStatement","src":"10165:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10138:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"10147:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10134:3:12"},"nodeType":"YulFunctionCall","src":"10134:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"10159:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10130:3:12"},"nodeType":"YulFunctionCall","src":"10130:32:12"},"nodeType":"YulIf","src":"10127:119:12"},{"nodeType":"YulBlock","src":"10256:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"10271:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"10285:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10275:6:12","type":""}]},{"nodeType":"YulAssignment","src":"10300:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10335:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"10346:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10331:3:12"},"nodeType":"YulFunctionCall","src":"10331:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10355:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10310:20:12"},"nodeType":"YulFunctionCall","src":"10310:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10300:6:12"}]}]},{"nodeType":"YulBlock","src":"10383:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"10398:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"10412:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10402:6:12","type":""}]},{"nodeType":"YulAssignment","src":"10428:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10463:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"10474:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:12"},"nodeType":"YulFunctionCall","src":"10459:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10483:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10438:20:12"},"nodeType":"YulFunctionCall","src":"10438:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10428:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10079:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10090:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10102:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10110:6:12","type":""}],"src":"10034:474:12"},{"body":{"nodeType":"YulBlock","src":"10542:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10559:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10562:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10552:6:12"},"nodeType":"YulFunctionCall","src":"10552:88:12"},"nodeType":"YulExpressionStatement","src":"10552:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10656:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10659:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10649:6:12"},"nodeType":"YulFunctionCall","src":"10649:15:12"},"nodeType":"YulExpressionStatement","src":"10649:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10680:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10683:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10673:6:12"},"nodeType":"YulFunctionCall","src":"10673:15:12"},"nodeType":"YulExpressionStatement","src":"10673:15:12"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10514:180:12"},{"body":{"nodeType":"YulBlock","src":"10751:269:12","statements":[{"nodeType":"YulAssignment","src":"10761:22:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10775:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"10781:1:12","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10771:3:12"},"nodeType":"YulFunctionCall","src":"10771:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10761:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"10792:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10822:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"10828:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10818:3:12"},"nodeType":"YulFunctionCall","src":"10818:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10796:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"10869:51:12","statements":[{"nodeType":"YulAssignment","src":"10883:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10897:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"10905:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10893:3:12"},"nodeType":"YulFunctionCall","src":"10893:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10883:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10849:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10842:6:12"},"nodeType":"YulFunctionCall","src":"10842:26:12"},"nodeType":"YulIf","src":"10839:81:12"},{"body":{"nodeType":"YulBlock","src":"10972:42:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10986:16:12"},"nodeType":"YulFunctionCall","src":"10986:18:12"},"nodeType":"YulExpressionStatement","src":"10986:18:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10936:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10959:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"10967:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10956:2:12"},"nodeType":"YulFunctionCall","src":"10956:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10933:2:12"},"nodeType":"YulFunctionCall","src":"10933:38:12"},"nodeType":"YulIf","src":"10930:84:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10735:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10744:6:12","type":""}],"src":"10700:320:12"},{"body":{"nodeType":"YulBlock","src":"11132:114:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11154:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"11162:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11150:3:12"},"nodeType":"YulFunctionCall","src":"11150:14:12"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"11166:34:12","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11143:6:12"},"nodeType":"YulFunctionCall","src":"11143:58:12"},"nodeType":"YulExpressionStatement","src":"11143:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11222:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"11230:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11218:3:12"},"nodeType":"YulFunctionCall","src":"11218:15:12"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"11235:3:12","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11211:6:12"},"nodeType":"YulFunctionCall","src":"11211:28:12"},"nodeType":"YulExpressionStatement","src":"11211:28:12"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11124:6:12","type":""}],"src":"11026:220:12"},{"body":{"nodeType":"YulBlock","src":"11398:220:12","statements":[{"nodeType":"YulAssignment","src":"11408:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11474:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"11479:2:12","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11415:58:12"},"nodeType":"YulFunctionCall","src":"11415:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11408:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11580:3:12"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"11491:88:12"},"nodeType":"YulFunctionCall","src":"11491:93:12"},"nodeType":"YulExpressionStatement","src":"11491:93:12"},{"nodeType":"YulAssignment","src":"11593:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11604:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"11609:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11600:3:12"},"nodeType":"YulFunctionCall","src":"11600:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11593:3:12"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11386:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11394:3:12","type":""}],"src":"11252:366:12"},{"body":{"nodeType":"YulBlock","src":"11795:248:12","statements":[{"nodeType":"YulAssignment","src":"11805:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11817:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11828:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11813:3:12"},"nodeType":"YulFunctionCall","src":"11813:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11805:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11852:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11863:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11848:3:12"},"nodeType":"YulFunctionCall","src":"11848:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11871:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"11877:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11867:3:12"},"nodeType":"YulFunctionCall","src":"11867:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11841:6:12"},"nodeType":"YulFunctionCall","src":"11841:47:12"},"nodeType":"YulExpressionStatement","src":"11841:47:12"},{"nodeType":"YulAssignment","src":"11897:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12031:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11905:124:12"},"nodeType":"YulFunctionCall","src":"11905:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11897:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11775:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11790:4:12","type":""}],"src":"11624:419:12"},{"body":{"nodeType":"YulBlock","src":"12155:143:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12177:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"12185:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12173:3:12"},"nodeType":"YulFunctionCall","src":"12173:14:12"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"12189:34:12","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12166:6:12"},"nodeType":"YulFunctionCall","src":"12166:58:12"},"nodeType":"YulExpressionStatement","src":"12166:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12245:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"12253:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12241:3:12"},"nodeType":"YulFunctionCall","src":"12241:15:12"},{"hexValue":"6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"12258:32:12","type":"","value":"ken owner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12234:6:12"},"nodeType":"YulFunctionCall","src":"12234:57:12"},"nodeType":"YulExpressionStatement","src":"12234:57:12"}]},"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12147:6:12","type":""}],"src":"12049:249:12"},{"body":{"nodeType":"YulBlock","src":"12450:220:12","statements":[{"nodeType":"YulAssignment","src":"12460:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12526:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"12531:2:12","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12467:58:12"},"nodeType":"YulFunctionCall","src":"12467:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12460:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12632:3:12"}],"functionName":{"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulIdentifier","src":"12543:88:12"},"nodeType":"YulFunctionCall","src":"12543:93:12"},"nodeType":"YulExpressionStatement","src":"12543:93:12"},{"nodeType":"YulAssignment","src":"12645:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12656:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"12661:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12652:3:12"},"nodeType":"YulFunctionCall","src":"12652:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12645:3:12"}]}]},"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12438:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12446:3:12","type":""}],"src":"12304:366:12"},{"body":{"nodeType":"YulBlock","src":"12847:248:12","statements":[{"nodeType":"YulAssignment","src":"12857:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12869:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12880:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12865:3:12"},"nodeType":"YulFunctionCall","src":"12865:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12857:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12904:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12915:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12900:3:12"},"nodeType":"YulFunctionCall","src":"12900:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12923:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"12929:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12919:3:12"},"nodeType":"YulFunctionCall","src":"12919:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12893:6:12"},"nodeType":"YulFunctionCall","src":"12893:47:12"},"nodeType":"YulExpressionStatement","src":"12893:47:12"},{"nodeType":"YulAssignment","src":"12949:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13083:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12957:124:12"},"nodeType":"YulFunctionCall","src":"12957:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12949:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12827:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12842:4:12","type":""}],"src":"12676:419:12"},{"body":{"nodeType":"YulBlock","src":"13207:127:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13229:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"13237:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13225:3:12"},"nodeType":"YulFunctionCall","src":"13225:14:12"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"13241:34:12","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13218:6:12"},"nodeType":"YulFunctionCall","src":"13218:58:12"},"nodeType":"YulExpressionStatement","src":"13218:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13297:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"13305:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13293:3:12"},"nodeType":"YulFunctionCall","src":"13293:15:12"},{"hexValue":"72206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"13310:16:12","type":"","value":"r nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13286:6:12"},"nodeType":"YulFunctionCall","src":"13286:41:12"},"nodeType":"YulExpressionStatement","src":"13286:41:12"}]},"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13199:6:12","type":""}],"src":"13101:233:12"},{"body":{"nodeType":"YulBlock","src":"13486:220:12","statements":[{"nodeType":"YulAssignment","src":"13496:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13562:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"13567:2:12","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13503:58:12"},"nodeType":"YulFunctionCall","src":"13503:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13496:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13668:3:12"}],"functionName":{"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulIdentifier","src":"13579:88:12"},"nodeType":"YulFunctionCall","src":"13579:93:12"},"nodeType":"YulExpressionStatement","src":"13579:93:12"},{"nodeType":"YulAssignment","src":"13681:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13692:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"13697:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13688:3:12"},"nodeType":"YulFunctionCall","src":"13688:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13681:3:12"}]}]},"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13474:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13482:3:12","type":""}],"src":"13340:366:12"},{"body":{"nodeType":"YulBlock","src":"13883:248:12","statements":[{"nodeType":"YulAssignment","src":"13893:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13905:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13916:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13901:3:12"},"nodeType":"YulFunctionCall","src":"13901:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13893:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13940:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13951:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13936:3:12"},"nodeType":"YulFunctionCall","src":"13936:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13959:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"13965:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13955:3:12"},"nodeType":"YulFunctionCall","src":"13955:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13929:6:12"},"nodeType":"YulFunctionCall","src":"13929:47:12"},"nodeType":"YulExpressionStatement","src":"13929:47:12"},{"nodeType":"YulAssignment","src":"13985:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14119:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13993:124:12"},"nodeType":"YulFunctionCall","src":"13993:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13985:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13863:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13878:4:12","type":""}],"src":"13712:419:12"},{"body":{"nodeType":"YulBlock","src":"14243:68:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14265:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"14273:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14261:3:12"},"nodeType":"YulFunctionCall","src":"14261:14:12"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"14277:26:12","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14254:6:12"},"nodeType":"YulFunctionCall","src":"14254:50:12"},"nodeType":"YulExpressionStatement","src":"14254:50:12"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14235:6:12","type":""}],"src":"14137:174:12"},{"body":{"nodeType":"YulBlock","src":"14463:220:12","statements":[{"nodeType":"YulAssignment","src":"14473:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14539:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"14544:2:12","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14480:58:12"},"nodeType":"YulFunctionCall","src":"14480:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14473:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14645:3:12"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"14556:88:12"},"nodeType":"YulFunctionCall","src":"14556:93:12"},"nodeType":"YulExpressionStatement","src":"14556:93:12"},{"nodeType":"YulAssignment","src":"14658:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14669:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"14674:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14665:3:12"},"nodeType":"YulFunctionCall","src":"14665:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14658:3:12"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14451:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14459:3:12","type":""}],"src":"14317:366:12"},{"body":{"nodeType":"YulBlock","src":"14860:248:12","statements":[{"nodeType":"YulAssignment","src":"14870:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14882:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14893:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14878:3:12"},"nodeType":"YulFunctionCall","src":"14878:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14870:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14917:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14928:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14913:3:12"},"nodeType":"YulFunctionCall","src":"14913:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14936:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"14942:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14932:3:12"},"nodeType":"YulFunctionCall","src":"14932:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14906:6:12"},"nodeType":"YulFunctionCall","src":"14906:47:12"},"nodeType":"YulExpressionStatement","src":"14906:47:12"},{"nodeType":"YulAssignment","src":"14962:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15096:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14970:124:12"},"nodeType":"YulFunctionCall","src":"14970:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14962:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14840:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14855:4:12","type":""}],"src":"14689:419:12"},{"body":{"nodeType":"YulBlock","src":"15220:122:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15242:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"15250:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15238:3:12"},"nodeType":"YulFunctionCall","src":"15238:14:12"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"15254:34:12","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15231:6:12"},"nodeType":"YulFunctionCall","src":"15231:58:12"},"nodeType":"YulExpressionStatement","src":"15231:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15310:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"15318:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15306:3:12"},"nodeType":"YulFunctionCall","src":"15306:15:12"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15323:11:12","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15299:6:12"},"nodeType":"YulFunctionCall","src":"15299:36:12"},"nodeType":"YulExpressionStatement","src":"15299:36:12"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15212:6:12","type":""}],"src":"15114:228:12"},{"body":{"nodeType":"YulBlock","src":"15494:220:12","statements":[{"nodeType":"YulAssignment","src":"15504:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15570:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"15575:2:12","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15511:58:12"},"nodeType":"YulFunctionCall","src":"15511:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15504:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15676:3:12"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"15587:88:12"},"nodeType":"YulFunctionCall","src":"15587:93:12"},"nodeType":"YulExpressionStatement","src":"15587:93:12"},{"nodeType":"YulAssignment","src":"15689:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15700:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"15705:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15696:3:12"},"nodeType":"YulFunctionCall","src":"15696:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15689:3:12"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15482:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15490:3:12","type":""}],"src":"15348:366:12"},{"body":{"nodeType":"YulBlock","src":"15891:248:12","statements":[{"nodeType":"YulAssignment","src":"15901:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15913:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15924:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15909:3:12"},"nodeType":"YulFunctionCall","src":"15909:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15901:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15948:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15959:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15944:3:12"},"nodeType":"YulFunctionCall","src":"15944:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15967:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"15973:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15963:3:12"},"nodeType":"YulFunctionCall","src":"15963:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15937:6:12"},"nodeType":"YulFunctionCall","src":"15937:47:12"},"nodeType":"YulExpressionStatement","src":"15937:47:12"},{"nodeType":"YulAssignment","src":"15993:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16127:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16001:124:12"},"nodeType":"YulFunctionCall","src":"16001:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15993:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15871:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15886:4:12","type":""}],"src":"15720:419:12"},{"body":{"nodeType":"YulBlock","src":"16259:34:12","statements":[{"nodeType":"YulAssignment","src":"16269:18:12","value":{"name":"pos","nodeType":"YulIdentifier","src":"16284:3:12"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16269:11:12"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16231:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"16236:6:12","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16247:11:12","type":""}],"src":"16145:148:12"},{"body":{"nodeType":"YulBlock","src":"16409:267:12","statements":[{"nodeType":"YulVariableDeclaration","src":"16419:53:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16466:5:12"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16433:32:12"},"nodeType":"YulFunctionCall","src":"16433:39:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16423:6:12","type":""}]},{"nodeType":"YulAssignment","src":"16481:96:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16565:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"16570:6:12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16488:76:12"},"nodeType":"YulFunctionCall","src":"16488:89:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16481:3:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16612:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"16619:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16608:3:12"},"nodeType":"YulFunctionCall","src":"16608:16:12"},{"name":"pos","nodeType":"YulIdentifier","src":"16626:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"16631:6:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"16586:21:12"},"nodeType":"YulFunctionCall","src":"16586:52:12"},"nodeType":"YulExpressionStatement","src":"16586:52:12"},{"nodeType":"YulAssignment","src":"16647:23:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16658:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"16663:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16654:3:12"},"nodeType":"YulFunctionCall","src":"16654:16:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16647:3:12"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16390:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16397:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16405:3:12","type":""}],"src":"16299:377:12"},{"body":{"nodeType":"YulBlock","src":"16866:251:12","statements":[{"nodeType":"YulAssignment","src":"16877:102:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16966:6:12"},{"name":"pos","nodeType":"YulIdentifier","src":"16975:3:12"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16884:81:12"},"nodeType":"YulFunctionCall","src":"16884:95:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16877:3:12"}]},{"nodeType":"YulAssignment","src":"16989:102:12","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17078:6:12"},{"name":"pos","nodeType":"YulIdentifier","src":"17087:3:12"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16996:81:12"},"nodeType":"YulFunctionCall","src":"16996:95:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16989:3:12"}]},{"nodeType":"YulAssignment","src":"17101:10:12","value":{"name":"pos","nodeType":"YulIdentifier","src":"17108:3:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17101:3:12"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16837:3:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16843:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16851:6:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16862:3:12","type":""}],"src":"16682:435:12"},{"body":{"nodeType":"YulBlock","src":"17229:118:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17251:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"17259:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17247:3:12"},"nodeType":"YulFunctionCall","src":"17247:14:12"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"17263:34:12","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17240:6:12"},"nodeType":"YulFunctionCall","src":"17240:58:12"},"nodeType":"YulExpressionStatement","src":"17240:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17319:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"17327:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17315:3:12"},"nodeType":"YulFunctionCall","src":"17315:15:12"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"17332:7:12","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17308:6:12"},"nodeType":"YulFunctionCall","src":"17308:32:12"},"nodeType":"YulExpressionStatement","src":"17308:32:12"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17221:6:12","type":""}],"src":"17123:224:12"},{"body":{"nodeType":"YulBlock","src":"17499:220:12","statements":[{"nodeType":"YulAssignment","src":"17509:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17575:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"17580:2:12","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17516:58:12"},"nodeType":"YulFunctionCall","src":"17516:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17509:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17681:3:12"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"17592:88:12"},"nodeType":"YulFunctionCall","src":"17592:93:12"},"nodeType":"YulExpressionStatement","src":"17592:93:12"},{"nodeType":"YulAssignment","src":"17694:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17705:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"17710:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17701:3:12"},"nodeType":"YulFunctionCall","src":"17701:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17694:3:12"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17487:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17495:3:12","type":""}],"src":"17353:366:12"},{"body":{"nodeType":"YulBlock","src":"17896:248:12","statements":[{"nodeType":"YulAssignment","src":"17906:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17918:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"17929:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17914:3:12"},"nodeType":"YulFunctionCall","src":"17914:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17906:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17953:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"17964:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17949:3:12"},"nodeType":"YulFunctionCall","src":"17949:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17972:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"17978:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17968:3:12"},"nodeType":"YulFunctionCall","src":"17968:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17942:6:12"},"nodeType":"YulFunctionCall","src":"17942:47:12"},"nodeType":"YulExpressionStatement","src":"17942:47:12"},{"nodeType":"YulAssignment","src":"17998:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18132:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18006:124:12"},"nodeType":"YulFunctionCall","src":"18006:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17998:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17876:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17891:4:12","type":""}],"src":"17725:419:12"},{"body":{"nodeType":"YulBlock","src":"18256:117:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18278:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"18286:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18274:3:12"},"nodeType":"YulFunctionCall","src":"18274:14:12"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"18290:34:12","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18267:6:12"},"nodeType":"YulFunctionCall","src":"18267:58:12"},"nodeType":"YulExpressionStatement","src":"18267:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18346:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"18354:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18342:3:12"},"nodeType":"YulFunctionCall","src":"18342:15:12"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"18359:6:12","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18335:6:12"},"nodeType":"YulFunctionCall","src":"18335:31:12"},"nodeType":"YulExpressionStatement","src":"18335:31:12"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18248:6:12","type":""}],"src":"18150:223:12"},{"body":{"nodeType":"YulBlock","src":"18525:220:12","statements":[{"nodeType":"YulAssignment","src":"18535:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18601:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"18606:2:12","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18542:58:12"},"nodeType":"YulFunctionCall","src":"18542:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18535:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18707:3:12"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"18618:88:12"},"nodeType":"YulFunctionCall","src":"18618:93:12"},"nodeType":"YulExpressionStatement","src":"18618:93:12"},{"nodeType":"YulAssignment","src":"18720:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18731:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"18736:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18727:3:12"},"nodeType":"YulFunctionCall","src":"18727:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18720:3:12"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18513:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18521:3:12","type":""}],"src":"18379:366:12"},{"body":{"nodeType":"YulBlock","src":"18922:248:12","statements":[{"nodeType":"YulAssignment","src":"18932:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18944:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"18955:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18940:3:12"},"nodeType":"YulFunctionCall","src":"18940:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18932:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18979:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"18990:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18975:3:12"},"nodeType":"YulFunctionCall","src":"18975:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18998:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"19004:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18994:3:12"},"nodeType":"YulFunctionCall","src":"18994:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18968:6:12"},"nodeType":"YulFunctionCall","src":"18968:47:12"},"nodeType":"YulExpressionStatement","src":"18968:47:12"},{"nodeType":"YulAssignment","src":"19024:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19158:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19032:124:12"},"nodeType":"YulFunctionCall","src":"19032:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19024:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18902:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18917:4:12","type":""}],"src":"18751:419:12"},{"body":{"nodeType":"YulBlock","src":"19204:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19221:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19224:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19214:6:12"},"nodeType":"YulFunctionCall","src":"19214:88:12"},"nodeType":"YulExpressionStatement","src":"19214:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19318:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19321:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19311:6:12"},"nodeType":"YulFunctionCall","src":"19311:15:12"},"nodeType":"YulExpressionStatement","src":"19311:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19342:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19345:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19335:6:12"},"nodeType":"YulFunctionCall","src":"19335:15:12"},"nodeType":"YulExpressionStatement","src":"19335:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19176:180:12"},{"body":{"nodeType":"YulBlock","src":"19407:146:12","statements":[{"nodeType":"YulAssignment","src":"19417:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19440:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19422:17:12"},"nodeType":"YulFunctionCall","src":"19422:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19417:1:12"}]},{"nodeType":"YulAssignment","src":"19451:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19474:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19456:17:12"},"nodeType":"YulFunctionCall","src":"19456:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19451:1:12"}]},{"body":{"nodeType":"YulBlock","src":"19498:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19500:16:12"},"nodeType":"YulFunctionCall","src":"19500:18:12"},"nodeType":"YulExpressionStatement","src":"19500:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19492:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"19495:1:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19489:2:12"},"nodeType":"YulFunctionCall","src":"19489:8:12"},"nodeType":"YulIf","src":"19486:34:12"},{"nodeType":"YulAssignment","src":"19530:17:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19542:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"19545:1:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19538:3:12"},"nodeType":"YulFunctionCall","src":"19538:9:12"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19530:4:12"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19393:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"19396:1:12","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19402:4:12","type":""}],"src":"19362:191:12"},{"body":{"nodeType":"YulBlock","src":"19603:261:12","statements":[{"nodeType":"YulAssignment","src":"19613:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19636:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19618:17:12"},"nodeType":"YulFunctionCall","src":"19618:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19613:1:12"}]},{"nodeType":"YulAssignment","src":"19647:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19670:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19652:17:12"},"nodeType":"YulFunctionCall","src":"19652:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19647:1:12"}]},{"body":{"nodeType":"YulBlock","src":"19810:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19812:16:12"},"nodeType":"YulFunctionCall","src":"19812:18:12"},"nodeType":"YulExpressionStatement","src":"19812:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19731:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19738:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"19806:1:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19734:3:12"},"nodeType":"YulFunctionCall","src":"19734:74:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19728:2:12"},"nodeType":"YulFunctionCall","src":"19728:81:12"},"nodeType":"YulIf","src":"19725:107:12"},{"nodeType":"YulAssignment","src":"19842:16:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19853:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"19856:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19849:3:12"},"nodeType":"YulFunctionCall","src":"19849:9:12"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19842:3:12"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19590:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"19593:1:12","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19599:3:12","type":""}],"src":"19559:305:12"},{"body":{"nodeType":"YulBlock","src":"19976:69:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19998:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"20006:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19994:3:12"},"nodeType":"YulFunctionCall","src":"19994:14:12"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"20010:27:12","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19987:6:12"},"nodeType":"YulFunctionCall","src":"19987:51:12"},"nodeType":"YulExpressionStatement","src":"19987:51:12"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19968:6:12","type":""}],"src":"19870:175:12"},{"body":{"nodeType":"YulBlock","src":"20197:220:12","statements":[{"nodeType":"YulAssignment","src":"20207:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20273:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"20278:2:12","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20214:58:12"},"nodeType":"YulFunctionCall","src":"20214:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20207:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20379:3:12"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"20290:88:12"},"nodeType":"YulFunctionCall","src":"20290:93:12"},"nodeType":"YulExpressionStatement","src":"20290:93:12"},{"nodeType":"YulAssignment","src":"20392:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20403:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"20408:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20399:3:12"},"nodeType":"YulFunctionCall","src":"20399:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20392:3:12"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20185:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20193:3:12","type":""}],"src":"20051:366:12"},{"body":{"nodeType":"YulBlock","src":"20594:248:12","statements":[{"nodeType":"YulAssignment","src":"20604:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20616:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"20627:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20612:3:12"},"nodeType":"YulFunctionCall","src":"20612:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20604:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20651:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"20662:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20647:3:12"},"nodeType":"YulFunctionCall","src":"20647:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20670:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"20676:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20666:3:12"},"nodeType":"YulFunctionCall","src":"20666:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20640:6:12"},"nodeType":"YulFunctionCall","src":"20640:47:12"},"nodeType":"YulExpressionStatement","src":"20640:47:12"},{"nodeType":"YulAssignment","src":"20696:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20830:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20704:124:12"},"nodeType":"YulFunctionCall","src":"20704:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20696:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20574:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20589:4:12","type":""}],"src":"20423:419:12"},{"body":{"nodeType":"YulBlock","src":"20954:131:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20976:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"20984:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20972:3:12"},"nodeType":"YulFunctionCall","src":"20972:14:12"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"20988:34:12","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20965:6:12"},"nodeType":"YulFunctionCall","src":"20965:58:12"},"nodeType":"YulExpressionStatement","src":"20965:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21044:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"21052:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21040:3:12"},"nodeType":"YulFunctionCall","src":"21040:15:12"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"21057:20:12","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21033:6:12"},"nodeType":"YulFunctionCall","src":"21033:45:12"},"nodeType":"YulExpressionStatement","src":"21033:45:12"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20946:6:12","type":""}],"src":"20848:237:12"},{"body":{"nodeType":"YulBlock","src":"21237:220:12","statements":[{"nodeType":"YulAssignment","src":"21247:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21313:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"21318:2:12","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21254:58:12"},"nodeType":"YulFunctionCall","src":"21254:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21247:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21419:3:12"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"21330:88:12"},"nodeType":"YulFunctionCall","src":"21330:93:12"},"nodeType":"YulExpressionStatement","src":"21330:93:12"},{"nodeType":"YulAssignment","src":"21432:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21443:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"21448:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21439:3:12"},"nodeType":"YulFunctionCall","src":"21439:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21432:3:12"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21225:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21233:3:12","type":""}],"src":"21091:366:12"},{"body":{"nodeType":"YulBlock","src":"21634:248:12","statements":[{"nodeType":"YulAssignment","src":"21644:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21656:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"21667:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21652:3:12"},"nodeType":"YulFunctionCall","src":"21652:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21644:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21691:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"21702:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21687:3:12"},"nodeType":"YulFunctionCall","src":"21687:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21710:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"21716:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21706:3:12"},"nodeType":"YulFunctionCall","src":"21706:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21680:6:12"},"nodeType":"YulFunctionCall","src":"21680:47:12"},"nodeType":"YulExpressionStatement","src":"21680:47:12"},{"nodeType":"YulAssignment","src":"21736:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21870:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21744:124:12"},"nodeType":"YulFunctionCall","src":"21744:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21736:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21614:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21629:4:12","type":""}],"src":"21463:419:12"},{"body":{"nodeType":"YulBlock","src":"21931:190:12","statements":[{"nodeType":"YulAssignment","src":"21941:33:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21968:5:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21950:17:12"},"nodeType":"YulFunctionCall","src":"21950:24:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21941:5:12"}]},{"body":{"nodeType":"YulBlock","src":"22064:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22066:16:12"},"nodeType":"YulFunctionCall","src":"22066:18:12"},"nodeType":"YulExpressionStatement","src":"22066:18:12"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21989:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"21996:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21986:2:12"},"nodeType":"YulFunctionCall","src":"21986:77:12"},"nodeType":"YulIf","src":"21983:103:12"},{"nodeType":"YulAssignment","src":"22095:20:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22106:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"22113:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22102:3:12"},"nodeType":"YulFunctionCall","src":"22102:13:12"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22095:3:12"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21917:5:12","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21927:3:12","type":""}],"src":"21888:233:12"},{"body":{"nodeType":"YulBlock","src":"22155:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22172:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22175:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22165:6:12"},"nodeType":"YulFunctionCall","src":"22165:88:12"},"nodeType":"YulExpressionStatement","src":"22165:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22269:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22272:4:12","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22262:6:12"},"nodeType":"YulFunctionCall","src":"22262:15:12"},"nodeType":"YulExpressionStatement","src":"22262:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22293:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22296:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22286:6:12"},"nodeType":"YulFunctionCall","src":"22286:15:12"},"nodeType":"YulExpressionStatement","src":"22286:15:12"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"22127:180:12"},{"body":{"nodeType":"YulBlock","src":"22355:143:12","statements":[{"nodeType":"YulAssignment","src":"22365:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22388:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22370:17:12"},"nodeType":"YulFunctionCall","src":"22370:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22365:1:12"}]},{"nodeType":"YulAssignment","src":"22399:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22422:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22404:17:12"},"nodeType":"YulFunctionCall","src":"22404:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22399:1:12"}]},{"body":{"nodeType":"YulBlock","src":"22446:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"22448:16:12"},"nodeType":"YulFunctionCall","src":"22448:18:12"},"nodeType":"YulExpressionStatement","src":"22448:18:12"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22443:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22436:6:12"},"nodeType":"YulFunctionCall","src":"22436:9:12"},"nodeType":"YulIf","src":"22433:35:12"},{"nodeType":"YulAssignment","src":"22478:14:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22487:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"22490:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"22483:3:12"},"nodeType":"YulFunctionCall","src":"22483:9:12"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"22478:1:12"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22344:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"22347:1:12","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"22353:1:12","type":""}],"src":"22313:185:12"},{"body":{"nodeType":"YulBlock","src":"22538:142:12","statements":[{"nodeType":"YulAssignment","src":"22548:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22571:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22553:17:12"},"nodeType":"YulFunctionCall","src":"22553:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22548:1:12"}]},{"nodeType":"YulAssignment","src":"22582:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22605:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22587:17:12"},"nodeType":"YulFunctionCall","src":"22587:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22582:1:12"}]},{"body":{"nodeType":"YulBlock","src":"22629:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"22631:16:12"},"nodeType":"YulFunctionCall","src":"22631:18:12"},"nodeType":"YulExpressionStatement","src":"22631:18:12"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22626:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22619:6:12"},"nodeType":"YulFunctionCall","src":"22619:9:12"},"nodeType":"YulIf","src":"22616:35:12"},{"nodeType":"YulAssignment","src":"22660:14:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22669:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"22672:1:12"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"22665:3:12"},"nodeType":"YulFunctionCall","src":"22665:9:12"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"22660:1:12"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22527:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"22530:1:12","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"22536:1:12","type":""}],"src":"22504:176:12"},{"body":{"nodeType":"YulBlock","src":"22714:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22731:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22734:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22724:6:12"},"nodeType":"YulFunctionCall","src":"22724:88:12"},"nodeType":"YulExpressionStatement","src":"22724:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22828:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22831:4:12","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22821:6:12"},"nodeType":"YulFunctionCall","src":"22821:15:12"},"nodeType":"YulExpressionStatement","src":"22821:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22852:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22855:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22845:6:12"},"nodeType":"YulFunctionCall","src":"22845:15:12"},"nodeType":"YulExpressionStatement","src":"22845:15:12"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"22686:180:12"},{"body":{"nodeType":"YulBlock","src":"22930:40:12","statements":[{"nodeType":"YulAssignment","src":"22941:22:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22957:5:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22951:5:12"},"nodeType":"YulFunctionCall","src":"22951:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22941:6:12"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22913:5:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22923:6:12","type":""}],"src":"22872:98:12"},{"body":{"nodeType":"YulBlock","src":"23071:73:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23088:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"23093:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23081:6:12"},"nodeType":"YulFunctionCall","src":"23081:19:12"},"nodeType":"YulExpressionStatement","src":"23081:19:12"},{"nodeType":"YulAssignment","src":"23109:29:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23128:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"23133:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23124:3:12"},"nodeType":"YulFunctionCall","src":"23124:14:12"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"23109:11:12"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23043:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"23048:6:12","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"23059:11:12","type":""}],"src":"22976:168:12"},{"body":{"nodeType":"YulBlock","src":"23240:270:12","statements":[{"nodeType":"YulVariableDeclaration","src":"23250:52:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23296:5:12"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"23264:31:12"},"nodeType":"YulFunctionCall","src":"23264:38:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23254:6:12","type":""}]},{"nodeType":"YulAssignment","src":"23311:77:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23376:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"23381:6:12"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23318:57:12"},"nodeType":"YulFunctionCall","src":"23318:70:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23311:3:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23423:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"23430:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23419:3:12"},"nodeType":"YulFunctionCall","src":"23419:16:12"},{"name":"pos","nodeType":"YulIdentifier","src":"23437:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"23442:6:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"23397:21:12"},"nodeType":"YulFunctionCall","src":"23397:52:12"},"nodeType":"YulExpressionStatement","src":"23397:52:12"},{"nodeType":"YulAssignment","src":"23458:46:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23469:3:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23496:6:12"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"23474:21:12"},"nodeType":"YulFunctionCall","src":"23474:29:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23465:3:12"},"nodeType":"YulFunctionCall","src":"23465:39:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23458:3:12"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23221:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23228:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23236:3:12","type":""}],"src":"23150:360:12"},{"body":{"nodeType":"YulBlock","src":"23716:440:12","statements":[{"nodeType":"YulAssignment","src":"23726:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23738:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"23749:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23734:3:12"},"nodeType":"YulFunctionCall","src":"23734:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23726:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23807:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23820:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"23831:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23816:3:12"},"nodeType":"YulFunctionCall","src":"23816:17:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23763:43:12"},"nodeType":"YulFunctionCall","src":"23763:71:12"},"nodeType":"YulExpressionStatement","src":"23763:71:12"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23888:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23901:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"23912:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23897:3:12"},"nodeType":"YulFunctionCall","src":"23897:18:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23844:43:12"},"nodeType":"YulFunctionCall","src":"23844:72:12"},"nodeType":"YulExpressionStatement","src":"23844:72:12"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23970:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23983:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"23994:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23979:3:12"},"nodeType":"YulFunctionCall","src":"23979:18:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23926:43:12"},"nodeType":"YulFunctionCall","src":"23926:72:12"},"nodeType":"YulExpressionStatement","src":"23926:72:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24019:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"24030:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24015:3:12"},"nodeType":"YulFunctionCall","src":"24015:18:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24039:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"24045:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24035:3:12"},"nodeType":"YulFunctionCall","src":"24035:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24008:6:12"},"nodeType":"YulFunctionCall","src":"24008:48:12"},"nodeType":"YulExpressionStatement","src":"24008:48:12"},{"nodeType":"YulAssignment","src":"24065:84:12","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24135:6:12"},{"name":"tail","nodeType":"YulIdentifier","src":"24144:4:12"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24073:61:12"},"nodeType":"YulFunctionCall","src":"24073:76:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24065:4:12"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23664:9:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23676:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23684:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23692:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23700:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23711:4:12","type":""}],"src":"23516:640:12"},{"body":{"nodeType":"YulBlock","src":"24224:79:12","statements":[{"nodeType":"YulAssignment","src":"24234:22:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24249:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24243:5:12"},"nodeType":"YulFunctionCall","src":"24243:13:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"24234:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24291:5:12"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"24265:25:12"},"nodeType":"YulFunctionCall","src":"24265:32:12"},"nodeType":"YulExpressionStatement","src":"24265:32:12"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"24202:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"24210:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"24218:5:12","type":""}],"src":"24162:141:12"},{"body":{"nodeType":"YulBlock","src":"24385:273:12","statements":[{"body":{"nodeType":"YulBlock","src":"24431:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24433:77:12"},"nodeType":"YulFunctionCall","src":"24433:79:12"},"nodeType":"YulExpressionStatement","src":"24433:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24406:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"24415:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24402:3:12"},"nodeType":"YulFunctionCall","src":"24402:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"24427:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24398:3:12"},"nodeType":"YulFunctionCall","src":"24398:32:12"},"nodeType":"YulIf","src":"24395:119:12"},{"nodeType":"YulBlock","src":"24524:127:12","statements":[{"nodeType":"YulVariableDeclaration","src":"24539:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"24553:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24543:6:12","type":""}]},{"nodeType":"YulAssignment","src":"24568:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24613:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"24624:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24609:3:12"},"nodeType":"YulFunctionCall","src":"24609:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24633:7:12"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"24578:30:12"},"nodeType":"YulFunctionCall","src":"24578:63:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24568:6:12"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24355:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24366:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24378:6:12","type":""}],"src":"24309:349:12"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906113cd565b6102bc565b6040516100fb9190611415565b60405180910390f35b61010c61039e565b60405161011991906114c9565b60405180910390f35b61013c60048036038101906101379190611521565b610430565b604051610149919061158f565b60405180910390f35b61016c600480360381019061016791906115d6565b610476565b005b61018860048036038101906101839190611616565b61058e565b005b6101a4600480360381019061019f9190611616565b6105ee565b005b6101c060048036038101906101bb9190611521565b61060e565b6040516101cd919061158f565b60405180910390f35b6101f060048036038101906101eb9190611669565b6106c0565b6040516101fd91906116a5565b60405180910390f35b61020e610778565b60405161021b91906114c9565b60405180910390f35b61023e600480360381019061023991906116ec565b61080a565b005b61025a60048036038101906102559190611861565b610820565b005b61027660048036038101906102719190611521565b610882565b60405161028391906114c9565b60405180910390f35b6102a660048036038101906102a191906118e4565b6108ea565b6040516102b39190611415565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061039757506103968261097e565b5b9050919050565b6060600080546103ad90611953565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611953565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109e8565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e9906119f7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a33565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a33565b6108ea565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611a89565b60405180910390fd5b6105898383610a3b565b505050565b61059f610599610a33565b82610af4565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611b1b565b60405180910390fd5b6105e9838383610b89565b505050565b61060983838360405180602001604052806000815250610820565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae90611b87565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072890611c19565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461078790611953565b80601f01602080910402602001604051908101604052809291908181526020018280546107b390611953565b80156108005780601f106107d557610100808354040283529160200191610800565b820191906000526020600020905b8154815290600101906020018083116107e357829003601f168201915b5050505050905090565b61081c610815610a33565b8383610df0565b5050565b61083161082b610a33565b83610af4565b610870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086790611b1b565b60405180910390fd5b61087c84848484610f5d565b50505050565b606061088d826109e8565b6000610897610fb9565b905060008151116108b757604051806020016040528060008152506108e2565b806108c184610fd0565b6040516020016108d2929190611c75565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109f181611131565b610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2790611b87565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610aae8361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b008361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b425750610b4181856108ea565b5b80610b8057508373ffffffffffffffffffffffffffffffffffffffff16610b6884610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ba98261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf690611d0b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6690611d9d565b60405180910390fd5b610c7a83838361119d565b610c85600082610a3b565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cd59190611dec565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d2c9190611e20565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610deb8383836111a2565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5690611ec2565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f509190611415565b60405180910390a3505050565b610f68848484610b89565b610f74848484846111a7565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa90611f54565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000821415611018576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061112c565b600082905060005b6000821461104a57808061103390611f74565b915050600a826110439190611fec565b9150611020565b60008167ffffffffffffffff81111561106657611065611736565b5b6040519080825280601f01601f1916602001820160405280156110985781602001600182028036833780820191505090505b5090505b60008514611125576001826110b19190611dec565b9150600a856110c0919061201d565b60306110cc9190611e20565b60f81b8183815181106110e2576110e161204e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561111e9190611fec565b945061109c565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b60006111c88473ffffffffffffffffffffffffffffffffffffffff1661133e565b15611331578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111f1610a33565b8786866040518563ffffffff1660e01b815260040161121394939291906120d2565b602060405180830381600087803b15801561122d57600080fd5b505af192505050801561125e57506040513d601f19601f8201168201806040525081019061125b9190612133565b60015b6112e1573d806000811461128e576040519150601f19603f3d011682016040523d82523d6000602084013e611293565b606091505b506000815114156112d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d090611f54565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611336565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113aa81611375565b81146113b557600080fd5b50565b6000813590506113c7816113a1565b92915050565b6000602082840312156113e3576113e261136b565b5b60006113f1848285016113b8565b91505092915050565b60008115159050919050565b61140f816113fa565b82525050565b600060208201905061142a6000830184611406565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561146a57808201518184015260208101905061144f565b83811115611479576000848401525b50505050565b6000601f19601f8301169050919050565b600061149b82611430565b6114a5818561143b565b93506114b581856020860161144c565b6114be8161147f565b840191505092915050565b600060208201905081810360008301526114e38184611490565b905092915050565b6000819050919050565b6114fe816114eb565b811461150957600080fd5b50565b60008135905061151b816114f5565b92915050565b6000602082840312156115375761153661136b565b5b60006115458482850161150c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115798261154e565b9050919050565b6115898161156e565b82525050565b60006020820190506115a46000830184611580565b92915050565b6115b38161156e565b81146115be57600080fd5b50565b6000813590506115d0816115aa565b92915050565b600080604083850312156115ed576115ec61136b565b5b60006115fb858286016115c1565b925050602061160c8582860161150c565b9150509250929050565b60008060006060848603121561162f5761162e61136b565b5b600061163d868287016115c1565b935050602061164e868287016115c1565b925050604061165f8682870161150c565b9150509250925092565b60006020828403121561167f5761167e61136b565b5b600061168d848285016115c1565b91505092915050565b61169f816114eb565b82525050565b60006020820190506116ba6000830184611696565b92915050565b6116c9816113fa565b81146116d457600080fd5b50565b6000813590506116e6816116c0565b92915050565b600080604083850312156117035761170261136b565b5b6000611711858286016115c1565b9250506020611722858286016116d7565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61176e8261147f565b810181811067ffffffffffffffff8211171561178d5761178c611736565b5b80604052505050565b60006117a0611361565b90506117ac8282611765565b919050565b600067ffffffffffffffff8211156117cc576117cb611736565b5b6117d58261147f565b9050602081019050919050565b82818337600083830152505050565b60006118046117ff846117b1565b611796565b9050828152602081018484840111156118205761181f611731565b5b61182b8482856117e2565b509392505050565b600082601f8301126118485761184761172c565b5b81356118588482602086016117f1565b91505092915050565b6000806000806080858703121561187b5761187a61136b565b5b6000611889878288016115c1565b945050602061189a878288016115c1565b93505060406118ab8782880161150c565b925050606085013567ffffffffffffffff8111156118cc576118cb611370565b5b6118d887828801611833565b91505092959194509250565b600080604083850312156118fb576118fa61136b565b5b6000611909858286016115c1565b925050602061191a858286016115c1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061196b57607f821691505b6020821081141561197f5761197e611924565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006119e160218361143b565b91506119ec82611985565b604082019050919050565b60006020820190508181036000830152611a10816119d4565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b6000611a73603e8361143b565b9150611a7e82611a17565b604082019050919050565b60006020820190508181036000830152611aa281611a66565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6000611b05602e8361143b565b9150611b1082611aa9565b604082019050919050565b60006020820190508181036000830152611b3481611af8565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611b7160188361143b565b9150611b7c82611b3b565b602082019050919050565b60006020820190508181036000830152611ba081611b64565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611c0360298361143b565b9150611c0e82611ba7565b604082019050919050565b60006020820190508181036000830152611c3281611bf6565b9050919050565b600081905092915050565b6000611c4f82611430565b611c598185611c39565b9350611c6981856020860161144c565b80840191505092915050565b6000611c818285611c44565b9150611c8d8284611c44565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611cf560258361143b565b9150611d0082611c99565b604082019050919050565b60006020820190508181036000830152611d2481611ce8565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611d8760248361143b565b9150611d9282611d2b565b604082019050919050565b60006020820190508181036000830152611db681611d7a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611df7826114eb565b9150611e02836114eb565b925082821015611e1557611e14611dbd565b5b828203905092915050565b6000611e2b826114eb565b9150611e36836114eb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e6b57611e6a611dbd565b5b828201905092915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611eac60198361143b565b9150611eb782611e76565b602082019050919050565b60006020820190508181036000830152611edb81611e9f565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611f3e60328361143b565b9150611f4982611ee2565b604082019050919050565b60006020820190508181036000830152611f6d81611f31565b9050919050565b6000611f7f826114eb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611fb257611fb1611dbd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ff7826114eb565b9150612002836114eb565b92508261201257612011611fbd565b5b828204905092915050565b6000612028826114eb565b9150612033836114eb565b92508261204357612042611fbd565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006120a48261207d565b6120ae8185612088565b93506120be81856020860161144c565b6120c78161147f565b840191505092915050565b60006080820190506120e76000830187611580565b6120f46020830186611580565b6121016040830185611696565b81810360608301526121138184612099565b905095945050505050565b60008151905061212d816113a1565b92915050565b6000602082840312156121495761214861136b565b5b60006121578482850161211e565b9150509291505056fea26469706673582212201f83597e48ca2aee1c4e2adaf64efb166a65c18eda93205b9b4336d6069741e764736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1669 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x16EC JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x97E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA33 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA3B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA33 JUMP JUMPDEST DUP3 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x820 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x787 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B3 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x800 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x800 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x81C PUSH2 0x815 PUSH2 0xA33 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDF0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x831 PUSH2 0x82B PUSH2 0xA33 JUMP JUMPDEST DUP4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87C DUP5 DUP5 DUP5 DUP5 PUSH2 0xF5D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x88D DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x897 PUSH2 0xFB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8E2 JUMP JUMPDEST DUP1 PUSH2 0x8C1 DUP5 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D2 SWAP3 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F1 DUP2 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP1 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAAE DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB00 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB42 JUMPI POP PUSH2 0xB41 DUP2 DUP6 PUSH2 0x8EA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB80 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB68 DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBA9 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF6 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC66 SWAP1 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7A DUP4 DUP4 DUP4 PUSH2 0x119D JUMP JUMPDEST PUSH2 0xC85 PUSH1 0x0 DUP3 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDEB DUP4 DUP4 DUP4 PUSH2 0x11A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE56 SWAP1 PUSH2 0x1EC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF50 SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xF68 DUP5 DUP5 DUP5 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xF74 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x112C JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x104A JUMPI DUP1 DUP1 PUSH2 0x1033 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1066 JUMPI PUSH2 0x1065 PUSH2 0x1736 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1098 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1125 JUMPI PUSH1 0x1 DUP3 PUSH2 0x10B1 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x10C0 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x30 PUSH2 0x10CC SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10E2 JUMPI PUSH2 0x10E1 PUSH2 0x204E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x111E SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST SWAP5 POP PUSH2 0x109C JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C8 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x133E JUMP JUMPDEST ISZERO PUSH2 0x1331 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11F1 PUSH2 0xA33 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1213 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x122D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x125E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x125B SWAP2 SWAP1 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12E1 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x128E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D0 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1336 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13AA DUP2 PUSH2 0x1375 JUMP JUMPDEST DUP2 EQ PUSH2 0x13B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13C7 DUP2 PUSH2 0x13A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E3 JUMPI PUSH2 0x13E2 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13F1 DUP5 DUP3 DUP6 ADD PUSH2 0x13B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140F DUP2 PUSH2 0x13FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x142A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1406 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x146A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x144F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149B DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x14A5 DUP2 DUP6 PUSH2 0x143B JUMP JUMPDEST SWAP4 POP PUSH2 0x14B5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST PUSH2 0x14BE DUP2 PUSH2 0x147F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14E3 DUP2 DUP5 PUSH2 0x1490 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14FE DUP2 PUSH2 0x14EB JUMP JUMPDEST DUP2 EQ PUSH2 0x1509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x151B DUP2 PUSH2 0x14F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1537 JUMPI PUSH2 0x1536 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1545 DUP5 DUP3 DUP6 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1579 DUP3 PUSH2 0x154E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1589 DUP2 PUSH2 0x156E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1580 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B3 DUP2 PUSH2 0x156E JUMP JUMPDEST DUP2 EQ PUSH2 0x15BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D0 DUP2 PUSH2 0x15AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15ED JUMPI PUSH2 0x15EC PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15FB DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x160C DUP6 DUP3 DUP7 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x162F JUMPI PUSH2 0x162E PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x163D DUP7 DUP3 DUP8 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x164E DUP7 DUP3 DUP8 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x165F DUP7 DUP3 DUP8 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167F JUMPI PUSH2 0x167E PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x168D DUP5 DUP3 DUP6 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x169F DUP2 PUSH2 0x14EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16C9 DUP2 PUSH2 0x13FA JUMP JUMPDEST DUP2 EQ PUSH2 0x16D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16E6 DUP2 PUSH2 0x16C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1703 JUMPI PUSH2 0x1702 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1711 DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1722 DUP6 DUP3 DUP7 ADD PUSH2 0x16D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x176E DUP3 PUSH2 0x147F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x178D JUMPI PUSH2 0x178C PUSH2 0x1736 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A0 PUSH2 0x1361 JUMP JUMPDEST SWAP1 POP PUSH2 0x17AC DUP3 DUP3 PUSH2 0x1765 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17CC JUMPI PUSH2 0x17CB PUSH2 0x1736 JUMP JUMPDEST JUMPDEST PUSH2 0x17D5 DUP3 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1804 PUSH2 0x17FF DUP5 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0x1796 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1820 JUMPI PUSH2 0x181F PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH2 0x182B DUP5 DUP3 DUP6 PUSH2 0x17E2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1848 JUMPI PUSH2 0x1847 PUSH2 0x172C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1858 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x187B JUMPI PUSH2 0x187A PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1889 DUP8 DUP3 DUP9 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x189A DUP8 DUP3 DUP9 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18AB DUP8 DUP3 DUP9 ADD PUSH2 0x150C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18CC JUMPI PUSH2 0x18CB PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH2 0x18D8 DUP8 DUP3 DUP9 ADD PUSH2 0x1833 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18FB JUMPI PUSH2 0x18FA PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1909 DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x191A DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x196B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x197F JUMPI PUSH2 0x197E PUSH2 0x1924 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E1 PUSH1 0x21 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x19EC DUP3 PUSH2 0x1985 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A10 DUP2 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A73 PUSH1 0x3E DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A7E DUP3 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AA2 DUP2 PUSH2 0x1A66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B05 PUSH1 0x2E DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B10 DUP3 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B34 DUP2 PUSH2 0x1AF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B71 PUSH1 0x18 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7C DUP3 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BA0 DUP2 PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C03 PUSH1 0x29 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0E DUP3 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C32 DUP2 PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4F DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x1C59 DUP2 DUP6 PUSH2 0x1C39 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C69 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C81 DUP3 DUP6 PUSH2 0x1C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8D DUP3 DUP5 PUSH2 0x1C44 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF5 PUSH1 0x25 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D00 DUP3 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D24 DUP2 PUSH2 0x1CE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D87 PUSH1 0x24 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D92 DUP3 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB6 DUP2 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DF7 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1E02 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1E15 JUMPI PUSH2 0x1E14 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2B DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1E36 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E6B JUMPI PUSH2 0x1E6A PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAC PUSH1 0x19 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB7 DUP3 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EDB DUP2 PUSH2 0x1E9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3E PUSH1 0x32 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1F49 DUP3 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F6D DUP2 PUSH2 0x1F31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7F DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1FB2 JUMPI PUSH2 0x1FB1 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FF7 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2002 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2012 JUMPI PUSH2 0x2011 PUSH2 0x1FBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2028 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2033 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2043 JUMPI PUSH2 0x2042 PUSH2 0x1FBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A4 DUP3 PUSH2 0x207D JUMP JUMPDEST PUSH2 0x20AE DUP2 DUP6 PUSH2 0x2088 JUMP JUMPDEST SWAP4 POP PUSH2 0x20BE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST PUSH2 0x20C7 DUP2 PUSH2 0x147F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x20E7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x20F4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x2101 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1696 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2113 DUP2 DUP5 PUSH2 0x2099 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x212D DUP2 PUSH2 0x13A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2149 JUMPI PUSH2 0x2148 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2157 DUP5 DUP3 DUP6 ADD PUSH2 0x211E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F DUP4 MSIZE PUSH31 0x48CA2AEE1C4E2ADAF64EFB166A65C18EDA93205B9B4336D6069741E764736F PUSH13 0x63430008080033000000000000 ","sourceMap":"628:13718:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2470:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3467:407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:327;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5005:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2632:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5250:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2800:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2470:98::-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;3604:11;;:2;:11;;;;3596:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3701:5;3685:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3710:37;3727:5;3734:12;:10;:12::i;:::-;3710:16;:37::i;:::-;3685:62;3664:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;4612:327::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;:::-;4612:327;;;:::o;5005:179::-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;:::-;5005:179;;;:::o;2190:218::-;2262:7;2281:13;2297:7;:16;2305:7;2297:16;;;;;;;;;;;;;;;;;;;;;2281:32;;2348:1;2331:19;;:5;:19;;;;2323:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:5;2389:12;;;2190:218;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2632:102::-;2688:13;2720:7;2713:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5250:315::-;5418:41;5437:12;:10;:12::i;:::-;5451:7;5418:18;:41::i;:::-;5410:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;2800:276::-;2873:13;2898:23;2913:7;2898:14;:23::i;:::-;2932:21;2956:10;:8;:10::i;:::-;2932:34;;3007:1;2989:7;2983:21;:25;:86;;;;;;;;;;;;;;;;;3035:7;3044:18;:7;:16;:18::i;:::-;3018:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2983:86;2976:93;;;2800:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;11657:133:1:-;11738:16;11746:7;11738;:16::i;:::-;11730:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;11657:133;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;10959:171:1:-;11060:2;11033:15;:24;11049:7;11033:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11115:7;11111:2;11077:46;;11086:23;11101:7;11086:14;:23::i;:::-;11077:46;;;;;;;;;;;;10959:171;;:::o;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;7483:16;;:7;:16;;;:52;;;;7503:32;7520:5;7527:7;7503:16;:32::i;:::-;7483:52;:87;;;;7563:7;7539:31;;:20;7551:7;7539:11;:20::i;:::-;:31;;;7483:87;7475:96;;;7317:261;;;;:::o;10242:605::-;10396:4;10369:31;;:23;10384:7;10369:14;:23::i;:::-;:31;;;10361:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10474:1;10460:16;;:2;:16;;;;10452:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;10688:1;10669:9;:15;10679:4;10669:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10716:1;10699:9;:13;10709:2;10699:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10746:2;10727:7;:16;10735:7;10727:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10783:7;10779:2;10764:27;;10773:4;10764:27;;;;;;;;;;;;10802:38;10822:4;10828:2;10832:7;10802:19;:38::i;:::-;10242:605;;;:::o;11266:307::-;11416:8;11407:17;;:5;:17;;;;11399:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11502:8;11464:18;:25;11483:5;11464:25;;;;;;;;;;;;;;;:35;11490:8;11464:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11547:8;11525:41;;11540:5;11525:41;;;11557:8;11525:41;;;;;;:::i;:::-;;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6426:305;;;;:::o;3318:92::-;3369:13;3394:9;;;;;;;;;;;;;;3318:92;:::o;392:703:7:-;448:13;674:1;665:5;:10;661:51;;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;7034:125:1:-;7099:4;7150:1;7122:30;;:7;:16;7130:7;7122:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7115:37;;7034:125;;;:::o;13729:122::-;;;;:::o;14223:121::-;;;;:::o;12342:831::-;12491:4;12511:15;:2;:13;;;:15::i;:::-;12507:660;;;12562:2;12546:36;;;12583:12;:10;:12::i;:::-;12597:4;12603:7;12612:4;12546:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12801:1;12784:6;:13;:18;12780:321;;;12826:60;;;;;;;;;;:::i;:::-;;;;;;;;12780:321;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;12677:41;;;12667:51;;;:6;:51;;;;12660:58;;;;;12507:660;13152:4;13145:11;;12342:831;;;;;;;:::o;1175:320:5:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:619::-;5015:6;5023;5031;5080:2;5068:9;5059:7;5055:23;5051:32;5048:119;;;5086:79;;:::i;:::-;5048:119;5206:1;5231:53;5276:7;5267:6;5256:9;5252:22;5231:53;:::i;:::-;5221:63;;5177:117;5333:2;5359:53;5404:7;5395:6;5384:9;5380:22;5359:53;:::i;:::-;5349:63;;5304:118;5461:2;5487:53;5532:7;5523:6;5512:9;5508:22;5487:53;:::i;:::-;5477:63;;5432:118;4938:619;;;;;:::o;5563:329::-;5622:6;5671:2;5659:9;5650:7;5646:23;5642:32;5639:119;;;5677:79;;:::i;:::-;5639:119;5797:1;5822:53;5867:7;5858:6;5847:9;5843:22;5822:53;:::i;:::-;5812:63;;5768:117;5563:329;;;;:::o;5898:118::-;5985:24;6003:5;5985:24;:::i;:::-;5980:3;5973:37;5898:118;;:::o;6022:222::-;6115:4;6153:2;6142:9;6138:18;6130:26;;6166:71;6234:1;6223:9;6219:17;6210:6;6166:71;:::i;:::-;6022:222;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:220::-;11166:34;11162:1;11154:6;11150:14;11143:58;11235:3;11230:2;11222:6;11218:15;11211:28;11026:220;:::o;11252:366::-;11394:3;11415:67;11479:2;11474:3;11415:67;:::i;:::-;11408:74;;11491:93;11580:3;11491:93;:::i;:::-;11609:2;11604:3;11600:12;11593:19;;11252:366;;;:::o;11624:419::-;11790:4;11828:2;11817:9;11813:18;11805:26;;11877:9;11871:4;11867:20;11863:1;11852:9;11848:17;11841:47;11905:131;12031:4;11905:131;:::i;:::-;11897:139;;11624:419;;;:::o;12049:249::-;12189:34;12185:1;12177:6;12173:14;12166:58;12258:32;12253:2;12245:6;12241:15;12234:57;12049:249;:::o;12304:366::-;12446:3;12467:67;12531:2;12526:3;12467:67;:::i;:::-;12460:74;;12543:93;12632:3;12543:93;:::i;:::-;12661:2;12656:3;12652:12;12645:19;;12304:366;;;:::o;12676:419::-;12842:4;12880:2;12869:9;12865:18;12857:26;;12929:9;12923:4;12919:20;12915:1;12904:9;12900:17;12893:47;12957:131;13083:4;12957:131;:::i;:::-;12949:139;;12676:419;;;:::o;13101:233::-;13241:34;13237:1;13229:6;13225:14;13218:58;13310:16;13305:2;13297:6;13293:15;13286:41;13101:233;:::o;13340:366::-;13482:3;13503:67;13567:2;13562:3;13503:67;:::i;:::-;13496:74;;13579:93;13668:3;13579:93;:::i;:::-;13697:2;13692:3;13688:12;13681:19;;13340:366;;;:::o;13712:419::-;13878:4;13916:2;13905:9;13901:18;13893:26;;13965:9;13959:4;13955:20;13951:1;13940:9;13936:17;13929:47;13993:131;14119:4;13993:131;:::i;:::-;13985:139;;13712:419;;;:::o;14137:174::-;14277:26;14273:1;14265:6;14261:14;14254:50;14137:174;:::o;14317:366::-;14459:3;14480:67;14544:2;14539:3;14480:67;:::i;:::-;14473:74;;14556:93;14645:3;14556:93;:::i;:::-;14674:2;14669:3;14665:12;14658:19;;14317:366;;;:::o;14689:419::-;14855:4;14893:2;14882:9;14878:18;14870:26;;14942:9;14936:4;14932:20;14928:1;14917:9;14913:17;14906:47;14970:131;15096:4;14970:131;:::i;:::-;14962:139;;14689:419;;;:::o;15114:228::-;15254:34;15250:1;15242:6;15238:14;15231:58;15323:11;15318:2;15310:6;15306:15;15299:36;15114:228;:::o;15348:366::-;15490:3;15511:67;15575:2;15570:3;15511:67;:::i;:::-;15504:74;;15587:93;15676:3;15587:93;:::i;:::-;15705:2;15700:3;15696:12;15689:19;;15348:366;;;:::o;15720:419::-;15886:4;15924:2;15913:9;15909:18;15901:26;;15973:9;15967:4;15963:20;15959:1;15948:9;15944:17;15937:47;16001:131;16127:4;16001:131;:::i;:::-;15993:139;;15720:419;;;:::o;16145:148::-;16247:11;16284:3;16269:18;;16145:148;;;;:::o;16299:377::-;16405:3;16433:39;16466:5;16433:39;:::i;:::-;16488:89;16570:6;16565:3;16488:89;:::i;:::-;16481:96;;16586:52;16631:6;16626:3;16619:4;16612:5;16608:16;16586:52;:::i;:::-;16663:6;16658:3;16654:16;16647:23;;16409:267;16299:377;;;;:::o;16682:435::-;16862:3;16884:95;16975:3;16966:6;16884:95;:::i;:::-;16877:102;;16996:95;17087:3;17078:6;16996:95;:::i;:::-;16989:102;;17108:3;17101:10;;16682:435;;;;;:::o;17123:224::-;17263:34;17259:1;17251:6;17247:14;17240:58;17332:7;17327:2;17319:6;17315:15;17308:32;17123:224;:::o;17353:366::-;17495:3;17516:67;17580:2;17575:3;17516:67;:::i;:::-;17509:74;;17592:93;17681:3;17592:93;:::i;:::-;17710:2;17705:3;17701:12;17694:19;;17353:366;;;:::o;17725:419::-;17891:4;17929:2;17918:9;17914:18;17906:26;;17978:9;17972:4;17968:20;17964:1;17953:9;17949:17;17942:47;18006:131;18132:4;18006:131;:::i;:::-;17998:139;;17725:419;;;:::o;18150:223::-;18290:34;18286:1;18278:6;18274:14;18267:58;18359:6;18354:2;18346:6;18342:15;18335:31;18150:223;:::o;18379:366::-;18521:3;18542:67;18606:2;18601:3;18542:67;:::i;:::-;18535:74;;18618:93;18707:3;18618:93;:::i;:::-;18736:2;18731:3;18727:12;18720:19;;18379:366;;;:::o;18751:419::-;18917:4;18955:2;18944:9;18940:18;18932:26;;19004:9;18998:4;18994:20;18990:1;18979:9;18975:17;18968:47;19032:131;19158:4;19032:131;:::i;:::-;19024:139;;18751:419;;;:::o;19176:180::-;19224:77;19221:1;19214:88;19321:4;19318:1;19311:15;19345:4;19342:1;19335:15;19362:191;19402:4;19422:20;19440:1;19422:20;:::i;:::-;19417:25;;19456:20;19474:1;19456:20;:::i;:::-;19451:25;;19495:1;19492;19489:8;19486:34;;;19500:18;;:::i;:::-;19486:34;19545:1;19542;19538:9;19530:17;;19362:191;;;;:::o;19559:305::-;19599:3;19618:20;19636:1;19618:20;:::i;:::-;19613:25;;19652:20;19670:1;19652:20;:::i;:::-;19647:25;;19806:1;19738:66;19734:74;19731:1;19728:81;19725:107;;;19812:18;;:::i;:::-;19725:107;19856:1;19853;19849:9;19842:16;;19559:305;;;;:::o;19870:175::-;20010:27;20006:1;19998:6;19994:14;19987:51;19870:175;:::o;20051:366::-;20193:3;20214:67;20278:2;20273:3;20214:67;:::i;:::-;20207:74;;20290:93;20379:3;20290:93;:::i;:::-;20408:2;20403:3;20399:12;20392:19;;20051:366;;;:::o;20423:419::-;20589:4;20627:2;20616:9;20612:18;20604:26;;20676:9;20670:4;20666:20;20662:1;20651:9;20647:17;20640:47;20704:131;20830:4;20704:131;:::i;:::-;20696:139;;20423:419;;;:::o;20848:237::-;20988:34;20984:1;20976:6;20972:14;20965:58;21057:20;21052:2;21044:6;21040:15;21033:45;20848:237;:::o;21091:366::-;21233:3;21254:67;21318:2;21313:3;21254:67;:::i;:::-;21247:74;;21330:93;21419:3;21330:93;:::i;:::-;21448:2;21443:3;21439:12;21432:19;;21091:366;;;:::o;21463:419::-;21629:4;21667:2;21656:9;21652:18;21644:26;;21716:9;21710:4;21706:20;21702:1;21691:9;21687:17;21680:47;21744:131;21870:4;21744:131;:::i;:::-;21736:139;;21463:419;;;:::o;21888:233::-;21927:3;21950:24;21968:5;21950:24;:::i;:::-;21941:33;;21996:66;21989:5;21986:77;21983:103;;;22066:18;;:::i;:::-;21983:103;22113:1;22106:5;22102:13;22095:20;;21888:233;;;:::o;22127:180::-;22175:77;22172:1;22165:88;22272:4;22269:1;22262:15;22296:4;22293:1;22286:15;22313:185;22353:1;22370:20;22388:1;22370:20;:::i;:::-;22365:25;;22404:20;22422:1;22404:20;:::i;:::-;22399:25;;22443:1;22433:35;;22448:18;;:::i;:::-;22433:35;22490:1;22487;22483:9;22478:14;;22313:185;;;;:::o;22504:176::-;22536:1;22553:20;22571:1;22553:20;:::i;:::-;22548:25;;22587:20;22605:1;22587:20;:::i;:::-;22582:25;;22626:1;22616:35;;22631:18;;:::i;:::-;22616:35;22672:1;22669;22665:9;22660:14;;22504:176;;;;:::o;22686:180::-;22734:77;22731:1;22724:88;22831:4;22828:1;22821:15;22855:4;22852:1;22845:15;22872:98;22923:6;22957:5;22951:12;22941:22;;22872:98;;;:::o;22976:168::-;23059:11;23093:6;23088:3;23081:19;23133:4;23128:3;23124:14;23109:29;;22976:168;;;;:::o;23150:360::-;23236:3;23264:38;23296:5;23264:38;:::i;:::-;23318:70;23381:6;23376:3;23318:70;:::i;:::-;23311:77;;23397:52;23442:6;23437:3;23430:4;23423:5;23419:16;23397:52;:::i;:::-;23474:29;23496:6;23474:29;:::i;:::-;23469:3;23465:39;23458:46;;23240:270;23150:360;;;;:::o;23516:640::-;23711:4;23749:3;23738:9;23734:19;23726:27;;23763:71;23831:1;23820:9;23816:17;23807:6;23763:71;:::i;:::-;23844:72;23912:2;23901:9;23897:18;23888:6;23844:72;:::i;:::-;23926;23994:2;23983:9;23979:18;23970:6;23926:72;:::i;:::-;24045:9;24039:4;24035:20;24030:2;24019:9;24015:18;24008:48;24073:76;24144:4;24135:6;24073:76;:::i;:::-;24065:84;;23516:640;;;;;;;:::o;24162:141::-;24218:5;24249:6;24243:13;24234:22;;24265:32;24291:5;24265:32;:::i;:::-;24162:141;;;;:::o;24309:349::-;24378:6;24427:2;24415:9;24406:7;24402:23;24398:32;24395:119;;;24433:79;;:::i;:::-;24395:119;24553:1;24578:63;24633:7;24624:6;24613:9;24609:22;24578:63;:::i;:::-;24568:73;;24524:127;24309:349;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1719600","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2924","getApproved(uint256)":"5234","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"2982","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"3424","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2269","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":71,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":73,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":77,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":81,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":85,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":91,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7b5188a5018a5d7175bf3b31329eb92b025b77c0916d2170dbfc7c869a30dfb64736f6c63430008080033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xB5 XOR DUP11 POP XOR 0xA5 0xD7 OR JUMPDEST RETURN 0xB3 SGT 0x29 0xEB SWAP3 0xB0 0x25 0xB7 PUSH29 0x916D2170DBFC7C869A30DFB64736F6C63430008080033000000000000 ","sourceMap":"194:8111:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7b5188a5018a5d7175bf3b31329eb92b025b77c0916d2170dbfc7c869a30dfb64736f6c63430008080033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xB5 XOR DUP11 POP XOR 0xA5 0xD7 OR JUMPDEST RETURN 0xB3 SGT 0x29 0xEB SWAP3 0xB0 0x25 0xB7 PUSH29 0x916D2170DBFC7C869A30DFB64736F6C63430008080033000000000000 ","sourceMap":"194:8111:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206891d0c917038081a11ecf3eecdf413381aaa3c4c3a6e0ac00057a0e06ebe05964736f6c63430008080033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x91D0C917038081A11E 0xCF RETURNDATACOPY 0xEC 0xDF COINBASE CALLER DUP2 0xAA LOG3 0xC4 0xC3 0xA6 0xE0 0xAC STOP SDIV PUSH27 0xE06EBE05964736F6C634300080800330000000000000000000000 ","sourceMap":"161:2235:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206891d0c917038081a11ecf3eecdf413381aaa3c4c3a6e0ac00057a0e06ebe05964736f6c63430008080033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x91D0C917038081A11E 0xCF RETURNDATACOPY 0xEC 0xDF COINBASE CALLER DUP2 0xAA LOG3 0xC4 0xC3 0xA6 0xE0 0xAC STOP SDIV PUSH27 0xE06EBE05964736F6C634300080800330000000000000000000000 ","sourceMap":"161:2235:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"base64-sol/base64.sol":{"Base64":{"abi":[],"devdoc":{"author":"Brecht Devos - <brecht@loopring.org>","kind":"dev","methods":{},"title":"Base64","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122091866af9c18e2993d491d2cf1438ee2b37e122d1b29321b45075ae8dd74a7cee64736f6c63430008080033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 DUP7 PUSH11 0xF9C18E2993D491D2CF1438 0xEE 0x2B CALLDATACOPY 0xE1 0x22 0xD1 0xB2 SWAP4 0x21 0xB4 POP PUSH22 0xAE8DD74A7CEE64736F6C634300080800330000000000 ","sourceMap":"186:4638:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122091866af9c18e2993d491d2cf1438ee2b37e122d1b29321b45075ae8dd74a7cee64736f6c63430008080033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 DUP7 PUSH11 0xF9C18E2993D491D2CF1438 0xEE 0x2B CALLDATACOPY 0xE1 0x22 0xD1 0xB2 SWAP4 0x21 0xB4 POP PUSH22 0xAE8DD74A7CEE64736F6C634300080800330000000000 ","sourceMap":"186:4638:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"decode(string memory)":"infinite","encode(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Brecht Devos - <brecht@loopring.org>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Base64\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides functions for encoding/decoding base64\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"base64-sol/base64.sol\":\"Base64\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"base64-sol/base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n    bytes  internal constant TABLE_DECODE = hex\\\"0000000000000000000000000000000000000000000000000000000000000000\\\"\\n                                            hex\\\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\\\"\\n                                            hex\\\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\\\"\\n                                            hex\\\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\\\";\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n\\n        // load the table into memory\\n        string memory table = TABLE_ENCODE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                // read 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // write 4 characters\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n            // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n\\n    function decode(string memory _data) internal pure returns (bytes memory) {\\n        bytes memory data = bytes(_data);\\n\\n        if (data.length == 0) return new bytes(0);\\n        require(data.length % 4 == 0, \\\"invalid base64 decoder input\\\");\\n\\n        // load the table into memory\\n        bytes memory table = TABLE_DECODE;\\n\\n        // every 4 characters represent 3 bytes\\n        uint256 decodedLen = (data.length / 4) * 3;\\n\\n        // add some extra buffer at the end required for the writing\\n        bytes memory result = new bytes(decodedLen + 32);\\n\\n        assembly {\\n            // padding with '='\\n            let lastBytes := mload(add(data, mload(data)))\\n            if eq(and(lastBytes, 0xFF), 0x3d) {\\n                decodedLen := sub(decodedLen, 1)\\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\\n                    decodedLen := sub(decodedLen, 1)\\n                }\\n            }\\n\\n            // set the actual output length\\n            mstore(result, decodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 4 characters at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               // read 4 characters\\n               dataPtr := add(dataPtr, 4)\\n               let input := mload(dataPtr)\\n\\n               // write 3 bytes\\n               let output := add(\\n                   add(\\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\\n                   add(\\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\\n                    )\\n                )\\n                mstore(resultPtr, shl(232, output))\\n                resultPtr := add(resultPtr, 3)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Provides functions for encoding/decoding base64","version":1}}},"contracts/DynamicSvgNft.sol":{"DynamicSvgNft":{"abi":[{"inputs":[{"internalType":"address","name":"priceFeedAddress","type":"address"},{"internalType":"string","name":"lowSvg","type":"string"},{"internalType":"string","name":"highSvg","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"int256","name":"highValue","type":"int256"}],"name":"CreatedNFT","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getHighSVG","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLowSVG","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPriceFeed","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int256","name":"highValue","type":"int256"}],"name":"mintNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_tokenIdToHighValue","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"svg","type":"string"}],"name":"svgToImageURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_108":{"entryPoint":null,"id":108,"parameterSlots":2,"returnSlots":0},"@_1834":{"entryPoint":null,"id":1834,"parameterSlots":3,"returnSlots":0},"@encode_1705":{"entryPoint":527,"id":1705,"parameterSlots":1,"returnSlots":1},"@svgToImageURI_1896":{"entryPoint":369,"id":1896,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1489,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1199,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1564,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":1615,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1846,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1871,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":1350,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1101,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1381,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1769,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1780,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1968,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":2108,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2164,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1153,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1121,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1911,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1435,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2308,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1296,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":1921,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":2061,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2261,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1249,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1222,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1227,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1116,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1111,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1232,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1173,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7435:12","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:12","statements":[{"nodeType":"YulAssignment","src":"57:19:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:12"},"nodeType":"YulFunctionCall","src":"67:9:12"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:12"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:12","type":""}],"src":"7:75:12"},{"body":{"nodeType":"YulBlock","src":"177:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:12"},"nodeType":"YulFunctionCall","src":"187:12:12"},"nodeType":"YulExpressionStatement","src":"187:12:12"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:12"},{"body":{"nodeType":"YulBlock","src":"300:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:12"},"nodeType":"YulFunctionCall","src":"310:12:12"},"nodeType":"YulExpressionStatement","src":"310:12:12"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:12"},{"body":{"nodeType":"YulBlock","src":"379:81:12","statements":[{"nodeType":"YulAssignment","src":"389:65:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:12"},"nodeType":"YulFunctionCall","src":"400:54:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:12"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:12","type":""}],"src":"334:126:12"},{"body":{"nodeType":"YulBlock","src":"511:51:12","statements":[{"nodeType":"YulAssignment","src":"521:35:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:12"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:12"},"nodeType":"YulFunctionCall","src":"532:24:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:12"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:12","type":""}],"src":"466:96:12"},{"body":{"nodeType":"YulBlock","src":"611:79:12","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:12"},"nodeType":"YulFunctionCall","src":"670:12:12"},"nodeType":"YulExpressionStatement","src":"670:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:12"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:12"},"nodeType":"YulFunctionCall","src":"641:24:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:12"},"nodeType":"YulFunctionCall","src":"631:35:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:12"},"nodeType":"YulFunctionCall","src":"624:43:12"},"nodeType":"YulIf","src":"621:63:12"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:12","type":""}],"src":"568:122:12"},{"body":{"nodeType":"YulBlock","src":"759:80:12","statements":[{"nodeType":"YulAssignment","src":"769:22:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:12"},"nodeType":"YulFunctionCall","src":"778:13:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:12"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:12"},"nodeType":"YulFunctionCall","src":"800:33:12"},"nodeType":"YulExpressionStatement","src":"800:33:12"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:12","type":""}],"src":"696:143:12"},{"body":{"nodeType":"YulBlock","src":"934:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"951:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"944:6:12"},"nodeType":"YulFunctionCall","src":"944:12:12"},"nodeType":"YulExpressionStatement","src":"944:12:12"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"845:117:12"},{"body":{"nodeType":"YulBlock","src":"1057:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1074:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1077:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1067:6:12"},"nodeType":"YulFunctionCall","src":"1067:12:12"},"nodeType":"YulExpressionStatement","src":"1067:12:12"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"968:117:12"},{"body":{"nodeType":"YulBlock","src":"1139:54:12","statements":[{"nodeType":"YulAssignment","src":"1149:38:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1167:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1163:3:12"},"nodeType":"YulFunctionCall","src":"1163:14:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1179:3:12"},"nodeType":"YulFunctionCall","src":"1179:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1159:3:12"},"nodeType":"YulFunctionCall","src":"1159:28:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1149:6:12"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1122:5:12","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1132:6:12","type":""}],"src":"1091:102:12"},{"body":{"nodeType":"YulBlock","src":"1227:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1244:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1247:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1237:6:12"},"nodeType":"YulFunctionCall","src":"1237:88:12"},"nodeType":"YulExpressionStatement","src":"1237:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1341:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1344:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:12"},"nodeType":"YulFunctionCall","src":"1334:15:12"},"nodeType":"YulExpressionStatement","src":"1334:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1365:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1368:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1358:6:12"},"nodeType":"YulFunctionCall","src":"1358:15:12"},"nodeType":"YulExpressionStatement","src":"1358:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1199:180:12"},{"body":{"nodeType":"YulBlock","src":"1428:238:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1438:58:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1460:6:12"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1490:4:12"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1468:21:12"},"nodeType":"YulFunctionCall","src":"1468:27:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1456:3:12"},"nodeType":"YulFunctionCall","src":"1456:40:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1442:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1607:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1609:16:12"},"nodeType":"YulFunctionCall","src":"1609:18:12"},"nodeType":"YulExpressionStatement","src":"1609:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1550:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"1562:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1547:2:12"},"nodeType":"YulFunctionCall","src":"1547:34:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1586:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1598:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1583:2:12"},"nodeType":"YulFunctionCall","src":"1583:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1544:2:12"},"nodeType":"YulFunctionCall","src":"1544:62:12"},"nodeType":"YulIf","src":"1541:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1645:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1649:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1638:6:12"},"nodeType":"YulFunctionCall","src":"1638:22:12"},"nodeType":"YulExpressionStatement","src":"1638:22:12"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1414:6:12","type":""},{"name":"size","nodeType":"YulTypedName","src":"1422:4:12","type":""}],"src":"1385:281:12"},{"body":{"nodeType":"YulBlock","src":"1713:88:12","statements":[{"nodeType":"YulAssignment","src":"1723:30:12","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1733:18:12"},"nodeType":"YulFunctionCall","src":"1733:20:12"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1723:6:12"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1782:6:12"},{"name":"size","nodeType":"YulIdentifier","src":"1790:4:12"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1762:19:12"},"nodeType":"YulFunctionCall","src":"1762:33:12"},"nodeType":"YulExpressionStatement","src":"1762:33:12"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1697:4:12","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1706:6:12","type":""}],"src":"1672:129:12"},{"body":{"nodeType":"YulBlock","src":"1874:241:12","statements":[{"body":{"nodeType":"YulBlock","src":"1979:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1981:16:12"},"nodeType":"YulFunctionCall","src":"1981:18:12"},"nodeType":"YulExpressionStatement","src":"1981:18:12"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1951:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1959:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1948:2:12"},"nodeType":"YulFunctionCall","src":"1948:30:12"},"nodeType":"YulIf","src":"1945:56:12"},{"nodeType":"YulAssignment","src":"2011:37:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2041:6:12"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2019:21:12"},"nodeType":"YulFunctionCall","src":"2019:29:12"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2011:4:12"}]},{"nodeType":"YulAssignment","src":"2085:23:12","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2097:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2093:3:12"},"nodeType":"YulFunctionCall","src":"2093:15:12"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2085:4:12"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1858:6:12","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1869:4:12","type":""}],"src":"1807:308:12"},{"body":{"nodeType":"YulBlock","src":"2170:258:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2180:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2189:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2184:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2249:63:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2274:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"2279:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2270:3:12"},"nodeType":"YulFunctionCall","src":"2270:11:12"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"2298:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:12"},"nodeType":"YulFunctionCall","src":"2289:11:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:12"},"nodeType":"YulFunctionCall","src":"2283:18:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2263:6:12"},"nodeType":"YulFunctionCall","src":"2263:39:12"},"nodeType":"YulExpressionStatement","src":"2263:39:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2210:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"2213:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2207:2:12"},"nodeType":"YulFunctionCall","src":"2207:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2221:19:12","statements":[{"nodeType":"YulAssignment","src":"2223:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2232:1:12"},{"kind":"number","nodeType":"YulLiteral","src":"2235:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2228:3:12"},"nodeType":"YulFunctionCall","src":"2228:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2223:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"2203:3:12","statements":[]},"src":"2199:113:12"},{"body":{"nodeType":"YulBlock","src":"2346:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2396:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"2401:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2392:3:12"},"nodeType":"YulFunctionCall","src":"2392:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"2410:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2385:6:12"},"nodeType":"YulFunctionCall","src":"2385:27:12"},"nodeType":"YulExpressionStatement","src":"2385:27:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2327:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"2330:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2324:2:12"},"nodeType":"YulFunctionCall","src":"2324:13:12"},"nodeType":"YulIf","src":"2321:101:12"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2152:3:12","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2157:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"2162:6:12","type":""}],"src":"2121:307:12"},{"body":{"nodeType":"YulBlock","src":"2529:326:12","statements":[{"nodeType":"YulAssignment","src":"2539:75:12","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2606:6:12"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2564:41:12"},"nodeType":"YulFunctionCall","src":"2564:49:12"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2548:15:12"},"nodeType":"YulFunctionCall","src":"2548:66:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2539:5:12"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2630:5:12"},{"name":"length","nodeType":"YulIdentifier","src":"2637:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2623:6:12"},"nodeType":"YulFunctionCall","src":"2623:21:12"},"nodeType":"YulExpressionStatement","src":"2623:21:12"},{"nodeType":"YulVariableDeclaration","src":"2653:27:12","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2668:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"2675:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2664:3:12"},"nodeType":"YulFunctionCall","src":"2664:16:12"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2657:3:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2718:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2720:77:12"},"nodeType":"YulFunctionCall","src":"2720:79:12"},"nodeType":"YulExpressionStatement","src":"2720:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2699:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"2704:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:12"},"nodeType":"YulFunctionCall","src":"2695:16:12"},{"name":"end","nodeType":"YulIdentifier","src":"2713:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2692:2:12"},"nodeType":"YulFunctionCall","src":"2692:25:12"},"nodeType":"YulIf","src":"2689:112:12"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2832:3:12"},{"name":"dst","nodeType":"YulIdentifier","src":"2837:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"2842:6:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2810:21:12"},"nodeType":"YulFunctionCall","src":"2810:39:12"},"nodeType":"YulExpressionStatement","src":"2810:39:12"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2502:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"2507:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"2515:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2523:5:12","type":""}],"src":"2434:421:12"},{"body":{"nodeType":"YulBlock","src":"2948:282:12","statements":[{"body":{"nodeType":"YulBlock","src":"2997:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2999:77:12"},"nodeType":"YulFunctionCall","src":"2999:79:12"},"nodeType":"YulExpressionStatement","src":"2999:79:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2976:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2984:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2972:3:12"},"nodeType":"YulFunctionCall","src":"2972:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"2991:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2968:3:12"},"nodeType":"YulFunctionCall","src":"2968:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2961:6:12"},"nodeType":"YulFunctionCall","src":"2961:35:12"},"nodeType":"YulIf","src":"2958:122:12"},{"nodeType":"YulVariableDeclaration","src":"3089:27:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3109:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3103:5:12"},"nodeType":"YulFunctionCall","src":"3103:13:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3093:6:12","type":""}]},{"nodeType":"YulAssignment","src":"3125:99:12","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3197:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3205:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3193:3:12"},"nodeType":"YulFunctionCall","src":"3193:17:12"},{"name":"length","nodeType":"YulIdentifier","src":"3212:6:12"},{"name":"end","nodeType":"YulIdentifier","src":"3220:3:12"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3134:58:12"},"nodeType":"YulFunctionCall","src":"3134:90:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3125:5:12"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2926:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"2934:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2942:5:12","type":""}],"src":"2875:355:12"},{"body":{"nodeType":"YulBlock","src":"3367:878:12","statements":[{"body":{"nodeType":"YulBlock","src":"3413:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3415:77:12"},"nodeType":"YulFunctionCall","src":"3415:79:12"},"nodeType":"YulExpressionStatement","src":"3415:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3388:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"3397:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3384:3:12"},"nodeType":"YulFunctionCall","src":"3384:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3409:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3380:3:12"},"nodeType":"YulFunctionCall","src":"3380:32:12"},"nodeType":"YulIf","src":"3377:119:12"},{"nodeType":"YulBlock","src":"3506:128:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3521:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3535:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3525:6:12","type":""}]},{"nodeType":"YulAssignment","src":"3550:74:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3596:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3607:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3592:3:12"},"nodeType":"YulFunctionCall","src":"3592:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3616:7:12"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3560:31:12"},"nodeType":"YulFunctionCall","src":"3560:64:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3550:6:12"}]}]},{"nodeType":"YulBlock","src":"3644:292:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3659:39:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3683:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3694:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3679:3:12"},"nodeType":"YulFunctionCall","src":"3679:18:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3673:5:12"},"nodeType":"YulFunctionCall","src":"3673:25:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3663:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3745:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3747:77:12"},"nodeType":"YulFunctionCall","src":"3747:79:12"},"nodeType":"YulExpressionStatement","src":"3747:79:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3717:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3725:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3714:2:12"},"nodeType":"YulFunctionCall","src":"3714:30:12"},"nodeType":"YulIf","src":"3711:117:12"},{"nodeType":"YulAssignment","src":"3842:84:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3898:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3909:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3894:3:12"},"nodeType":"YulFunctionCall","src":"3894:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3918:7:12"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3852:41:12"},"nodeType":"YulFunctionCall","src":"3852:74:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3842:6:12"}]}]},{"nodeType":"YulBlock","src":"3946:292:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3961:39:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3985:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3996:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3981:3:12"},"nodeType":"YulFunctionCall","src":"3981:18:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3975:5:12"},"nodeType":"YulFunctionCall","src":"3975:25:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3965:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"4047:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4049:77:12"},"nodeType":"YulFunctionCall","src":"4049:79:12"},"nodeType":"YulExpressionStatement","src":"4049:79:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4019:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"4027:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4016:2:12"},"nodeType":"YulFunctionCall","src":"4016:30:12"},"nodeType":"YulIf","src":"4013:117:12"},{"nodeType":"YulAssignment","src":"4144:84:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4200:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"4211:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4196:3:12"},"nodeType":"YulFunctionCall","src":"4196:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4220:7:12"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4154:41:12"},"nodeType":"YulFunctionCall","src":"4154:74:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4144:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3321:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3332:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3344:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3352:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3360:6:12","type":""}],"src":"3236:1009:12"},{"body":{"nodeType":"YulBlock","src":"4310:40:12","statements":[{"nodeType":"YulAssignment","src":"4321:22:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4337:5:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4331:5:12"},"nodeType":"YulFunctionCall","src":"4331:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4321:6:12"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4293:5:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4303:6:12","type":""}],"src":"4251:99:12"},{"body":{"nodeType":"YulBlock","src":"4470:34:12","statements":[{"nodeType":"YulAssignment","src":"4480:18:12","value":{"name":"pos","nodeType":"YulIdentifier","src":"4495:3:12"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4480:11:12"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4442:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"4447:6:12","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4458:11:12","type":""}],"src":"4356:148:12"},{"body":{"nodeType":"YulBlock","src":"4620:267:12","statements":[{"nodeType":"YulVariableDeclaration","src":"4630:53:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4677:5:12"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4644:32:12"},"nodeType":"YulFunctionCall","src":"4644:39:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4634:6:12","type":""}]},{"nodeType":"YulAssignment","src":"4692:96:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4776:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"4781:6:12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4699:76:12"},"nodeType":"YulFunctionCall","src":"4699:89:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4692:3:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4823:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"4830:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4819:3:12"},"nodeType":"YulFunctionCall","src":"4819:16:12"},{"name":"pos","nodeType":"YulIdentifier","src":"4837:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"4842:6:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4797:21:12"},"nodeType":"YulFunctionCall","src":"4797:52:12"},"nodeType":"YulExpressionStatement","src":"4797:52:12"},{"nodeType":"YulAssignment","src":"4858:23:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4869:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"4874:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4865:3:12"},"nodeType":"YulFunctionCall","src":"4865:16:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4858:3:12"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4601:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4608:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4616:3:12","type":""}],"src":"4510:377:12"},{"body":{"nodeType":"YulBlock","src":"5029:139:12","statements":[{"nodeType":"YulAssignment","src":"5040:102:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5129:6:12"},{"name":"pos","nodeType":"YulIdentifier","src":"5138:3:12"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5047:81:12"},"nodeType":"YulFunctionCall","src":"5047:95:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5040:3:12"}]},{"nodeType":"YulAssignment","src":"5152:10:12","value":{"name":"pos","nodeType":"YulIdentifier","src":"5159:3:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5152:3:12"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5008:3:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5014:6:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5025:3:12","type":""}],"src":"4893:275:12"},{"body":{"nodeType":"YulBlock","src":"5358:251:12","statements":[{"nodeType":"YulAssignment","src":"5369:102:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5458:6:12"},{"name":"pos","nodeType":"YulIdentifier","src":"5467:3:12"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5376:81:12"},"nodeType":"YulFunctionCall","src":"5376:95:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5369:3:12"}]},{"nodeType":"YulAssignment","src":"5481:102:12","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5570:6:12"},{"name":"pos","nodeType":"YulIdentifier","src":"5579:3:12"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5488:81:12"},"nodeType":"YulFunctionCall","src":"5488:95:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5481:3:12"}]},{"nodeType":"YulAssignment","src":"5593:10:12","value":{"name":"pos","nodeType":"YulIdentifier","src":"5600:3:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5593:3:12"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5329:3:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5335:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5343:6:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5354:3:12","type":""}],"src":"5174:435:12"},{"body":{"nodeType":"YulBlock","src":"5660:32:12","statements":[{"nodeType":"YulAssignment","src":"5670:16:12","value":{"name":"value","nodeType":"YulIdentifier","src":"5681:5:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5670:7:12"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5642:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5652:7:12","type":""}],"src":"5615:77:12"},{"body":{"nodeType":"YulBlock","src":"5726:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5743:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5746:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5736:6:12"},"nodeType":"YulFunctionCall","src":"5736:88:12"},"nodeType":"YulExpressionStatement","src":"5736:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5840:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5843:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5833:6:12"},"nodeType":"YulFunctionCall","src":"5833:15:12"},"nodeType":"YulExpressionStatement","src":"5833:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5864:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5867:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5857:6:12"},"nodeType":"YulFunctionCall","src":"5857:15:12"},"nodeType":"YulExpressionStatement","src":"5857:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5698:180:12"},{"body":{"nodeType":"YulBlock","src":"5928:261:12","statements":[{"nodeType":"YulAssignment","src":"5938:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5961:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5943:17:12"},"nodeType":"YulFunctionCall","src":"5943:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5938:1:12"}]},{"nodeType":"YulAssignment","src":"5972:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5995:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5977:17:12"},"nodeType":"YulFunctionCall","src":"5977:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5972:1:12"}]},{"body":{"nodeType":"YulBlock","src":"6135:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6137:16:12"},"nodeType":"YulFunctionCall","src":"6137:18:12"},"nodeType":"YulExpressionStatement","src":"6137:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6056:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6063:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"6131:1:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6059:3:12"},"nodeType":"YulFunctionCall","src":"6059:74:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6053:2:12"},"nodeType":"YulFunctionCall","src":"6053:81:12"},"nodeType":"YulIf","src":"6050:107:12"},{"nodeType":"YulAssignment","src":"6167:16:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6178:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"6181:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6174:3:12"},"nodeType":"YulFunctionCall","src":"6174:9:12"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6167:3:12"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5915:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"5918:1:12","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5924:3:12","type":""}],"src":"5884:305:12"},{"body":{"nodeType":"YulBlock","src":"6223:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6240:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6243:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6233:6:12"},"nodeType":"YulFunctionCall","src":"6233:88:12"},"nodeType":"YulExpressionStatement","src":"6233:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6340:4:12","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6330:6:12"},"nodeType":"YulFunctionCall","src":"6330:15:12"},"nodeType":"YulExpressionStatement","src":"6330:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6361:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6364:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6354:6:12"},"nodeType":"YulFunctionCall","src":"6354:15:12"},"nodeType":"YulExpressionStatement","src":"6354:15:12"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"6195:180:12"},{"body":{"nodeType":"YulBlock","src":"6423:143:12","statements":[{"nodeType":"YulAssignment","src":"6433:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6456:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6438:17:12"},"nodeType":"YulFunctionCall","src":"6438:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6433:1:12"}]},{"nodeType":"YulAssignment","src":"6467:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6490:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6472:17:12"},"nodeType":"YulFunctionCall","src":"6472:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6467:1:12"}]},{"body":{"nodeType":"YulBlock","src":"6514:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"6516:16:12"},"nodeType":"YulFunctionCall","src":"6516:18:12"},"nodeType":"YulExpressionStatement","src":"6516:18:12"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6511:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6504:6:12"},"nodeType":"YulFunctionCall","src":"6504:9:12"},"nodeType":"YulIf","src":"6501:35:12"},{"nodeType":"YulAssignment","src":"6546:14:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6555:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"6558:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6551:3:12"},"nodeType":"YulFunctionCall","src":"6551:9:12"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6546:1:12"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6412:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"6415:1:12","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6421:1:12","type":""}],"src":"6381:185:12"},{"body":{"nodeType":"YulBlock","src":"6620:300:12","statements":[{"nodeType":"YulAssignment","src":"6630:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6653:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6635:17:12"},"nodeType":"YulFunctionCall","src":"6635:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6630:1:12"}]},{"nodeType":"YulAssignment","src":"6664:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6687:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6669:17:12"},"nodeType":"YulFunctionCall","src":"6669:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6664:1:12"}]},{"body":{"nodeType":"YulBlock","src":"6862:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6864:16:12"},"nodeType":"YulFunctionCall","src":"6864:18:12"},"nodeType":"YulExpressionStatement","src":"6864:18:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6774:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6767:6:12"},"nodeType":"YulFunctionCall","src":"6767:9:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6760:6:12"},"nodeType":"YulFunctionCall","src":"6760:17:12"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6782:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6789:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"6857:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6785:3:12"},"nodeType":"YulFunctionCall","src":"6785:74:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6779:2:12"},"nodeType":"YulFunctionCall","src":"6779:81:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6756:3:12"},"nodeType":"YulFunctionCall","src":"6756:105:12"},"nodeType":"YulIf","src":"6753:131:12"},{"nodeType":"YulAssignment","src":"6894:20:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6909:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"6912:1:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6905:3:12"},"nodeType":"YulFunctionCall","src":"6905:9:12"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6894:7:12"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6603:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"6606:1:12","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6612:7:12","type":""}],"src":"6572:348:12"},{"body":{"nodeType":"YulBlock","src":"6954:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6971:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6974:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6964:6:12"},"nodeType":"YulFunctionCall","src":"6964:88:12"},"nodeType":"YulExpressionStatement","src":"6964:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7068:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7071:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7061:6:12"},"nodeType":"YulFunctionCall","src":"7061:15:12"},"nodeType":"YulExpressionStatement","src":"7061:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7092:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7095:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7085:6:12"},"nodeType":"YulFunctionCall","src":"7085:15:12"},"nodeType":"YulExpressionStatement","src":"7085:15:12"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6926:180:12"},{"body":{"nodeType":"YulBlock","src":"7163:269:12","statements":[{"nodeType":"YulAssignment","src":"7173:22:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7187:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"7193:1:12","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7183:3:12"},"nodeType":"YulFunctionCall","src":"7183:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7173:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"7204:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7234:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"7240:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7230:3:12"},"nodeType":"YulFunctionCall","src":"7230:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7208:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"7281:51:12","statements":[{"nodeType":"YulAssignment","src":"7295:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7309:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"7317:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7305:3:12"},"nodeType":"YulFunctionCall","src":"7305:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7295:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7261:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7254:6:12"},"nodeType":"YulFunctionCall","src":"7254:26:12"},"nodeType":"YulIf","src":"7251:81:12"},{"body":{"nodeType":"YulBlock","src":"7384:42:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"7398:16:12"},"nodeType":"YulFunctionCall","src":"7398:18:12"},"nodeType":"YulExpressionStatement","src":"7398:18:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7348:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7371:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"7379:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7368:2:12"},"nodeType":"YulFunctionCall","src":"7368:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7345:2:12"},"nodeType":"YulFunctionCall","src":"7345:38:12"},"nodeType":"YulIf","src":"7342:84:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7147:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7156:6:12","type":""}],"src":"7112:320:12"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":12,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b5060405162003a1938038062003a1983398181016040528101906200003791906200064f565b6040518060400160405280600d81526020017f44796e616d69635376674e6674000000000000000000000000000000000000008152506040518060400160405280600381526020017f44534e00000000000000000000000000000000000000000000000000000000008152508160009080519060200190620000bb9291906200039d565b508060019080519060200190620000d49291906200039d565b50505060006006819055508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505062000127826200017160201b60201c565b600790805190602001906200013e9291906200039d565b5062000150816200017160201b60201c565b60089080519060200190620001679291906200039d565b505050506200093a565b60606000620001ac836040516020016200018c919062000736565b6040516020818303038152906040526200020f60201b62000f631760201c565b90506040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000081525081604051602001620001f89291906200074f565b604051602081830303815290604052915050919050565b6060600082511415620002345760405180602001604052806000815250905062000398565b6000604051806060016040528060408152602001620039d96040913990506000600360028551620002669190620007b0565b6200027291906200083c565b600462000280919062000874565b90506000602082620002939190620007b0565b67ffffffffffffffff811115620002af57620002ae620004e1565b5b6040519080825280601f01601f191660200182016040528015620002e25781602001600182028036833780820191505090505b509050818152600183018586518101602084015b8183101562000353576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825360018201915050620002f6565b60038951066001811462000370576002811462000381576200038c565b613d3d60f01b60028303526200038c565b603d60f81b60018303525b50505050508093505050505b919050565b828054620003ab9062000904565b90600052602060002090601f016020900481019282620003cf57600085556200041b565b82601f10620003ea57805160ff19168380011785556200041b565b828001600101855582156200041b579182015b828111156200041a578251825591602001919060010190620003fd565b5b5090506200042a91906200042e565b5090565b5b80821115620004495760008160009055506001016200042f565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200048e8262000461565b9050919050565b620004a08162000481565b8114620004ac57600080fd5b50565b600081519050620004c08162000495565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200051b82620004d0565b810181811067ffffffffffffffff821117156200053d576200053c620004e1565b5b80604052505050565b6000620005526200044d565b905062000560828262000510565b919050565b600067ffffffffffffffff821115620005835762000582620004e1565b5b6200058e82620004d0565b9050602081019050919050565b60005b83811015620005bb5780820151818401526020810190506200059e565b83811115620005cb576000848401525b50505050565b6000620005e8620005e28462000565565b62000546565b905082815260208101848484011115620006075762000606620004cb565b5b620006148482856200059b565b509392505050565b600082601f830112620006345762000633620004c6565b5b815162000646848260208601620005d1565b91505092915050565b6000806000606084860312156200066b576200066a62000457565b5b60006200067b86828701620004af565b935050602084015167ffffffffffffffff8111156200069f576200069e6200045c565b5b620006ad868287016200061c565b925050604084015167ffffffffffffffff811115620006d157620006d06200045c565b5b620006df868287016200061c565b9150509250925092565b600081519050919050565b600081905092915050565b60006200070c82620006e9565b620007188185620006f4565b93506200072a8185602086016200059b565b80840191505092915050565b6000620007448284620006ff565b915081905092915050565b60006200075d8285620006ff565b91506200076b8284620006ff565b91508190509392505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007bd8262000777565b9150620007ca8362000777565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000802576200080162000781565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000620008498262000777565b9150620008568362000777565b9250826200086957620008686200080d565b5b828204905092915050565b6000620008818262000777565b91506200088e8362000777565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620008ca57620008c962000781565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200091d57607f821691505b60208210811415620009345762000933620008d5565b5b50919050565b60805160601c6130796200096060003960008181610b000152610bea01526130796000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063b88d4fde11610071578063b88d4fde14610343578063c87b56dd1461035f578063e425aded1461038f578063e985e9c5146103bf578063ed28a122146103ef5761012c565b806370a082311461029d57806376f6056b146102cd57806395d89b41146102eb5780639e87a5cd14610309578063a22cb465146103275761012c565b806323b872dd116100f457806323b872dd146101e757806330d871c61461020357806342842e0e146102335780636352211e1461024f5780636e02007d1461027f5761012c565b806301ffc9a71461013157806306fdde0314610161578063081812fc1461017f578063095ea7b3146101af5780631e930812146101cb575b600080fd5b61014b60048036038101906101469190611c43565b61040d565b6040516101589190611c8b565b60405180910390f35b6101696104ef565b6040516101769190611d3f565b60405180910390f35b61019960048036038101906101949190611d97565b610581565b6040516101a69190611e05565b60405180910390f35b6101c960048036038101906101c49190611e4c565b6105c7565b005b6101e560048036038101906101e09190611ec2565b6106df565b005b61020160048036038101906101fc9190611eef565b610757565b005b61021d60048036038101906102189190612077565b6107b7565b60405161022a9190611d3f565b60405180910390f35b61024d60048036038101906102489190611eef565b610844565b005b61026960048036038101906102649190611d97565b610864565b6040516102769190611e05565b60405180910390f35b610287610916565b60405161029491906120cf565b60405180910390f35b6102b760048036038101906102b291906120ea565b610920565b6040516102c491906120cf565b60405180910390f35b6102d56109d8565b6040516102e29190611d3f565b60405180910390f35b6102f3610a6a565b6040516103009190611d3f565b60405180910390f35b610311610afc565b60405161031e9190612176565b60405180910390f35b610341600480360381019061033c91906121bd565b610b24565b005b61035d6004803603810190610358919061229e565b610b3a565b005b61037960048036038101906103749190611d97565b610b9c565b6040516103869190611d3f565b60405180910390f35b6103a960048036038101906103a49190611d97565b610e25565b6040516103b69190612330565b60405180910390f35b6103d960048036038101906103d4919061234b565b610e3d565b6040516103e69190611c8b565b60405180910390f35b6103f7610ed1565b6040516104049190611d3f565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104d857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104e857506104e7826110dc565b5b9050919050565b6060600080546104fe906123ba565b80601f016020809104026020016040519081016040528092919081815260200182805461052a906123ba565b80156105775780601f1061054c57610100808354040283529160200191610577565b820191906000526020600020905b81548152906001019060200180831161055a57829003601f168201915b5050505050905090565b600061058c82611146565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105d282610864565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610643576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063a9061245e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610662611191565b73ffffffffffffffffffffffffffffffffffffffff16148061069157506106908161068b611191565b610e3d565b5b6106d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c7906124f0565b60405180910390fd5b6106da8383611199565b505050565b806009600060065481526020019081526020016000208190555061070533600654611252565b6001600654610714919061253f565b6006819055506006547f882d3b5a729a8bb95cf6c0083c99b42ecd9637123d4425bd7b768877fd8af8b08260405161074c9190612330565b60405180910390a250565b610768610762611191565b82611270565b6107a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079e90612607565b60405180910390fd5b6107b2838383611305565b505050565b606060006107e3836040516020016107cf9190612663565b604051602081830303815290604052610f63565b90506040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c0000000000008152508160405160200161082d92919061267a565b604051602081830303815290604052915050919050565b61085f83838360405180602001604052806000815250610b3a565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561090d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610904906126ea565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610991576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109889061277c565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600880546109e7906123ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610a13906123ba565b8015610a605780601f10610a3557610100808354040283529160200191610a60565b820191906000526020600020905b815481529060010190602001808311610a4357829003601f168201915b5050505050905090565b606060018054610a79906123ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa5906123ba565b8015610af25780601f10610ac757610100808354040283529160200191610af2565b820191906000526020600020905b815481529060010190602001808311610ad557829003601f168201915b5050505050905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b610b36610b2f611191565b838361156c565b5050565b610b4b610b45611191565b83611270565b610b8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8190612607565b60405180910390fd5b610b96848484846116d9565b50505050565b6060610ba782611735565b610be6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdd906127e8565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610c4e57600080fd5b505afa158015610c62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c869190612874565b505050915050600060078054610c9b906123ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc7906123ba565b8015610d145780601f10610ce957610100808354040283529160200191610d14565b820191906000526020600020905b815481529060010190602001808311610cf757829003601f168201915b5050505050905060096000858152602001908152602001600020548212610dc35760088054610d42906123ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6e906123ba565b8015610dbb5780601f10610d9057610100808354040283529160200191610dbb565b820191906000526020600020905b815481529060010190602001808311610d9e57829003601f168201915b505050505090505b610dcb6117a1565b610dfc610dd66104ef565b83604051602001610de8929190612add565b604051602081830303815290604052610f63565b604051602001610e0d92919061267a565b60405160208183030381529060405292505050919050565b60096020528060005260406000206000915090505481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060078054610ee0906123ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610f0c906123ba565b8015610f595780601f10610f2e57610100808354040283529160200191610f59565b820191906000526020600020905b815481529060010190602001808311610f3c57829003601f168201915b5050505050905090565b6060600082511415610f86576040518060200160405280600081525090506110d7565b60006040518060600160405280604081526020016130046040913990506000600360028551610fb5919061253f565b610fbf9190612b67565b6004610fcb9190612b98565b90506000602082610fdc919061253f565b67ffffffffffffffff811115610ff557610ff4611f4c565b5b6040519080825280601f01601f1916602001820160405280156110275781602001600182028036833780820191505090505b509050818152600183018586518101602084015b81831015611096576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f811685015182536001820191505061103b565b6003895106600181146110b057600281146110c0576110cb565b613d3d60f01b60028303526110cb565b603d60f81b60018303525b50505050508093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61114f81611735565b61118e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611185906126ea565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661120c83610864565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61126c8282604051806020016040528060008152506117de565b5050565b60008061127c83610864565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806112be57506112bd8185610e3d565b5b806112fc57508373ffffffffffffffffffffffffffffffffffffffff166112e484610581565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661132582610864565b73ffffffffffffffffffffffffffffffffffffffff161461137b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137290612c64565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e290612cf6565b60405180910390fd5b6113f6838383611839565b611401600082611199565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114519190612d16565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114a8919061253f565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461156783838361183e565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156115db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d290612d96565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516116cc9190611c8b565b60405180910390a3505050565b6116e4848484611305565b6116f084848484611843565b61172f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172690612e28565b60405180910390fd5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60606040518060400160405280601d81526020017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815250905090565b6117e883836119da565b6117f56000848484611843565b611834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182b90612e28565b60405180910390fd5b505050565b505050565b505050565b60006118648473ffffffffffffffffffffffffffffffffffffffff16611bb4565b156119cd578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261188d611191565b8786866040518563ffffffff1660e01b81526004016118af9493929190612e9d565b602060405180830381600087803b1580156118c957600080fd5b505af19250505080156118fa57506040513d601f19601f820116820180604052508101906118f79190612efe565b60015b61197d573d806000811461192a576040519150601f19603f3d011682016040523d82523d6000602084013e61192f565b606091505b50600081511415611975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196c90612e28565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506119d2565b600190505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4190612f77565b60405180910390fd5b611a5381611735565b15611a93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8a90612fe3565b60405180910390fd5b611a9f60008383611839565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611aef919061253f565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611bb06000838361183e565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c2081611beb565b8114611c2b57600080fd5b50565b600081359050611c3d81611c17565b92915050565b600060208284031215611c5957611c58611be1565b5b6000611c6784828501611c2e565b91505092915050565b60008115159050919050565b611c8581611c70565b82525050565b6000602082019050611ca06000830184611c7c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ce0578082015181840152602081019050611cc5565b83811115611cef576000848401525b50505050565b6000601f19601f8301169050919050565b6000611d1182611ca6565b611d1b8185611cb1565b9350611d2b818560208601611cc2565b611d3481611cf5565b840191505092915050565b60006020820190508181036000830152611d598184611d06565b905092915050565b6000819050919050565b611d7481611d61565b8114611d7f57600080fd5b50565b600081359050611d9181611d6b565b92915050565b600060208284031215611dad57611dac611be1565b5b6000611dbb84828501611d82565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611def82611dc4565b9050919050565b611dff81611de4565b82525050565b6000602082019050611e1a6000830184611df6565b92915050565b611e2981611de4565b8114611e3457600080fd5b50565b600081359050611e4681611e20565b92915050565b60008060408385031215611e6357611e62611be1565b5b6000611e7185828601611e37565b9250506020611e8285828601611d82565b9150509250929050565b6000819050919050565b611e9f81611e8c565b8114611eaa57600080fd5b50565b600081359050611ebc81611e96565b92915050565b600060208284031215611ed857611ed7611be1565b5b6000611ee684828501611ead565b91505092915050565b600080600060608486031215611f0857611f07611be1565b5b6000611f1686828701611e37565b9350506020611f2786828701611e37565b9250506040611f3886828701611d82565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f8482611cf5565b810181811067ffffffffffffffff82111715611fa357611fa2611f4c565b5b80604052505050565b6000611fb6611bd7565b9050611fc28282611f7b565b919050565b600067ffffffffffffffff821115611fe257611fe1611f4c565b5b611feb82611cf5565b9050602081019050919050565b82818337600083830152505050565b600061201a61201584611fc7565b611fac565b90508281526020810184848401111561203657612035611f47565b5b612041848285611ff8565b509392505050565b600082601f83011261205e5761205d611f42565b5b813561206e848260208601612007565b91505092915050565b60006020828403121561208d5761208c611be1565b5b600082013567ffffffffffffffff8111156120ab576120aa611be6565b5b6120b784828501612049565b91505092915050565b6120c981611d61565b82525050565b60006020820190506120e460008301846120c0565b92915050565b600060208284031215612100576120ff611be1565b5b600061210e84828501611e37565b91505092915050565b6000819050919050565b600061213c61213761213284611dc4565b612117565b611dc4565b9050919050565b600061214e82612121565b9050919050565b600061216082612143565b9050919050565b61217081612155565b82525050565b600060208201905061218b6000830184612167565b92915050565b61219a81611c70565b81146121a557600080fd5b50565b6000813590506121b781612191565b92915050565b600080604083850312156121d4576121d3611be1565b5b60006121e285828601611e37565b92505060206121f3858286016121a8565b9150509250929050565b600067ffffffffffffffff82111561221857612217611f4c565b5b61222182611cf5565b9050602081019050919050565b600061224161223c846121fd565b611fac565b90508281526020810184848401111561225d5761225c611f47565b5b612268848285611ff8565b509392505050565b600082601f83011261228557612284611f42565b5b813561229584826020860161222e565b91505092915050565b600080600080608085870312156122b8576122b7611be1565b5b60006122c687828801611e37565b94505060206122d787828801611e37565b93505060406122e887828801611d82565b925050606085013567ffffffffffffffff81111561230957612308611be6565b5b61231587828801612270565b91505092959194509250565b61232a81611e8c565b82525050565b60006020820190506123456000830184612321565b92915050565b6000806040838503121561236257612361611be1565b5b600061237085828601611e37565b925050602061238185828601611e37565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806123d257607f821691505b602082108114156123e6576123e561238b565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000612448602183611cb1565b9150612453826123ec565b604082019050919050565b600060208201905081810360008301526124778161243b565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b60006124da603e83611cb1565b91506124e58261247e565b604082019050919050565b60006020820190508181036000830152612509816124cd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061254a82611d61565b915061255583611d61565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561258a57612589612510565b5b828201905092915050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b60006125f1602e83611cb1565b91506125fc82612595565b604082019050919050565b60006020820190508181036000830152612620816125e4565b9050919050565b600081905092915050565b600061263d82611ca6565b6126478185612627565b9350612657818560208601611cc2565b80840191505092915050565b600061266f8284612632565b915081905092915050565b60006126868285612632565b91506126928284612632565b91508190509392505050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b60006126d4601883611cb1565b91506126df8261269e565b602082019050919050565b60006020820190508181036000830152612703816126c7565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000612766602983611cb1565b91506127718261270a565b604082019050919050565b6000602082019050818103600083015261279581612759565b9050919050565b7f55524920517565727920666f72206e6f6e206578697374656e7420746f6b656e600082015250565b60006127d2602083611cb1565b91506127dd8261279c565b602082019050919050565b60006020820190508181036000830152612801816127c5565b9050919050565b600069ffffffffffffffffffff82169050919050565b61282781612808565b811461283257600080fd5b50565b6000815190506128448161281e565b92915050565b60008151905061285981611e96565b92915050565b60008151905061286e81611d6b565b92915050565b600080600080600060a086880312156128905761288f611be1565b5b600061289e88828901612835565b95505060206128af8882890161284a565b94505060406128c08882890161285f565b93505060606128d18882890161285f565b92505060806128e288828901612835565b9150509295509295909350565b7f7b226e616d653a22000000000000000000000000000000000000000000000000600082015250565b6000612925600883612627565b9150612930826128ef565b600882019050919050565b7f2200000000000000000000000000000000000000000000000000000000000000600082015250565b6000612971600183612627565b915061297c8261293b565b600182019050919050565b7f226465736372697074696f6e223a22416e204e46542074686174206368616e6760008201527f6573206261736564206f6e20636861696e6c696e6b207072696365204665656460208201527f2121220000000000000000000000000000000000000000000000000000000000604082015250565b6000612a09604383612627565b9150612a1482612987565b604382019050919050565b7f2261747472696275746573223a5b7b2274726169745f74797065223a2022636f60008201527f6f6c6e657373222c3a76616c75653a3130307d5d2c22696d616765223a220000602082015250565b6000612a7b603e83612627565b9150612a8682612a1f565b603e82019050919050565b7f227d000000000000000000000000000000000000000000000000000000000000600082015250565b6000612ac7600283612627565b9150612ad282612a91565b600282019050919050565b6000612ae882612918565b9150612af48285612632565b9150612aff82612964565b9150612b0a826129fc565b9150612b1582612a6e565b9150612b218284612632565b9150612b2c82612aba565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612b7282611d61565b9150612b7d83611d61565b925082612b8d57612b8c612b38565b5b828204905092915050565b6000612ba382611d61565b9150612bae83611d61565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612be757612be6612510565b5b828202905092915050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000612c4e602583611cb1565b9150612c5982612bf2565b604082019050919050565b60006020820190508181036000830152612c7d81612c41565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612ce0602483611cb1565b9150612ceb82612c84565b604082019050919050565b60006020820190508181036000830152612d0f81612cd3565b9050919050565b6000612d2182611d61565b9150612d2c83611d61565b925082821015612d3f57612d3e612510565b5b828203905092915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000612d80601983611cb1565b9150612d8b82612d4a565b602082019050919050565b60006020820190508181036000830152612daf81612d73565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612e12603283611cb1565b9150612e1d82612db6565b604082019050919050565b60006020820190508181036000830152612e4181612e05565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000612e6f82612e48565b612e798185612e53565b9350612e89818560208601611cc2565b612e9281611cf5565b840191505092915050565b6000608082019050612eb26000830187611df6565b612ebf6020830186611df6565b612ecc60408301856120c0565b8181036060830152612ede8184612e64565b905095945050505050565b600081519050612ef881611c17565b92915050565b600060208284031215612f1457612f13611be1565b5b6000612f2284828501612ee9565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612f61602083611cb1565b9150612f6c82612f2b565b602082019050919050565b60006020820190508181036000830152612f9081612f54565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612fcd601c83611cb1565b9150612fd882612f97565b602082019050919050565b60006020820190508181036000830152612ffc81612fc0565b905091905056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122069004289fcfa34aa3162722a4c6f0aae4e3e1736dfb717d99d868844334e0d6864736f6c634300080800334142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3A19 CODESIZE SUB DUP1 PUSH3 0x3A19 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44796E616D69635376674E667400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44534E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xBB SWAP3 SWAP2 SWAP1 PUSH3 0x39D JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xD4 SWAP3 SWAP2 SWAP1 PUSH3 0x39D JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP PUSH3 0x127 DUP3 PUSH3 0x171 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x13E SWAP3 SWAP2 SWAP1 PUSH3 0x39D JUMP JUMPDEST POP PUSH3 0x150 DUP2 PUSH3 0x171 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x167 SWAP3 SWAP2 SWAP1 PUSH3 0x39D JUMP JUMPDEST POP POP POP POP PUSH3 0x93A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH3 0x1AC DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x18C SWAP2 SWAP1 PUSH3 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH3 0x20F PUSH1 0x20 SHL PUSH3 0xF63 OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1F8 SWAP3 SWAP2 SWAP1 PUSH3 0x74F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH3 0x234 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH3 0x398 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x39D9 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH3 0x266 SWAP2 SWAP1 PUSH3 0x7B0 JUMP JUMPDEST PUSH3 0x272 SWAP2 SWAP1 PUSH3 0x83C JUMP JUMPDEST PUSH1 0x4 PUSH3 0x280 SWAP2 SWAP1 PUSH3 0x874 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH3 0x293 SWAP2 SWAP1 PUSH3 0x7B0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2AF JUMPI PUSH3 0x2AE PUSH3 0x4E1 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x2E2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH3 0x353 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH3 0x2F6 JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH3 0x370 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x381 JUMPI PUSH3 0x38C JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH3 0x38C JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x3AB SWAP1 PUSH3 0x904 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x3CF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x41B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x3EA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x41B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x41B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x41A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3FD JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x42A SWAP2 SWAP1 PUSH3 0x42E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x449 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x42F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x48E DUP3 PUSH3 0x461 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4A0 DUP2 PUSH3 0x481 JUMP JUMPDEST DUP2 EQ PUSH3 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4C0 DUP2 PUSH3 0x495 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x51B DUP3 PUSH3 0x4D0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x53D JUMPI PUSH3 0x53C PUSH3 0x4E1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x552 PUSH3 0x44D JUMP JUMPDEST SWAP1 POP PUSH3 0x560 DUP3 DUP3 PUSH3 0x510 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x583 JUMPI PUSH3 0x582 PUSH3 0x4E1 JUMP JUMPDEST JUMPDEST PUSH3 0x58E DUP3 PUSH3 0x4D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5BB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x59E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x5CB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5E8 PUSH3 0x5E2 DUP5 PUSH3 0x565 JUMP JUMPDEST PUSH3 0x546 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x607 JUMPI PUSH3 0x606 PUSH3 0x4CB JUMP JUMPDEST JUMPDEST PUSH3 0x614 DUP5 DUP3 DUP6 PUSH3 0x59B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x634 JUMPI PUSH3 0x633 PUSH3 0x4C6 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x646 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x5D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x66B JUMPI PUSH3 0x66A PUSH3 0x457 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x67B DUP7 DUP3 DUP8 ADD PUSH3 0x4AF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x69F JUMPI PUSH3 0x69E PUSH3 0x45C JUMP JUMPDEST JUMPDEST PUSH3 0x6AD DUP7 DUP3 DUP8 ADD PUSH3 0x61C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6D1 JUMPI PUSH3 0x6D0 PUSH3 0x45C JUMP JUMPDEST JUMPDEST PUSH3 0x6DF DUP7 DUP3 DUP8 ADD PUSH3 0x61C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x70C DUP3 PUSH3 0x6E9 JUMP JUMPDEST PUSH3 0x718 DUP2 DUP6 PUSH3 0x6F4 JUMP JUMPDEST SWAP4 POP PUSH3 0x72A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x59B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x744 DUP3 DUP5 PUSH3 0x6FF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x75D DUP3 DUP6 PUSH3 0x6FF JUMP JUMPDEST SWAP2 POP PUSH3 0x76B DUP3 DUP5 PUSH3 0x6FF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x7BD DUP3 PUSH3 0x777 JUMP JUMPDEST SWAP2 POP PUSH3 0x7CA DUP4 PUSH3 0x777 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH3 0x802 JUMPI PUSH3 0x801 PUSH3 0x781 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x849 DUP3 PUSH3 0x777 JUMP JUMPDEST SWAP2 POP PUSH3 0x856 DUP4 PUSH3 0x777 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x869 JUMPI PUSH3 0x868 PUSH3 0x80D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x881 DUP3 PUSH3 0x777 JUMP JUMPDEST SWAP2 POP PUSH3 0x88E DUP4 PUSH3 0x777 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x8CA JUMPI PUSH3 0x8C9 PUSH3 0x781 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x91D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x934 JUMPI PUSH3 0x933 PUSH3 0x8D5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x3079 PUSH3 0x960 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xB00 ADD MSTORE PUSH2 0xBEA ADD MSTORE PUSH2 0x3079 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xE425ADED EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xED28A122 EQ PUSH2 0x3EF JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x76F6056B EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x9E87A5CD EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x327 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x30D871C6 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x27F JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x1E930812 EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1E4C JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1EC2 JUMP JUMPDEST PUSH2 0x6DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST PUSH2 0x757 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST PUSH2 0x844 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x20CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x20CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F3 PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x2176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x21BD JUMP JUMPDEST PUSH2 0xB24 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x229E JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x2330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F7 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4D8 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4E8 JUMPI POP PUSH2 0x4E7 DUP3 PUSH2 0x10DC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4FE SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x577 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x577 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58C DUP3 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 DUP3 PUSH2 0x864 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63A SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x662 PUSH2 0x1191 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x691 JUMPI POP PUSH2 0x690 DUP2 PUSH2 0x68B PUSH2 0x1191 JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST JUMPDEST PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x24F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6DA DUP4 DUP4 PUSH2 0x1199 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x705 CALLER PUSH1 0x6 SLOAD PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x253F JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH32 0x882D3B5A729A8BB95CF6C0083C99B42ECD9637123D4425BD7B768877FD8AF8B0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x2330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x768 PUSH2 0x762 PUSH2 0x1191 JUMP JUMPDEST DUP3 PUSH2 0x1270 JUMP JUMPDEST PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B2 DUP4 DUP4 DUP4 PUSH2 0x1305 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x7E3 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x2663 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xF63 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x82D SWAP3 SWAP2 SWAP1 PUSH2 0x267A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x85F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB3A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x904 SWAP1 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x991 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x988 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x9E7 SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA13 SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA60 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA35 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA60 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA43 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xA79 SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAA5 SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAF2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAC7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAF2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAD5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB36 PUSH2 0xB2F PUSH2 0x1191 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x156C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB4B PUSH2 0xB45 PUSH2 0x1191 JUMP JUMPDEST DUP4 PUSH2 0x1270 JUMP JUMPDEST PUSH2 0xB8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB81 SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB96 DUP5 DUP5 DUP5 DUP5 PUSH2 0x16D9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBA7 DUP3 PUSH2 0x1735 JUMP JUMPDEST PUSH2 0xBE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDD SWAP1 PUSH2 0x27E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC86 SWAP2 SWAP1 PUSH2 0x2874 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD PUSH2 0xC9B SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCC7 SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD14 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCE9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD14 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCF7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 SLT PUSH2 0xDC3 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH2 0xD42 SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD6E SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDBB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD90 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDBB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD9E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST PUSH2 0xDCB PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xDFC PUSH2 0xDD6 PUSH2 0x4EF JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDE8 SWAP3 SWAP2 SWAP1 PUSH2 0x2ADD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE0D SWAP3 SWAP2 SWAP1 PUSH2 0x267A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0xEE0 SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF0C SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF59 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF59 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF3C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0xF86 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3004 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0xFB5 SWAP2 SWAP1 PUSH2 0x253F JUMP JUMPDEST PUSH2 0xFBF SWAP2 SWAP1 PUSH2 0x2B67 JUMP JUMPDEST PUSH1 0x4 PUSH2 0xFCB SWAP2 SWAP1 PUSH2 0x2B98 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH2 0xFDC SWAP2 SWAP1 PUSH2 0x253F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF5 JUMPI PUSH2 0xFF4 PUSH2 0x1F4C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1027 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x1096 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH2 0x103B JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x10B0 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x10C0 JUMPI PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x114F DUP2 PUSH2 0x1735 JUMP JUMPDEST PUSH2 0x118E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1185 SWAP1 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x120C DUP4 PUSH2 0x864 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x126C DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x17DE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x127C DUP4 PUSH2 0x864 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x12BE JUMPI POP PUSH2 0x12BD DUP2 DUP6 PUSH2 0xE3D JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x12FC JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E4 DUP5 PUSH2 0x581 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1325 DUP3 PUSH2 0x864 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x137B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1372 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E2 SWAP1 PUSH2 0x2CF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F6 DUP4 DUP4 DUP4 PUSH2 0x1839 JUMP JUMPDEST PUSH2 0x1401 PUSH1 0x0 DUP3 PUSH2 0x1199 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1451 SWAP2 SWAP1 PUSH2 0x2D16 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14A8 SWAP2 SWAP1 PUSH2 0x253F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1567 DUP4 DUP4 DUP4 PUSH2 0x183E JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x15DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D2 SWAP1 PUSH2 0x2D96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x16CC SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x16E4 DUP5 DUP5 DUP5 PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x16F0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1843 JUMP JUMPDEST PUSH2 0x172F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1726 SWAP1 PUSH2 0x2E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x17E8 DUP4 DUP4 PUSH2 0x19DA JUMP JUMPDEST PUSH2 0x17F5 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1843 JUMP JUMPDEST PUSH2 0x1834 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182B SWAP1 PUSH2 0x2E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1864 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BB4 JUMP JUMPDEST ISZERO PUSH2 0x19CD JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x188D PUSH2 0x1191 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18AF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18FA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18F7 SWAP2 SWAP1 PUSH2 0x2EFE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x197D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x192A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x192F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1975 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196C SWAP1 PUSH2 0x2E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A41 SWAP1 PUSH2 0x2F77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A53 DUP2 PUSH2 0x1735 JUMP JUMPDEST ISZERO PUSH2 0x1A93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8A SWAP1 PUSH2 0x2FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A9F PUSH1 0x0 DUP4 DUP4 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1AEF SWAP2 SWAP1 PUSH2 0x253F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1BB0 PUSH1 0x0 DUP4 DUP4 PUSH2 0x183E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C20 DUP2 PUSH2 0x1BEB JUMP JUMPDEST DUP2 EQ PUSH2 0x1C2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C3D DUP2 PUSH2 0x1C17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C59 JUMPI PUSH2 0x1C58 PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C67 DUP5 DUP3 DUP6 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C85 DUP2 PUSH2 0x1C70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CA0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CE0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CC5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1CEF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D11 DUP3 PUSH2 0x1CA6 JUMP JUMPDEST PUSH2 0x1D1B DUP2 DUP6 PUSH2 0x1CB1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D2B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x1D34 DUP2 PUSH2 0x1CF5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D59 DUP2 DUP5 PUSH2 0x1D06 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D74 DUP2 PUSH2 0x1D61 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D91 DUP2 PUSH2 0x1D6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DAD JUMPI PUSH2 0x1DAC PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DBB DUP5 DUP3 DUP6 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEF DUP3 PUSH2 0x1DC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFF DUP2 PUSH2 0x1DE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E29 DUP2 PUSH2 0x1DE4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E46 DUP2 PUSH2 0x1E20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E63 JUMPI PUSH2 0x1E62 PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E71 DUP6 DUP3 DUP7 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E82 DUP6 DUP3 DUP7 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E9F DUP2 PUSH2 0x1E8C JUMP JUMPDEST DUP2 EQ PUSH2 0x1EAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EBC DUP2 PUSH2 0x1E96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED8 JUMPI PUSH2 0x1ED7 PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EE6 DUP5 DUP3 DUP6 ADD PUSH2 0x1EAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F08 JUMPI PUSH2 0x1F07 PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F16 DUP7 DUP3 DUP8 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F27 DUP7 DUP3 DUP8 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F38 DUP7 DUP3 DUP8 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1F84 DUP3 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FA3 JUMPI PUSH2 0x1FA2 PUSH2 0x1F4C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB6 PUSH2 0x1BD7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FC2 DUP3 DUP3 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FE2 JUMPI PUSH2 0x1FE1 PUSH2 0x1F4C JUMP JUMPDEST JUMPDEST PUSH2 0x1FEB DUP3 PUSH2 0x1CF5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201A PUSH2 0x2015 DUP5 PUSH2 0x1FC7 JUMP JUMPDEST PUSH2 0x1FAC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2036 JUMPI PUSH2 0x2035 PUSH2 0x1F47 JUMP JUMPDEST JUMPDEST PUSH2 0x2041 DUP5 DUP3 DUP6 PUSH2 0x1FF8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x205E JUMPI PUSH2 0x205D PUSH2 0x1F42 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x206E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2007 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x208D JUMPI PUSH2 0x208C PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20AB JUMPI PUSH2 0x20AA PUSH2 0x1BE6 JUMP JUMPDEST JUMPDEST PUSH2 0x20B7 DUP5 DUP3 DUP6 ADD PUSH2 0x2049 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20C9 DUP2 PUSH2 0x1D61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2100 JUMPI PUSH2 0x20FF PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x210E DUP5 DUP3 DUP6 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x213C PUSH2 0x2137 PUSH2 0x2132 DUP5 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x1DC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214E DUP3 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2160 DUP3 PUSH2 0x2143 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2170 DUP2 PUSH2 0x2155 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x218B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2167 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x219A DUP2 PUSH2 0x1C70 JUMP JUMPDEST DUP2 EQ PUSH2 0x21A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21B7 DUP2 PUSH2 0x2191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21D4 JUMPI PUSH2 0x21D3 PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21E2 DUP6 DUP3 DUP7 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21F3 DUP6 DUP3 DUP7 ADD PUSH2 0x21A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2218 JUMPI PUSH2 0x2217 PUSH2 0x1F4C JUMP JUMPDEST JUMPDEST PUSH2 0x2221 DUP3 PUSH2 0x1CF5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2241 PUSH2 0x223C DUP5 PUSH2 0x21FD JUMP JUMPDEST PUSH2 0x1FAC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x225D JUMPI PUSH2 0x225C PUSH2 0x1F47 JUMP JUMPDEST JUMPDEST PUSH2 0x2268 DUP5 DUP3 DUP6 PUSH2 0x1FF8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2285 JUMPI PUSH2 0x2284 PUSH2 0x1F42 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2295 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x222E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x22B8 JUMPI PUSH2 0x22B7 PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22C6 DUP8 DUP3 DUP9 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x22D7 DUP8 DUP3 DUP9 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x22E8 DUP8 DUP3 DUP9 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2309 JUMPI PUSH2 0x2308 PUSH2 0x1BE6 JUMP JUMPDEST JUMPDEST PUSH2 0x2315 DUP8 DUP3 DUP9 ADD PUSH2 0x2270 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x232A DUP2 PUSH2 0x1E8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2345 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2321 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2362 JUMPI PUSH2 0x2361 PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2370 DUP6 DUP3 DUP7 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2381 DUP6 DUP3 DUP7 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x23D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x23E6 JUMPI PUSH2 0x23E5 PUSH2 0x238B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2448 PUSH1 0x21 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2453 DUP3 PUSH2 0x23EC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2477 DUP2 PUSH2 0x243B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24DA PUSH1 0x3E DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E5 DUP3 PUSH2 0x247E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2509 DUP2 PUSH2 0x24CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x254A DUP3 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x2555 DUP4 PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x258A JUMPI PUSH2 0x2589 PUSH2 0x2510 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25F1 PUSH1 0x2E DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x25FC DUP3 PUSH2 0x2595 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2620 DUP2 PUSH2 0x25E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x263D DUP3 PUSH2 0x1CA6 JUMP JUMPDEST PUSH2 0x2647 DUP2 DUP6 PUSH2 0x2627 JUMP JUMPDEST SWAP4 POP PUSH2 0x2657 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CC2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266F DUP3 DUP5 PUSH2 0x2632 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2686 DUP3 DUP6 PUSH2 0x2632 JUMP JUMPDEST SWAP2 POP PUSH2 0x2692 DUP3 DUP5 PUSH2 0x2632 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D4 PUSH1 0x18 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x26DF DUP3 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2703 DUP2 PUSH2 0x26C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2766 PUSH1 0x29 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2771 DUP3 PUSH2 0x270A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2795 DUP2 PUSH2 0x2759 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x55524920517565727920666F72206E6F6E206578697374656E7420746F6B656E PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27D2 PUSH1 0x20 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x27DD DUP3 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2801 DUP2 PUSH2 0x27C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2827 DUP2 PUSH2 0x2808 JUMP JUMPDEST DUP2 EQ PUSH2 0x2832 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2844 DUP2 PUSH2 0x281E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2859 DUP2 PUSH2 0x1E96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x286E DUP2 PUSH2 0x1D6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2890 JUMPI PUSH2 0x288F PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x289E DUP9 DUP3 DUP10 ADD PUSH2 0x2835 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x28AF DUP9 DUP3 DUP10 ADD PUSH2 0x284A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x28C0 DUP9 DUP3 DUP10 ADD PUSH2 0x285F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x28D1 DUP9 DUP3 DUP10 ADD PUSH2 0x285F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x28E2 DUP9 DUP3 DUP10 ADD PUSH2 0x2835 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x7B226E616D653A22000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2925 PUSH1 0x8 DUP4 PUSH2 0x2627 JUMP JUMPDEST SWAP2 POP PUSH2 0x2930 DUP3 PUSH2 0x28EF JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2971 PUSH1 0x1 DUP4 PUSH2 0x2627 JUMP JUMPDEST SWAP2 POP PUSH2 0x297C DUP3 PUSH2 0x293B JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x226465736372697074696F6E223A22416E204E46542074686174206368616E67 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573206261736564206F6E20636861696E6C696E6B2070726963652046656564 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2121220000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A09 PUSH1 0x43 DUP4 PUSH2 0x2627 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A14 DUP3 PUSH2 0x2987 JUMP JUMPDEST PUSH1 0x43 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A5B7B2274726169745F74797065223A2022636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6C6E657373222C3A76616C75653A3130307D5D2C22696D616765223A220000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A7B PUSH1 0x3E DUP4 PUSH2 0x2627 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A86 DUP3 PUSH2 0x2A1F JUMP JUMPDEST PUSH1 0x3E DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x227D000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC7 PUSH1 0x2 DUP4 PUSH2 0x2627 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AD2 DUP3 PUSH2 0x2A91 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AE8 DUP3 PUSH2 0x2918 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AF4 DUP3 DUP6 PUSH2 0x2632 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AFF DUP3 PUSH2 0x2964 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B0A DUP3 PUSH2 0x29FC JUMP JUMPDEST SWAP2 POP PUSH2 0x2B15 DUP3 PUSH2 0x2A6E JUMP JUMPDEST SWAP2 POP PUSH2 0x2B21 DUP3 DUP5 PUSH2 0x2632 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B2C DUP3 PUSH2 0x2ABA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B72 DUP3 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B7D DUP4 PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2B8D JUMPI PUSH2 0x2B8C PUSH2 0x2B38 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA3 DUP3 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BAE DUP4 PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2BE7 JUMPI PUSH2 0x2BE6 PUSH2 0x2510 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4E PUSH1 0x25 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C59 DUP3 PUSH2 0x2BF2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C7D DUP2 PUSH2 0x2C41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE0 PUSH1 0x24 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CEB DUP3 PUSH2 0x2C84 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D0F DUP2 PUSH2 0x2CD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D21 DUP3 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D2C DUP4 PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2D3F JUMPI PUSH2 0x2D3E PUSH2 0x2510 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D80 PUSH1 0x19 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D8B DUP3 PUSH2 0x2D4A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DAF DUP2 PUSH2 0x2D73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E12 PUSH1 0x32 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E1D DUP3 PUSH2 0x2DB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E41 DUP2 PUSH2 0x2E05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E6F DUP3 PUSH2 0x2E48 JUMP JUMPDEST PUSH2 0x2E79 DUP2 DUP6 PUSH2 0x2E53 JUMP JUMPDEST SWAP4 POP PUSH2 0x2E89 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x2E92 DUP2 PUSH2 0x1CF5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2EB2 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x2EBF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x2ECC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20C0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2EDE DUP2 DUP5 PUSH2 0x2E64 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2EF8 DUP2 PUSH2 0x1C17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F14 JUMPI PUSH2 0x2F13 PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F22 DUP5 DUP3 DUP6 ADD PUSH2 0x2EE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F61 PUSH1 0x20 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F6C DUP3 PUSH2 0x2F2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F90 DUP2 PUSH2 0x2F54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FCD PUSH1 0x1C DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD8 DUP3 PUSH2 0x2F97 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FFC DUP2 PUSH2 0x2FC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 PUSH10 0x4289FCFA34AA316272 0x2A 0x4C PUSH16 0xAAE4E3E1736DFB717D99D868844334E 0xD PUSH9 0x64736F6C6343000808 STOP CALLER COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2F00000000000000 ","sourceMap":"279:3031:11:-:0;;;700:338;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;871:1:11::1;854:14;:18;;;;918:16;882:53;;;;;;;;;;::::0;::::1;961:21;975:6;961:13;;;:21;;:::i;:::-;945:13;:37;;;;;;;;;;;;:::i;:::-;;1009:22;1023:7;1009:13;;;:22;;:::i;:::-;992:14;:39;;;;;;;;;;;;:::i;:::-;;700:338:::0;;;279:3031;;1301:324;1388:13;1417:30;1450:73;1507:3;1490:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;1450:13;;;;;:73;;:::i;:::-;1417:106;;1576:22;;;;;;;;;;;;;;;;;1600:16;1559:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1533:85;;;1301:324;;;:::o;777:1861:10:-;835:13;879:1;864:4;:11;:16;860:31;;;882:9;;;;;;;;;;;;;;;;860:31;940:19;962:12;;;;;;;;;;;;;;;;;940:34;;1023:18;1069:1;1064;1050:4;:11;:15;;;;:::i;:::-;1049:21;;;;:::i;:::-;1044:1;:27;;;;:::i;:::-;1023:48;;1151:20;1198:2;1185:10;:15;;;;:::i;:::-;1174:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1151:50;;1294:10;1286:6;1279:26;1386:1;1379:5;1375:13;1442:4;1492;1486:11;1477:7;1473:25;1585:2;1577:6;1573:15;1655:739;1674:6;1665:7;1662:19;1655:739;;;1771:1;1762:7;1758:15;1747:26;;1809:7;1803:14;1932:4;1924:5;1920:2;1916:14;1912:25;1902:8;1898:40;1892:47;1881:9;1873:67;1985:1;1974:9;1970:17;1957:30;;2063:4;2055:5;2051:2;2047:14;2043:25;2033:8;2029:40;2023:47;2012:9;2004:67;2116:1;2105:9;2101:17;2088:30;;2194:4;2186:5;2183:1;2178:14;2174:25;2164:8;2160:40;2154:47;2143:9;2135:67;2247:1;2236:9;2232:17;2219:30;;2325:4;2317:5;2305:25;2295:8;2291:40;2285:47;2274:9;2266:67;2378:1;2367:9;2363:17;2350:30;;1697:697;1655:739;;;2464:1;2457:4;2451:11;2447:19;2484:1;2479:54;;;;2551:1;2546:52;;;;2440:158;;2479:54;2523:6;2518:3;2514:16;2510:1;2499:9;2495:17;2488:43;2479:54;;2546:52;2590:4;2585:3;2581:14;2577:1;2566:9;2562:17;2555:41;2440:158;;1221:1387;;;;2625:6;2618:13;;;;;777:1861;;;;:::o;279:3031:11:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:307::-;2189:1;2199:113;2213:6;2210:1;2207:13;2199:113;;;2298:1;2293:3;2289:11;2283:18;2279:1;2274:3;2270:11;2263:39;2235:2;2232:1;2228:10;2223:15;;2199:113;;;2330:6;2327:1;2324:13;2321:101;;;2410:1;2401:6;2396:3;2392:16;2385:27;2321:101;2170:258;2121:307;;;:::o;2434:421::-;2523:5;2548:66;2564:49;2606:6;2564:49;:::i;:::-;2548:66;:::i;:::-;2539:75;;2637:6;2630:5;2623:21;2675:4;2668:5;2664:16;2713:3;2704:6;2699:3;2695:16;2692:25;2689:112;;;2720:79;;:::i;:::-;2689:112;2810:39;2842:6;2837:3;2832;2810:39;:::i;:::-;2529:326;2434:421;;;;;:::o;2875:355::-;2942:5;2991:3;2984:4;2976:6;2972:17;2968:27;2958:122;;2999:79;;:::i;:::-;2958:122;3109:6;3103:13;3134:90;3220:3;3212:6;3205:4;3197:6;3193:17;3134:90;:::i;:::-;3125:99;;2948:282;2875:355;;;;:::o;3236:1009::-;3344:6;3352;3360;3409:2;3397:9;3388:7;3384:23;3380:32;3377:119;;;3415:79;;:::i;:::-;3377:119;3535:1;3560:64;3616:7;3607:6;3596:9;3592:22;3560:64;:::i;:::-;3550:74;;3506:128;3694:2;3683:9;3679:18;3673:25;3725:18;3717:6;3714:30;3711:117;;;3747:79;;:::i;:::-;3711:117;3852:74;3918:7;3909:6;3898:9;3894:22;3852:74;:::i;:::-;3842:84;;3644:292;3996:2;3985:9;3981:18;3975:25;4027:18;4019:6;4016:30;4013:117;;;4049:79;;:::i;:::-;4013:117;4154:74;4220:7;4211:6;4200:9;4196:22;4154:74;:::i;:::-;4144:84;;3946:292;3236:1009;;;;;:::o;4251:99::-;4303:6;4337:5;4331:12;4321:22;;4251:99;;;:::o;4356:148::-;4458:11;4495:3;4480:18;;4356:148;;;;:::o;4510:377::-;4616:3;4644:39;4677:5;4644:39;:::i;:::-;4699:89;4781:6;4776:3;4699:89;:::i;:::-;4692:96;;4797:52;4842:6;4837:3;4830:4;4823:5;4819:16;4797:52;:::i;:::-;4874:6;4869:3;4865:16;4858:23;;4620:267;4510:377;;;;:::o;4893:275::-;5025:3;5047:95;5138:3;5129:6;5047:95;:::i;:::-;5040:102;;5159:3;5152:10;;4893:275;;;;:::o;5174:435::-;5354:3;5376:95;5467:3;5458:6;5376:95;:::i;:::-;5369:102;;5488:95;5579:3;5570:6;5488:95;:::i;:::-;5481:102;;5600:3;5593:10;;5174:435;;;;;:::o;5615:77::-;5652:7;5681:5;5670:16;;5615:77;;;:::o;5698:180::-;5746:77;5743:1;5736:88;5843:4;5840:1;5833:15;5867:4;5864:1;5857:15;5884:305;5924:3;5943:20;5961:1;5943:20;:::i;:::-;5938:25;;5977:20;5995:1;5977:20;:::i;:::-;5972:25;;6131:1;6063:66;6059:74;6056:1;6053:81;6050:107;;;6137:18;;:::i;:::-;6050:107;6181:1;6178;6174:9;6167:16;;5884:305;;;;:::o;6195:180::-;6243:77;6240:1;6233:88;6340:4;6337:1;6330:15;6364:4;6361:1;6354:15;6381:185;6421:1;6438:20;6456:1;6438:20;:::i;:::-;6433:25;;6472:20;6490:1;6472:20;:::i;:::-;6467:25;;6511:1;6501:35;;6516:18;;:::i;:::-;6501:35;6558:1;6555;6551:9;6546:14;;6381:185;;;;:::o;6572:348::-;6612:7;6635:20;6653:1;6635:20;:::i;:::-;6630:25;;6669:20;6687:1;6669:20;:::i;:::-;6664:25;;6857:1;6789:66;6785:74;6782:1;6779:81;6774:1;6767:9;6760:17;6756:105;6753:131;;;6864:18;;:::i;:::-;6753:131;6912:1;6909;6905:9;6894:20;;6572:348;;;;:::o;6926:180::-;6974:77;6971:1;6964:88;7071:4;7068:1;7061:15;7095:4;7092:1;7085:15;7112:320;7156:6;7193:1;7187:4;7183:12;7173:22;;7240:1;7234:4;7230:12;7261:18;7251:81;;7317:4;7309:6;7305:17;7295:27;;7251:81;7379:2;7371:6;7368:14;7348:18;7345:38;7342:84;;;7398:18;;:::i;:::-;7342:84;7163:269;7112:320;;;:::o;279:3031:11:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_911":{"entryPoint":6206,"id":911,"parameterSlots":3,"returnSlots":0},"@_approve_781":{"entryPoint":4505,"id":781,"parameterSlots":2,"returnSlots":0},"@_baseURI_1969":{"entryPoint":6049,"id":1969,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_900":{"entryPoint":6201,"id":900,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_889":{"entryPoint":6211,"id":889,"parameterSlots":4,"returnSlots":1},"@_exists_478":{"entryPoint":5941,"id":478,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_512":{"entryPoint":4720,"id":512,"parameterSlots":2,"returnSlots":1},"@_mint_622":{"entryPoint":6618,"id":622,"parameterSlots":2,"returnSlots":0},"@_msgSender_1380":{"entryPoint":4497,"id":1380,"parameterSlots":0,"returnSlots":1},"@_requireMinted_827":{"entryPoint":4422,"id":827,"parameterSlots":1,"returnSlots":0},"@_safeMint_527":{"entryPoint":4690,"id":527,"parameterSlots":2,"returnSlots":0},"@_safeMint_556":{"entryPoint":6110,"id":556,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_460":{"entryPoint":5849,"id":460,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_813":{"entryPoint":5484,"id":813,"parameterSlots":3,"returnSlots":0},"@_transfer_757":{"entryPoint":4869,"id":757,"parameterSlots":3,"returnSlots":0},"@approve_302":{"entryPoint":1479,"id":302,"parameterSlots":2,"returnSlots":0},"@balanceOf_163":{"entryPoint":2336,"id":163,"parameterSlots":1,"returnSlots":1},"@encode_1705":{"entryPoint":3939,"id":1705,"parameterSlots":1,"returnSlots":1},"@getApproved_320":{"entryPoint":1409,"id":320,"parameterSlots":1,"returnSlots":1},"@getHighSVG_1985":{"entryPoint":2520,"id":1985,"parameterSlots":0,"returnSlots":1},"@getLowSVG_1977":{"entryPoint":3793,"id":1977,"parameterSlots":0,"returnSlots":1},"@getPriceFeed_1994":{"entryPoint":2812,"id":1994,"parameterSlots":0,"returnSlots":1},"@getTokenCounter_2002":{"entryPoint":2326,"id":2002,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_355":{"entryPoint":3645,"id":355,"parameterSlots":2,"returnSlots":1},"@isContract_1091":{"entryPoint":7092,"id":1091,"parameterSlots":1,"returnSlots":1},"@mintNft_1863":{"entryPoint":1759,"id":1863,"parameterSlots":1,"returnSlots":0},"@name_201":{"entryPoint":1263,"id":201,"parameterSlots":0,"returnSlots":1},"@ownerOf_191":{"entryPoint":2148,"id":191,"parameterSlots":1,"returnSlots":1},"@s_tokenIdToHighValue_1792":{"entryPoint":3621,"id":1792,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_401":{"entryPoint":2116,"id":401,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_431":{"entryPoint":2874,"id":431,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_337":{"entryPoint":2852,"id":337,"parameterSlots":2,"returnSlots":0},"@supportsInterface_139":{"entryPoint":1037,"id":139,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1639":{"entryPoint":4316,"id":1639,"parameterSlots":1,"returnSlots":1},"@svgToImageURI_1896":{"entryPoint":1975,"id":1896,"parameterSlots":1,"returnSlots":1},"@symbol_211":{"entryPoint":2666,"id":211,"parameterSlots":0,"returnSlots":1},"@tokenURI_1960":{"entryPoint":2972,"id":1960,"parameterSlots":1,"returnSlots":1},"@transferFrom_382":{"entryPoint":1879,"id":382,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":8750,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":8199,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":7735,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":8616,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7214,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":12009,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":8816,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256":{"entryPoint":7853,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":10314,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":8265,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":10335,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":10293,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8426,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9035,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7919,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":8862,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":8637,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7756,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":12030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_int256":{"entryPoint":7874,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":8311,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7575,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":10356,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7670,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7292,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":11876,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack":{"entryPoint":8551,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":8993,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7430,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9778,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":11781,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":11329,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":12224,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":11475,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10862,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":11635,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":10073,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10596,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10938,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10748,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack":{"entryPoint":9421,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":12116,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10520,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf_to_t_string_memory_ptr_fromStack":{"entryPoint":10181,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":9927,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":9275,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack":{"entryPoint":9700,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8384,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9827,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9850,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d_t_string_memory_ptr_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735_t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10973,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7685,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11933,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7307,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed":{"entryPoint":8566,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":9008,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7487,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11816,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11364,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12259,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11510,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11670,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10108,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9456,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12151,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10216,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9962,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9310,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9735,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8399,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":8108,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7127,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8701,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":8135,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":11848,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7334,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":11859,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7345,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9767,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9535,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":11111,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11160,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11542,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7652,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7280,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7147,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":7820,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7620,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7521,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":10248,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_AggregatorV3Interface_$45_to_t_address":{"entryPoint":8533,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":8515,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":8481,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":8184,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":7362,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9146,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":8059,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":8471,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9488,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11064,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":9099,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8012,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8002,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8007,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7142,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7137,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7413,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":11702,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":11250,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":12183,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":11396,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24":{"entryPoint":10783,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":11594,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":9994,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0":{"entryPoint":10555,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475":{"entryPoint":10897,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735":{"entryPoint":10631,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304":{"entryPoint":9342,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":12075,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d":{"entryPoint":10479,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf":{"entryPoint":10140,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":9886,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":9196,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b":{"entryPoint":9621,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7712,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8593,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7191,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":7830,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7531,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":10270,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:38092:12","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:12","statements":[{"nodeType":"YulAssignment","src":"57:19:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:12"},"nodeType":"YulFunctionCall","src":"67:9:12"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:12"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:12","type":""}],"src":"7:75:12"},{"body":{"nodeType":"YulBlock","src":"177:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:12"},"nodeType":"YulFunctionCall","src":"187:12:12"},"nodeType":"YulExpressionStatement","src":"187:12:12"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:12"},{"body":{"nodeType":"YulBlock","src":"300:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:12"},"nodeType":"YulFunctionCall","src":"310:12:12"},"nodeType":"YulExpressionStatement","src":"310:12:12"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:12"},{"body":{"nodeType":"YulBlock","src":"378:105:12","statements":[{"nodeType":"YulAssignment","src":"388:89:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:12","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:12"},"nodeType":"YulFunctionCall","src":"399:78:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:12"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:12","type":""}],"src":"334:149:12"},{"body":{"nodeType":"YulBlock","src":"531:78:12","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:12"},"nodeType":"YulFunctionCall","src":"589:12:12"},"nodeType":"YulExpressionStatement","src":"589:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:12"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:12"},"nodeType":"YulFunctionCall","src":"561:23:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:12"},"nodeType":"YulFunctionCall","src":"551:34:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:12"},"nodeType":"YulFunctionCall","src":"544:42:12"},"nodeType":"YulIf","src":"541:62:12"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:12","type":""}],"src":"489:120:12"},{"body":{"nodeType":"YulBlock","src":"666:86:12","statements":[{"nodeType":"YulAssignment","src":"676:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:12"},"nodeType":"YulFunctionCall","src":"685:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:12"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:12"},"nodeType":"YulFunctionCall","src":"714:32:12"},"nodeType":"YulExpressionStatement","src":"714:32:12"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:12","type":""}],"src":"615:137:12"},{"body":{"nodeType":"YulBlock","src":"823:262:12","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:12"},"nodeType":"YulFunctionCall","src":"871:79:12"},"nodeType":"YulExpressionStatement","src":"871:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:12"},"nodeType":"YulFunctionCall","src":"840:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:12"},"nodeType":"YulFunctionCall","src":"836:32:12"},"nodeType":"YulIf","src":"833:119:12"},{"nodeType":"YulBlock","src":"962:116:12","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:12","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:12"},"nodeType":"YulFunctionCall","src":"1036:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:12"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:12"},"nodeType":"YulFunctionCall","src":"1016:52:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:12"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:12","type":""}],"src":"758:327:12"},{"body":{"nodeType":"YulBlock","src":"1133:48:12","statements":[{"nodeType":"YulAssignment","src":"1143:32:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:12"},"nodeType":"YulFunctionCall","src":"1161:13:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:12"},"nodeType":"YulFunctionCall","src":"1154:21:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:12"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:12","type":""}],"src":"1091:90:12"},{"body":{"nodeType":"YulBlock","src":"1246:50:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:12"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:12"},"nodeType":"YulFunctionCall","src":"1268:21:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:12"},"nodeType":"YulFunctionCall","src":"1256:34:12"},"nodeType":"YulExpressionStatement","src":"1256:34:12"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:12","type":""}],"src":"1187:109:12"},{"body":{"nodeType":"YulBlock","src":"1394:118:12","statements":[{"nodeType":"YulAssignment","src":"1404:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:12"},"nodeType":"YulFunctionCall","src":"1412:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:12"},"nodeType":"YulFunctionCall","src":"1487:17:12"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:12"},"nodeType":"YulFunctionCall","src":"1440:65:12"},"nodeType":"YulExpressionStatement","src":"1440:65:12"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:12","type":""}],"src":"1302:210:12"},{"body":{"nodeType":"YulBlock","src":"1577:40:12","statements":[{"nodeType":"YulAssignment","src":"1588:22:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:12"},"nodeType":"YulFunctionCall","src":"1598:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:12"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:12","type":""}],"src":"1518:99:12"},{"body":{"nodeType":"YulBlock","src":"1719:73:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:12"},"nodeType":"YulFunctionCall","src":"1729:19:12"},"nodeType":"YulExpressionStatement","src":"1729:19:12"},{"nodeType":"YulAssignment","src":"1757:29:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:12"},"nodeType":"YulFunctionCall","src":"1772:14:12"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:12"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:12","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:12","type":""}],"src":"1623:169:12"},{"body":{"nodeType":"YulBlock","src":"1847:258:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:12"},"nodeType":"YulFunctionCall","src":"1947:11:12"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:12"},"nodeType":"YulFunctionCall","src":"1966:11:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:12"},"nodeType":"YulFunctionCall","src":"1960:18:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:12"},"nodeType":"YulFunctionCall","src":"1940:39:12"},"nodeType":"YulExpressionStatement","src":"1940:39:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:12"},"nodeType":"YulFunctionCall","src":"1884:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:12","statements":[{"nodeType":"YulAssignment","src":"1900:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:12"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:12"},"nodeType":"YulFunctionCall","src":"1905:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:12","statements":[]},"src":"1876:113:12"},{"body":{"nodeType":"YulBlock","src":"2023:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:12"},"nodeType":"YulFunctionCall","src":"2069:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:12"},"nodeType":"YulFunctionCall","src":"2062:27:12"},"nodeType":"YulExpressionStatement","src":"2062:27:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:12"},"nodeType":"YulFunctionCall","src":"2001:13:12"},"nodeType":"YulIf","src":"1998:101:12"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:12","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:12","type":""}],"src":"1798:307:12"},{"body":{"nodeType":"YulBlock","src":"2159:54:12","statements":[{"nodeType":"YulAssignment","src":"2169:38:12","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:12"},"nodeType":"YulFunctionCall","src":"2183:14:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:12"},"nodeType":"YulFunctionCall","src":"2199:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:12"},"nodeType":"YulFunctionCall","src":"2179:28:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:12"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:12","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:12","type":""}],"src":"2111:102:12"},{"body":{"nodeType":"YulBlock","src":"2311:272:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:12"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:12"},"nodeType":"YulFunctionCall","src":"2335:39:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:12","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:12"},"nodeType":"YulFunctionCall","src":"2390:71:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:12"},"nodeType":"YulFunctionCall","src":"2492:16:12"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:12"},"nodeType":"YulFunctionCall","src":"2470:52:12"},"nodeType":"YulExpressionStatement","src":"2470:52:12"},{"nodeType":"YulAssignment","src":"2531:46:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:12"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:12"},"nodeType":"YulFunctionCall","src":"2547:29:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:12"},"nodeType":"YulFunctionCall","src":"2538:39:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:12"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:12","type":""}],"src":"2219:364:12"},{"body":{"nodeType":"YulBlock","src":"2707:195:12","statements":[{"nodeType":"YulAssignment","src":"2717:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:12"},"nodeType":"YulFunctionCall","src":"2725:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:12"},"nodeType":"YulFunctionCall","src":"2760:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:12"},"nodeType":"YulFunctionCall","src":"2779:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:12"},"nodeType":"YulFunctionCall","src":"2753:47:12"},"nodeType":"YulExpressionStatement","src":"2753:47:12"},{"nodeType":"YulAssignment","src":"2809:86:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:12"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:12"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:12"},"nodeType":"YulFunctionCall","src":"2817:78:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:12"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:12","type":""}],"src":"2589:313:12"},{"body":{"nodeType":"YulBlock","src":"2953:32:12","statements":[{"nodeType":"YulAssignment","src":"2963:16:12","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:12"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:12","type":""}],"src":"2908:77:12"},{"body":{"nodeType":"YulBlock","src":"3034:79:12","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:12"},"nodeType":"YulFunctionCall","src":"3093:12:12"},"nodeType":"YulExpressionStatement","src":"3093:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:12"},"nodeType":"YulFunctionCall","src":"3064:24:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:12"},"nodeType":"YulFunctionCall","src":"3054:35:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:12"},"nodeType":"YulFunctionCall","src":"3047:43:12"},"nodeType":"YulIf","src":"3044:63:12"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:12","type":""}],"src":"2991:122:12"},{"body":{"nodeType":"YulBlock","src":"3171:87:12","statements":[{"nodeType":"YulAssignment","src":"3181:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:12"},"nodeType":"YulFunctionCall","src":"3190:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:12"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:12"},"nodeType":"YulFunctionCall","src":"3219:33:12"},"nodeType":"YulExpressionStatement","src":"3219:33:12"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:12","type":""}],"src":"3119:139:12"},{"body":{"nodeType":"YulBlock","src":"3330:263:12","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:12"},"nodeType":"YulFunctionCall","src":"3378:79:12"},"nodeType":"YulExpressionStatement","src":"3378:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:12"},"nodeType":"YulFunctionCall","src":"3347:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:12"},"nodeType":"YulFunctionCall","src":"3343:32:12"},"nodeType":"YulIf","src":"3340:119:12"},{"nodeType":"YulBlock","src":"3469:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:12","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:12"},"nodeType":"YulFunctionCall","src":"3544:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:12"},"nodeType":"YulFunctionCall","src":"3523:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:12"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:12","type":""}],"src":"3264:329:12"},{"body":{"nodeType":"YulBlock","src":"3644:81:12","statements":[{"nodeType":"YulAssignment","src":"3654:65:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:12"},"nodeType":"YulFunctionCall","src":"3665:54:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:12"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:12","type":""}],"src":"3599:126:12"},{"body":{"nodeType":"YulBlock","src":"3776:51:12","statements":[{"nodeType":"YulAssignment","src":"3786:35:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:12"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:12"},"nodeType":"YulFunctionCall","src":"3797:24:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:12"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:12","type":""}],"src":"3731:96:12"},{"body":{"nodeType":"YulBlock","src":"3898:53:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:12"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:12"},"nodeType":"YulFunctionCall","src":"3920:24:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:12"},"nodeType":"YulFunctionCall","src":"3908:37:12"},"nodeType":"YulExpressionStatement","src":"3908:37:12"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:12","type":""}],"src":"3833:118:12"},{"body":{"nodeType":"YulBlock","src":"4055:124:12","statements":[{"nodeType":"YulAssignment","src":"4065:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:12"},"nodeType":"YulFunctionCall","src":"4073:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:12"},"nodeType":"YulFunctionCall","src":"4154:17:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:12"},"nodeType":"YulFunctionCall","src":"4101:71:12"},"nodeType":"YulExpressionStatement","src":"4101:71:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:12","type":""}],"src":"3957:222:12"},{"body":{"nodeType":"YulBlock","src":"4228:79:12","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:12"},"nodeType":"YulFunctionCall","src":"4287:12:12"},"nodeType":"YulExpressionStatement","src":"4287:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:12"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:12"},"nodeType":"YulFunctionCall","src":"4258:24:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:12"},"nodeType":"YulFunctionCall","src":"4248:35:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:12"},"nodeType":"YulFunctionCall","src":"4241:43:12"},"nodeType":"YulIf","src":"4238:63:12"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:12","type":""}],"src":"4185:122:12"},{"body":{"nodeType":"YulBlock","src":"4365:87:12","statements":[{"nodeType":"YulAssignment","src":"4375:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:12"},"nodeType":"YulFunctionCall","src":"4384:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:12"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:12"},"nodeType":"YulFunctionCall","src":"4413:33:12"},"nodeType":"YulExpressionStatement","src":"4413:33:12"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:12","type":""}],"src":"4313:139:12"},{"body":{"nodeType":"YulBlock","src":"4541:391:12","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:12"},"nodeType":"YulFunctionCall","src":"4589:79:12"},"nodeType":"YulExpressionStatement","src":"4589:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:12"},"nodeType":"YulFunctionCall","src":"4558:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:12"},"nodeType":"YulFunctionCall","src":"4554:32:12"},"nodeType":"YulIf","src":"4551:119:12"},{"nodeType":"YulBlock","src":"4680:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:12","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:12"},"nodeType":"YulFunctionCall","src":"4755:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:12"},"nodeType":"YulFunctionCall","src":"4734:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:12"}]}]},{"nodeType":"YulBlock","src":"4807:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:12","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:12"},"nodeType":"YulFunctionCall","src":"4883:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:12"},"nodeType":"YulFunctionCall","src":"4862:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:12","type":""}],"src":"4458:474:12"},{"body":{"nodeType":"YulBlock","src":"4982:32:12","statements":[{"nodeType":"YulAssignment","src":"4992:16:12","value":{"name":"value","nodeType":"YulIdentifier","src":"5003:5:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4992:7:12"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4964:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4974:7:12","type":""}],"src":"4938:76:12"},{"body":{"nodeType":"YulBlock","src":"5062:78:12","statements":[{"body":{"nodeType":"YulBlock","src":"5118:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5127:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5130:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5120:6:12"},"nodeType":"YulFunctionCall","src":"5120:12:12"},"nodeType":"YulExpressionStatement","src":"5120:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5085:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5109:5:12"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"5092:16:12"},"nodeType":"YulFunctionCall","src":"5092:23:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5082:2:12"},"nodeType":"YulFunctionCall","src":"5082:34:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5075:6:12"},"nodeType":"YulFunctionCall","src":"5075:42:12"},"nodeType":"YulIf","src":"5072:62:12"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5055:5:12","type":""}],"src":"5020:120:12"},{"body":{"nodeType":"YulBlock","src":"5197:86:12","statements":[{"nodeType":"YulAssignment","src":"5207:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5229:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5216:12:12"},"nodeType":"YulFunctionCall","src":"5216:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5207:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5271:5:12"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"5245:25:12"},"nodeType":"YulFunctionCall","src":"5245:32:12"},"nodeType":"YulExpressionStatement","src":"5245:32:12"}]},"name":"abi_decode_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5175:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"5183:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5191:5:12","type":""}],"src":"5146:137:12"},{"body":{"nodeType":"YulBlock","src":"5354:262:12","statements":[{"body":{"nodeType":"YulBlock","src":"5400:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5402:77:12"},"nodeType":"YulFunctionCall","src":"5402:79:12"},"nodeType":"YulExpressionStatement","src":"5402:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5375:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5371:3:12"},"nodeType":"YulFunctionCall","src":"5371:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"5396:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5367:3:12"},"nodeType":"YulFunctionCall","src":"5367:32:12"},"nodeType":"YulIf","src":"5364:119:12"},{"nodeType":"YulBlock","src":"5493:116:12","statements":[{"nodeType":"YulVariableDeclaration","src":"5508:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5522:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5512:6:12","type":""}]},{"nodeType":"YulAssignment","src":"5537:62:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5571:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"5582:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5567:3:12"},"nodeType":"YulFunctionCall","src":"5567:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5591:7:12"}],"functionName":{"name":"abi_decode_t_int256","nodeType":"YulIdentifier","src":"5547:19:12"},"nodeType":"YulFunctionCall","src":"5547:52:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5537:6:12"}]}]}]},"name":"abi_decode_tuple_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5324:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5335:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5347:6:12","type":""}],"src":"5289:327:12"},{"body":{"nodeType":"YulBlock","src":"5722:519:12","statements":[{"body":{"nodeType":"YulBlock","src":"5768:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5770:77:12"},"nodeType":"YulFunctionCall","src":"5770:79:12"},"nodeType":"YulExpressionStatement","src":"5770:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5743:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"5752:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5739:3:12"},"nodeType":"YulFunctionCall","src":"5739:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"5764:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5735:3:12"},"nodeType":"YulFunctionCall","src":"5735:32:12"},"nodeType":"YulIf","src":"5732:119:12"},{"nodeType":"YulBlock","src":"5861:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"5876:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5890:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5880:6:12","type":""}]},{"nodeType":"YulAssignment","src":"5905:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5940:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"5951:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5936:3:12"},"nodeType":"YulFunctionCall","src":"5936:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5960:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5915:20:12"},"nodeType":"YulFunctionCall","src":"5915:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5905:6:12"}]}]},{"nodeType":"YulBlock","src":"5988:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"6003:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"6017:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6007:6:12","type":""}]},{"nodeType":"YulAssignment","src":"6033:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6068:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"6079:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6064:3:12"},"nodeType":"YulFunctionCall","src":"6064:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6088:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6043:20:12"},"nodeType":"YulFunctionCall","src":"6043:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6033:6:12"}]}]},{"nodeType":"YulBlock","src":"6116:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"6131:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"6145:2:12","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6135:6:12","type":""}]},{"nodeType":"YulAssignment","src":"6161:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6196:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"6207:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6192:3:12"},"nodeType":"YulFunctionCall","src":"6192:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6216:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6171:20:12"},"nodeType":"YulFunctionCall","src":"6171:53:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6161:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5676:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5687:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5699:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5707:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5715:6:12","type":""}],"src":"5622:619:12"},{"body":{"nodeType":"YulBlock","src":"6336:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:12"},"nodeType":"YulFunctionCall","src":"6346:12:12"},"nodeType":"YulExpressionStatement","src":"6346:12:12"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6247:117:12"},{"body":{"nodeType":"YulBlock","src":"6459:28:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6476:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6479:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6469:6:12"},"nodeType":"YulFunctionCall","src":"6469:12:12"},"nodeType":"YulExpressionStatement","src":"6469:12:12"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"6370:117:12"},{"body":{"nodeType":"YulBlock","src":"6521:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6538:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6541:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6531:6:12"},"nodeType":"YulFunctionCall","src":"6531:88:12"},"nodeType":"YulExpressionStatement","src":"6531:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6635:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6638:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6628:6:12"},"nodeType":"YulFunctionCall","src":"6628:15:12"},"nodeType":"YulExpressionStatement","src":"6628:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6659:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6662:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6652:6:12"},"nodeType":"YulFunctionCall","src":"6652:15:12"},"nodeType":"YulExpressionStatement","src":"6652:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6493:180:12"},{"body":{"nodeType":"YulBlock","src":"6722:238:12","statements":[{"nodeType":"YulVariableDeclaration","src":"6732:58:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6754:6:12"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6784:4:12"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6762:21:12"},"nodeType":"YulFunctionCall","src":"6762:27:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6750:3:12"},"nodeType":"YulFunctionCall","src":"6750:40:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6736:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"6901:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6903:16:12"},"nodeType":"YulFunctionCall","src":"6903:18:12"},"nodeType":"YulExpressionStatement","src":"6903:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6844:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"6856:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6841:2:12"},"nodeType":"YulFunctionCall","src":"6841:34:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6880:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6892:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6877:2:12"},"nodeType":"YulFunctionCall","src":"6877:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6838:2:12"},"nodeType":"YulFunctionCall","src":"6838:62:12"},"nodeType":"YulIf","src":"6835:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6939:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6943:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6932:6:12"},"nodeType":"YulFunctionCall","src":"6932:22:12"},"nodeType":"YulExpressionStatement","src":"6932:22:12"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6708:6:12","type":""},{"name":"size","nodeType":"YulTypedName","src":"6716:4:12","type":""}],"src":"6679:281:12"},{"body":{"nodeType":"YulBlock","src":"7007:88:12","statements":[{"nodeType":"YulAssignment","src":"7017:30:12","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7027:18:12"},"nodeType":"YulFunctionCall","src":"7027:20:12"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7017:6:12"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7076:6:12"},{"name":"size","nodeType":"YulIdentifier","src":"7084:4:12"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7056:19:12"},"nodeType":"YulFunctionCall","src":"7056:33:12"},"nodeType":"YulExpressionStatement","src":"7056:33:12"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6991:4:12","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7000:6:12","type":""}],"src":"6966:129:12"},{"body":{"nodeType":"YulBlock","src":"7168:241:12","statements":[{"body":{"nodeType":"YulBlock","src":"7273:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7275:16:12"},"nodeType":"YulFunctionCall","src":"7275:18:12"},"nodeType":"YulExpressionStatement","src":"7275:18:12"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7245:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"7253:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7242:2:12"},"nodeType":"YulFunctionCall","src":"7242:30:12"},"nodeType":"YulIf","src":"7239:56:12"},{"nodeType":"YulAssignment","src":"7305:37:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7335:6:12"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7313:21:12"},"nodeType":"YulFunctionCall","src":"7313:29:12"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7305:4:12"}]},{"nodeType":"YulAssignment","src":"7379:23:12","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7391:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"7397:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7387:3:12"},"nodeType":"YulFunctionCall","src":"7387:15:12"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7379:4:12"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7152:6:12","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7163:4:12","type":""}],"src":"7101:308:12"},{"body":{"nodeType":"YulBlock","src":"7466:103:12","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7489:3:12"},{"name":"src","nodeType":"YulIdentifier","src":"7494:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"7499:6:12"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7476:12:12"},"nodeType":"YulFunctionCall","src":"7476:30:12"},"nodeType":"YulExpressionStatement","src":"7476:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7547:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"7552:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7543:3:12"},"nodeType":"YulFunctionCall","src":"7543:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"7561:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7536:6:12"},"nodeType":"YulFunctionCall","src":"7536:27:12"},"nodeType":"YulExpressionStatement","src":"7536:27:12"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7448:3:12","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7453:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"7458:6:12","type":""}],"src":"7415:154:12"},{"body":{"nodeType":"YulBlock","src":"7659:328:12","statements":[{"nodeType":"YulAssignment","src":"7669:75:12","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7736:6:12"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7694:41:12"},"nodeType":"YulFunctionCall","src":"7694:49:12"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7678:15:12"},"nodeType":"YulFunctionCall","src":"7678:66:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7669:5:12"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7760:5:12"},{"name":"length","nodeType":"YulIdentifier","src":"7767:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7753:6:12"},"nodeType":"YulFunctionCall","src":"7753:21:12"},"nodeType":"YulExpressionStatement","src":"7753:21:12"},{"nodeType":"YulVariableDeclaration","src":"7783:27:12","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7798:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"7805:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7794:3:12"},"nodeType":"YulFunctionCall","src":"7794:16:12"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7787:3:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"7848:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"7850:77:12"},"nodeType":"YulFunctionCall","src":"7850:79:12"},"nodeType":"YulExpressionStatement","src":"7850:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7829:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"7834:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7825:3:12"},"nodeType":"YulFunctionCall","src":"7825:16:12"},{"name":"end","nodeType":"YulIdentifier","src":"7843:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7822:2:12"},"nodeType":"YulFunctionCall","src":"7822:25:12"},"nodeType":"YulIf","src":"7819:112:12"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7964:3:12"},{"name":"dst","nodeType":"YulIdentifier","src":"7969:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"7974:6:12"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"7940:23:12"},"nodeType":"YulFunctionCall","src":"7940:41:12"},"nodeType":"YulExpressionStatement","src":"7940:41:12"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7632:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"7637:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"7645:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7653:5:12","type":""}],"src":"7575:412:12"},{"body":{"nodeType":"YulBlock","src":"8069:278:12","statements":[{"body":{"nodeType":"YulBlock","src":"8118:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8120:77:12"},"nodeType":"YulFunctionCall","src":"8120:79:12"},"nodeType":"YulExpressionStatement","src":"8120:79:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8097:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"8105:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8093:3:12"},"nodeType":"YulFunctionCall","src":"8093:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"8112:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8089:3:12"},"nodeType":"YulFunctionCall","src":"8089:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8082:6:12"},"nodeType":"YulFunctionCall","src":"8082:35:12"},"nodeType":"YulIf","src":"8079:122:12"},{"nodeType":"YulVariableDeclaration","src":"8210:34:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8237:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8224:12:12"},"nodeType":"YulFunctionCall","src":"8224:20:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8214:6:12","type":""}]},{"nodeType":"YulAssignment","src":"8253:88:12","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8314:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"8322:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8310:3:12"},"nodeType":"YulFunctionCall","src":"8310:17:12"},{"name":"length","nodeType":"YulIdentifier","src":"8329:6:12"},{"name":"end","nodeType":"YulIdentifier","src":"8337:3:12"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8262:47:12"},"nodeType":"YulFunctionCall","src":"8262:79:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8253:5:12"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8047:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"8055:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8063:5:12","type":""}],"src":"8007:340:12"},{"body":{"nodeType":"YulBlock","src":"8429:433:12","statements":[{"body":{"nodeType":"YulBlock","src":"8475:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8477:77:12"},"nodeType":"YulFunctionCall","src":"8477:79:12"},"nodeType":"YulExpressionStatement","src":"8477:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8450:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"8459:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8446:3:12"},"nodeType":"YulFunctionCall","src":"8446:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"8471:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8442:3:12"},"nodeType":"YulFunctionCall","src":"8442:32:12"},"nodeType":"YulIf","src":"8439:119:12"},{"nodeType":"YulBlock","src":"8568:287:12","statements":[{"nodeType":"YulVariableDeclaration","src":"8583:45:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8614:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8625:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8610:3:12"},"nodeType":"YulFunctionCall","src":"8610:17:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8597:12:12"},"nodeType":"YulFunctionCall","src":"8597:31:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8587:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"8675:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8677:77:12"},"nodeType":"YulFunctionCall","src":"8677:79:12"},"nodeType":"YulExpressionStatement","src":"8677:79:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8647:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"8655:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8644:2:12"},"nodeType":"YulFunctionCall","src":"8644:30:12"},"nodeType":"YulIf","src":"8641:117:12"},{"nodeType":"YulAssignment","src":"8772:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8817:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"8828:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8813:3:12"},"nodeType":"YulFunctionCall","src":"8813:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8837:7:12"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8782:30:12"},"nodeType":"YulFunctionCall","src":"8782:63:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8772:6:12"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8399:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8410:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8422:6:12","type":""}],"src":"8353:509:12"},{"body":{"nodeType":"YulBlock","src":"8933:53:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8950:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8973:5:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8955:17:12"},"nodeType":"YulFunctionCall","src":"8955:24:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8943:6:12"},"nodeType":"YulFunctionCall","src":"8943:37:12"},"nodeType":"YulExpressionStatement","src":"8943:37:12"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8921:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8928:3:12","type":""}],"src":"8868:118:12"},{"body":{"nodeType":"YulBlock","src":"9090:124:12","statements":[{"nodeType":"YulAssignment","src":"9100:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9112:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9123:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9108:3:12"},"nodeType":"YulFunctionCall","src":"9108:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9100:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9180:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9193:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9204:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9189:3:12"},"nodeType":"YulFunctionCall","src":"9189:17:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9136:43:12"},"nodeType":"YulFunctionCall","src":"9136:71:12"},"nodeType":"YulExpressionStatement","src":"9136:71:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9062:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9074:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9085:4:12","type":""}],"src":"8992:222:12"},{"body":{"nodeType":"YulBlock","src":"9286:263:12","statements":[{"body":{"nodeType":"YulBlock","src":"9332:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9334:77:12"},"nodeType":"YulFunctionCall","src":"9334:79:12"},"nodeType":"YulExpressionStatement","src":"9334:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9307:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"9316:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9303:3:12"},"nodeType":"YulFunctionCall","src":"9303:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"9328:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9299:3:12"},"nodeType":"YulFunctionCall","src":"9299:32:12"},"nodeType":"YulIf","src":"9296:119:12"},{"nodeType":"YulBlock","src":"9425:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"9440:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"9454:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9444:6:12","type":""}]},{"nodeType":"YulAssignment","src":"9469:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9504:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"9515:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9500:3:12"},"nodeType":"YulFunctionCall","src":"9500:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9524:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9479:20:12"},"nodeType":"YulFunctionCall","src":"9479:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9469:6:12"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9256:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9267:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9279:6:12","type":""}],"src":"9220:329:12"},{"body":{"nodeType":"YulBlock","src":"9587:28:12","statements":[{"nodeType":"YulAssignment","src":"9597:12:12","value":{"name":"value","nodeType":"YulIdentifier","src":"9604:5:12"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9597:3:12"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9573:5:12","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9583:3:12","type":""}],"src":"9555:60:12"},{"body":{"nodeType":"YulBlock","src":"9681:82:12","statements":[{"nodeType":"YulAssignment","src":"9691:66:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9749:5:12"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9731:17:12"},"nodeType":"YulFunctionCall","src":"9731:24:12"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"9722:8:12"},"nodeType":"YulFunctionCall","src":"9722:34:12"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9704:17:12"},"nodeType":"YulFunctionCall","src":"9704:53:12"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9691:9:12"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9661:5:12","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9671:9:12","type":""}],"src":"9621:142:12"},{"body":{"nodeType":"YulBlock","src":"9829:66:12","statements":[{"nodeType":"YulAssignment","src":"9839:50:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9883:5:12"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"9852:30:12"},"nodeType":"YulFunctionCall","src":"9852:37:12"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9839:9:12"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9809:5:12","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9819:9:12","type":""}],"src":"9769:126:12"},{"body":{"nodeType":"YulBlock","src":"9989:66:12","statements":[{"nodeType":"YulAssignment","src":"9999:50:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10043:5:12"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"10012:30:12"},"nodeType":"YulFunctionCall","src":"10012:37:12"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9999:9:12"}]}]},"name":"convert_t_contract$_AggregatorV3Interface_$45_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9969:5:12","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9979:9:12","type":""}],"src":"9901:154:12"},{"body":{"nodeType":"YulBlock","src":"10154:94:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10171:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10235:5:12"}],"functionName":{"name":"convert_t_contract$_AggregatorV3Interface_$45_to_t_address","nodeType":"YulIdentifier","src":"10176:58:12"},"nodeType":"YulFunctionCall","src":"10176:65:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10164:6:12"},"nodeType":"YulFunctionCall","src":"10164:78:12"},"nodeType":"YulExpressionStatement","src":"10164:78:12"}]},"name":"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10142:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10149:3:12","type":""}],"src":"10061:187:12"},{"body":{"nodeType":"YulBlock","src":"10380:152:12","statements":[{"nodeType":"YulAssignment","src":"10390:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10402:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10413:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10398:3:12"},"nodeType":"YulFunctionCall","src":"10398:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10390:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10498:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10511:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10522:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10507:3:12"},"nodeType":"YulFunctionCall","src":"10507:17:12"}],"functionName":{"name":"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10426:71:12"},"nodeType":"YulFunctionCall","src":"10426:99:12"},"nodeType":"YulExpressionStatement","src":"10426:99:12"}]},"name":"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10352:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10364:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10375:4:12","type":""}],"src":"10254:278:12"},{"body":{"nodeType":"YulBlock","src":"10578:76:12","statements":[{"body":{"nodeType":"YulBlock","src":"10632:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10641:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10644:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10634:6:12"},"nodeType":"YulFunctionCall","src":"10634:12:12"},"nodeType":"YulExpressionStatement","src":"10634:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10601:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10623:5:12"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"10608:14:12"},"nodeType":"YulFunctionCall","src":"10608:21:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10598:2:12"},"nodeType":"YulFunctionCall","src":"10598:32:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10591:6:12"},"nodeType":"YulFunctionCall","src":"10591:40:12"},"nodeType":"YulIf","src":"10588:60:12"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10571:5:12","type":""}],"src":"10538:116:12"},{"body":{"nodeType":"YulBlock","src":"10709:84:12","statements":[{"nodeType":"YulAssignment","src":"10719:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10741:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10728:12:12"},"nodeType":"YulFunctionCall","src":"10728:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10719:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10781:5:12"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"10757:23:12"},"nodeType":"YulFunctionCall","src":"10757:30:12"},"nodeType":"YulExpressionStatement","src":"10757:30:12"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10687:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"10695:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10703:5:12","type":""}],"src":"10660:133:12"},{"body":{"nodeType":"YulBlock","src":"10879:388:12","statements":[{"body":{"nodeType":"YulBlock","src":"10925:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10927:77:12"},"nodeType":"YulFunctionCall","src":"10927:79:12"},"nodeType":"YulExpressionStatement","src":"10927:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10900:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"10909:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10896:3:12"},"nodeType":"YulFunctionCall","src":"10896:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"10921:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10892:3:12"},"nodeType":"YulFunctionCall","src":"10892:32:12"},"nodeType":"YulIf","src":"10889:119:12"},{"nodeType":"YulBlock","src":"11018:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"11033:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"11047:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11037:6:12","type":""}]},{"nodeType":"YulAssignment","src":"11062:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11097:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"11108:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11093:3:12"},"nodeType":"YulFunctionCall","src":"11093:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11117:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11072:20:12"},"nodeType":"YulFunctionCall","src":"11072:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11062:6:12"}]}]},{"nodeType":"YulBlock","src":"11145:115:12","statements":[{"nodeType":"YulVariableDeclaration","src":"11160:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"11174:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11164:6:12","type":""}]},{"nodeType":"YulAssignment","src":"11190:60:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11222:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"11233:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11218:3:12"},"nodeType":"YulFunctionCall","src":"11218:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11242:7:12"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"11200:17:12"},"nodeType":"YulFunctionCall","src":"11200:50:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11190:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10841:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10852:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10864:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10872:6:12","type":""}],"src":"10799:468:12"},{"body":{"nodeType":"YulBlock","src":"11339:241:12","statements":[{"body":{"nodeType":"YulBlock","src":"11444:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11446:16:12"},"nodeType":"YulFunctionCall","src":"11446:18:12"},"nodeType":"YulExpressionStatement","src":"11446:18:12"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11416:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"11424:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11413:2:12"},"nodeType":"YulFunctionCall","src":"11413:30:12"},"nodeType":"YulIf","src":"11410:56:12"},{"nodeType":"YulAssignment","src":"11476:37:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11506:6:12"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11484:21:12"},"nodeType":"YulFunctionCall","src":"11484:29:12"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"11476:4:12"}]},{"nodeType":"YulAssignment","src":"11550:23:12","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"11562:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"11568:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11558:3:12"},"nodeType":"YulFunctionCall","src":"11558:15:12"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"11550:4:12"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"11323:6:12","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"11334:4:12","type":""}],"src":"11273:307:12"},{"body":{"nodeType":"YulBlock","src":"11669:327:12","statements":[{"nodeType":"YulAssignment","src":"11679:74:12","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11745:6:12"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11704:40:12"},"nodeType":"YulFunctionCall","src":"11704:48:12"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"11688:15:12"},"nodeType":"YulFunctionCall","src":"11688:65:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11679:5:12"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11769:5:12"},{"name":"length","nodeType":"YulIdentifier","src":"11776:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11762:6:12"},"nodeType":"YulFunctionCall","src":"11762:21:12"},"nodeType":"YulExpressionStatement","src":"11762:21:12"},{"nodeType":"YulVariableDeclaration","src":"11792:27:12","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11807:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"11814:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11803:3:12"},"nodeType":"YulFunctionCall","src":"11803:16:12"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"11796:3:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"11857:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"11859:77:12"},"nodeType":"YulFunctionCall","src":"11859:79:12"},"nodeType":"YulExpressionStatement","src":"11859:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11838:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"11843:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11834:3:12"},"nodeType":"YulFunctionCall","src":"11834:16:12"},{"name":"end","nodeType":"YulIdentifier","src":"11852:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11831:2:12"},"nodeType":"YulFunctionCall","src":"11831:25:12"},"nodeType":"YulIf","src":"11828:112:12"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11973:3:12"},{"name":"dst","nodeType":"YulIdentifier","src":"11978:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"11983:6:12"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"11949:23:12"},"nodeType":"YulFunctionCall","src":"11949:41:12"},"nodeType":"YulExpressionStatement","src":"11949:41:12"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11642:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"11647:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"11655:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11663:5:12","type":""}],"src":"11586:410:12"},{"body":{"nodeType":"YulBlock","src":"12076:277:12","statements":[{"body":{"nodeType":"YulBlock","src":"12125:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"12127:77:12"},"nodeType":"YulFunctionCall","src":"12127:79:12"},"nodeType":"YulExpressionStatement","src":"12127:79:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12104:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"12112:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12100:3:12"},"nodeType":"YulFunctionCall","src":"12100:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"12119:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12096:3:12"},"nodeType":"YulFunctionCall","src":"12096:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12089:6:12"},"nodeType":"YulFunctionCall","src":"12089:35:12"},"nodeType":"YulIf","src":"12086:122:12"},{"nodeType":"YulVariableDeclaration","src":"12217:34:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12244:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12231:12:12"},"nodeType":"YulFunctionCall","src":"12231:20:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12221:6:12","type":""}]},{"nodeType":"YulAssignment","src":"12260:87:12","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12320:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"12328:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12316:3:12"},"nodeType":"YulFunctionCall","src":"12316:17:12"},{"name":"length","nodeType":"YulIdentifier","src":"12335:6:12"},{"name":"end","nodeType":"YulIdentifier","src":"12343:3:12"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12269:46:12"},"nodeType":"YulFunctionCall","src":"12269:78:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"12260:5:12"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12054:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"12062:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"12070:5:12","type":""}],"src":"12015:338:12"},{"body":{"nodeType":"YulBlock","src":"12485:817:12","statements":[{"body":{"nodeType":"YulBlock","src":"12532:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12534:77:12"},"nodeType":"YulFunctionCall","src":"12534:79:12"},"nodeType":"YulExpressionStatement","src":"12534:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12506:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"12515:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12502:3:12"},"nodeType":"YulFunctionCall","src":"12502:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"12527:3:12","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12498:3:12"},"nodeType":"YulFunctionCall","src":"12498:33:12"},"nodeType":"YulIf","src":"12495:120:12"},{"nodeType":"YulBlock","src":"12625:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"12640:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"12654:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12644:6:12","type":""}]},{"nodeType":"YulAssignment","src":"12669:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12704:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"12715:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12700:3:12"},"nodeType":"YulFunctionCall","src":"12700:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12724:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12679:20:12"},"nodeType":"YulFunctionCall","src":"12679:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12669:6:12"}]}]},{"nodeType":"YulBlock","src":"12752:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"12767:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"12781:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12771:6:12","type":""}]},{"nodeType":"YulAssignment","src":"12797:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12832:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"12843:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12828:3:12"},"nodeType":"YulFunctionCall","src":"12828:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12852:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12807:20:12"},"nodeType":"YulFunctionCall","src":"12807:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12797:6:12"}]}]},{"nodeType":"YulBlock","src":"12880:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"12895:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"12909:2:12","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12899:6:12","type":""}]},{"nodeType":"YulAssignment","src":"12925:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12960:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"12971:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12956:3:12"},"nodeType":"YulFunctionCall","src":"12956:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12980:7:12"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12935:20:12"},"nodeType":"YulFunctionCall","src":"12935:53:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12925:6:12"}]}]},{"nodeType":"YulBlock","src":"13008:287:12","statements":[{"nodeType":"YulVariableDeclaration","src":"13023:46:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13054:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13065:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13050:3:12"},"nodeType":"YulFunctionCall","src":"13050:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13037:12:12"},"nodeType":"YulFunctionCall","src":"13037:32:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13027:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"13116:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13118:77:12"},"nodeType":"YulFunctionCall","src":"13118:79:12"},"nodeType":"YulExpressionStatement","src":"13118:79:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13088:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"13096:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13085:2:12"},"nodeType":"YulFunctionCall","src":"13085:30:12"},"nodeType":"YulIf","src":"13082:117:12"},{"nodeType":"YulAssignment","src":"13213:72:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13257:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"13268:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:12"},"nodeType":"YulFunctionCall","src":"13253:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13277:7:12"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13223:29:12"},"nodeType":"YulFunctionCall","src":"13223:62:12"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13213:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12431:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12442:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12454:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12462:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12470:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12478:6:12","type":""}],"src":"12359:943:12"},{"body":{"nodeType":"YulBlock","src":"13371:52:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13388:3:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13410:5:12"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"13393:16:12"},"nodeType":"YulFunctionCall","src":"13393:23:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13381:6:12"},"nodeType":"YulFunctionCall","src":"13381:36:12"},"nodeType":"YulExpressionStatement","src":"13381:36:12"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13359:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13366:3:12","type":""}],"src":"13308:115:12"},{"body":{"nodeType":"YulBlock","src":"13525:122:12","statements":[{"nodeType":"YulAssignment","src":"13535:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13547:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13558:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13543:3:12"},"nodeType":"YulFunctionCall","src":"13543:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13535:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13613:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13626:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13637:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13622:3:12"},"nodeType":"YulFunctionCall","src":"13622:17:12"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"13571:41:12"},"nodeType":"YulFunctionCall","src":"13571:69:12"},"nodeType":"YulExpressionStatement","src":"13571:69:12"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13497:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13509:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13520:4:12","type":""}],"src":"13429:218:12"},{"body":{"nodeType":"YulBlock","src":"13736:391:12","statements":[{"body":{"nodeType":"YulBlock","src":"13782:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13784:77:12"},"nodeType":"YulFunctionCall","src":"13784:79:12"},"nodeType":"YulExpressionStatement","src":"13784:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13757:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"13766:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13753:3:12"},"nodeType":"YulFunctionCall","src":"13753:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"13778:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13749:3:12"},"nodeType":"YulFunctionCall","src":"13749:32:12"},"nodeType":"YulIf","src":"13746:119:12"},{"nodeType":"YulBlock","src":"13875:117:12","statements":[{"nodeType":"YulVariableDeclaration","src":"13890:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"13904:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13894:6:12","type":""}]},{"nodeType":"YulAssignment","src":"13919:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13954:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"13965:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13950:3:12"},"nodeType":"YulFunctionCall","src":"13950:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13974:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13929:20:12"},"nodeType":"YulFunctionCall","src":"13929:53:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13919:6:12"}]}]},{"nodeType":"YulBlock","src":"14002:118:12","statements":[{"nodeType":"YulVariableDeclaration","src":"14017:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"14031:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14021:6:12","type":""}]},{"nodeType":"YulAssignment","src":"14047:63:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14082:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"14093:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14078:3:12"},"nodeType":"YulFunctionCall","src":"14078:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14102:7:12"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14057:20:12"},"nodeType":"YulFunctionCall","src":"14057:53:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14047:6:12"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13698:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13709:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13721:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13729:6:12","type":""}],"src":"13653:474:12"},{"body":{"nodeType":"YulBlock","src":"14161:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14178:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14181:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14171:6:12"},"nodeType":"YulFunctionCall","src":"14171:88:12"},"nodeType":"YulExpressionStatement","src":"14171:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14275:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14278:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14268:6:12"},"nodeType":"YulFunctionCall","src":"14268:15:12"},"nodeType":"YulExpressionStatement","src":"14268:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14299:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14302:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14292:6:12"},"nodeType":"YulFunctionCall","src":"14292:15:12"},"nodeType":"YulExpressionStatement","src":"14292:15:12"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"14133:180:12"},{"body":{"nodeType":"YulBlock","src":"14370:269:12","statements":[{"nodeType":"YulAssignment","src":"14380:22:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14394:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"14400:1:12","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14390:3:12"},"nodeType":"YulFunctionCall","src":"14390:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14380:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"14411:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14441:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"14447:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14437:3:12"},"nodeType":"YulFunctionCall","src":"14437:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"14415:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"14488:51:12","statements":[{"nodeType":"YulAssignment","src":"14502:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14516:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"14524:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14512:3:12"},"nodeType":"YulFunctionCall","src":"14512:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14502:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14468:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14461:6:12"},"nodeType":"YulFunctionCall","src":"14461:26:12"},"nodeType":"YulIf","src":"14458:81:12"},{"body":{"nodeType":"YulBlock","src":"14591:42:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"14605:16:12"},"nodeType":"YulFunctionCall","src":"14605:18:12"},"nodeType":"YulExpressionStatement","src":"14605:18:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14555:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14578:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"14586:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14575:2:12"},"nodeType":"YulFunctionCall","src":"14575:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14552:2:12"},"nodeType":"YulFunctionCall","src":"14552:38:12"},"nodeType":"YulIf","src":"14549:84:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14354:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14363:6:12","type":""}],"src":"14319:320:12"},{"body":{"nodeType":"YulBlock","src":"14751:114:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14773:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"14781:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14769:3:12"},"nodeType":"YulFunctionCall","src":"14769:14:12"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"14785:34:12","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14762:6:12"},"nodeType":"YulFunctionCall","src":"14762:58:12"},"nodeType":"YulExpressionStatement","src":"14762:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14841:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"14849:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14837:3:12"},"nodeType":"YulFunctionCall","src":"14837:15:12"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"14854:3:12","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14830:6:12"},"nodeType":"YulFunctionCall","src":"14830:28:12"},"nodeType":"YulExpressionStatement","src":"14830:28:12"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14743:6:12","type":""}],"src":"14645:220:12"},{"body":{"nodeType":"YulBlock","src":"15017:220:12","statements":[{"nodeType":"YulAssignment","src":"15027:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15093:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"15098:2:12","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15034:58:12"},"nodeType":"YulFunctionCall","src":"15034:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15027:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15199:3:12"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"15110:88:12"},"nodeType":"YulFunctionCall","src":"15110:93:12"},"nodeType":"YulExpressionStatement","src":"15110:93:12"},{"nodeType":"YulAssignment","src":"15212:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15223:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"15228:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15219:3:12"},"nodeType":"YulFunctionCall","src":"15219:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15212:3:12"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15005:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15013:3:12","type":""}],"src":"14871:366:12"},{"body":{"nodeType":"YulBlock","src":"15414:248:12","statements":[{"nodeType":"YulAssignment","src":"15424:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15436:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15447:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15432:3:12"},"nodeType":"YulFunctionCall","src":"15432:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15424:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15471:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15482:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15467:3:12"},"nodeType":"YulFunctionCall","src":"15467:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15490:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"15496:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15486:3:12"},"nodeType":"YulFunctionCall","src":"15486:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15460:6:12"},"nodeType":"YulFunctionCall","src":"15460:47:12"},"nodeType":"YulExpressionStatement","src":"15460:47:12"},{"nodeType":"YulAssignment","src":"15516:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15650:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15524:124:12"},"nodeType":"YulFunctionCall","src":"15524:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15516:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15394:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15409:4:12","type":""}],"src":"15243:419:12"},{"body":{"nodeType":"YulBlock","src":"15774:143:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15796:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"15804:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15792:3:12"},"nodeType":"YulFunctionCall","src":"15792:14:12"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"15808:34:12","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15785:6:12"},"nodeType":"YulFunctionCall","src":"15785:58:12"},"nodeType":"YulExpressionStatement","src":"15785:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15864:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"15872:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15860:3:12"},"nodeType":"YulFunctionCall","src":"15860:15:12"},{"hexValue":"6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"15877:32:12","type":"","value":"ken owner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15853:6:12"},"nodeType":"YulFunctionCall","src":"15853:57:12"},"nodeType":"YulExpressionStatement","src":"15853:57:12"}]},"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15766:6:12","type":""}],"src":"15668:249:12"},{"body":{"nodeType":"YulBlock","src":"16069:220:12","statements":[{"nodeType":"YulAssignment","src":"16079:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16145:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"16150:2:12","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16086:58:12"},"nodeType":"YulFunctionCall","src":"16086:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16079:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16251:3:12"}],"functionName":{"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulIdentifier","src":"16162:88:12"},"nodeType":"YulFunctionCall","src":"16162:93:12"},"nodeType":"YulExpressionStatement","src":"16162:93:12"},{"nodeType":"YulAssignment","src":"16264:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16275:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"16280:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16271:3:12"},"nodeType":"YulFunctionCall","src":"16271:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16264:3:12"}]}]},"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16057:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16065:3:12","type":""}],"src":"15923:366:12"},{"body":{"nodeType":"YulBlock","src":"16466:248:12","statements":[{"nodeType":"YulAssignment","src":"16476:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16488:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16499:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16484:3:12"},"nodeType":"YulFunctionCall","src":"16484:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16476:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16523:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16534:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16519:3:12"},"nodeType":"YulFunctionCall","src":"16519:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16542:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"16548:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16538:3:12"},"nodeType":"YulFunctionCall","src":"16538:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16512:6:12"},"nodeType":"YulFunctionCall","src":"16512:47:12"},"nodeType":"YulExpressionStatement","src":"16512:47:12"},{"nodeType":"YulAssignment","src":"16568:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16702:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16576:124:12"},"nodeType":"YulFunctionCall","src":"16576:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16568:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16446:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16461:4:12","type":""}],"src":"16295:419:12"},{"body":{"nodeType":"YulBlock","src":"16748:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16765:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16768:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16758:6:12"},"nodeType":"YulFunctionCall","src":"16758:88:12"},"nodeType":"YulExpressionStatement","src":"16758:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16862:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16865:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16855:6:12"},"nodeType":"YulFunctionCall","src":"16855:15:12"},"nodeType":"YulExpressionStatement","src":"16855:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16886:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16889:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16879:6:12"},"nodeType":"YulFunctionCall","src":"16879:15:12"},"nodeType":"YulExpressionStatement","src":"16879:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"16720:180:12"},{"body":{"nodeType":"YulBlock","src":"16950:261:12","statements":[{"nodeType":"YulAssignment","src":"16960:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16983:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16965:17:12"},"nodeType":"YulFunctionCall","src":"16965:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16960:1:12"}]},{"nodeType":"YulAssignment","src":"16994:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17017:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16999:17:12"},"nodeType":"YulFunctionCall","src":"16999:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16994:1:12"}]},{"body":{"nodeType":"YulBlock","src":"17157:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17159:16:12"},"nodeType":"YulFunctionCall","src":"17159:18:12"},"nodeType":"YulExpressionStatement","src":"17159:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17078:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17085:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"17153:1:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17081:3:12"},"nodeType":"YulFunctionCall","src":"17081:74:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17075:2:12"},"nodeType":"YulFunctionCall","src":"17075:81:12"},"nodeType":"YulIf","src":"17072:107:12"},{"nodeType":"YulAssignment","src":"17189:16:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17200:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"17203:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17196:3:12"},"nodeType":"YulFunctionCall","src":"17196:9:12"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17189:3:12"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16937:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"16940:1:12","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16946:3:12","type":""}],"src":"16906:305:12"},{"body":{"nodeType":"YulBlock","src":"17323:127:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17345:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"17353:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17341:3:12"},"nodeType":"YulFunctionCall","src":"17341:14:12"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"17357:34:12","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17334:6:12"},"nodeType":"YulFunctionCall","src":"17334:58:12"},"nodeType":"YulExpressionStatement","src":"17334:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17413:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"17421:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17409:3:12"},"nodeType":"YulFunctionCall","src":"17409:15:12"},{"hexValue":"72206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"17426:16:12","type":"","value":"r nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17402:6:12"},"nodeType":"YulFunctionCall","src":"17402:41:12"},"nodeType":"YulExpressionStatement","src":"17402:41:12"}]},"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17315:6:12","type":""}],"src":"17217:233:12"},{"body":{"nodeType":"YulBlock","src":"17602:220:12","statements":[{"nodeType":"YulAssignment","src":"17612:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17678:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"17683:2:12","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17619:58:12"},"nodeType":"YulFunctionCall","src":"17619:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17612:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17784:3:12"}],"functionName":{"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulIdentifier","src":"17695:88:12"},"nodeType":"YulFunctionCall","src":"17695:93:12"},"nodeType":"YulExpressionStatement","src":"17695:93:12"},{"nodeType":"YulAssignment","src":"17797:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17808:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"17813:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17804:3:12"},"nodeType":"YulFunctionCall","src":"17804:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17797:3:12"}]}]},"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17590:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17598:3:12","type":""}],"src":"17456:366:12"},{"body":{"nodeType":"YulBlock","src":"17999:248:12","statements":[{"nodeType":"YulAssignment","src":"18009:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18021:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"18032:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18017:3:12"},"nodeType":"YulFunctionCall","src":"18017:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18009:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18056:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"18067:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18052:3:12"},"nodeType":"YulFunctionCall","src":"18052:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18075:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"18081:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18071:3:12"},"nodeType":"YulFunctionCall","src":"18071:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18045:6:12"},"nodeType":"YulFunctionCall","src":"18045:47:12"},"nodeType":"YulExpressionStatement","src":"18045:47:12"},{"nodeType":"YulAssignment","src":"18101:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18235:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18109:124:12"},"nodeType":"YulFunctionCall","src":"18109:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18101:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17979:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17994:4:12","type":""}],"src":"17828:419:12"},{"body":{"nodeType":"YulBlock","src":"18367:34:12","statements":[{"nodeType":"YulAssignment","src":"18377:18:12","value":{"name":"pos","nodeType":"YulIdentifier","src":"18392:3:12"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"18377:11:12"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18339:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"18344:6:12","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"18355:11:12","type":""}],"src":"18253:148:12"},{"body":{"nodeType":"YulBlock","src":"18517:267:12","statements":[{"nodeType":"YulVariableDeclaration","src":"18527:53:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18574:5:12"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18541:32:12"},"nodeType":"YulFunctionCall","src":"18541:39:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18531:6:12","type":""}]},{"nodeType":"YulAssignment","src":"18589:96:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18673:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"18678:6:12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18596:76:12"},"nodeType":"YulFunctionCall","src":"18596:89:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18589:3:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18720:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"18727:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18716:3:12"},"nodeType":"YulFunctionCall","src":"18716:16:12"},{"name":"pos","nodeType":"YulIdentifier","src":"18734:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"18739:6:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"18694:21:12"},"nodeType":"YulFunctionCall","src":"18694:52:12"},"nodeType":"YulExpressionStatement","src":"18694:52:12"},{"nodeType":"YulAssignment","src":"18755:23:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18766:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"18771:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18762:3:12"},"nodeType":"YulFunctionCall","src":"18762:16:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18755:3:12"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18498:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18505:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18513:3:12","type":""}],"src":"18407:377:12"},{"body":{"nodeType":"YulBlock","src":"18926:139:12","statements":[{"nodeType":"YulAssignment","src":"18937:102:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19026:6:12"},{"name":"pos","nodeType":"YulIdentifier","src":"19035:3:12"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18944:81:12"},"nodeType":"YulFunctionCall","src":"18944:95:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18937:3:12"}]},{"nodeType":"YulAssignment","src":"19049:10:12","value":{"name":"pos","nodeType":"YulIdentifier","src":"19056:3:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19049:3:12"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18905:3:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18911:6:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18922:3:12","type":""}],"src":"18790:275:12"},{"body":{"nodeType":"YulBlock","src":"19255:251:12","statements":[{"nodeType":"YulAssignment","src":"19266:102:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19355:6:12"},{"name":"pos","nodeType":"YulIdentifier","src":"19364:3:12"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19273:81:12"},"nodeType":"YulFunctionCall","src":"19273:95:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19266:3:12"}]},{"nodeType":"YulAssignment","src":"19378:102:12","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19467:6:12"},{"name":"pos","nodeType":"YulIdentifier","src":"19476:3:12"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19385:81:12"},"nodeType":"YulFunctionCall","src":"19385:95:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19378:3:12"}]},{"nodeType":"YulAssignment","src":"19490:10:12","value":{"name":"pos","nodeType":"YulIdentifier","src":"19497:3:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19490:3:12"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19226:3:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19232:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19240:6:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19251:3:12","type":""}],"src":"19071:435:12"},{"body":{"nodeType":"YulBlock","src":"19618:68:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19640:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"19648:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19636:3:12"},"nodeType":"YulFunctionCall","src":"19636:14:12"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"19652:26:12","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19629:6:12"},"nodeType":"YulFunctionCall","src":"19629:50:12"},"nodeType":"YulExpressionStatement","src":"19629:50:12"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19610:6:12","type":""}],"src":"19512:174:12"},{"body":{"nodeType":"YulBlock","src":"19838:220:12","statements":[{"nodeType":"YulAssignment","src":"19848:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19914:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"19919:2:12","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19855:58:12"},"nodeType":"YulFunctionCall","src":"19855:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19848:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20020:3:12"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"19931:88:12"},"nodeType":"YulFunctionCall","src":"19931:93:12"},"nodeType":"YulExpressionStatement","src":"19931:93:12"},{"nodeType":"YulAssignment","src":"20033:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20044:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"20049:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20040:3:12"},"nodeType":"YulFunctionCall","src":"20040:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20033:3:12"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19826:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19834:3:12","type":""}],"src":"19692:366:12"},{"body":{"nodeType":"YulBlock","src":"20235:248:12","statements":[{"nodeType":"YulAssignment","src":"20245:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20257:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"20268:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20253:3:12"},"nodeType":"YulFunctionCall","src":"20253:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20245:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20292:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"20303:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20288:3:12"},"nodeType":"YulFunctionCall","src":"20288:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20311:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"20317:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20307:3:12"},"nodeType":"YulFunctionCall","src":"20307:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20281:6:12"},"nodeType":"YulFunctionCall","src":"20281:47:12"},"nodeType":"YulExpressionStatement","src":"20281:47:12"},{"nodeType":"YulAssignment","src":"20337:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20471:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20345:124:12"},"nodeType":"YulFunctionCall","src":"20345:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20337:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20215:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20230:4:12","type":""}],"src":"20064:419:12"},{"body":{"nodeType":"YulBlock","src":"20595:122:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20617:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"20625:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20613:3:12"},"nodeType":"YulFunctionCall","src":"20613:14:12"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"20629:34:12","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20606:6:12"},"nodeType":"YulFunctionCall","src":"20606:58:12"},"nodeType":"YulExpressionStatement","src":"20606:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20685:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"20693:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20681:3:12"},"nodeType":"YulFunctionCall","src":"20681:15:12"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"20698:11:12","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20674:6:12"},"nodeType":"YulFunctionCall","src":"20674:36:12"},"nodeType":"YulExpressionStatement","src":"20674:36:12"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20587:6:12","type":""}],"src":"20489:228:12"},{"body":{"nodeType":"YulBlock","src":"20869:220:12","statements":[{"nodeType":"YulAssignment","src":"20879:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20945:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"20950:2:12","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20886:58:12"},"nodeType":"YulFunctionCall","src":"20886:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20879:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21051:3:12"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"20962:88:12"},"nodeType":"YulFunctionCall","src":"20962:93:12"},"nodeType":"YulExpressionStatement","src":"20962:93:12"},{"nodeType":"YulAssignment","src":"21064:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21075:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"21080:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21071:3:12"},"nodeType":"YulFunctionCall","src":"21071:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21064:3:12"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20857:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20865:3:12","type":""}],"src":"20723:366:12"},{"body":{"nodeType":"YulBlock","src":"21266:248:12","statements":[{"nodeType":"YulAssignment","src":"21276:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21288:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"21299:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21284:3:12"},"nodeType":"YulFunctionCall","src":"21284:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21276:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21323:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"21334:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21319:3:12"},"nodeType":"YulFunctionCall","src":"21319:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21342:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"21348:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21338:3:12"},"nodeType":"YulFunctionCall","src":"21338:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21312:6:12"},"nodeType":"YulFunctionCall","src":"21312:47:12"},"nodeType":"YulExpressionStatement","src":"21312:47:12"},{"nodeType":"YulAssignment","src":"21368:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21502:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21376:124:12"},"nodeType":"YulFunctionCall","src":"21376:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21368:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21246:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21261:4:12","type":""}],"src":"21095:419:12"},{"body":{"nodeType":"YulBlock","src":"21626:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21648:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"21656:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21644:3:12"},"nodeType":"YulFunctionCall","src":"21644:14:12"},{"hexValue":"55524920517565727920666f72206e6f6e206578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"21660:34:12","type":"","value":"URI Query for non existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21637:6:12"},"nodeType":"YulFunctionCall","src":"21637:58:12"},"nodeType":"YulExpressionStatement","src":"21637:58:12"}]},"name":"store_literal_in_memory_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21618:6:12","type":""}],"src":"21520:182:12"},{"body":{"nodeType":"YulBlock","src":"21854:220:12","statements":[{"nodeType":"YulAssignment","src":"21864:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21930:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"21935:2:12","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21871:58:12"},"nodeType":"YulFunctionCall","src":"21871:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21864:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22036:3:12"}],"functionName":{"name":"store_literal_in_memory_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf","nodeType":"YulIdentifier","src":"21947:88:12"},"nodeType":"YulFunctionCall","src":"21947:93:12"},"nodeType":"YulExpressionStatement","src":"21947:93:12"},{"nodeType":"YulAssignment","src":"22049:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22060:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"22065:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22056:3:12"},"nodeType":"YulFunctionCall","src":"22056:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22049:3:12"}]}]},"name":"abi_encode_t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21842:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21850:3:12","type":""}],"src":"21708:366:12"},{"body":{"nodeType":"YulBlock","src":"22251:248:12","statements":[{"nodeType":"YulAssignment","src":"22261:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22273:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"22284:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22269:3:12"},"nodeType":"YulFunctionCall","src":"22269:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22261:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22308:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"22319:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22304:3:12"},"nodeType":"YulFunctionCall","src":"22304:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22327:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"22333:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22323:3:12"},"nodeType":"YulFunctionCall","src":"22323:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22297:6:12"},"nodeType":"YulFunctionCall","src":"22297:47:12"},"nodeType":"YulExpressionStatement","src":"22297:47:12"},{"nodeType":"YulAssignment","src":"22353:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22487:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22361:124:12"},"nodeType":"YulFunctionCall","src":"22361:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22353:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22231:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22246:4:12","type":""}],"src":"22080:419:12"},{"body":{"nodeType":"YulBlock","src":"22549:61:12","statements":[{"nodeType":"YulAssignment","src":"22559:45:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22574:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"22581:22:12","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22570:3:12"},"nodeType":"YulFunctionCall","src":"22570:34:12"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"22559:7:12"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22531:5:12","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"22541:7:12","type":""}],"src":"22505:105:12"},{"body":{"nodeType":"YulBlock","src":"22658:78:12","statements":[{"body":{"nodeType":"YulBlock","src":"22714:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22723:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22726:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22716:6:12"},"nodeType":"YulFunctionCall","src":"22716:12:12"},"nodeType":"YulExpressionStatement","src":"22716:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22681:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22705:5:12"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"22688:16:12"},"nodeType":"YulFunctionCall","src":"22688:23:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22678:2:12"},"nodeType":"YulFunctionCall","src":"22678:34:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22671:6:12"},"nodeType":"YulFunctionCall","src":"22671:42:12"},"nodeType":"YulIf","src":"22668:62:12"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22651:5:12","type":""}],"src":"22616:120:12"},{"body":{"nodeType":"YulBlock","src":"22804:79:12","statements":[{"nodeType":"YulAssignment","src":"22814:22:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22829:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22823:5:12"},"nodeType":"YulFunctionCall","src":"22823:13:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22814:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22871:5:12"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"22845:25:12"},"nodeType":"YulFunctionCall","src":"22845:32:12"},"nodeType":"YulExpressionStatement","src":"22845:32:12"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22782:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"22790:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22798:5:12","type":""}],"src":"22742:141:12"},{"body":{"nodeType":"YulBlock","src":"22951:79:12","statements":[{"nodeType":"YulAssignment","src":"22961:22:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22976:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22970:5:12"},"nodeType":"YulFunctionCall","src":"22970:13:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22961:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23018:5:12"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"22992:25:12"},"nodeType":"YulFunctionCall","src":"22992:32:12"},"nodeType":"YulExpressionStatement","src":"22992:32:12"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22929:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"22937:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22945:5:12","type":""}],"src":"22889:141:12"},{"body":{"nodeType":"YulBlock","src":"23099:80:12","statements":[{"nodeType":"YulAssignment","src":"23109:22:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23124:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23118:5:12"},"nodeType":"YulFunctionCall","src":"23118:13:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23109:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23167:5:12"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"23140:26:12"},"nodeType":"YulFunctionCall","src":"23140:33:12"},"nodeType":"YulExpressionStatement","src":"23140:33:12"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"23077:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"23085:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"23093:5:12","type":""}],"src":"23036:143:12"},{"body":{"nodeType":"YulBlock","src":"23327:829:12","statements":[{"body":{"nodeType":"YulBlock","src":"23374:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23376:77:12"},"nodeType":"YulFunctionCall","src":"23376:79:12"},"nodeType":"YulExpressionStatement","src":"23376:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23348:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"23357:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23344:3:12"},"nodeType":"YulFunctionCall","src":"23344:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"23369:3:12","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23340:3:12"},"nodeType":"YulFunctionCall","src":"23340:33:12"},"nodeType":"YulIf","src":"23337:120:12"},{"nodeType":"YulBlock","src":"23467:127:12","statements":[{"nodeType":"YulVariableDeclaration","src":"23482:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"23496:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23486:6:12","type":""}]},{"nodeType":"YulAssignment","src":"23511:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23556:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"23567:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23552:3:12"},"nodeType":"YulFunctionCall","src":"23552:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23576:7:12"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"23521:30:12"},"nodeType":"YulFunctionCall","src":"23521:63:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23511:6:12"}]}]},{"nodeType":"YulBlock","src":"23604:128:12","statements":[{"nodeType":"YulVariableDeclaration","src":"23619:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"23633:2:12","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23623:6:12","type":""}]},{"nodeType":"YulAssignment","src":"23649:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23694:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"23705:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23690:3:12"},"nodeType":"YulFunctionCall","src":"23690:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23714:7:12"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"23659:30:12"},"nodeType":"YulFunctionCall","src":"23659:63:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"23649:6:12"}]}]},{"nodeType":"YulBlock","src":"23742:129:12","statements":[{"nodeType":"YulVariableDeclaration","src":"23757:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"23771:2:12","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23761:6:12","type":""}]},{"nodeType":"YulAssignment","src":"23787:74:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23833:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"23844:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23829:3:12"},"nodeType":"YulFunctionCall","src":"23829:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23853:7:12"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"23797:31:12"},"nodeType":"YulFunctionCall","src":"23797:64:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"23787:6:12"}]}]},{"nodeType":"YulBlock","src":"23881:129:12","statements":[{"nodeType":"YulVariableDeclaration","src":"23896:16:12","value":{"kind":"number","nodeType":"YulLiteral","src":"23910:2:12","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23900:6:12","type":""}]},{"nodeType":"YulAssignment","src":"23926:74:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23972:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"23983:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23968:3:12"},"nodeType":"YulFunctionCall","src":"23968:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23992:7:12"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"23936:31:12"},"nodeType":"YulFunctionCall","src":"23936:64:12"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"23926:6:12"}]}]},{"nodeType":"YulBlock","src":"24020:129:12","statements":[{"nodeType":"YulVariableDeclaration","src":"24035:17:12","value":{"kind":"number","nodeType":"YulLiteral","src":"24049:3:12","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24039:6:12","type":""}]},{"nodeType":"YulAssignment","src":"24066:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24111:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"24122:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24107:3:12"},"nodeType":"YulFunctionCall","src":"24107:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24131:7:12"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"24076:30:12"},"nodeType":"YulFunctionCall","src":"24076:63:12"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"24066:6:12"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23265:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23276:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23288:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23296:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23304:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23312:6:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23320:6:12","type":""}],"src":"23185:971:12"},{"body":{"nodeType":"YulBlock","src":"24268:108:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24290:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"24298:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24286:3:12"},"nodeType":"YulFunctionCall","src":"24286:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"24302:66:12","type":"","value":"0x7b226e616d653a22000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24279:6:12"},"nodeType":"YulFunctionCall","src":"24279:90:12"},"nodeType":"YulExpressionStatement","src":"24279:90:12"}]},"name":"store_literal_in_memory_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24260:6:12","type":""}],"src":"24162:214:12"},{"body":{"nodeType":"YulBlock","src":"24546:236:12","statements":[{"nodeType":"YulAssignment","src":"24556:91:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24640:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"24645:1:12","type":"","value":"8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24563:76:12"},"nodeType":"YulFunctionCall","src":"24563:84:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24556:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24745:3:12"}],"functionName":{"name":"store_literal_in_memory_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d","nodeType":"YulIdentifier","src":"24656:88:12"},"nodeType":"YulFunctionCall","src":"24656:93:12"},"nodeType":"YulExpressionStatement","src":"24656:93:12"},{"nodeType":"YulAssignment","src":"24758:18:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24769:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"24774:1:12","type":"","value":"8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24765:3:12"},"nodeType":"YulFunctionCall","src":"24765:11:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24758:3:12"}]}]},"name":"abi_encode_t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24534:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24542:3:12","type":""}],"src":"24382:400:12"},{"body":{"nodeType":"YulBlock","src":"24894:108:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24916:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"24924:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24912:3:12"},"nodeType":"YulFunctionCall","src":"24912:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"24928:66:12","type":"","value":"0x2200000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24905:6:12"},"nodeType":"YulFunctionCall","src":"24905:90:12"},"nodeType":"YulExpressionStatement","src":"24905:90:12"}]},"name":"store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24886:6:12","type":""}],"src":"24788:214:12"},{"body":{"nodeType":"YulBlock","src":"25172:236:12","statements":[{"nodeType":"YulAssignment","src":"25182:91:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25266:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"25271:1:12","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25189:76:12"},"nodeType":"YulFunctionCall","src":"25189:84:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25182:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25371:3:12"}],"functionName":{"name":"store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","nodeType":"YulIdentifier","src":"25282:88:12"},"nodeType":"YulFunctionCall","src":"25282:93:12"},"nodeType":"YulExpressionStatement","src":"25282:93:12"},{"nodeType":"YulAssignment","src":"25384:18:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25395:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"25400:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25391:3:12"},"nodeType":"YulFunctionCall","src":"25391:11:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25384:3:12"}]}]},"name":"abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25160:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25168:3:12","type":""}],"src":"25008:400:12"},{"body":{"nodeType":"YulBlock","src":"25520:278:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25542:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"25550:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25538:3:12"},"nodeType":"YulFunctionCall","src":"25538:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"25554:66:12","type":"","value":"0x226465736372697074696f6e223a22416e204e46542074686174206368616e67"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25531:6:12"},"nodeType":"YulFunctionCall","src":"25531:90:12"},"nodeType":"YulExpressionStatement","src":"25531:90:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25642:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"25650:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25638:3:12"},"nodeType":"YulFunctionCall","src":"25638:15:12"},{"hexValue":"6573206261736564206f6e20636861696e6c696e6b2070726963652046656564","kind":"string","nodeType":"YulLiteral","src":"25655:34:12","type":"","value":"es based on chainlink price Feed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25631:6:12"},"nodeType":"YulFunctionCall","src":"25631:59:12"},"nodeType":"YulExpressionStatement","src":"25631:59:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25711:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"25719:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25707:3:12"},"nodeType":"YulFunctionCall","src":"25707:15:12"},{"kind":"number","nodeType":"YulLiteral","src":"25724:66:12","type":"","value":"0x2121220000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25700:6:12"},"nodeType":"YulFunctionCall","src":"25700:91:12"},"nodeType":"YulExpressionStatement","src":"25700:91:12"}]},"name":"store_literal_in_memory_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25512:6:12","type":""}],"src":"25414:384:12"},{"body":{"nodeType":"YulBlock","src":"25968:238:12","statements":[{"nodeType":"YulAssignment","src":"25978:92:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26062:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"26067:2:12","type":"","value":"67"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25985:76:12"},"nodeType":"YulFunctionCall","src":"25985:85:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25978:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26168:3:12"}],"functionName":{"name":"store_literal_in_memory_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735","nodeType":"YulIdentifier","src":"26079:88:12"},"nodeType":"YulFunctionCall","src":"26079:93:12"},"nodeType":"YulExpressionStatement","src":"26079:93:12"},{"nodeType":"YulAssignment","src":"26181:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26192:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"26197:2:12","type":"","value":"67"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26188:3:12"},"nodeType":"YulFunctionCall","src":"26188:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26181:3:12"}]}]},"name":"abi_encode_t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25956:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25964:3:12","type":""}],"src":"25804:402:12"},{"body":{"nodeType":"YulBlock","src":"26318:209:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26340:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"26348:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26336:3:12"},"nodeType":"YulFunctionCall","src":"26336:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"26352:66:12","type":"","value":"0x2261747472696275746573223a5b7b2274726169745f74797065223a2022636f"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26329:6:12"},"nodeType":"YulFunctionCall","src":"26329:90:12"},"nodeType":"YulExpressionStatement","src":"26329:90:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26440:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"26448:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26436:3:12"},"nodeType":"YulFunctionCall","src":"26436:15:12"},{"kind":"number","nodeType":"YulLiteral","src":"26453:66:12","type":"","value":"0x6f6c6e657373222c3a76616c75653a3130307d5d2c22696d616765223a220000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26429:6:12"},"nodeType":"YulFunctionCall","src":"26429:91:12"},"nodeType":"YulExpressionStatement","src":"26429:91:12"}]},"name":"store_literal_in_memory_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26310:6:12","type":""}],"src":"26212:315:12"},{"body":{"nodeType":"YulBlock","src":"26697:238:12","statements":[{"nodeType":"YulAssignment","src":"26707:92:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26791:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"26796:2:12","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26714:76:12"},"nodeType":"YulFunctionCall","src":"26714:85:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26707:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26897:3:12"}],"functionName":{"name":"store_literal_in_memory_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24","nodeType":"YulIdentifier","src":"26808:88:12"},"nodeType":"YulFunctionCall","src":"26808:93:12"},"nodeType":"YulExpressionStatement","src":"26808:93:12"},{"nodeType":"YulAssignment","src":"26910:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26921:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"26926:2:12","type":"","value":"62"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26917:3:12"},"nodeType":"YulFunctionCall","src":"26917:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26910:3:12"}]}]},"name":"abi_encode_t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26685:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26693:3:12","type":""}],"src":"26533:402:12"},{"body":{"nodeType":"YulBlock","src":"27047:108:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27069:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"27077:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27065:3:12"},"nodeType":"YulFunctionCall","src":"27065:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"27081:66:12","type":"","value":"0x227d000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27058:6:12"},"nodeType":"YulFunctionCall","src":"27058:90:12"},"nodeType":"YulExpressionStatement","src":"27058:90:12"}]},"name":"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27039:6:12","type":""}],"src":"26941:214:12"},{"body":{"nodeType":"YulBlock","src":"27325:236:12","statements":[{"nodeType":"YulAssignment","src":"27335:91:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27419:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"27424:1:12","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27342:76:12"},"nodeType":"YulFunctionCall","src":"27342:84:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27335:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27524:3:12"}],"functionName":{"name":"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","nodeType":"YulIdentifier","src":"27435:88:12"},"nodeType":"YulFunctionCall","src":"27435:93:12"},"nodeType":"YulExpressionStatement","src":"27435:93:12"},{"nodeType":"YulAssignment","src":"27537:18:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27548:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"27553:1:12","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27544:3:12"},"nodeType":"YulFunctionCall","src":"27544:11:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27537:3:12"}]}]},"name":"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27313:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27321:3:12","type":""}],"src":"27161:400:12"},{"body":{"nodeType":"YulBlock","src":"28256:1076:12","statements":[{"nodeType":"YulAssignment","src":"28267:155:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28418:3:12"}],"functionName":{"name":"abi_encode_t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28274:142:12"},"nodeType":"YulFunctionCall","src":"28274:148:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28267:3:12"}]},{"nodeType":"YulAssignment","src":"28432:102:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28521:6:12"},{"name":"pos","nodeType":"YulIdentifier","src":"28530:3:12"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28439:81:12"},"nodeType":"YulFunctionCall","src":"28439:95:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28432:3:12"}]},{"nodeType":"YulAssignment","src":"28544:155:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28695:3:12"}],"functionName":{"name":"abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28551:142:12"},"nodeType":"YulFunctionCall","src":"28551:148:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28544:3:12"}]},{"nodeType":"YulAssignment","src":"28709:155:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28860:3:12"}],"functionName":{"name":"abi_encode_t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28716:142:12"},"nodeType":"YulFunctionCall","src":"28716:148:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28709:3:12"}]},{"nodeType":"YulAssignment","src":"28874:155:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29025:3:12"}],"functionName":{"name":"abi_encode_t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28881:142:12"},"nodeType":"YulFunctionCall","src":"28881:148:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28874:3:12"}]},{"nodeType":"YulAssignment","src":"29039:102:12","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29128:6:12"},{"name":"pos","nodeType":"YulIdentifier","src":"29137:3:12"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29046:81:12"},"nodeType":"YulFunctionCall","src":"29046:95:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29039:3:12"}]},{"nodeType":"YulAssignment","src":"29151:155:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29302:3:12"}],"functionName":{"name":"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29158:142:12"},"nodeType":"YulFunctionCall","src":"29158:148:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29151:3:12"}]},{"nodeType":"YulAssignment","src":"29316:10:12","value":{"name":"pos","nodeType":"YulIdentifier","src":"29323:3:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29316:3:12"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d_t_string_memory_ptr_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735_t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28227:3:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28233:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28241:6:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28252:3:12","type":""}],"src":"27567:1765:12"},{"body":{"nodeType":"YulBlock","src":"29366:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29383:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29386:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29376:6:12"},"nodeType":"YulFunctionCall","src":"29376:88:12"},"nodeType":"YulExpressionStatement","src":"29376:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29480:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"29483:4:12","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29473:6:12"},"nodeType":"YulFunctionCall","src":"29473:15:12"},"nodeType":"YulExpressionStatement","src":"29473:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29504:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29507:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29497:6:12"},"nodeType":"YulFunctionCall","src":"29497:15:12"},"nodeType":"YulExpressionStatement","src":"29497:15:12"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"29338:180:12"},{"body":{"nodeType":"YulBlock","src":"29566:143:12","statements":[{"nodeType":"YulAssignment","src":"29576:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29599:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29581:17:12"},"nodeType":"YulFunctionCall","src":"29581:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"29576:1:12"}]},{"nodeType":"YulAssignment","src":"29610:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29633:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29615:17:12"},"nodeType":"YulFunctionCall","src":"29615:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29610:1:12"}]},{"body":{"nodeType":"YulBlock","src":"29657:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"29659:16:12"},"nodeType":"YulFunctionCall","src":"29659:18:12"},"nodeType":"YulExpressionStatement","src":"29659:18:12"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29654:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29647:6:12"},"nodeType":"YulFunctionCall","src":"29647:9:12"},"nodeType":"YulIf","src":"29644:35:12"},{"nodeType":"YulAssignment","src":"29689:14:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29698:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"29701:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"29694:3:12"},"nodeType":"YulFunctionCall","src":"29694:9:12"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"29689:1:12"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29555:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"29558:1:12","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"29564:1:12","type":""}],"src":"29524:185:12"},{"body":{"nodeType":"YulBlock","src":"29763:300:12","statements":[{"nodeType":"YulAssignment","src":"29773:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29796:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29778:17:12"},"nodeType":"YulFunctionCall","src":"29778:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"29773:1:12"}]},{"nodeType":"YulAssignment","src":"29807:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29830:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29812:17:12"},"nodeType":"YulFunctionCall","src":"29812:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29807:1:12"}]},{"body":{"nodeType":"YulBlock","src":"30005:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30007:16:12"},"nodeType":"YulFunctionCall","src":"30007:18:12"},"nodeType":"YulExpressionStatement","src":"30007:18:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29917:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29910:6:12"},"nodeType":"YulFunctionCall","src":"29910:9:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29903:6:12"},"nodeType":"YulFunctionCall","src":"29903:17:12"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29925:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29932:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"30000:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"29928:3:12"},"nodeType":"YulFunctionCall","src":"29928:74:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29922:2:12"},"nodeType":"YulFunctionCall","src":"29922:81:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29899:3:12"},"nodeType":"YulFunctionCall","src":"29899:105:12"},"nodeType":"YulIf","src":"29896:131:12"},{"nodeType":"YulAssignment","src":"30037:20:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30052:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"30055:1:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"30048:3:12"},"nodeType":"YulFunctionCall","src":"30048:9:12"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"30037:7:12"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29746:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"29749:1:12","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"29755:7:12","type":""}],"src":"29715:348:12"},{"body":{"nodeType":"YulBlock","src":"30175:118:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30197:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"30205:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30193:3:12"},"nodeType":"YulFunctionCall","src":"30193:14:12"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"30209:34:12","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30186:6:12"},"nodeType":"YulFunctionCall","src":"30186:58:12"},"nodeType":"YulExpressionStatement","src":"30186:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30265:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"30273:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30261:3:12"},"nodeType":"YulFunctionCall","src":"30261:15:12"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"30278:7:12","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30254:6:12"},"nodeType":"YulFunctionCall","src":"30254:32:12"},"nodeType":"YulExpressionStatement","src":"30254:32:12"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30167:6:12","type":""}],"src":"30069:224:12"},{"body":{"nodeType":"YulBlock","src":"30445:220:12","statements":[{"nodeType":"YulAssignment","src":"30455:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30521:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"30526:2:12","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30462:58:12"},"nodeType":"YulFunctionCall","src":"30462:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30455:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30627:3:12"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"30538:88:12"},"nodeType":"YulFunctionCall","src":"30538:93:12"},"nodeType":"YulExpressionStatement","src":"30538:93:12"},{"nodeType":"YulAssignment","src":"30640:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30651:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"30656:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30647:3:12"},"nodeType":"YulFunctionCall","src":"30647:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30640:3:12"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30433:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30441:3:12","type":""}],"src":"30299:366:12"},{"body":{"nodeType":"YulBlock","src":"30842:248:12","statements":[{"nodeType":"YulAssignment","src":"30852:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30864:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"30875:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30860:3:12"},"nodeType":"YulFunctionCall","src":"30860:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30852:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30899:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"30910:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30895:3:12"},"nodeType":"YulFunctionCall","src":"30895:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30918:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"30924:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30914:3:12"},"nodeType":"YulFunctionCall","src":"30914:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30888:6:12"},"nodeType":"YulFunctionCall","src":"30888:47:12"},"nodeType":"YulExpressionStatement","src":"30888:47:12"},{"nodeType":"YulAssignment","src":"30944:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31078:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30952:124:12"},"nodeType":"YulFunctionCall","src":"30952:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30944:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30822:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30837:4:12","type":""}],"src":"30671:419:12"},{"body":{"nodeType":"YulBlock","src":"31202:117:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31224:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"31232:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31220:3:12"},"nodeType":"YulFunctionCall","src":"31220:14:12"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"31236:34:12","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31213:6:12"},"nodeType":"YulFunctionCall","src":"31213:58:12"},"nodeType":"YulExpressionStatement","src":"31213:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31292:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"31300:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31288:3:12"},"nodeType":"YulFunctionCall","src":"31288:15:12"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"31305:6:12","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31281:6:12"},"nodeType":"YulFunctionCall","src":"31281:31:12"},"nodeType":"YulExpressionStatement","src":"31281:31:12"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31194:6:12","type":""}],"src":"31096:223:12"},{"body":{"nodeType":"YulBlock","src":"31471:220:12","statements":[{"nodeType":"YulAssignment","src":"31481:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31547:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"31552:2:12","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31488:58:12"},"nodeType":"YulFunctionCall","src":"31488:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31481:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31653:3:12"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"31564:88:12"},"nodeType":"YulFunctionCall","src":"31564:93:12"},"nodeType":"YulExpressionStatement","src":"31564:93:12"},{"nodeType":"YulAssignment","src":"31666:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31677:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"31682:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31673:3:12"},"nodeType":"YulFunctionCall","src":"31673:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31666:3:12"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31459:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31467:3:12","type":""}],"src":"31325:366:12"},{"body":{"nodeType":"YulBlock","src":"31868:248:12","statements":[{"nodeType":"YulAssignment","src":"31878:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31890:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"31901:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31886:3:12"},"nodeType":"YulFunctionCall","src":"31886:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31878:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31925:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"31936:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31921:3:12"},"nodeType":"YulFunctionCall","src":"31921:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31944:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"31950:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31940:3:12"},"nodeType":"YulFunctionCall","src":"31940:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31914:6:12"},"nodeType":"YulFunctionCall","src":"31914:47:12"},"nodeType":"YulExpressionStatement","src":"31914:47:12"},{"nodeType":"YulAssignment","src":"31970:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32104:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31978:124:12"},"nodeType":"YulFunctionCall","src":"31978:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31970:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31848:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31863:4:12","type":""}],"src":"31697:419:12"},{"body":{"nodeType":"YulBlock","src":"32167:146:12","statements":[{"nodeType":"YulAssignment","src":"32177:25:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32200:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32182:17:12"},"nodeType":"YulFunctionCall","src":"32182:20:12"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"32177:1:12"}]},{"nodeType":"YulAssignment","src":"32211:25:12","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"32234:1:12"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32216:17:12"},"nodeType":"YulFunctionCall","src":"32216:20:12"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"32211:1:12"}]},{"body":{"nodeType":"YulBlock","src":"32258:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"32260:16:12"},"nodeType":"YulFunctionCall","src":"32260:18:12"},"nodeType":"YulExpressionStatement","src":"32260:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32252:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"32255:1:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32249:2:12"},"nodeType":"YulFunctionCall","src":"32249:8:12"},"nodeType":"YulIf","src":"32246:34:12"},{"nodeType":"YulAssignment","src":"32290:17:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32302:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"32305:1:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32298:3:12"},"nodeType":"YulFunctionCall","src":"32298:9:12"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"32290:4:12"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"32153:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"32156:1:12","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"32162:4:12","type":""}],"src":"32122:191:12"},{"body":{"nodeType":"YulBlock","src":"32425:69:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32447:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"32455:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32443:3:12"},"nodeType":"YulFunctionCall","src":"32443:14:12"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"32459:27:12","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32436:6:12"},"nodeType":"YulFunctionCall","src":"32436:51:12"},"nodeType":"YulExpressionStatement","src":"32436:51:12"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32417:6:12","type":""}],"src":"32319:175:12"},{"body":{"nodeType":"YulBlock","src":"32646:220:12","statements":[{"nodeType":"YulAssignment","src":"32656:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32722:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"32727:2:12","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32663:58:12"},"nodeType":"YulFunctionCall","src":"32663:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32656:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32828:3:12"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"32739:88:12"},"nodeType":"YulFunctionCall","src":"32739:93:12"},"nodeType":"YulExpressionStatement","src":"32739:93:12"},{"nodeType":"YulAssignment","src":"32841:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32852:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"32857:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32848:3:12"},"nodeType":"YulFunctionCall","src":"32848:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32841:3:12"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32634:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32642:3:12","type":""}],"src":"32500:366:12"},{"body":{"nodeType":"YulBlock","src":"33043:248:12","statements":[{"nodeType":"YulAssignment","src":"33053:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33065:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"33076:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33061:3:12"},"nodeType":"YulFunctionCall","src":"33061:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33053:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33100:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"33111:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33096:3:12"},"nodeType":"YulFunctionCall","src":"33096:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33119:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"33125:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33115:3:12"},"nodeType":"YulFunctionCall","src":"33115:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33089:6:12"},"nodeType":"YulFunctionCall","src":"33089:47:12"},"nodeType":"YulExpressionStatement","src":"33089:47:12"},{"nodeType":"YulAssignment","src":"33145:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33279:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33153:124:12"},"nodeType":"YulFunctionCall","src":"33153:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33145:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33023:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33038:4:12","type":""}],"src":"32872:419:12"},{"body":{"nodeType":"YulBlock","src":"33403:131:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33425:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"33433:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33421:3:12"},"nodeType":"YulFunctionCall","src":"33421:14:12"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"33437:34:12","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33414:6:12"},"nodeType":"YulFunctionCall","src":"33414:58:12"},"nodeType":"YulExpressionStatement","src":"33414:58:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33493:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"33501:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33489:3:12"},"nodeType":"YulFunctionCall","src":"33489:15:12"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"33506:20:12","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33482:6:12"},"nodeType":"YulFunctionCall","src":"33482:45:12"},"nodeType":"YulExpressionStatement","src":"33482:45:12"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33395:6:12","type":""}],"src":"33297:237:12"},{"body":{"nodeType":"YulBlock","src":"33686:220:12","statements":[{"nodeType":"YulAssignment","src":"33696:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33762:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"33767:2:12","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33703:58:12"},"nodeType":"YulFunctionCall","src":"33703:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33696:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33868:3:12"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"33779:88:12"},"nodeType":"YulFunctionCall","src":"33779:93:12"},"nodeType":"YulExpressionStatement","src":"33779:93:12"},{"nodeType":"YulAssignment","src":"33881:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33892:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"33897:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33888:3:12"},"nodeType":"YulFunctionCall","src":"33888:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33881:3:12"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33674:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33682:3:12","type":""}],"src":"33540:366:12"},{"body":{"nodeType":"YulBlock","src":"34083:248:12","statements":[{"nodeType":"YulAssignment","src":"34093:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34105:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"34116:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34101:3:12"},"nodeType":"YulFunctionCall","src":"34101:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34093:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34140:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"34151:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34136:3:12"},"nodeType":"YulFunctionCall","src":"34136:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34159:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"34165:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34155:3:12"},"nodeType":"YulFunctionCall","src":"34155:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34129:6:12"},"nodeType":"YulFunctionCall","src":"34129:47:12"},"nodeType":"YulExpressionStatement","src":"34129:47:12"},{"nodeType":"YulAssignment","src":"34185:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34319:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34193:124:12"},"nodeType":"YulFunctionCall","src":"34193:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34185:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34063:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34078:4:12","type":""}],"src":"33912:419:12"},{"body":{"nodeType":"YulBlock","src":"34395:40:12","statements":[{"nodeType":"YulAssignment","src":"34406:22:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34422:5:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34416:5:12"},"nodeType":"YulFunctionCall","src":"34416:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"34406:6:12"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34378:5:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"34388:6:12","type":""}],"src":"34337:98:12"},{"body":{"nodeType":"YulBlock","src":"34536:73:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34553:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"34558:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34546:6:12"},"nodeType":"YulFunctionCall","src":"34546:19:12"},"nodeType":"YulExpressionStatement","src":"34546:19:12"},{"nodeType":"YulAssignment","src":"34574:29:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34593:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"34598:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34589:3:12"},"nodeType":"YulFunctionCall","src":"34589:14:12"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34574:11:12"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34508:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"34513:6:12","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34524:11:12","type":""}],"src":"34441:168:12"},{"body":{"nodeType":"YulBlock","src":"34705:270:12","statements":[{"nodeType":"YulVariableDeclaration","src":"34715:52:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34761:5:12"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"34729:31:12"},"nodeType":"YulFunctionCall","src":"34729:38:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"34719:6:12","type":""}]},{"nodeType":"YulAssignment","src":"34776:77:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34841:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"34846:6:12"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34783:57:12"},"nodeType":"YulFunctionCall","src":"34783:70:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34776:3:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34888:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"34895:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34884:3:12"},"nodeType":"YulFunctionCall","src":"34884:16:12"},{"name":"pos","nodeType":"YulIdentifier","src":"34902:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"34907:6:12"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"34862:21:12"},"nodeType":"YulFunctionCall","src":"34862:52:12"},"nodeType":"YulExpressionStatement","src":"34862:52:12"},{"nodeType":"YulAssignment","src":"34923:46:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34934:3:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"34961:6:12"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"34939:21:12"},"nodeType":"YulFunctionCall","src":"34939:29:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34930:3:12"},"nodeType":"YulFunctionCall","src":"34930:39:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34923:3:12"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34686:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34693:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34701:3:12","type":""}],"src":"34615:360:12"},{"body":{"nodeType":"YulBlock","src":"35181:440:12","statements":[{"nodeType":"YulAssignment","src":"35191:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35203:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"35214:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35199:3:12"},"nodeType":"YulFunctionCall","src":"35199:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35191:4:12"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35272:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35285:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"35296:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35281:3:12"},"nodeType":"YulFunctionCall","src":"35281:17:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35228:43:12"},"nodeType":"YulFunctionCall","src":"35228:71:12"},"nodeType":"YulExpressionStatement","src":"35228:71:12"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35353:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35366:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"35377:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35362:3:12"},"nodeType":"YulFunctionCall","src":"35362:18:12"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35309:43:12"},"nodeType":"YulFunctionCall","src":"35309:72:12"},"nodeType":"YulExpressionStatement","src":"35309:72:12"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"35435:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35448:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"35459:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35444:3:12"},"nodeType":"YulFunctionCall","src":"35444:18:12"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"35391:43:12"},"nodeType":"YulFunctionCall","src":"35391:72:12"},"nodeType":"YulExpressionStatement","src":"35391:72:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35484:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"35495:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35480:3:12"},"nodeType":"YulFunctionCall","src":"35480:18:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35504:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"35510:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35500:3:12"},"nodeType":"YulFunctionCall","src":"35500:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35473:6:12"},"nodeType":"YulFunctionCall","src":"35473:48:12"},"nodeType":"YulExpressionStatement","src":"35473:48:12"},{"nodeType":"YulAssignment","src":"35530:84:12","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"35600:6:12"},{"name":"tail","nodeType":"YulIdentifier","src":"35609:4:12"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35538:61:12"},"nodeType":"YulFunctionCall","src":"35538:76:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35530:4:12"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35129:9:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"35141:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35149:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35157:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35165:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35176:4:12","type":""}],"src":"34981:640:12"},{"body":{"nodeType":"YulBlock","src":"35689:79:12","statements":[{"nodeType":"YulAssignment","src":"35699:22:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"35714:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35708:5:12"},"nodeType":"YulFunctionCall","src":"35708:13:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"35699:5:12"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35756:5:12"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"35730:25:12"},"nodeType":"YulFunctionCall","src":"35730:32:12"},"nodeType":"YulExpressionStatement","src":"35730:32:12"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"35667:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"35675:3:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"35683:5:12","type":""}],"src":"35627:141:12"},{"body":{"nodeType":"YulBlock","src":"35850:273:12","statements":[{"body":{"nodeType":"YulBlock","src":"35896:83:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"35898:77:12"},"nodeType":"YulFunctionCall","src":"35898:79:12"},"nodeType":"YulExpressionStatement","src":"35898:79:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"35871:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"35880:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35867:3:12"},"nodeType":"YulFunctionCall","src":"35867:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"35892:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"35863:3:12"},"nodeType":"YulFunctionCall","src":"35863:32:12"},"nodeType":"YulIf","src":"35860:119:12"},{"nodeType":"YulBlock","src":"35989:127:12","statements":[{"nodeType":"YulVariableDeclaration","src":"36004:15:12","value":{"kind":"number","nodeType":"YulLiteral","src":"36018:1:12","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"36008:6:12","type":""}]},{"nodeType":"YulAssignment","src":"36033:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36078:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"36089:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36074:3:12"},"nodeType":"YulFunctionCall","src":"36074:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"36098:7:12"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"36043:30:12"},"nodeType":"YulFunctionCall","src":"36043:63:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"36033:6:12"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35820:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"35831:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"35843:6:12","type":""}],"src":"35774:349:12"},{"body":{"nodeType":"YulBlock","src":"36235:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36257:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"36265:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36253:3:12"},"nodeType":"YulFunctionCall","src":"36253:14:12"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"36269:34:12","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36246:6:12"},"nodeType":"YulFunctionCall","src":"36246:58:12"},"nodeType":"YulExpressionStatement","src":"36246:58:12"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36227:6:12","type":""}],"src":"36129:182:12"},{"body":{"nodeType":"YulBlock","src":"36463:220:12","statements":[{"nodeType":"YulAssignment","src":"36473:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36539:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"36544:2:12","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36480:58:12"},"nodeType":"YulFunctionCall","src":"36480:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36473:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36645:3:12"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"36556:88:12"},"nodeType":"YulFunctionCall","src":"36556:93:12"},"nodeType":"YulExpressionStatement","src":"36556:93:12"},{"nodeType":"YulAssignment","src":"36658:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36669:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"36674:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36665:3:12"},"nodeType":"YulFunctionCall","src":"36665:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36658:3:12"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36451:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36459:3:12","type":""}],"src":"36317:366:12"},{"body":{"nodeType":"YulBlock","src":"36860:248:12","statements":[{"nodeType":"YulAssignment","src":"36870:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36882:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"36893:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36878:3:12"},"nodeType":"YulFunctionCall","src":"36878:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36870:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36917:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"36928:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36913:3:12"},"nodeType":"YulFunctionCall","src":"36913:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36936:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"36942:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36932:3:12"},"nodeType":"YulFunctionCall","src":"36932:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36906:6:12"},"nodeType":"YulFunctionCall","src":"36906:47:12"},"nodeType":"YulExpressionStatement","src":"36906:47:12"},{"nodeType":"YulAssignment","src":"36962:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37096:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36970:124:12"},"nodeType":"YulFunctionCall","src":"36970:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36962:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36840:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36855:4:12","type":""}],"src":"36689:419:12"},{"body":{"nodeType":"YulBlock","src":"37220:72:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37242:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"37250:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37238:3:12"},"nodeType":"YulFunctionCall","src":"37238:14:12"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"37254:30:12","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37231:6:12"},"nodeType":"YulFunctionCall","src":"37231:54:12"},"nodeType":"YulExpressionStatement","src":"37231:54:12"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37212:6:12","type":""}],"src":"37114:178:12"},{"body":{"nodeType":"YulBlock","src":"37444:220:12","statements":[{"nodeType":"YulAssignment","src":"37454:74:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37520:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"37525:2:12","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37461:58:12"},"nodeType":"YulFunctionCall","src":"37461:67:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37454:3:12"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37626:3:12"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"37537:88:12"},"nodeType":"YulFunctionCall","src":"37537:93:12"},"nodeType":"YulExpressionStatement","src":"37537:93:12"},{"nodeType":"YulAssignment","src":"37639:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37650:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"37655:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37646:3:12"},"nodeType":"YulFunctionCall","src":"37646:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37639:3:12"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37432:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37440:3:12","type":""}],"src":"37298:366:12"},{"body":{"nodeType":"YulBlock","src":"37841:248:12","statements":[{"nodeType":"YulAssignment","src":"37851:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37863:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"37874:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37859:3:12"},"nodeType":"YulFunctionCall","src":"37859:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37851:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37898:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"37909:1:12","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37894:3:12"},"nodeType":"YulFunctionCall","src":"37894:17:12"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37917:4:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"37923:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37913:3:12"},"nodeType":"YulFunctionCall","src":"37913:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37887:6:12"},"nodeType":"YulFunctionCall","src":"37887:47:12"},"nodeType":"YulExpressionStatement","src":"37887:47:12"},{"nodeType":"YulAssignment","src":"37943:139:12","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38077:4:12"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37951:124:12"},"nodeType":"YulFunctionCall","src":"37951:131:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37943:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37821:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37836:4:12","type":""}],"src":"37670:419:12"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf(memPtr) {\n\n        mstore(add(memPtr, 0), \"URI Query for non existent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a216a5bc0401215686e6665c165166ebb68e4e1f115fbfd85c57d2c3a2dd8ebf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d(memPtr) {\n\n        mstore(add(memPtr, 0), 0x7b226e616d653a22000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 8)\n        store_literal_in_memory_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d(pos)\n        end := add(pos, 8)\n    }\n\n    function store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2200000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0(pos)\n        end := add(pos, 1)\n    }\n\n    function store_literal_in_memory_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735(memPtr) {\n\n        mstore(add(memPtr, 0), 0x226465736372697074696f6e223a22416e204e46542074686174206368616e67)\n\n        mstore(add(memPtr, 32), \"es based on chainlink price Feed\")\n\n        mstore(add(memPtr, 64), 0x2121220000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 67)\n        store_literal_in_memory_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735(pos)\n        end := add(pos, 67)\n    }\n\n    function store_literal_in_memory_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2261747472696275746573223a5b7b2274726169745f74797065223a2022636f)\n\n        mstore(add(memPtr, 32), 0x6f6c6e657373222c3a76616c75653a3130307d5d2c22696d616765223a220000)\n\n    }\n\n    function abi_encode_t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 62)\n        store_literal_in_memory_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24(pos)\n        end := add(pos, 62)\n    }\n\n    function store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475(memPtr) {\n\n        mstore(add(memPtr, 0), 0x227d000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475(pos)\n        end := add(pos, 2)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d_t_string_memory_ptr_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735_t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_9a91f986a5671156db728b6e56d38ca84b23621c21b3106012a6ef77a58c341d_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_839c202eb4195345e80b25e6dda0e00f25f9757a330f151354286e1c6972e735_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_45f2fe31f836a46afada666395b66df19ec22e314966000a26c6dce6ead50a24_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1788":[{"length":32,"start":2816},{"length":32,"start":3050}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063b88d4fde11610071578063b88d4fde14610343578063c87b56dd1461035f578063e425aded1461038f578063e985e9c5146103bf578063ed28a122146103ef5761012c565b806370a082311461029d57806376f6056b146102cd57806395d89b41146102eb5780639e87a5cd14610309578063a22cb465146103275761012c565b806323b872dd116100f457806323b872dd146101e757806330d871c61461020357806342842e0e146102335780636352211e1461024f5780636e02007d1461027f5761012c565b806301ffc9a71461013157806306fdde0314610161578063081812fc1461017f578063095ea7b3146101af5780631e930812146101cb575b600080fd5b61014b60048036038101906101469190611c43565b61040d565b6040516101589190611c8b565b60405180910390f35b6101696104ef565b6040516101769190611d3f565b60405180910390f35b61019960048036038101906101949190611d97565b610581565b6040516101a69190611e05565b60405180910390f35b6101c960048036038101906101c49190611e4c565b6105c7565b005b6101e560048036038101906101e09190611ec2565b6106df565b005b61020160048036038101906101fc9190611eef565b610757565b005b61021d60048036038101906102189190612077565b6107b7565b60405161022a9190611d3f565b60405180910390f35b61024d60048036038101906102489190611eef565b610844565b005b61026960048036038101906102649190611d97565b610864565b6040516102769190611e05565b60405180910390f35b610287610916565b60405161029491906120cf565b60405180910390f35b6102b760048036038101906102b291906120ea565b610920565b6040516102c491906120cf565b60405180910390f35b6102d56109d8565b6040516102e29190611d3f565b60405180910390f35b6102f3610a6a565b6040516103009190611d3f565b60405180910390f35b610311610afc565b60405161031e9190612176565b60405180910390f35b610341600480360381019061033c91906121bd565b610b24565b005b61035d6004803603810190610358919061229e565b610b3a565b005b61037960048036038101906103749190611d97565b610b9c565b6040516103869190611d3f565b60405180910390f35b6103a960048036038101906103a49190611d97565b610e25565b6040516103b69190612330565b60405180910390f35b6103d960048036038101906103d4919061234b565b610e3d565b6040516103e69190611c8b565b60405180910390f35b6103f7610ed1565b6040516104049190611d3f565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104d857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104e857506104e7826110dc565b5b9050919050565b6060600080546104fe906123ba565b80601f016020809104026020016040519081016040528092919081815260200182805461052a906123ba565b80156105775780601f1061054c57610100808354040283529160200191610577565b820191906000526020600020905b81548152906001019060200180831161055a57829003601f168201915b5050505050905090565b600061058c82611146565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105d282610864565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610643576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063a9061245e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610662611191565b73ffffffffffffffffffffffffffffffffffffffff16148061069157506106908161068b611191565b610e3d565b5b6106d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c7906124f0565b60405180910390fd5b6106da8383611199565b505050565b806009600060065481526020019081526020016000208190555061070533600654611252565b6001600654610714919061253f565b6006819055506006547f882d3b5a729a8bb95cf6c0083c99b42ecd9637123d4425bd7b768877fd8af8b08260405161074c9190612330565b60405180910390a250565b610768610762611191565b82611270565b6107a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079e90612607565b60405180910390fd5b6107b2838383611305565b505050565b606060006107e3836040516020016107cf9190612663565b604051602081830303815290604052610f63565b90506040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c0000000000008152508160405160200161082d92919061267a565b604051602081830303815290604052915050919050565b61085f83838360405180602001604052806000815250610b3a565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561090d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610904906126ea565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610991576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109889061277c565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600880546109e7906123ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610a13906123ba565b8015610a605780601f10610a3557610100808354040283529160200191610a60565b820191906000526020600020905b815481529060010190602001808311610a4357829003601f168201915b5050505050905090565b606060018054610a79906123ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa5906123ba565b8015610af25780601f10610ac757610100808354040283529160200191610af2565b820191906000526020600020905b815481529060010190602001808311610ad557829003601f168201915b5050505050905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b610b36610b2f611191565b838361156c565b5050565b610b4b610b45611191565b83611270565b610b8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8190612607565b60405180910390fd5b610b96848484846116d9565b50505050565b6060610ba782611735565b610be6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdd906127e8565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610c4e57600080fd5b505afa158015610c62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c869190612874565b505050915050600060078054610c9b906123ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc7906123ba565b8015610d145780601f10610ce957610100808354040283529160200191610d14565b820191906000526020600020905b815481529060010190602001808311610cf757829003601f168201915b5050505050905060096000858152602001908152602001600020548212610dc35760088054610d42906123ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6e906123ba565b8015610dbb5780601f10610d9057610100808354040283529160200191610dbb565b820191906000526020600020905b815481529060010190602001808311610d9e57829003601f168201915b505050505090505b610dcb6117a1565b610dfc610dd66104ef565b83604051602001610de8929190612add565b604051602081830303815290604052610f63565b604051602001610e0d92919061267a565b60405160208183030381529060405292505050919050565b60096020528060005260406000206000915090505481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060078054610ee0906123ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610f0c906123ba565b8015610f595780601f10610f2e57610100808354040283529160200191610f59565b820191906000526020600020905b815481529060010190602001808311610f3c57829003601f168201915b5050505050905090565b6060600082511415610f86576040518060200160405280600081525090506110d7565b60006040518060600160405280604081526020016130046040913990506000600360028551610fb5919061253f565b610fbf9190612b67565b6004610fcb9190612b98565b90506000602082610fdc919061253f565b67ffffffffffffffff811115610ff557610ff4611f4c565b5b6040519080825280601f01601f1916602001820160405280156110275781602001600182028036833780820191505090505b509050818152600183018586518101602084015b81831015611096576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f811685015182536001820191505061103b565b6003895106600181146110b057600281146110c0576110cb565b613d3d60f01b60028303526110cb565b603d60f81b60018303525b50505050508093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61114f81611735565b61118e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611185906126ea565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661120c83610864565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61126c8282604051806020016040528060008152506117de565b5050565b60008061127c83610864565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806112be57506112bd8185610e3d565b5b806112fc57508373ffffffffffffffffffffffffffffffffffffffff166112e484610581565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661132582610864565b73ffffffffffffffffffffffffffffffffffffffff161461137b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137290612c64565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e290612cf6565b60405180910390fd5b6113f6838383611839565b611401600082611199565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114519190612d16565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114a8919061253f565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461156783838361183e565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156115db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d290612d96565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516116cc9190611c8b565b60405180910390a3505050565b6116e4848484611305565b6116f084848484611843565b61172f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172690612e28565b60405180910390fd5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60606040518060400160405280601d81526020017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815250905090565b6117e883836119da565b6117f56000848484611843565b611834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182b90612e28565b60405180910390fd5b505050565b505050565b505050565b60006118648473ffffffffffffffffffffffffffffffffffffffff16611bb4565b156119cd578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261188d611191565b8786866040518563ffffffff1660e01b81526004016118af9493929190612e9d565b602060405180830381600087803b1580156118c957600080fd5b505af19250505080156118fa57506040513d601f19601f820116820180604052508101906118f79190612efe565b60015b61197d573d806000811461192a576040519150601f19603f3d011682016040523d82523d6000602084013e61192f565b606091505b50600081511415611975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196c90612e28565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506119d2565b600190505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4190612f77565b60405180910390fd5b611a5381611735565b15611a93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8a90612fe3565b60405180910390fd5b611a9f60008383611839565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611aef919061253f565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611bb06000838361183e565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c2081611beb565b8114611c2b57600080fd5b50565b600081359050611c3d81611c17565b92915050565b600060208284031215611c5957611c58611be1565b5b6000611c6784828501611c2e565b91505092915050565b60008115159050919050565b611c8581611c70565b82525050565b6000602082019050611ca06000830184611c7c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ce0578082015181840152602081019050611cc5565b83811115611cef576000848401525b50505050565b6000601f19601f8301169050919050565b6000611d1182611ca6565b611d1b8185611cb1565b9350611d2b818560208601611cc2565b611d3481611cf5565b840191505092915050565b60006020820190508181036000830152611d598184611d06565b905092915050565b6000819050919050565b611d7481611d61565b8114611d7f57600080fd5b50565b600081359050611d9181611d6b565b92915050565b600060208284031215611dad57611dac611be1565b5b6000611dbb84828501611d82565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611def82611dc4565b9050919050565b611dff81611de4565b82525050565b6000602082019050611e1a6000830184611df6565b92915050565b611e2981611de4565b8114611e3457600080fd5b50565b600081359050611e4681611e20565b92915050565b60008060408385031215611e6357611e62611be1565b5b6000611e7185828601611e37565b9250506020611e8285828601611d82565b9150509250929050565b6000819050919050565b611e9f81611e8c565b8114611eaa57600080fd5b50565b600081359050611ebc81611e96565b92915050565b600060208284031215611ed857611ed7611be1565b5b6000611ee684828501611ead565b91505092915050565b600080600060608486031215611f0857611f07611be1565b5b6000611f1686828701611e37565b9350506020611f2786828701611e37565b9250506040611f3886828701611d82565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f8482611cf5565b810181811067ffffffffffffffff82111715611fa357611fa2611f4c565b5b80604052505050565b6000611fb6611bd7565b9050611fc28282611f7b565b919050565b600067ffffffffffffffff821115611fe257611fe1611f4c565b5b611feb82611cf5565b9050602081019050919050565b82818337600083830152505050565b600061201a61201584611fc7565b611fac565b90508281526020810184848401111561203657612035611f47565b5b612041848285611ff8565b509392505050565b600082601f83011261205e5761205d611f42565b5b813561206e848260208601612007565b91505092915050565b60006020828403121561208d5761208c611be1565b5b600082013567ffffffffffffffff8111156120ab576120aa611be6565b5b6120b784828501612049565b91505092915050565b6120c981611d61565b82525050565b60006020820190506120e460008301846120c0565b92915050565b600060208284031215612100576120ff611be1565b5b600061210e84828501611e37565b91505092915050565b6000819050919050565b600061213c61213761213284611dc4565b612117565b611dc4565b9050919050565b600061214e82612121565b9050919050565b600061216082612143565b9050919050565b61217081612155565b82525050565b600060208201905061218b6000830184612167565b92915050565b61219a81611c70565b81146121a557600080fd5b50565b6000813590506121b781612191565b92915050565b600080604083850312156121d4576121d3611be1565b5b60006121e285828601611e37565b92505060206121f3858286016121a8565b9150509250929050565b600067ffffffffffffffff82111561221857612217611f4c565b5b61222182611cf5565b9050602081019050919050565b600061224161223c846121fd565b611fac565b90508281526020810184848401111561225d5761225c611f47565b5b612268848285611ff8565b509392505050565b600082601f83011261228557612284611f42565b5b813561229584826020860161222e565b91505092915050565b600080600080608085870312156122b8576122b7611be1565b5b60006122c687828801611e37565b94505060206122d787828801611e37565b93505060406122e887828801611d82565b925050606085013567ffffffffffffffff81111561230957612308611be6565b5b61231587828801612270565b91505092959194509250565b61232a81611e8c565b82525050565b60006020820190506123456000830184612321565b92915050565b6000806040838503121561236257612361611be1565b5b600061237085828601611e37565b925050602061238185828601611e37565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806123d257607f821691505b602082108114156123e6576123e561238b565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000612448602183611cb1565b9150612453826123ec565b604082019050919050565b600060208201905081810360008301526124778161243b565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b60006124da603e83611cb1565b91506124e58261247e565b604082019050919050565b60006020820190508181036000830152612509816124cd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061254a82611d61565b915061255583611d61565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561258a57612589612510565b5b828201905092915050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b60006125f1602e83611cb1565b91506125fc82612595565b604082019050919050565b60006020820190508181036000830152612620816125e4565b9050919050565b600081905092915050565b600061263d82611ca6565b6126478185612627565b9350612657818560208601611cc2565b80840191505092915050565b600061266f8284612632565b915081905092915050565b60006126868285612632565b91506126928284612632565b91508190509392505050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b60006126d4601883611cb1565b91506126df8261269e565b602082019050919050565b60006020820190508181036000830152612703816126c7565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000612766602983611cb1565b91506127718261270a565b604082019050919050565b6000602082019050818103600083015261279581612759565b9050919050565b7f55524920517565727920666f72206e6f6e206578697374656e7420746f6b656e600082015250565b60006127d2602083611cb1565b91506127dd8261279c565b602082019050919050565b60006020820190508181036000830152612801816127c5565b9050919050565b600069ffffffffffffffffffff82169050919050565b61282781612808565b811461283257600080fd5b50565b6000815190506128448161281e565b92915050565b60008151905061285981611e96565b92915050565b60008151905061286e81611d6b565b92915050565b600080600080600060a086880312156128905761288f611be1565b5b600061289e88828901612835565b95505060206128af8882890161284a565b94505060406128c08882890161285f565b93505060606128d18882890161285f565b92505060806128e288828901612835565b9150509295509295909350565b7f7b226e616d653a22000000000000000000000000000000000000000000000000600082015250565b6000612925600883612627565b9150612930826128ef565b600882019050919050565b7f2200000000000000000000000000000000000000000000000000000000000000600082015250565b6000612971600183612627565b915061297c8261293b565b600182019050919050565b7f226465736372697074696f6e223a22416e204e46542074686174206368616e6760008201527f6573206261736564206f6e20636861696e6c696e6b207072696365204665656460208201527f2121220000000000000000000000000000000000000000000000000000000000604082015250565b6000612a09604383612627565b9150612a1482612987565b604382019050919050565b7f2261747472696275746573223a5b7b2274726169745f74797065223a2022636f60008201527f6f6c6e657373222c3a76616c75653a3130307d5d2c22696d616765223a220000602082015250565b6000612a7b603e83612627565b9150612a8682612a1f565b603e82019050919050565b7f227d000000000000000000000000000000000000000000000000000000000000600082015250565b6000612ac7600283612627565b9150612ad282612a91565b600282019050919050565b6000612ae882612918565b9150612af48285612632565b9150612aff82612964565b9150612b0a826129fc565b9150612b1582612a6e565b9150612b218284612632565b9150612b2c82612aba565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612b7282611d61565b9150612b7d83611d61565b925082612b8d57612b8c612b38565b5b828204905092915050565b6000612ba382611d61565b9150612bae83611d61565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612be757612be6612510565b5b828202905092915050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000612c4e602583611cb1565b9150612c5982612bf2565b604082019050919050565b60006020820190508181036000830152612c7d81612c41565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612ce0602483611cb1565b9150612ceb82612c84565b604082019050919050565b60006020820190508181036000830152612d0f81612cd3565b9050919050565b6000612d2182611d61565b9150612d2c83611d61565b925082821015612d3f57612d3e612510565b5b828203905092915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000612d80601983611cb1565b9150612d8b82612d4a565b602082019050919050565b60006020820190508181036000830152612daf81612d73565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612e12603283611cb1565b9150612e1d82612db6565b604082019050919050565b60006020820190508181036000830152612e4181612e05565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000612e6f82612e48565b612e798185612e53565b9350612e89818560208601611cc2565b612e9281611cf5565b840191505092915050565b6000608082019050612eb26000830187611df6565b612ebf6020830186611df6565b612ecc60408301856120c0565b8181036060830152612ede8184612e64565b905095945050505050565b600081519050612ef881611c17565b92915050565b600060208284031215612f1457612f13611be1565b5b6000612f2284828501612ee9565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612f61602083611cb1565b9150612f6c82612f2b565b602082019050919050565b60006020820190508181036000830152612f9081612f54565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612fcd601c83611cb1565b9150612fd882612f97565b602082019050919050565b60006020820190508181036000830152612ffc81612fc0565b905091905056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122069004289fcfa34aa3162722a4c6f0aae4e3e1736dfb717d99d868844334e0d6864736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xE425ADED EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xED28A122 EQ PUSH2 0x3EF JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x76F6056B EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x9E87A5CD EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x327 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x30D871C6 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x27F JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x1E930812 EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1E4C JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1EC2 JUMP JUMPDEST PUSH2 0x6DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST PUSH2 0x757 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST PUSH2 0x844 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x20CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x20CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F3 PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x2176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x21BD JUMP JUMPDEST PUSH2 0xB24 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x229E JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x2330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F7 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4D8 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4E8 JUMPI POP PUSH2 0x4E7 DUP3 PUSH2 0x10DC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4FE SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x577 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x577 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58C DUP3 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 DUP3 PUSH2 0x864 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63A SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x662 PUSH2 0x1191 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x691 JUMPI POP PUSH2 0x690 DUP2 PUSH2 0x68B PUSH2 0x1191 JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST JUMPDEST PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x24F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6DA DUP4 DUP4 PUSH2 0x1199 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x705 CALLER PUSH1 0x6 SLOAD PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x253F JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH32 0x882D3B5A729A8BB95CF6C0083C99B42ECD9637123D4425BD7B768877FD8AF8B0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x2330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x768 PUSH2 0x762 PUSH2 0x1191 JUMP JUMPDEST DUP3 PUSH2 0x1270 JUMP JUMPDEST PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B2 DUP4 DUP4 DUP4 PUSH2 0x1305 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x7E3 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x2663 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xF63 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x82D SWAP3 SWAP2 SWAP1 PUSH2 0x267A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x85F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB3A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x904 SWAP1 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x991 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x988 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x9E7 SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA13 SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA60 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA35 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA60 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA43 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xA79 SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAA5 SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAF2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAC7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAF2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAD5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB36 PUSH2 0xB2F PUSH2 0x1191 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x156C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB4B PUSH2 0xB45 PUSH2 0x1191 JUMP JUMPDEST DUP4 PUSH2 0x1270 JUMP JUMPDEST PUSH2 0xB8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB81 SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB96 DUP5 DUP5 DUP5 DUP5 PUSH2 0x16D9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBA7 DUP3 PUSH2 0x1735 JUMP JUMPDEST PUSH2 0xBE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDD SWAP1 PUSH2 0x27E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC86 SWAP2 SWAP1 PUSH2 0x2874 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD PUSH2 0xC9B SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCC7 SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD14 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCE9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD14 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCF7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 SLT PUSH2 0xDC3 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH2 0xD42 SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD6E SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDBB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD90 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDBB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD9E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST PUSH2 0xDCB PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xDFC PUSH2 0xDD6 PUSH2 0x4EF JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDE8 SWAP3 SWAP2 SWAP1 PUSH2 0x2ADD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE0D SWAP3 SWAP2 SWAP1 PUSH2 0x267A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0xEE0 SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF0C SWAP1 PUSH2 0x23BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF59 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF59 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF3C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0xF86 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3004 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0xFB5 SWAP2 SWAP1 PUSH2 0x253F JUMP JUMPDEST PUSH2 0xFBF SWAP2 SWAP1 PUSH2 0x2B67 JUMP JUMPDEST PUSH1 0x4 PUSH2 0xFCB SWAP2 SWAP1 PUSH2 0x2B98 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH2 0xFDC SWAP2 SWAP1 PUSH2 0x253F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF5 JUMPI PUSH2 0xFF4 PUSH2 0x1F4C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1027 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x1096 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH2 0x103B JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x10B0 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x10C0 JUMPI PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x114F DUP2 PUSH2 0x1735 JUMP JUMPDEST PUSH2 0x118E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1185 SWAP1 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x120C DUP4 PUSH2 0x864 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x126C DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x17DE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x127C DUP4 PUSH2 0x864 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x12BE JUMPI POP PUSH2 0x12BD DUP2 DUP6 PUSH2 0xE3D JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x12FC JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E4 DUP5 PUSH2 0x581 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1325 DUP3 PUSH2 0x864 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x137B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1372 SWAP1 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E2 SWAP1 PUSH2 0x2CF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F6 DUP4 DUP4 DUP4 PUSH2 0x1839 JUMP JUMPDEST PUSH2 0x1401 PUSH1 0x0 DUP3 PUSH2 0x1199 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1451 SWAP2 SWAP1 PUSH2 0x2D16 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14A8 SWAP2 SWAP1 PUSH2 0x253F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1567 DUP4 DUP4 DUP4 PUSH2 0x183E JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x15DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D2 SWAP1 PUSH2 0x2D96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x16CC SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x16E4 DUP5 DUP5 DUP5 PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x16F0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1843 JUMP JUMPDEST PUSH2 0x172F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1726 SWAP1 PUSH2 0x2E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x17E8 DUP4 DUP4 PUSH2 0x19DA JUMP JUMPDEST PUSH2 0x17F5 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1843 JUMP JUMPDEST PUSH2 0x1834 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182B SWAP1 PUSH2 0x2E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1864 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BB4 JUMP JUMPDEST ISZERO PUSH2 0x19CD JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x188D PUSH2 0x1191 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18AF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18FA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18F7 SWAP2 SWAP1 PUSH2 0x2EFE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x197D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x192A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x192F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1975 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196C SWAP1 PUSH2 0x2E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A41 SWAP1 PUSH2 0x2F77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A53 DUP2 PUSH2 0x1735 JUMP JUMPDEST ISZERO PUSH2 0x1A93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8A SWAP1 PUSH2 0x2FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A9F PUSH1 0x0 DUP4 DUP4 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1AEF SWAP2 SWAP1 PUSH2 0x253F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1BB0 PUSH1 0x0 DUP4 DUP4 PUSH2 0x183E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C20 DUP2 PUSH2 0x1BEB JUMP JUMPDEST DUP2 EQ PUSH2 0x1C2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C3D DUP2 PUSH2 0x1C17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C59 JUMPI PUSH2 0x1C58 PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C67 DUP5 DUP3 DUP6 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C85 DUP2 PUSH2 0x1C70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CA0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CE0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CC5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1CEF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D11 DUP3 PUSH2 0x1CA6 JUMP JUMPDEST PUSH2 0x1D1B DUP2 DUP6 PUSH2 0x1CB1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D2B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x1D34 DUP2 PUSH2 0x1CF5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D59 DUP2 DUP5 PUSH2 0x1D06 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D74 DUP2 PUSH2 0x1D61 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D91 DUP2 PUSH2 0x1D6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DAD JUMPI PUSH2 0x1DAC PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DBB DUP5 DUP3 DUP6 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEF DUP3 PUSH2 0x1DC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFF DUP2 PUSH2 0x1DE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E29 DUP2 PUSH2 0x1DE4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E46 DUP2 PUSH2 0x1E20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E63 JUMPI PUSH2 0x1E62 PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E71 DUP6 DUP3 DUP7 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E82 DUP6 DUP3 DUP7 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E9F DUP2 PUSH2 0x1E8C JUMP JUMPDEST DUP2 EQ PUSH2 0x1EAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EBC DUP2 PUSH2 0x1E96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED8 JUMPI PUSH2 0x1ED7 PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EE6 DUP5 DUP3 DUP6 ADD PUSH2 0x1EAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F08 JUMPI PUSH2 0x1F07 PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F16 DUP7 DUP3 DUP8 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F27 DUP7 DUP3 DUP8 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F38 DUP7 DUP3 DUP8 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1F84 DUP3 PUSH2 0x1CF5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FA3 JUMPI PUSH2 0x1FA2 PUSH2 0x1F4C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB6 PUSH2 0x1BD7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FC2 DUP3 DUP3 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FE2 JUMPI PUSH2 0x1FE1 PUSH2 0x1F4C JUMP JUMPDEST JUMPDEST PUSH2 0x1FEB DUP3 PUSH2 0x1CF5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201A PUSH2 0x2015 DUP5 PUSH2 0x1FC7 JUMP JUMPDEST PUSH2 0x1FAC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2036 JUMPI PUSH2 0x2035 PUSH2 0x1F47 JUMP JUMPDEST JUMPDEST PUSH2 0x2041 DUP5 DUP3 DUP6 PUSH2 0x1FF8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x205E JUMPI PUSH2 0x205D PUSH2 0x1F42 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x206E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2007 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x208D JUMPI PUSH2 0x208C PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20AB JUMPI PUSH2 0x20AA PUSH2 0x1BE6 JUMP JUMPDEST JUMPDEST PUSH2 0x20B7 DUP5 DUP3 DUP6 ADD PUSH2 0x2049 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20C9 DUP2 PUSH2 0x1D61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2100 JUMPI PUSH2 0x20FF PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x210E DUP5 DUP3 DUP6 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x213C PUSH2 0x2137 PUSH2 0x2132 DUP5 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x1DC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214E DUP3 PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2160 DUP3 PUSH2 0x2143 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2170 DUP2 PUSH2 0x2155 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x218B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2167 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x219A DUP2 PUSH2 0x1C70 JUMP JUMPDEST DUP2 EQ PUSH2 0x21A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21B7 DUP2 PUSH2 0x2191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21D4 JUMPI PUSH2 0x21D3 PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21E2 DUP6 DUP3 DUP7 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21F3 DUP6 DUP3 DUP7 ADD PUSH2 0x21A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2218 JUMPI PUSH2 0x2217 PUSH2 0x1F4C JUMP JUMPDEST JUMPDEST PUSH2 0x2221 DUP3 PUSH2 0x1CF5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2241 PUSH2 0x223C DUP5 PUSH2 0x21FD JUMP JUMPDEST PUSH2 0x1FAC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x225D JUMPI PUSH2 0x225C PUSH2 0x1F47 JUMP JUMPDEST JUMPDEST PUSH2 0x2268 DUP5 DUP3 DUP6 PUSH2 0x1FF8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2285 JUMPI PUSH2 0x2284 PUSH2 0x1F42 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2295 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x222E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x22B8 JUMPI PUSH2 0x22B7 PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22C6 DUP8 DUP3 DUP9 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x22D7 DUP8 DUP3 DUP9 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x22E8 DUP8 DUP3 DUP9 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2309 JUMPI PUSH2 0x2308 PUSH2 0x1BE6 JUMP JUMPDEST JUMPDEST PUSH2 0x2315 DUP8 DUP3 DUP9 ADD PUSH2 0x2270 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x232A DUP2 PUSH2 0x1E8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2345 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2321 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2362 JUMPI PUSH2 0x2361 PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2370 DUP6 DUP3 DUP7 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2381 DUP6 DUP3 DUP7 ADD PUSH2 0x1E37 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x23D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x23E6 JUMPI PUSH2 0x23E5 PUSH2 0x238B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2448 PUSH1 0x21 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2453 DUP3 PUSH2 0x23EC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2477 DUP2 PUSH2 0x243B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24DA PUSH1 0x3E DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E5 DUP3 PUSH2 0x247E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2509 DUP2 PUSH2 0x24CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x254A DUP3 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x2555 DUP4 PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x258A JUMPI PUSH2 0x2589 PUSH2 0x2510 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25F1 PUSH1 0x2E DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x25FC DUP3 PUSH2 0x2595 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2620 DUP2 PUSH2 0x25E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x263D DUP3 PUSH2 0x1CA6 JUMP JUMPDEST PUSH2 0x2647 DUP2 DUP6 PUSH2 0x2627 JUMP JUMPDEST SWAP4 POP PUSH2 0x2657 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CC2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266F DUP3 DUP5 PUSH2 0x2632 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2686 DUP3 DUP6 PUSH2 0x2632 JUMP JUMPDEST SWAP2 POP PUSH2 0x2692 DUP3 DUP5 PUSH2 0x2632 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D4 PUSH1 0x18 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x26DF DUP3 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2703 DUP2 PUSH2 0x26C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2766 PUSH1 0x29 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2771 DUP3 PUSH2 0x270A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2795 DUP2 PUSH2 0x2759 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x55524920517565727920666F72206E6F6E206578697374656E7420746F6B656E PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27D2 PUSH1 0x20 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x27DD DUP3 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2801 DUP2 PUSH2 0x27C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2827 DUP2 PUSH2 0x2808 JUMP JUMPDEST DUP2 EQ PUSH2 0x2832 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2844 DUP2 PUSH2 0x281E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2859 DUP2 PUSH2 0x1E96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x286E DUP2 PUSH2 0x1D6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2890 JUMPI PUSH2 0x288F PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x289E DUP9 DUP3 DUP10 ADD PUSH2 0x2835 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x28AF DUP9 DUP3 DUP10 ADD PUSH2 0x284A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x28C0 DUP9 DUP3 DUP10 ADD PUSH2 0x285F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x28D1 DUP9 DUP3 DUP10 ADD PUSH2 0x285F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x28E2 DUP9 DUP3 DUP10 ADD PUSH2 0x2835 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x7B226E616D653A22000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2925 PUSH1 0x8 DUP4 PUSH2 0x2627 JUMP JUMPDEST SWAP2 POP PUSH2 0x2930 DUP3 PUSH2 0x28EF JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2971 PUSH1 0x1 DUP4 PUSH2 0x2627 JUMP JUMPDEST SWAP2 POP PUSH2 0x297C DUP3 PUSH2 0x293B JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x226465736372697074696F6E223A22416E204E46542074686174206368616E67 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573206261736564206F6E20636861696E6C696E6B2070726963652046656564 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2121220000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A09 PUSH1 0x43 DUP4 PUSH2 0x2627 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A14 DUP3 PUSH2 0x2987 JUMP JUMPDEST PUSH1 0x43 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A5B7B2274726169745F74797065223A2022636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6C6E657373222C3A76616C75653A3130307D5D2C22696D616765223A220000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A7B PUSH1 0x3E DUP4 PUSH2 0x2627 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A86 DUP3 PUSH2 0x2A1F JUMP JUMPDEST PUSH1 0x3E DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x227D000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC7 PUSH1 0x2 DUP4 PUSH2 0x2627 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AD2 DUP3 PUSH2 0x2A91 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AE8 DUP3 PUSH2 0x2918 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AF4 DUP3 DUP6 PUSH2 0x2632 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AFF DUP3 PUSH2 0x2964 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B0A DUP3 PUSH2 0x29FC JUMP JUMPDEST SWAP2 POP PUSH2 0x2B15 DUP3 PUSH2 0x2A6E JUMP JUMPDEST SWAP2 POP PUSH2 0x2B21 DUP3 DUP5 PUSH2 0x2632 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B2C DUP3 PUSH2 0x2ABA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B72 DUP3 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B7D DUP4 PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2B8D JUMPI PUSH2 0x2B8C PUSH2 0x2B38 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA3 DUP3 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BAE DUP4 PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2BE7 JUMPI PUSH2 0x2BE6 PUSH2 0x2510 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4E PUSH1 0x25 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C59 DUP3 PUSH2 0x2BF2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C7D DUP2 PUSH2 0x2C41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE0 PUSH1 0x24 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CEB DUP3 PUSH2 0x2C84 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D0F DUP2 PUSH2 0x2CD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D21 DUP3 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D2C DUP4 PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2D3F JUMPI PUSH2 0x2D3E PUSH2 0x2510 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D80 PUSH1 0x19 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D8B DUP3 PUSH2 0x2D4A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DAF DUP2 PUSH2 0x2D73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E12 PUSH1 0x32 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E1D DUP3 PUSH2 0x2DB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E41 DUP2 PUSH2 0x2E05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E6F DUP3 PUSH2 0x2E48 JUMP JUMPDEST PUSH2 0x2E79 DUP2 DUP6 PUSH2 0x2E53 JUMP JUMPDEST SWAP4 POP PUSH2 0x2E89 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x2E92 DUP2 PUSH2 0x1CF5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2EB2 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x2EBF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x2ECC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20C0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2EDE DUP2 DUP5 PUSH2 0x2E64 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2EF8 DUP2 PUSH2 0x1C17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F14 JUMPI PUSH2 0x2F13 PUSH2 0x1BE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F22 DUP5 DUP3 DUP6 ADD PUSH2 0x2EE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F61 PUSH1 0x20 DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F6C DUP3 PUSH2 0x2F2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F90 DUP2 PUSH2 0x2F54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FCD PUSH1 0x1C DUP4 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD8 DUP3 PUSH2 0x2F97 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FFC DUP2 PUSH2 0x2FC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 PUSH10 0x4289FCFA34AA316272 0x2A 0x4C PUSH16 0xAAE4E3E1736DFB717D99D868844334E 0xD PUSH9 0x64736F6C6343000808 STOP CALLER ","sourceMap":"279:3031:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2470:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3467:407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1044:251:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:327:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1301:324:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5005:179:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3213:95:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:96:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2632:102:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:103:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5250:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1631:1137:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;573:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2902:94:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300:1;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2470:98::-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;3604:11;;:2;:11;;;;3596:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3701:5;3685:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3710:37;3727:5;3734:12;:10;:12::i;:::-;3710:16;:37::i;:::-;3685:62;3664:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;1044:251:11:-;1135:9;1096:20;:36;1117:14;;1096:36;;;;;;;;;;;:48;;;;1154:37;1164:10;1176:14;;1154:9;:37::i;:::-;1235:1;1218:14;;:18;;;;:::i;:::-;1201:14;:35;;;;1262:14;;1251:37;1278:9;1251:37;;;;;;:::i;:::-;;;;;;;;1044:251;:::o;4612:327:1:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;:::-;4612:327;;;:::o;1301:324:11:-;1388:13;1417:30;1450:73;1507:3;1490:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;1450:13;:73::i;:::-;1417:106;;1576:22;;;;;;;;;;;;;;;;;1600:16;1559:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1533:85;;;1301:324;;;:::o;5005:179:1:-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;:::-;5005:179;;;:::o;2190:218::-;2262:7;2281:13;2297:7;:16;2305:7;2297:16;;;;;;;;;;;;;;;;;;;;;2281:32;;2348:1;2331:19;;:5;:19;;;;2323:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:5;2389:12;;;2190:218;;;:::o;3213:95:11:-;3261:7;3287:14;;3280:21;;3213:95;:::o;1929:204:1:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;3002:96:11:-;3045:13;3077:14;3070:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3002:96;:::o;2632:102:1:-;2688:13;2720:7;2713:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:102;:::o;3104:103:11:-;3149:21;3189:11;3182:18;;3104:103;:::o;4169:153:1:-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5250:315::-;5418:41;5437:12;:10;:12::i;:::-;5451:7;5418:18;:41::i;:::-;5410:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;1631:1137:11:-;1728:13;1765:16;1773:7;1765;:16::i;:::-;1757:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1832:12;1854:11;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1829:54;;;;;;1893:22;1918:13;1893:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1954:20;:29;1975:7;1954:29;;;;;;;;;;;;1945:5;:38;1941:94;;2010:14;1999:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:94;2125:10;:8;:10::i;:::-;2157:572;2327:6;:4;:6::i;:::-;2605:8;2231:450;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2157:13;:572::i;:::-;2087:660;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2044:717;;;;1631:1137;;;:::o;573:54::-;;;;;;;;;;;;;;;;;:::o;4388:162:1:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;2902:94:11:-;2944:13;2976;2969:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2902:94;:::o;777:1861:10:-;835:13;879:1;864:4;:11;:16;860:31;;;882:9;;;;;;;;;;;;;;;;860:31;940:19;962:12;;;;;;;;;;;;;;;;;940:34;;1023:18;1069:1;1064;1050:4;:11;:15;;;;:::i;:::-;1049:21;;;;:::i;:::-;1044:1;:27;;;;:::i;:::-;1023:48;;1151:20;1198:2;1185:10;:15;;;;:::i;:::-;1174:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1151:50;;1294:10;1286:6;1279:26;1386:1;1379:5;1375:13;1442:4;1492;1486:11;1477:7;1473:25;1585:2;1577:6;1573:15;1655:739;1674:6;1665:7;1662:19;1655:739;;;1771:1;1762:7;1758:15;1747:26;;1809:7;1803:14;1932:4;1924:5;1920:2;1916:14;1912:25;1902:8;1898:40;1892:47;1881:9;1873:67;1985:1;1974:9;1970:17;1957:30;;2063:4;2055:5;2051:2;2047:14;2043:25;2033:8;2029:40;2023:47;2012:9;2004:67;2116:1;2105:9;2101:17;2088:30;;2194:4;2186:5;2183:1;2178:14;2174:25;2164:8;2160:40;2154:47;2143:9;2135:67;2247:1;2236:9;2232:17;2219:30;;2325:4;2317:5;2305:25;2295:8;2291:40;2285:47;2274:9;2266:67;2378:1;2367:9;2363:17;2350:30;;1697:697;1655:739;;;2464:1;2457:4;2451:11;2447:19;2484:1;2479:54;;;;2551:1;2546:52;;;;2440:158;;2479:54;2523:6;2518:3;2514:16;2510:1;2499:9;2495:17;2488:43;2479:54;;2546:52;2590:4;2585:3;2581:14;2577:1;2566:9;2562:17;2555:41;2440:158;;1221:1387;;;;2625:6;2618:13;;;;;777:1861;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;11657:133:1:-;11738:16;11746:7;11738;:16::i;:::-;11730:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;11657:133;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;10959:171:1:-;11060:2;11033:15;:24;11049:7;11033:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11115:7;11111:2;11077:46;;11086:23;11101:7;11086:14;:23::i;:::-;11077:46;;;;;;;;;;;;10959:171;;:::o;7908:108::-;7983:26;7993:2;7997:7;7983:26;;;;;;;;;;;;:9;:26::i;:::-;7908:108;;:::o;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;7483:16;;:7;:16;;;:52;;;;7503:32;7520:5;7527:7;7503:16;:32::i;:::-;7483:52;:87;;;;7563:7;7539:31;;:20;7551:7;7539:11;:20::i;:::-;:31;;;7483:87;7475:96;;;7317:261;;;;:::o;10242:605::-;10396:4;10369:31;;:23;10384:7;10369:14;:23::i;:::-;:31;;;10361:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10474:1;10460:16;;:2;:16;;;;10452:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;10688:1;10669:9;:15;10679:4;10669:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10716:1;10699:9;:13;10709:2;10699:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10746:2;10727:7;:16;10735:7;10727:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10783:7;10779:2;10764:27;;10773:4;10764:27;;;;;;;;;;;;10802:38;10822:4;10828:2;10832:7;10802:19;:38::i;:::-;10242:605;;;:::o;11266:307::-;11416:8;11407:17;;:5;:17;;;;11399:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11502:8;11464:18;:25;11483:5;11464:25;;;;;;;;;;;;;;;:35;11490:8;11464:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11547:8;11525:41;;11540:5;11525:41;;;11557:8;11525:41;;;;;;:::i;:::-;;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6426:305;;;;:::o;7034:125::-;7099:4;7150:1;7122:30;;:7;:16;7130:7;7122:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7115:37;;7034:125;;;:::o;2774:122:11:-;2826:13;2851:38;;;;;;;;;;;;;;;;;;;2774:122;:::o;8237:309:1:-;8361:18;8367:2;8371:7;8361:5;:18::i;:::-;8410:53;8441:1;8445:2;8449:7;8458:4;8410:22;:53::i;:::-;8389:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8237:309;;;:::o;13729:122::-;;;;:::o;14223:121::-;;;;:::o;12342:831::-;12491:4;12511:15;:2;:13;;;:15::i;:::-;12507:660;;;12562:2;12546:36;;;12583:12;:10;:12::i;:::-;12597:4;12603:7;12612:4;12546:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12801:1;12784:6;:13;:18;12780:321;;;12826:60;;;;;;;;;;:::i;:::-;;;;;;;;12780:321;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;12677:41;;;12667:51;;;:6;:51;;;;12660:58;;;;;12507:660;13152:4;13145:11;;12342:831;;;;;;;:::o;8868:427::-;8961:1;8947:16;;:2;:16;;;;8939:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9019:16;9027:7;9019;:16::i;:::-;9018:17;9010:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9079:45;9108:1;9112:2;9116:7;9079:20;:45::i;:::-;9152:1;9135:9;:13;9145:2;9135:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;9182:2;9163:7;:16;9171:7;9163:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9225:7;9221:2;9200:33;;9217:1;9200:33;;;;;;;;;;;;9244:44;9272:1;9276:2;9280:7;9244:19;:44::i;:::-;8868:427;;:::o;1175:320:5:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:76::-;4974:7;5003:5;4992:16;;4938:76;;;:::o;5020:120::-;5092:23;5109:5;5092:23;:::i;:::-;5085:5;5082:34;5072:62;;5130:1;5127;5120:12;5072:62;5020:120;:::o;5146:137::-;5191:5;5229:6;5216:20;5207:29;;5245:32;5271:5;5245:32;:::i;:::-;5146:137;;;;:::o;5289:327::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:52;5591:7;5582:6;5571:9;5567:22;5547:52;:::i;:::-;5537:62;;5493:116;5289:327;;;;:::o;5622:619::-;5699:6;5707;5715;5764:2;5752:9;5743:7;5739:23;5735:32;5732:119;;;5770:79;;:::i;:::-;5732:119;5890:1;5915:53;5960:7;5951:6;5940:9;5936:22;5915:53;:::i;:::-;5905:63;;5861:117;6017:2;6043:53;6088:7;6079:6;6068:9;6064:22;6043:53;:::i;:::-;6033:63;;5988:118;6145:2;6171:53;6216:7;6207:6;6196:9;6192:22;6171:53;:::i;:::-;6161:63;;6116:118;5622:619;;;;;:::o;6247:117::-;6356:1;6353;6346:12;6370:117;6479:1;6476;6469:12;6493:180;6541:77;6538:1;6531:88;6638:4;6635:1;6628:15;6662:4;6659:1;6652:15;6679:281;6762:27;6784:4;6762:27;:::i;:::-;6754:6;6750:40;6892:6;6880:10;6877:22;6856:18;6844:10;6841:34;6838:62;6835:88;;;6903:18;;:::i;:::-;6835:88;6943:10;6939:2;6932:22;6722:238;6679:281;;:::o;6966:129::-;7000:6;7027:20;;:::i;:::-;7017:30;;7056:33;7084:4;7076:6;7056:33;:::i;:::-;6966:129;;;:::o;7101:308::-;7163:4;7253:18;7245:6;7242:30;7239:56;;;7275:18;;:::i;:::-;7239:56;7313:29;7335:6;7313:29;:::i;:::-;7305:37;;7397:4;7391;7387:15;7379:23;;7101:308;;;:::o;7415:154::-;7499:6;7494:3;7489;7476:30;7561:1;7552:6;7547:3;7543:16;7536:27;7415:154;;;:::o;7575:412::-;7653:5;7678:66;7694:49;7736:6;7694:49;:::i;:::-;7678:66;:::i;:::-;7669:75;;7767:6;7760:5;7753:21;7805:4;7798:5;7794:16;7843:3;7834:6;7829:3;7825:16;7822:25;7819:112;;;7850:79;;:::i;:::-;7819:112;7940:41;7974:6;7969:3;7964;7940:41;:::i;:::-;7659:328;7575:412;;;;;:::o;8007:340::-;8063:5;8112:3;8105:4;8097:6;8093:17;8089:27;8079:122;;8120:79;;:::i;:::-;8079:122;8237:6;8224:20;8262:79;8337:3;8329:6;8322:4;8314:6;8310:17;8262:79;:::i;:::-;8253:88;;8069:278;8007:340;;;;:::o;8353:509::-;8422:6;8471:2;8459:9;8450:7;8446:23;8442:32;8439:119;;;8477:79;;:::i;:::-;8439:119;8625:1;8614:9;8610:17;8597:31;8655:18;8647:6;8644:30;8641:117;;;8677:79;;:::i;:::-;8641:117;8782:63;8837:7;8828:6;8817:9;8813:22;8782:63;:::i;:::-;8772:73;;8568:287;8353:509;;;;:::o;8868:118::-;8955:24;8973:5;8955:24;:::i;:::-;8950:3;8943:37;8868:118;;:::o;8992:222::-;9085:4;9123:2;9112:9;9108:18;9100:26;;9136:71;9204:1;9193:9;9189:17;9180:6;9136:71;:::i;:::-;8992:222;;;;:::o;9220:329::-;9279:6;9328:2;9316:9;9307:7;9303:23;9299:32;9296:119;;;9334:79;;:::i;:::-;9296:119;9454:1;9479:53;9524:7;9515:6;9504:9;9500:22;9479:53;:::i;:::-;9469:63;;9425:117;9220:329;;;;:::o;9555:60::-;9583:3;9604:5;9597:12;;9555:60;;;:::o;9621:142::-;9671:9;9704:53;9722:34;9731:24;9749:5;9731:24;:::i;:::-;9722:34;:::i;:::-;9704:53;:::i;:::-;9691:66;;9621:142;;;:::o;9769:126::-;9819:9;9852:37;9883:5;9852:37;:::i;:::-;9839:50;;9769:126;;;:::o;9901:154::-;9979:9;10012:37;10043:5;10012:37;:::i;:::-;9999:50;;9901:154;;;:::o;10061:187::-;10176:65;10235:5;10176:65;:::i;:::-;10171:3;10164:78;10061:187;;:::o;10254:278::-;10375:4;10413:2;10402:9;10398:18;10390:26;;10426:99;10522:1;10511:9;10507:17;10498:6;10426:99;:::i;:::-;10254:278;;;;:::o;10538:116::-;10608:21;10623:5;10608:21;:::i;:::-;10601:5;10598:32;10588:60;;10644:1;10641;10634:12;10588:60;10538:116;:::o;10660:133::-;10703:5;10741:6;10728:20;10719:29;;10757:30;10781:5;10757:30;:::i;:::-;10660:133;;;;:::o;10799:468::-;10864:6;10872;10921:2;10909:9;10900:7;10896:23;10892:32;10889:119;;;10927:79;;:::i;:::-;10889:119;11047:1;11072:53;11117:7;11108:6;11097:9;11093:22;11072:53;:::i;:::-;11062:63;;11018:117;11174:2;11200:50;11242:7;11233:6;11222:9;11218:22;11200:50;:::i;:::-;11190:60;;11145:115;10799:468;;;;;:::o;11273:307::-;11334:4;11424:18;11416:6;11413:30;11410:56;;;11446:18;;:::i;:::-;11410:56;11484:29;11506:6;11484:29;:::i;:::-;11476:37;;11568:4;11562;11558:15;11550:23;;11273:307;;;:::o;11586:410::-;11663:5;11688:65;11704:48;11745:6;11704:48;:::i;:::-;11688:65;:::i;:::-;11679:74;;11776:6;11769:5;11762:21;11814:4;11807:5;11803:16;11852:3;11843:6;11838:3;11834:16;11831:25;11828:112;;;11859:79;;:::i;:::-;11828:112;11949:41;11983:6;11978:3;11973;11949:41;:::i;:::-;11669:327;11586:410;;;;;:::o;12015:338::-;12070:5;12119:3;12112:4;12104:6;12100:17;12096:27;12086:122;;12127:79;;:::i;:::-;12086:122;12244:6;12231:20;12269:78;12343:3;12335:6;12328:4;12320:6;12316:17;12269:78;:::i;:::-;12260:87;;12076:277;12015:338;;;;:::o;12359:943::-;12454:6;12462;12470;12478;12527:3;12515:9;12506:7;12502:23;12498:33;12495:120;;;12534:79;;:::i;:::-;12495:120;12654:1;12679:53;12724:7;12715:6;12704:9;12700:22;12679:53;:::i;:::-;12669:63;;12625:117;12781:2;12807:53;12852:7;12843:6;12832:9;12828:22;12807:53;:::i;:::-;12797:63;;12752:118;12909:2;12935:53;12980:7;12971:6;12960:9;12956:22;12935:53;:::i;:::-;12925:63;;12880:118;13065:2;13054:9;13050:18;13037:32;13096:18;13088:6;13085:30;13082:117;;;13118:79;;:::i;:::-;13082:117;13223:62;13277:7;13268:6;13257:9;13253:22;13223:62;:::i;:::-;13213:72;;13008:287;12359:943;;;;;;;:::o;13308:115::-;13393:23;13410:5;13393:23;:::i;:::-;13388:3;13381:36;13308:115;;:::o;13429:218::-;13520:4;13558:2;13547:9;13543:18;13535:26;;13571:69;13637:1;13626:9;13622:17;13613:6;13571:69;:::i;:::-;13429:218;;;;:::o;13653:474::-;13721:6;13729;13778:2;13766:9;13757:7;13753:23;13749:32;13746:119;;;13784:79;;:::i;:::-;13746:119;13904:1;13929:53;13974:7;13965:6;13954:9;13950:22;13929:53;:::i;:::-;13919:63;;13875:117;14031:2;14057:53;14102:7;14093:6;14082:9;14078:22;14057:53;:::i;:::-;14047:63;;14002:118;13653:474;;;;;:::o;14133:180::-;14181:77;14178:1;14171:88;14278:4;14275:1;14268:15;14302:4;14299:1;14292:15;14319:320;14363:6;14400:1;14394:4;14390:12;14380:22;;14447:1;14441:4;14437:12;14468:18;14458:81;;14524:4;14516:6;14512:17;14502:27;;14458:81;14586:2;14578:6;14575:14;14555:18;14552:38;14549:84;;;14605:18;;:::i;:::-;14549:84;14370:269;14319:320;;;:::o;14645:220::-;14785:34;14781:1;14773:6;14769:14;14762:58;14854:3;14849:2;14841:6;14837:15;14830:28;14645:220;:::o;14871:366::-;15013:3;15034:67;15098:2;15093:3;15034:67;:::i;:::-;15027:74;;15110:93;15199:3;15110:93;:::i;:::-;15228:2;15223:3;15219:12;15212:19;;14871:366;;;:::o;15243:419::-;15409:4;15447:2;15436:9;15432:18;15424:26;;15496:9;15490:4;15486:20;15482:1;15471:9;15467:17;15460:47;15524:131;15650:4;15524:131;:::i;:::-;15516:139;;15243:419;;;:::o;15668:249::-;15808:34;15804:1;15796:6;15792:14;15785:58;15877:32;15872:2;15864:6;15860:15;15853:57;15668:249;:::o;15923:366::-;16065:3;16086:67;16150:2;16145:3;16086:67;:::i;:::-;16079:74;;16162:93;16251:3;16162:93;:::i;:::-;16280:2;16275:3;16271:12;16264:19;;15923:366;;;:::o;16295:419::-;16461:4;16499:2;16488:9;16484:18;16476:26;;16548:9;16542:4;16538:20;16534:1;16523:9;16519:17;16512:47;16576:131;16702:4;16576:131;:::i;:::-;16568:139;;16295:419;;;:::o;16720:180::-;16768:77;16765:1;16758:88;16865:4;16862:1;16855:15;16889:4;16886:1;16879:15;16906:305;16946:3;16965:20;16983:1;16965:20;:::i;:::-;16960:25;;16999:20;17017:1;16999:20;:::i;:::-;16994:25;;17153:1;17085:66;17081:74;17078:1;17075:81;17072:107;;;17159:18;;:::i;:::-;17072:107;17203:1;17200;17196:9;17189:16;;16906:305;;;;:::o;17217:233::-;17357:34;17353:1;17345:6;17341:14;17334:58;17426:16;17421:2;17413:6;17409:15;17402:41;17217:233;:::o;17456:366::-;17598:3;17619:67;17683:2;17678:3;17619:67;:::i;:::-;17612:74;;17695:93;17784:3;17695:93;:::i;:::-;17813:2;17808:3;17804:12;17797:19;;17456:366;;;:::o;17828:419::-;17994:4;18032:2;18021:9;18017:18;18009:26;;18081:9;18075:4;18071:20;18067:1;18056:9;18052:17;18045:47;18109:131;18235:4;18109:131;:::i;:::-;18101:139;;17828:419;;;:::o;18253:148::-;18355:11;18392:3;18377:18;;18253:148;;;;:::o;18407:377::-;18513:3;18541:39;18574:5;18541:39;:::i;:::-;18596:89;18678:6;18673:3;18596:89;:::i;:::-;18589:96;;18694:52;18739:6;18734:3;18727:4;18720:5;18716:16;18694:52;:::i;:::-;18771:6;18766:3;18762:16;18755:23;;18517:267;18407:377;;;;:::o;18790:275::-;18922:3;18944:95;19035:3;19026:6;18944:95;:::i;:::-;18937:102;;19056:3;19049:10;;18790:275;;;;:::o;19071:435::-;19251:3;19273:95;19364:3;19355:6;19273:95;:::i;:::-;19266:102;;19385:95;19476:3;19467:6;19385:95;:::i;:::-;19378:102;;19497:3;19490:10;;19071:435;;;;;:::o;19512:174::-;19652:26;19648:1;19640:6;19636:14;19629:50;19512:174;:::o;19692:366::-;19834:3;19855:67;19919:2;19914:3;19855:67;:::i;:::-;19848:74;;19931:93;20020:3;19931:93;:::i;:::-;20049:2;20044:3;20040:12;20033:19;;19692:366;;;:::o;20064:419::-;20230:4;20268:2;20257:9;20253:18;20245:26;;20317:9;20311:4;20307:20;20303:1;20292:9;20288:17;20281:47;20345:131;20471:4;20345:131;:::i;:::-;20337:139;;20064:419;;;:::o;20489:228::-;20629:34;20625:1;20617:6;20613:14;20606:58;20698:11;20693:2;20685:6;20681:15;20674:36;20489:228;:::o;20723:366::-;20865:3;20886:67;20950:2;20945:3;20886:67;:::i;:::-;20879:74;;20962:93;21051:3;20962:93;:::i;:::-;21080:2;21075:3;21071:12;21064:19;;20723:366;;;:::o;21095:419::-;21261:4;21299:2;21288:9;21284:18;21276:26;;21348:9;21342:4;21338:20;21334:1;21323:9;21319:17;21312:47;21376:131;21502:4;21376:131;:::i;:::-;21368:139;;21095:419;;;:::o;21520:182::-;21660:34;21656:1;21648:6;21644:14;21637:58;21520:182;:::o;21708:366::-;21850:3;21871:67;21935:2;21930:3;21871:67;:::i;:::-;21864:74;;21947:93;22036:3;21947:93;:::i;:::-;22065:2;22060:3;22056:12;22049:19;;21708:366;;;:::o;22080:419::-;22246:4;22284:2;22273:9;22269:18;22261:26;;22333:9;22327:4;22323:20;22319:1;22308:9;22304:17;22297:47;22361:131;22487:4;22361:131;:::i;:::-;22353:139;;22080:419;;;:::o;22505:105::-;22541:7;22581:22;22574:5;22570:34;22559:45;;22505:105;;;:::o;22616:120::-;22688:23;22705:5;22688:23;:::i;:::-;22681:5;22678:34;22668:62;;22726:1;22723;22716:12;22668:62;22616:120;:::o;22742:141::-;22798:5;22829:6;22823:13;22814:22;;22845:32;22871:5;22845:32;:::i;:::-;22742:141;;;;:::o;22889:::-;22945:5;22976:6;22970:13;22961:22;;22992:32;23018:5;22992:32;:::i;:::-;22889:141;;;;:::o;23036:143::-;23093:5;23124:6;23118:13;23109:22;;23140:33;23167:5;23140:33;:::i;:::-;23036:143;;;;:::o;23185:971::-;23288:6;23296;23304;23312;23320;23369:3;23357:9;23348:7;23344:23;23340:33;23337:120;;;23376:79;;:::i;:::-;23337:120;23496:1;23521:63;23576:7;23567:6;23556:9;23552:22;23521:63;:::i;:::-;23511:73;;23467:127;23633:2;23659:63;23714:7;23705:6;23694:9;23690:22;23659:63;:::i;:::-;23649:73;;23604:128;23771:2;23797:64;23853:7;23844:6;23833:9;23829:22;23797:64;:::i;:::-;23787:74;;23742:129;23910:2;23936:64;23992:7;23983:6;23972:9;23968:22;23936:64;:::i;:::-;23926:74;;23881:129;24049:3;24076:63;24131:7;24122:6;24111:9;24107:22;24076:63;:::i;:::-;24066:73;;24020:129;23185:971;;;;;;;;:::o;24162:214::-;24302:66;24298:1;24290:6;24286:14;24279:90;24162:214;:::o;24382:400::-;24542:3;24563:84;24645:1;24640:3;24563:84;:::i;:::-;24556:91;;24656:93;24745:3;24656:93;:::i;:::-;24774:1;24769:3;24765:11;24758:18;;24382:400;;;:::o;24788:214::-;24928:66;24924:1;24916:6;24912:14;24905:90;24788:214;:::o;25008:400::-;25168:3;25189:84;25271:1;25266:3;25189:84;:::i;:::-;25182:91;;25282:93;25371:3;25282:93;:::i;:::-;25400:1;25395:3;25391:11;25384:18;;25008:400;;;:::o;25414:384::-;25554:66;25550:1;25542:6;25538:14;25531:90;25655:34;25650:2;25642:6;25638:15;25631:59;25724:66;25719:2;25711:6;25707:15;25700:91;25414:384;:::o;25804:402::-;25964:3;25985:85;26067:2;26062:3;25985:85;:::i;:::-;25978:92;;26079:93;26168:3;26079:93;:::i;:::-;26197:2;26192:3;26188:12;26181:19;;25804:402;;;:::o;26212:315::-;26352:66;26348:1;26340:6;26336:14;26329:90;26453:66;26448:2;26440:6;26436:15;26429:91;26212:315;:::o;26533:402::-;26693:3;26714:85;26796:2;26791:3;26714:85;:::i;:::-;26707:92;;26808:93;26897:3;26808:93;:::i;:::-;26926:2;26921:3;26917:12;26910:19;;26533:402;;;:::o;26941:214::-;27081:66;27077:1;27069:6;27065:14;27058:90;26941:214;:::o;27161:400::-;27321:3;27342:84;27424:1;27419:3;27342:84;:::i;:::-;27335:91;;27435:93;27524:3;27435:93;:::i;:::-;27553:1;27548:3;27544:11;27537:18;;27161:400;;;:::o;27567:1765::-;28252:3;28274:148;28418:3;28274:148;:::i;:::-;28267:155;;28439:95;28530:3;28521:6;28439:95;:::i;:::-;28432:102;;28551:148;28695:3;28551:148;:::i;:::-;28544:155;;28716:148;28860:3;28716:148;:::i;:::-;28709:155;;28881:148;29025:3;28881:148;:::i;:::-;28874:155;;29046:95;29137:3;29128:6;29046:95;:::i;:::-;29039:102;;29158:148;29302:3;29158:148;:::i;:::-;29151:155;;29323:3;29316:10;;27567:1765;;;;;:::o;29338:180::-;29386:77;29383:1;29376:88;29483:4;29480:1;29473:15;29507:4;29504:1;29497:15;29524:185;29564:1;29581:20;29599:1;29581:20;:::i;:::-;29576:25;;29615:20;29633:1;29615:20;:::i;:::-;29610:25;;29654:1;29644:35;;29659:18;;:::i;:::-;29644:35;29701:1;29698;29694:9;29689:14;;29524:185;;;;:::o;29715:348::-;29755:7;29778:20;29796:1;29778:20;:::i;:::-;29773:25;;29812:20;29830:1;29812:20;:::i;:::-;29807:25;;30000:1;29932:66;29928:74;29925:1;29922:81;29917:1;29910:9;29903:17;29899:105;29896:131;;;30007:18;;:::i;:::-;29896:131;30055:1;30052;30048:9;30037:20;;29715:348;;;;:::o;30069:224::-;30209:34;30205:1;30197:6;30193:14;30186:58;30278:7;30273:2;30265:6;30261:15;30254:32;30069:224;:::o;30299:366::-;30441:3;30462:67;30526:2;30521:3;30462:67;:::i;:::-;30455:74;;30538:93;30627:3;30538:93;:::i;:::-;30656:2;30651:3;30647:12;30640:19;;30299:366;;;:::o;30671:419::-;30837:4;30875:2;30864:9;30860:18;30852:26;;30924:9;30918:4;30914:20;30910:1;30899:9;30895:17;30888:47;30952:131;31078:4;30952:131;:::i;:::-;30944:139;;30671:419;;;:::o;31096:223::-;31236:34;31232:1;31224:6;31220:14;31213:58;31305:6;31300:2;31292:6;31288:15;31281:31;31096:223;:::o;31325:366::-;31467:3;31488:67;31552:2;31547:3;31488:67;:::i;:::-;31481:74;;31564:93;31653:3;31564:93;:::i;:::-;31682:2;31677:3;31673:12;31666:19;;31325:366;;;:::o;31697:419::-;31863:4;31901:2;31890:9;31886:18;31878:26;;31950:9;31944:4;31940:20;31936:1;31925:9;31921:17;31914:47;31978:131;32104:4;31978:131;:::i;:::-;31970:139;;31697:419;;;:::o;32122:191::-;32162:4;32182:20;32200:1;32182:20;:::i;:::-;32177:25;;32216:20;32234:1;32216:20;:::i;:::-;32211:25;;32255:1;32252;32249:8;32246:34;;;32260:18;;:::i;:::-;32246:34;32305:1;32302;32298:9;32290:17;;32122:191;;;;:::o;32319:175::-;32459:27;32455:1;32447:6;32443:14;32436:51;32319:175;:::o;32500:366::-;32642:3;32663:67;32727:2;32722:3;32663:67;:::i;:::-;32656:74;;32739:93;32828:3;32739:93;:::i;:::-;32857:2;32852:3;32848:12;32841:19;;32500:366;;;:::o;32872:419::-;33038:4;33076:2;33065:9;33061:18;33053:26;;33125:9;33119:4;33115:20;33111:1;33100:9;33096:17;33089:47;33153:131;33279:4;33153:131;:::i;:::-;33145:139;;32872:419;;;:::o;33297:237::-;33437:34;33433:1;33425:6;33421:14;33414:58;33506:20;33501:2;33493:6;33489:15;33482:45;33297:237;:::o;33540:366::-;33682:3;33703:67;33767:2;33762:3;33703:67;:::i;:::-;33696:74;;33779:93;33868:3;33779:93;:::i;:::-;33897:2;33892:3;33888:12;33881:19;;33540:366;;;:::o;33912:419::-;34078:4;34116:2;34105:9;34101:18;34093:26;;34165:9;34159:4;34155:20;34151:1;34140:9;34136:17;34129:47;34193:131;34319:4;34193:131;:::i;:::-;34185:139;;33912:419;;;:::o;34337:98::-;34388:6;34422:5;34416:12;34406:22;;34337:98;;;:::o;34441:168::-;34524:11;34558:6;34553:3;34546:19;34598:4;34593:3;34589:14;34574:29;;34441:168;;;;:::o;34615:360::-;34701:3;34729:38;34761:5;34729:38;:::i;:::-;34783:70;34846:6;34841:3;34783:70;:::i;:::-;34776:77;;34862:52;34907:6;34902:3;34895:4;34888:5;34884:16;34862:52;:::i;:::-;34939:29;34961:6;34939:29;:::i;:::-;34934:3;34930:39;34923:46;;34705:270;34615:360;;;;:::o;34981:640::-;35176:4;35214:3;35203:9;35199:19;35191:27;;35228:71;35296:1;35285:9;35281:17;35272:6;35228:71;:::i;:::-;35309:72;35377:2;35366:9;35362:18;35353:6;35309:72;:::i;:::-;35391;35459:2;35448:9;35444:18;35435:6;35391:72;:::i;:::-;35510:9;35504:4;35500:20;35495:2;35484:9;35480:18;35473:48;35538:76;35609:4;35600:6;35538:76;:::i;:::-;35530:84;;34981:640;;;;;;;:::o;35627:141::-;35683:5;35714:6;35708:13;35699:22;;35730:32;35756:5;35730:32;:::i;:::-;35627:141;;;;:::o;35774:349::-;35843:6;35892:2;35880:9;35871:7;35867:23;35863:32;35860:119;;;35898:79;;:::i;:::-;35860:119;36018:1;36043:63;36098:7;36089:6;36078:9;36074:22;36043:63;:::i;:::-;36033:73;;35989:127;35774:349;;;;:::o;36129:182::-;36269:34;36265:1;36257:6;36253:14;36246:58;36129:182;:::o;36317:366::-;36459:3;36480:67;36544:2;36539:3;36480:67;:::i;:::-;36473:74;;36556:93;36645:3;36556:93;:::i;:::-;36674:2;36669:3;36665:12;36658:19;;36317:366;;;:::o;36689:419::-;36855:4;36893:2;36882:9;36878:18;36870:26;;36942:9;36936:4;36932:20;36928:1;36917:9;36913:17;36906:47;36970:131;37096:4;36970:131;:::i;:::-;36962:139;;36689:419;;;:::o;37114:178::-;37254:30;37250:1;37242:6;37238:14;37231:54;37114:178;:::o;37298:366::-;37440:3;37461:67;37525:2;37520:3;37461:67;:::i;:::-;37454:74;;37537:93;37626:3;37537:93;:::i;:::-;37655:2;37650:3;37646:12;37639:19;;37298:366;;;:::o;37670:419::-;37836:4;37874:2;37863:9;37859:18;37851:26;;37923:9;37917:4;37913:20;37909:1;37898:9;37894:17;37887:47;37951:131;38077:4;37951:131;:::i;:::-;37943:139;;37670:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2481800","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2902","getApproved(uint256)":"5257","getHighSVG()":"infinite","getLowSVG()":"infinite","getPriceFeed()":"infinite","getTokenCounter()":"2548","isApprovedForAll(address,address)":"infinite","mintNft(int256)":"infinite","name()":"infinite","ownerOf(uint256)":"3048","s_tokenIdToHighValue(uint256)":"2831","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","svgToImageURI(string)":"infinite","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_baseURI()":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getHighSVG()":"76f6056b","getLowSVG()":"ed28a122","getPriceFeed()":"9e87a5cd","getTokenCounter()":"6e02007d","isApprovedForAll(address,address)":"e985e9c5","mintNft(int256)":"1e930812","name()":"06fdde03","ownerOf(uint256)":"6352211e","s_tokenIdToHighValue(uint256)":"e425aded","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","svgToImageURI(string)":"30d871c6","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"lowSvg\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"highSvg\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"highValue\",\"type\":\"int256\"}],\"name\":\"CreatedNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHighSVG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLowSVG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"highValue\",\"type\":\"int256\"}],\"name\":\"mintNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_tokenIdToHighValue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"svg\",\"type\":\"string\"}],\"name\":\"svgToImageURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DynamicSvgNft.sol\":\"DynamicSvgNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"base64-sol/base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n    bytes  internal constant TABLE_DECODE = hex\\\"0000000000000000000000000000000000000000000000000000000000000000\\\"\\n                                            hex\\\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\\\"\\n                                            hex\\\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\\\"\\n                                            hex\\\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\\\";\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n\\n        // load the table into memory\\n        string memory table = TABLE_ENCODE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                // read 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // write 4 characters\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n            // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n\\n    function decode(string memory _data) internal pure returns (bytes memory) {\\n        bytes memory data = bytes(_data);\\n\\n        if (data.length == 0) return new bytes(0);\\n        require(data.length % 4 == 0, \\\"invalid base64 decoder input\\\");\\n\\n        // load the table into memory\\n        bytes memory table = TABLE_DECODE;\\n\\n        // every 4 characters represent 3 bytes\\n        uint256 decodedLen = (data.length / 4) * 3;\\n\\n        // add some extra buffer at the end required for the writing\\n        bytes memory result = new bytes(decodedLen + 32);\\n\\n        assembly {\\n            // padding with '='\\n            let lastBytes := mload(add(data, mload(data)))\\n            if eq(and(lastBytes, 0xFF), 0x3d) {\\n                decodedLen := sub(decodedLen, 1)\\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\\n                    decodedLen := sub(decodedLen, 1)\\n                }\\n            }\\n\\n            // set the actual output length\\n            mstore(result, decodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 4 characters at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               // read 4 characters\\n               dataPtr := add(dataPtr, 4)\\n               let input := mload(dataPtr)\\n\\n               // write 3 bytes\\n               let output := add(\\n                   add(\\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\\n                   add(\\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\\n                    )\\n                )\\n                mstore(resultPtr, shl(232, output))\\n                resultPtr := add(resultPtr, 3)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\"},\"contracts/DynamicSvgNft.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"base64-sol/base64.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nerror ERC721Metadata__URI_QueryFor_NonExistentToken();\\n\\ncontract DynamicSvgNft is ERC721 {\\n    uint256 private s_tokenCounter;\\n    string private i_lowImageURI;\\n    string private i_highImageURI;\\n    string private constant base64EncodedSvgPrefix =\\n        \\\"data:image/svg+xml;base64,\\\";\\n\\n    AggregatorV3Interface internal immutable i_priceFeed;\\n    mapping(uint256 => int256) public s_tokenIdToHighValue;\\n\\n    event CreatedNFT(uint256 indexed tokenId, int256 highValue);\\n\\n    constructor(\\n        address priceFeedAddress,\\n        string memory lowSvg,\\n        string memory highSvg\\n    ) ERC721(\\\"DynamicSvgNft\\\", \\\"DSN\\\") {\\n        s_tokenCounter = 0;\\n        i_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n        i_lowImageURI = svgToImageURI(lowSvg);\\n        i_highImageURI = svgToImageURI(highSvg);\\n    }\\n\\n    function mintNft(int256 highValue) public {\\n        s_tokenIdToHighValue[s_tokenCounter] = highValue;\\n        _safeMint(msg.sender, s_tokenCounter);\\n        s_tokenCounter = s_tokenCounter + 1;\\n        emit CreatedNFT(s_tokenCounter, highValue);\\n    }\\n\\n    function svgToImageURI(string memory svg)\\n        public\\n        pure\\n        returns (string memory)\\n    {\\n        string memory svgBase64Encoded = Base64.encode(\\n            bytes(string(abi.encodePacked(svg)))\\n        );\\n        return\\n            string(abi.encodePacked(base64EncodedSvgPrefix, svgBase64Encoded));\\n    }\\n\\n    function tokenURI(uint256 tokenId)\\n        public\\n        view\\n        override\\n        returns (string memory)\\n    {\\n        require(_exists(tokenId), \\\"URI Query for non existent token\\\");\\n\\n        (, int256 price, , , ) = i_priceFeed.latestRoundData();\\n        string memory imageURI = i_lowImageURI;\\n        if (price >= s_tokenIdToHighValue[tokenId]) {\\n            imageURI = i_highImageURI;\\n        }\\n        return\\n            string(\\n                abi.encodePacked(\\n                    _baseURI(),\\n                    Base64.encode(\\n                        bytes(\\n                            abi.encodePacked(\\n                                ('{\\\"name:\\\"'),\\n                                name(),\\n                                '\\\"',\\n                                '\\\"description\\\":\\\"An NFT that changes based on chainlink price Feed!!\\\"',\\n                                '\\\"attributes\\\":[{\\\"trait_type\\\": \\\"coolness\\\",:value:100}],\\\"image\\\":\\\"',\\n                                imageURI,\\n                                '\\\"}'\\n                            )\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n\\n    function _baseURI() internal pure override returns (string memory) {\\n        return \\\"data:application/json;base64,\\\";\\n    }\\n\\n    function getLowSVG() public view returns (string memory) {\\n        return i_lowImageURI;\\n    }\\n\\n    function getHighSVG() public view returns (string memory) {\\n        return i_highImageURI;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return i_priceFeed;\\n    }\\n\\n    function getTokenCounter() public view returns (uint256) {\\n        return s_tokenCounter;\\n    }\\n}\\n\",\"keccak256\":\"0x110d205d2b489e1286051a7ef3e3d31a1ce52062c91b2587421f890fe02b66b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":71,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":73,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":77,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":81,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":85,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":91,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1778,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"s_tokenCounter","offset":0,"slot":"6","type":"t_uint256"},{"astId":1780,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"i_lowImageURI","offset":0,"slot":"7","type":"t_string_storage"},{"astId":1782,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"i_highImageURI","offset":0,"slot":"8","type":"t_string_storage"},{"astId":1792,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"s_tokenIdToHighValue","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_int256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_int256":{"encoding":"inplace","label":"int256","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_int256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => int256)","numberOfBytes":"32","value":"t_int256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}